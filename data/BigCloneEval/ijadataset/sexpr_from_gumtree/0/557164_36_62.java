(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:InputStream))(SimpleName:openStreamFromUrl)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:connection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(IfStatement(InstanceofExpression(SimpleName:connection)(SimpleType(SimpleName:HttpsURLConnection)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:SSLContext))(VariableDeclarationFragment(SimpleName:context)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:context)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SSLContext))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProgrammingException))(QualifiedName:ProgrammingException.MISSING_SSL_ALGORITHM)(StringLiteral:<STR>)(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:TrustAnyoneManager))(VariableDeclarationFragment(SimpleName:taom)(ClassInstanceCreation(SimpleType(SimpleName:TrustAnyoneManager)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(ArrayCreation(ArrayType(SimpleType(SimpleName:TrustManager))(Dimension))(ArrayInitializer(SimpleName:taom)))(NullLiteral)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:KeyManagementException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProgrammingException))(QualifiedName:ProgrammingException.UNKNOWN)(StringLiteral:<STR>)(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:SSLSocketFactory))(VariableDeclarationFragment(SimpleName:sf)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getSocketFactory))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpsURLConnection))(VariableDeclarationFragment(SimpleName:ssl)(CastExpression(SimpleType(SimpleName:HttpsURLConnection))(SimpleName:connection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HttpsURLConnection))(SimpleName:setDefaultSSLSocketFactory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sf))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ssl))(SimpleName:setHostnameVerifier)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:HostnameVerifier))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:verify)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:hostname))(SingleVariableDeclaration(SimpleType(SimpleName:SSLSession))(SimpleName:session))(Block(ReturnStatement(BooleanLiteral:true)))))))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getInputStream)))))))