(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:BufferedWriter))(SimpleName:open)(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HttpTransportManager))(SimpleName:openConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)(SimpleName:basicAuthUsername)(SimpleName:basicAuthPassword)))))(IfStatement(SimpleName:streamOutputEnabled)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setChunkedStreamingMode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:streamOutputChunkSize))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setDoInput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setDoOutput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setConnectTimeout)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpTimeout))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setReadTimeout)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpTimeout))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(IfStatement(SimpleName:useCompression)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:addRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:out)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getOutputStream))))(IfStatement(SimpleName:useCompression)(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GZIPOutputStream))(SimpleName:out)(AnonymousClassDeclaration(Initializer(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:def)))(SimpleName:setLevel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:compressionLevel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:def)))(SimpleName:setStrategy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:compressionStrategy))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStreamWriter))(VariableDeclarationFragment(SimpleName:wout)(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(SimpleName:out)(QualifiedName:Constants.ENCODING))))(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(SimpleName:wout))))(ReturnStatement(SimpleName:writer)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IoException))(SimpleName:ex))))))))))