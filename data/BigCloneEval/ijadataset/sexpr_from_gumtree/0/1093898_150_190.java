(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:fingerPrintFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:length))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:length))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:space)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fin)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:raf)(NullLiteral)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:length))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:bout)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(Assignment(SimpleName:fin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:pipe)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fin)(SimpleName:bout)(NumberLiteral:1024))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bout))(SimpleName:toByteArray)))))(Block(ExpressionStatement(Assignment(SimpleName:space)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:floor)(METHOD_INVOCATION_ARGUMENTS(ParenthesizedExpression(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:length))))))))(ExpressionStatement(Assignment(SimpleName:raf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:buffer)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(SimpleName:space))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:readByte)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:skipBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:space)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:EOFException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(SimpleName:size))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:size))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:toString))))))(Block(IfStatement(InfixExpression(SimpleName:fin)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignore))(Block)))))(IfStatement(InfixExpression(SimpleName:raf)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignore))(Block)))))))))))