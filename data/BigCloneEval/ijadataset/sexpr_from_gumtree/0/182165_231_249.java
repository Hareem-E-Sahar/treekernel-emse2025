(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:getByteCodes)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:aClassname))(SimpleType(SimpleName:ClassNotFoundException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aClassname))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(QualifiedName:File.separatorChar)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:DOT_CLASS))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:findResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:url))(Block(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:abyte0)(Dimension)(MethodInvocation(SimpleName:getClassFromJarURLs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))(IfStatement(InfixExpression(SimpleName:abyte0)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:aClassname))))(Block(ReturnStatement(SimpleName:abyte0)))))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:getByteArrayFromInputStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getContentLength))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ClassNotFoundException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage)))))))))))))