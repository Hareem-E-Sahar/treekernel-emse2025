(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:zip)(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:zos))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:sourceFile))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:entryPath))(Block(IfStatement(InfixExpression(SimpleName:entryPath)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:entryPath)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:bis)(NullLiteral)))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFile))(SimpleName:isDirectory))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryPath))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:entryPath)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:entryPath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:folder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFile))(SimpleName:listFiles))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleName:folder)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:zip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zos)(SimpleName:file)(InfixExpression(SimpleName:entryPath)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception)))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:entryPath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:sourceFile))))(ExpressionStatement(Assignment(SimpleName:bis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:fis)(SimpleName:BUFFER))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:byteNum)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:datas)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:byteNum)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:datas)(NumberLiteral:0)(SimpleName:BUFFER)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:datas)(NumberLiteral:0)(SimpleName:byteNum))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bis))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ReturnStatement(BooleanLiteral:false))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:bis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bis))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block)))))(ReturnStatement(BooleanLiteral:true))))))