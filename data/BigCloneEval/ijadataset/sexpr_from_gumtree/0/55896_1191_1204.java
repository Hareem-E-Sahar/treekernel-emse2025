(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:checkForModules)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:modules)(StringLiteral:<STR>)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:module_cmd)(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:modules))))(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(SimpleName:module_cmd)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInputStream))))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readLine))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:waitFor)))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(BooleanLiteral:false))(ReturnStatement(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ioe))(Block(ReturnStatement(BooleanLiteral:false)))))))))