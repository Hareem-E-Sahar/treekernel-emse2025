(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:applyResult)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:src))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dst))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:edit))(SingleVariableDeclaration(SimpleType(SimpleName:EditResult))(SimpleName:result))(SimpleType(SimpleName:IOException))(Block(AssertStatement(InfixExpression(SimpleName:result)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:diffPrinted)(BooleanLiteral:false)))(IfStatement(InfixExpression(QualifiedName:result.operation)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:EditResult.SAVE))(Block(AssertStatement(InfixExpression(QualifiedName:result.changed)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:edit)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalUsageError))(StringLiteral:<STR>))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:diff3))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:diffWithDest)))(Block(ExpressionStatement(Assignment(QualifiedName:result.changed)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:diff)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:edit)))))(ExpressionStatement(Assignment(SimpleName:diffPrinted)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(ExpressionStatement(Assignment(QualifiedName:result.changed)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileDiff))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:edit))))))(IfStatement(QualifiedName:result.changed)(ExpressionStatement(Assignment(QualifiedName:result.operation)(ASSIGNMENT_OPERATOR:=)(QualifiedName:EditResult.SAVE_DIFF)))(ExpressionStatement(Assignment(QualifiedName:result.operation)(ASSIGNMENT_OPERATOR:=)(QualifiedName:EditResult.SAVE_SAME))))))(SwitchStatement(QualifiedName:result.operation)(SwitchCase(QualifiedName:EditResult.NONE))(ReturnStatement)(SwitchCase(QualifiedName:EditResult.DELETE))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:psh))(SimpleName:delete)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dst)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setDone))))(ReturnStatement)(SwitchCase(QualifiedName:EditResult.RENAME))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:psh))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:dst)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setDone))))(ReturnStatement)(SwitchCase(QualifiedName:EditResult.MOVE))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:psh))(SimpleName:move)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:dst)(SimpleName:force)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setDone))))(ReturnStatement)(SwitchCase(QualifiedName:EditResult.COPY))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:psh))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:dst)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setDone))))(ReturnStatement)(SwitchCase(QualifiedName:EditResult.SAVE_DIFF))(AssertStatement(QualifiedName:result.changed))(SwitchCase(QualifiedName:EditResult.SAVE_SAME))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:saveLocal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dst))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(QualifiedName:result.changed))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:saveLocal))(ReturnStatement))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:canOverwrite)(InfixExpression(SimpleName:saveLocal)(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:force))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dst))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:canOverwrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:dst))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dstdir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dst))(SimpleName:getParentFile))))(IfStatement(InfixExpression(SimpleName:dstdir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:psh))(SimpleName:mkdirs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dstdir)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:diffPrinted))(IfStatement(SimpleName:diff3)(Block(ExpressionStatement(MethodInvocation(SimpleName:diff)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:edit))))(ExpressionStatement(MethodInvocation(SimpleName:diff)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dst)(SimpleName:edit)))))(IfStatement(SimpleName:diffWithDest)(ExpressionStatement(MethodInvocation(SimpleName:diff)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dst)(SimpleName:edit))))(ExpressionStatement(MethodInvocation(SimpleName:diff)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:edit)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:psh))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edit)(SimpleName:dst))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setDone)))(ReturnStatement)(SwitchCase(QualifiedName:EditResult.SAVE))(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:UnexpectedException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:result.operation)))))))))