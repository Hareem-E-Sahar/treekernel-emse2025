(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:handleResponse)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ReadRequestMessage))(SimpleName:request))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ProtocolEncoderOutput))(SimpleName:out))(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:ConcurrentMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:FileChannel)))(SimpleName:fdCacheMap))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filePath)(QualifiedName:request.filePath)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fileChannel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fdCacheMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filePath)))))(IfStatement(InfixExpression(SimpleName:fileChannel)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:filePath))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filePath))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:raf)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:raf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(SimpleName:e))))))(ExpressionStatement(Assignment(SimpleName:fileChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fdCacheMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filePath)(SimpleName:fileChannel))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:count)(InfixExpression(QualifiedName:request.endOffset)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:request.startOffset))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:position)(QualifiedName:request.startOffset)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:count)(StringLiteral:<STR>)(SimpleName:filePath)(StringLiteral:<STR>)(SimpleName:position)))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileRegion))(VariableDeclarationFragment(SimpleName:fileRegion)(ClassInstanceCreation(SimpleType(SimpleName:DefaultFileRegion))(SimpleName:fileChannel)(SimpleName:position)(SimpleName:count))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileRegion))))))))