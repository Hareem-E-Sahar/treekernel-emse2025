(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:sign)(SingleVariableDeclaration(SimpleType(SimpleName:PrivateKey))(SimpleName:key))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:algorithm))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:provider))(SimpleType(SimpleName:CRLException))(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleType(SimpleName:InvalidKeyException))(SimpleType(SimpleName:NoSuchProviderException))(SimpleType(SimpleName:SignatureException))(Block(TryStatement(Block(IfStatement(SimpleName:readOnly)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CRLException))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Signature))(VariableDeclarationFragment(SimpleName:sigEngine)(NullLiteral)))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:provider)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:provider))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:sigEngine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Signature))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:algorithm)))))(ExpressionStatement(Assignment(SimpleName:sigEngine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Signature))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:algorithm)(SimpleName:provider))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sigEngine))(SimpleName:initSign)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key))))(ExpressionStatement(Assignment(SimpleName:sigAlgId)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AlgorithmId))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sigEngine))(SimpleName:getAlgorithm))))))(ExpressionStatement(Assignment(SimpleName:infoSigAlgId)(ASSIGNMENT_OPERATOR:=)(SimpleName:sigAlgId)))(VariableDeclarationStatement(SimpleType(SimpleName:DerOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:DerOutputStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:DerOutputStream))(VariableDeclarationFragment(SimpleName:tmp)(ClassInstanceCreation(SimpleType(SimpleName:DerOutputStream)))))(ExpressionStatement(MethodInvocation(SimpleName:encodeInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sigAlgId))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sigEngine))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tbsCertList)(NumberLiteral:0)(QualifiedName:tbsCertList.length))))(ExpressionStatement(Assignment(SimpleName:signature)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sigEngine))(SimpleName:sign))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmp))(SimpleName:putBitString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:signature))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:DerValue.tag_Sequence)(SimpleName:tmp))))(ExpressionStatement(Assignment(SimpleName:signedCRL)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toByteArray))))(ExpressionStatement(Assignment(SimpleName:readOnly)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CRLException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))))))