(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:int)(SimpleName:indexOf)(SingleVariableDeclaration(SimpleType(SimpleName:K))(SimpleName:key))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:left)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:right)(InfixExpression(SimpleName:_size)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:left)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:right))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:middle)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:left)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:right)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BPlusTree))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:_keys)(SimpleName:middle))(SimpleName:key)))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(SimpleName:middle)))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:left)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:right)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))(ReturnStatement(SimpleName:left))))))