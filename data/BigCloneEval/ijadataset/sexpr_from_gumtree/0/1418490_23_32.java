(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:processJavaSourceFiles)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:path))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:isDirectory))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:listFiles))(Block(ExpressionStatement(MethodInvocation(SimpleName:processJavaSourceFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:isFile))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:getPath)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:getPath)))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>))))))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(ParameterizedType(SimpleType(SimpleName:List))(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:CopyrightField))(SimpleType(SimpleName:String)))))(VariableDeclarationFragment(SimpleName:copyrights)(MethodInvocation(SimpleName:getCopyrightInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))(IfStatement(InfixExpression(SimpleName:copyrights)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(SimpleName:checkCopyrightStatements)(METHOD_INVOCATION_ARGUMENTS(SimpleName:copyrights))))))))))))