(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:compile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:path))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:target))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sourceJarFile)(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:PATH_CODE_MANAGER)(QualifiedName:File.separatorChar)(SimpleName:NAME_CODE_MANAGER))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:destJarFile)(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:target))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:certificateJarPath)(InfixExpression(SimpleName:PATH_CERTIFICATE)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:NAME_CERTIFICATE))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:codesPath)(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:PATH_CODES))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:codesJarPath)(SimpleName:PATH_CODES)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:itineraryPath)(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:PATH_ITINERARY)(QualifiedName:File.separatorChar)(SimpleName:NAME_ITINERARY))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:itineraryJarPath)(InfixExpression(SimpleName:PATH_ITINERARY)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:NAME_ITINERARY))))(VariableDeclarationStatement(SimpleType(SimpleName:PrivateKey))(VariableDeclarationFragment(SimpleName:privKey)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:ze)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:hash))(VariableDeclarationFragment(SimpleName:signature))(VariableDeclarationFragment(SimpleName:ciphered)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)))(VariableDeclarationStatement(SimpleType(SimpleName:JarOutputStream))(VariableDeclarationFragment(SimpleName:jos)))(VariableDeclarationStatement(SimpleType(SimpleName:JarInputStream))(VariableDeclarationFragment(SimpleName:jis)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Security))(SimpleName:addProvider)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BouncyCastleProvider))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPair))(VariableDeclarationFragment(SimpleName:pair)(MethodInvocation(SimpleName:createKeyPair))))(IfStatement(InfixExpression(SimpleName:pair)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:privKey)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pair))(SimpleName:getPrivate))))(VariableDeclarationStatement(SimpleType(SimpleName:X509Certificate))(VariableDeclarationFragment(SimpleName:cert)(MethodInvocation(SimpleName:createX509Certificate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pair)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:sourceJarFile))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:itIS)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:itineraryPath))))(ExpressionStatement(Assignment(SimpleName:hash)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:calculateHash)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis)(SimpleName:itIS)(SimpleName:cert)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:itIS))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destJarFile))))(ExpressionStatement(Assignment(SimpleName:jos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JarOutputStream))(SimpleName:fos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:copyJarEntries)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceJarFile)(SimpleName:jos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:ze)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:certificateJarPath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayInputStream))(VariableDeclarationFragment(SimpleName:bais)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cert))(SimpleName:getEncoded)))))(ExpressionStatement(MethodInvocation(SimpleName:copyIStoOS)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:jos)(NumberLiteral:4096))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jos))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bais))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:ze)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:itineraryJarPath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:itineraryPath))))(ExpressionStatement(MethodInvocation(SimpleName:copyIStoOS)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis)(SimpleName:jos)(NumberLiteral:4096))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jos))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:codeFolder)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:codesPath))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:files)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileStr))(VariableDeclarationFragment(SimpleName:pubKeyPath)))(ExpressionStatement(Assignment(SimpleName:files)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:codeFolder))(SimpleName:listFiles))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pos)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)))(VariableDeclarationStatement(SimpleType(SimpleName:CertificateFactory))(VariableDeclarationFragment(SimpleName:certFactory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CertificateFactory))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:fileStr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:files)(SimpleName:i)))(SimpleName:getName))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:files)(SimpleName:i)))(SimpleName:isFile))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileStr))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PLAIN_CODE_EXTENSION))))(Block(ExpressionStatement(Assignment(SimpleName:pos)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileStr))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PLAIN_CODE_EXTENSION)))))(ExpressionStatement(Assignment(SimpleName:fileStr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileStr))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:pos)))))(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ArrayAccess(SimpleName:files)(SimpleName:i)))))(ExpressionStatement(Assignment(SimpleName:baos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(SimpleName:copyIStoOS)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis)(SimpleName:baos)(NumberLiteral:4096))))(ExpressionStatement(Assignment(SimpleName:signature)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:sign)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))(SimpleName:privKey)(SimpleName:cert)(BooleanLiteral:true)))))(ExpressionStatement(Assignment(SimpleName:pubKeyPath)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:codesPath)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:fileStr)(SimpleName:PUBLIC_KEY_EXTENSION))))(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:pubKeyPath))))(VariableDeclarationStatement(SimpleType(SimpleName:X509Certificate))(VariableDeclarationFragment(SimpleName:hostCert)(CastExpression(SimpleType(SimpleName:X509Certificate))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:certFactory))(SimpleName:generateCertificate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis))))))(ExpressionStatement(Assignment(SimpleName:ciphered)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:cipher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:signature)(SimpleName:hash)(SimpleName:hostCert)))))(ExpressionStatement(Assignment(SimpleName:signature)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:ze)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:codesJarPath)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:fileStr)(SimpleName:CIPHERED_CODE_EXTENSION)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))(ExpressionStatement(Assignment(SimpleName:bais)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:ciphered))))(ExpressionStatement(MethodInvocation(SimpleName:copyIStoOS)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:jos)(NumberLiteral:4096))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jos))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bais))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:bais)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:files)(SimpleName:i)))(SimpleName:getName))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jos))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:fnfe))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fnfe))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CertificateEncodingException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidKeyException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalStateException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchProviderException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SignatureException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CertificateException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CMSException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e)))))))))))))