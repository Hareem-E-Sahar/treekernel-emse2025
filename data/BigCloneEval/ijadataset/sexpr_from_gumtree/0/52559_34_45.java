(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:ByteBuffer))(SimpleName:makeByteBuffer)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:randomIndex)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:randomIndex))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:MappedByteBuffer))(VariableDeclarationFragment(SimpleName:byteBuffer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fc))(SimpleName:map)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:MapMode.READ_ONLY)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fc))(SimpleName:size))))))(ReturnStatement(SimpleName:byteBuffer)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:fnf))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ResourceMissingException))(SimpleName:file)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OperationFailedException))(StringLiteral:<STR>)(SimpleName:ioe))))))))))