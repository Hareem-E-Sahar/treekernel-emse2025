(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:SeekableInput))(SimpleName:replaceInputStreamWithSeekableInput)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:in))(Block(IfStatement(InstanceofExpression(SimpleName:in)(SimpleType(SimpleName:SeekableInput)))(ReturnStatement(CastExpression(SimpleType(SimpleName:SeekableInput))(SimpleName:in))))(VariableDeclarationStatement(SimpleType(SimpleName:SeekableInput))(VariableDeclarationFragment(SimpleName:sin)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(NumberLiteral:1024))))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:data)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toByteArray))))(ExpressionStatement(Assignment(SimpleName:sin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SeekableByteArrayInputStream))(SimpleName:data)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(StringLiteral:<STR>)))))))(ReturnStatement(SimpleName:sin))))))