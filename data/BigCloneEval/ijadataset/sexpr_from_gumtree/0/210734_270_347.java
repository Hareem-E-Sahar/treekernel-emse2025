(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:ByteBuffer))(SimpleName:LoadMappedFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(Block(VariableDeclarationStatement(SimpleType(SimpleName:searchpath_t))(VariableDeclarationFragment(SimpleName:search)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:netpath)))(VariableDeclarationStatement(SimpleType(SimpleName:pack_t))(VariableDeclarationFragment(SimpleName:pak)))(VariableDeclarationStatement(SimpleType(SimpleName:filelink_t))(VariableDeclarationFragment(SimpleName:link)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:fileLength)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:channel)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:input)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:buffer)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:file_from_pak)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(TryStatement(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fs_links))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:link)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:filelink_t))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:regionMatches)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(QualifiedName:link.from)(NumberLiteral:0)(QualifiedName:link.fromlength)))(Block(ExpressionStatement(Assignment(SimpleName:netpath)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:link.to)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:link.fromlength))))))(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:netpath))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canRead))(Block(ExpressionStatement(Assignment(SimpleName:input)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:fileLength)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:size)))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:map)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FileChannel.MapMode.READ_ONLY)(NumberLiteral:0)(SimpleName:fileLength)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close)))(ReturnStatement(SimpleName:buffer))))(ReturnStatement(NullLiteral))))))(ForStatement(Assignment(SimpleName:search)(ASSIGNMENT_OPERATOR:=)(SimpleName:fs_searchpaths))(InfixExpression(SimpleName:search)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Assignment(SimpleName:search)(ASSIGNMENT_OPERATOR:=)(QualifiedName:search.next))(Block(IfStatement(InfixExpression(QualifiedName:search.pack)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:pak)(ASSIGNMENT_OPERATOR:=)(QualifiedName:search.pack)))(ExpressionStatement(Assignment(SimpleName:filename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:toLowerCase))))(VariableDeclarationStatement(SimpleType(SimpleName:packfile_t))(VariableDeclarationFragment(SimpleName:entry)(CastExpression(SimpleType(SimpleName:packfile_t))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:pak.files))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename))))))(IfStatement(InfixExpression(SimpleName:entry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:file_from_pak)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(QualifiedName:pak.filename))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canRead)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Com))(SimpleName:Error)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Defines.ERR_FATAL)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:pak.filename)))))))(IfStatement(InfixExpression(InfixExpression(QualifiedName:pak.handle)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:pak.handle))(SimpleName:getFD)))(SimpleName:valid))))(Block(ExpressionStatement(Assignment(QualifiedName:pak.handle)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(QualifiedName:pak.filename)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(QualifiedName:pak.backbuffer)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:pak.handle))(SimpleName:getChannel))))(ExpressionStatement(Assignment(QualifiedName:pak.backbuffer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:map)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FileChannel.MapMode.READ_ONLY)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:pak.handle))(SimpleName:length))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:pak.backbuffer))(SimpleName:position)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:entry.filepos))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:pak.backbuffer))(SimpleName:slice))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:limit)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:entry.filelen))))(ReturnStatement(SimpleName:buffer)))))(Block(ExpressionStatement(Assignment(SimpleName:netpath)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:search.filename)(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>)(SimpleName:filename))))(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:netpath))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canRead)))(Block(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:input)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:fileLength)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:size)))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:map)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FileChannel.MapMode.READ_ONLY)(NumberLiteral:0)(SimpleName:fileLength)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close)))(ReturnStatement(SimpleName:buffer)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:input)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close))))(IfStatement(InfixExpression(InfixExpression(SimpleName:channel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:isOpen)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:close)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block)))(ReturnStatement(NullLiteral))))))