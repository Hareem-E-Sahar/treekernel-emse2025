(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:generateRandomPack2)(SingleVariableDeclaration(SimpleType(SimpleName:BitSet))(SimpleName:pack))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:N)(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:N)(SimpleName:C)(BooleanLiteral:false))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:N))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:C)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:i)))))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:j))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:temp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:temp))))))))))))