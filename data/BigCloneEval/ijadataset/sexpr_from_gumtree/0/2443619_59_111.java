(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(PrimitiveType:void)(SimpleName:done)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(InfixExpression(SimpleName:checkForUpdatesDialog)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:checkForUpdatesDialog))(SimpleName:isVisible)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:checkForUpdatesDialog))(SimpleName:dispose)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isCancelled)))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:newerVersion)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:get))))(IfStatement(InfixExpression(InfixExpression(SimpleName:newerVersion)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newerVersion))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentVersion)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:currentVersion))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:newerVersion))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(SimpleName:showDialogs)(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:options)(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:Desktop))(VariableDeclarationFragment(SimpleName:desktop)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:isDesktopSupported))(Block(ExpressionStatement(Assignment(SimpleName:desktop)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:getDesktop))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:desktop))(SimpleName:isSupported)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Desktop.Action.BROWSE)))(Block(ExpressionStatement(Assignment(SimpleName:options)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:JPanel))(VariableDeclarationFragment(SimpleName:panel)(ClassInstanceCreation(SimpleType(SimpleName:JPanel))(ClassInstanceCreation(SimpleType(SimpleName:BorderLayout))(NumberLiteral:0)(NumberLiteral:10)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:panel))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:JLabel))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(SimpleName:newerVersion)(StringLiteral:<STR>)))(QualifiedName:BorderLayout.CENTER))))(VariableDeclarationStatement(SimpleType(SimpleName:JCheckBox))(VariableDeclarationFragment(SimpleName:hideCheckBox)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Settings))(SimpleName:isAutomaticCheckForUpdatesEnabled))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:showDisableOption))(Block(ExpressionStatement(Assignment(SimpleName:hideCheckBox)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JCheckBox))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:panel))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hideCheckBox)(QualifiedName:BorderLayout.SOUTH))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showOptionDialog)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XtremeMP))(SimpleName:getInstance)))(SimpleName:getMainFrame))(SimpleName:panel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:JOptionPane.OK_CANCEL_OPTION)(QualifiedName:JOptionPane.QUESTION_MESSAGE)(NullLiteral)(SimpleName:options)(ArrayAccess(SimpleName:options)(NumberLiteral:0))))))(IfStatement(InfixExpression(SimpleName:hideCheckBox)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Settings))(SimpleName:setAutomaticCheckForUpdatesEnabled)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hideCheckBox))(SimpleName:isSelected))))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:options.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newerVersion))(SimpleName:getDownloadURL)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:desktop))(SimpleName:browse)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:toURI))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(SimpleName:ex))))))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:showDialogs)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:showDisableOption)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showMessageDialog)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XtremeMP))(SimpleName:getInstance)))(SimpleName:getMainFrame))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LanguageBundle))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:JOptionPane.INFORMATION_MESSAGE)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(SimpleName:ex)))))))))))))