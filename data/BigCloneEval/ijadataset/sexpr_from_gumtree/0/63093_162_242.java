(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:LicenseKey))(SimpleName:parseKey)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:key))(SimpleType(SimpleName:InvalidLicenseKeyException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:f_key)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:key))(SimpleName:trim))))(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:st)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:f_key)(SimpleName:FIELD_SEPERATOR))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:tc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:countTokens))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:tc_name)(InfixExpression(SimpleName:tc)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:9))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:product)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:loadStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:load)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:loadStr)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lowMajorVersionStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lowMajorVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lowMajorVersionStr)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lowMinorVersionStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:lowMinorVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:parseDouble)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lowMinorVersionStr))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:highMajorVersionStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:highMajorVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:highMajorVersionStr)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:highMinorVersionStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:highMinorVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:parseDouble)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:highMinorVersionStr))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:regName)(StringLiteral:<STR>)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:tc_name))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(SimpleName:regName)(ASSIGNMENT_OPERATOR:+=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))(InfixExpression(SimpleName:FIELD_SEPERATOR)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:randomHexStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:md5Str)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:subKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f_key))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f_key))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:md5Str)))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:md5)))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:md)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:md)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:subKey))(SimpleName:getBytes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FIELD_SEPERATOR))(SimpleName:getBytes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zuonicsPassword))(SimpleName:getBytes)))))(ExpressionStatement(Assignment(SimpleName:md5)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:testKey)(InfixExpression(SimpleName:subKey)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:FIELD_SEPERATOR))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:md5.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(SimpleName:testKey)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:md5)(SimpleName:i)))))(SimpleName:toUpperCase)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testKey))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_key))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InvalidLicenseKeyException))(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:f_regName)(SimpleName:regName)))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:LicenseKey))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getProduct)(Block(ReturnStatement(SimpleName:product))))(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getType)(Block(ReturnStatement(SimpleName:type))))(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:getLoad)(Block(ReturnStatement(SimpleName:load))))(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getRegName)(Block(ReturnStatement(SimpleName:f_regName))))(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:getlowVersion)(Block(ReturnStatement(InfixExpression(SimpleName:lowMajorVersion)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lowMinorVersion)))))(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:getHighVersion)(Block(ReturnStatement(InfixExpression(SimpleName:highMajorVersion)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:highMinorVersion)))))(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getRandomHexStr)(Block(ReturnStatement(SimpleName:randomHexStr))))(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getMD5HexStr)(Block(ReturnStatement(SimpleName:md5Str))))(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:toString)(Block(ReturnStatement(SimpleName:f_key))))(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:equals)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:obj))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:obj))(SimpleName:toString)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:toString))))(ReturnStatement(BooleanLiteral:true)))(ReturnStatement(BooleanLiteral:false))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InvalidLicenseKeyException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))))