(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:RandomPolygon))(SimpleName:newInstance)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:x))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:y))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:minDistance))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:minSides))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:maxSides))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:minArea))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:maxArea))(Block(IfStatement(InfixExpression(SimpleName:rand)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:rand)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Random))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:RandomPolygon)))(VariableDeclarationFragment(SimpleName:stack)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:RandomPolygon))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:RandomPolygon)))(VariableDeclarationFragment(SimpleName:alreadySearched)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:RandomPolygon))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stack))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:RandomPolygon))(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension))(ArrayInitializer(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:0))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:5))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:10))))(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension))(ArrayInitializer(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:0))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:10))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:0))))(NumberLiteral:3)))))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stack))(SimpleName:isEmpty)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:RandomPolygon))(VariableDeclarationFragment(SimpleName:node)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stack))(SimpleName:removeFirst))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:area)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:calculateArea))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:minSides))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:maxSides)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:area)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:minArea)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:area)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:maxArea)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:pointsAreValid)(BooleanLiteral:true)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:edge)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:node.npoints))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:pointsAreValid))(PostfixExpression(SimpleName:edge)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x1)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:edge))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y1)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:edge))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x2)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ArrayAccess(QualifiedName:node.xpoints)(NumberLiteral:0))(ArrayAccess(QualifiedName:node.xpoints)(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y2)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ArrayAccess(QualifiedName:node.ypoints)(NumberLiteral:0))(ArrayAccess(QualifiedName:node.ypoints)(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:point)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:point)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:node.npoints))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:pointsAreValid))(PostfixExpression(SimpleName:point)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:point)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:edge))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:point)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:point)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ContinueStatement))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:px)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:point))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:py)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:point))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:distance)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Line2D))(SimpleName:ptSegDist)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:double)(SimpleName:x1))(CastExpression(PrimitiveType:double)(SimpleName:y1))(CastExpression(PrimitiveType:double)(SimpleName:x2))(CastExpression(PrimitiveType:double)(SimpleName:y2))(CastExpression(PrimitiveType:double)(SimpleName:px))(CastExpression(PrimitiveType:double)(SimpleName:py))))))(IfStatement(InfixExpression(SimpleName:distance)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:minDistance))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:px)(StringLiteral:<STR>)(SimpleName:py)(StringLiteral:<STR>)(SimpleName:x1)(StringLiteral:<STR>)(SimpleName:y1)(StringLiteral:<STR>)(SimpleName:x2)(StringLiteral:<STR>)(SimpleName:y2)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:pointsAreValid)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))))(IfStatement(SimpleName:pointsAreValid)(ReturnStatement(SimpleName:node)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:RandomPolygon)))(VariableDeclarationFragment(SimpleName:successors)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:RandomPolygon))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:RandomPolygon)))(VariableDeclarationFragment(SimpleName:topSuccessors)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:RandomPolygon))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:centroid)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:calculateCentroid))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:centroid)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(SimpleName:centroid)(NumberLiteral:1))(StringLiteral:<STR>)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:1)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:node.npoints))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:xdiff)(InfixExpression(CastExpression(PrimitiveType:double)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:i)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:centroid)(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:ydiff)(InfixExpression(CastExpression(PrimitiveType:double)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:i)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:centroid)(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:angle)))(IfStatement(InfixExpression(SimpleName:xdiff)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:angle)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:Math.PI)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2.0))))(ExpressionStatement(Assignment(SimpleName:angle)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:ydiff)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:xdiff)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newX)(InfixExpression(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(NumberLiteral:2.0)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:cos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:angle)))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newY)(InfixExpression(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(NumberLiteral:2.0)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sin)(METHOD_INVOCATION_ARGUMENTS(SimpleName:angle)))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:alreadyExists)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:node.npoints))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:alreadyExists)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(IfStatement(InfixExpression(InfixExpression(SimpleName:newX)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:j)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:newY)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:j))))(ExpressionStatement(Assignment(SimpleName:alreadyExists)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(SimpleName:alreadyExists)(ContinueStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:i))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:i))(StringLiteral:<STR>)(SimpleName:newX)(StringLiteral:<STR>)(SimpleName:newY)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xpoints)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(QualifiedName:node.npoints))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ypoints)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(QualifiedName:node.npoints))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:node.npoints))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:i))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:xpoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(SimpleName:newX)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ypoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(SimpleName:newY))))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:xpoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:j))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ypoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:j))))))))(VariableDeclarationStatement(SimpleType(SimpleName:RandomPolygon))(VariableDeclarationFragment(SimpleName:newSuccessor)(ClassInstanceCreation(SimpleType(SimpleName:RandomPolygon))(SimpleName:xpoints)(SimpleName:ypoints)(QualifiedName:node.npoints))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:calculateArea)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newSuccessor)))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:maxArea))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:pointIsValid)(BooleanLiteral:true)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:edge)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:node.npoints))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:pointIsValid))(PostfixExpression(SimpleName:edge)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x1)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:edge))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y1)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:edge))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x2)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ArrayAccess(QualifiedName:node.xpoints)(NumberLiteral:0))(ArrayAccess(QualifiedName:node.xpoints)(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y2)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ArrayAccess(QualifiedName:node.ypoints)(NumberLiteral:0))(ArrayAccess(QualifiedName:node.ypoints)(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:edge))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(SimpleName:edge)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ContinueStatement))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:px)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:i))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:py)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:i))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:distance)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Line2D))(SimpleName:ptSegDist)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:double)(SimpleName:x1))(CastExpression(PrimitiveType:double)(SimpleName:y1))(CastExpression(PrimitiveType:double)(SimpleName:x2))(CastExpression(PrimitiveType:double)(SimpleName:y2))(CastExpression(PrimitiveType:double)(SimpleName:px))(CastExpression(PrimitiveType:double)(SimpleName:py))))))(IfStatement(InfixExpression(SimpleName:distance)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:minDistance))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:px)(StringLiteral:<STR>)(SimpleName:py)(StringLiteral:<STR>)(SimpleName:x1)(StringLiteral:<STR>)(SimpleName:y1)(StringLiteral:<STR>)(SimpleName:x2)(StringLiteral:<STR>)(SimpleName:y2)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:pointIsValid)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:pointIsValid))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:topSuccessors))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newSuccessor))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:successors))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newSuccessor)))))))))(IfStatement(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:maxSides))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:numSuccessors)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:boundaryLength)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:calculateBoundaryLength))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numSuccessors))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:distance)(InfixExpression(SimpleName:boundaryLength)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rand))(SimpleName:nextDouble)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:point)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:getPointOnPerimeter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:distance)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(InfixExpression(ArrayAccess(SimpleName:point)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:idx)(StringLiteral:<STR>)(ArrayAccess(SimpleName:point)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(SimpleName:point)(NumberLiteral:1))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xpoints)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ypoints)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<=)(QualifiedName:node.npoints))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:idx))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:xpoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:node.xpoints)(SimpleName:j))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ypoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:node.ypoints)(SimpleName:j)))))(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:idx))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:xpoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:point)(NumberLiteral:0))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ypoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:point)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:xpoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:node.xpoints)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ypoints)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:node.ypoints)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:successors))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:RandomPolygon))(SimpleName:xpoints)(SimpleName:ypoints)(InfixExpression(QualifiedName:node.npoints)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:successorList)(NumberLiteral:0)))(InfixExpression(SimpleName:successorList)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(PostfixExpression(SimpleName:successorList)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:RandomPolygon)))(VariableDeclarationFragment(SimpleName:succ)))(SwitchStatement(SimpleName:successorList)(SwitchCase(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:succ)(ASSIGNMENT_OPERATOR:=)(SimpleName:successors)))(BreakStatement)(SwitchCase(NumberLiteral:1))(SwitchCase)(ExpressionStatement(Assignment(SimpleName:succ)(ASSIGNMENT_OPERATOR:=)(SimpleName:topSuccessors)))(BreakStatement))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:remaining)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:succ))(SimpleName:size)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:remaining.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:remaining)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(SimpleName:i))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:remaining.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:chosen)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rand))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:remaining.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:i))))))(VariableDeclarationStatement(SimpleType(SimpleName:RandomPolygon))(VariableDeclarationFragment(SimpleName:successor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:succ))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:remaining)(SimpleName:chosen))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:alreadySearched))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:successor))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:alreadySearched))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:successor))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stack))(SimpleName:addFirst)(METHOD_INVOCATION_ARGUMENTS(SimpleName:successor))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(SimpleName:chosen)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:remaining.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:i)(NumberLiteral:1)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:remaining)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:remaining)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))))))(ReturnStatement(NullLiteral))))))