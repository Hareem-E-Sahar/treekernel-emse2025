(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:Chunker))(SimpleName:regexp)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:type))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:regExp))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:int)(SimpleName:group))(Block(TypeDeclarationStatement(TypeDeclaration(TYPE_DECLARATION_KIND:class)(SimpleName:RegexpChunker)(SimpleType(SimpleName:Chunker))(FieldDeclaration(SimpleType(SimpleName:Pattern))(VariableDeclarationFragment(SimpleName:pat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:regExp)))))(MethodDeclaration(Modifier:public)(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:Chunk)))(SimpleName:chunk)(SingleVariableDeclaration(SimpleType(SimpleName:TextWithChunks))(SimpleName:chunkText))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:Chunk)))(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(SimpleName:newSet))))(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:matcher)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pat))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:chunkText.text)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:find))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Chunk))(SimpleName:chunkText)(SimpleName:type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:start)(METHOD_INVOCATION_ARGUMENTS(SimpleName:group)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:end)(METHOD_INVOCATION_ARGUMENTS(SimpleName:group)))))))))(ReturnStatement(SimpleName:result))))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:boolean)(SimpleName:equals)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:o)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(SimpleName:getClass))(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:getClass))))(ReturnStatement(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:RegexpChunker))(VariableDeclarationFragment(SimpleName:that)(CastExpression(SimpleType(SimpleName:RegexpChunker))(SimpleName:o))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Objects))(SimpleName:equal)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pat))(SimpleName:pattern))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:that.pat))(SimpleName:pattern)))))))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:int)(SimpleName:hashCode)(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Objects))(SimpleName:hashCode)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pat))(SimpleName:pattern)))))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:RegexpChunker))))))))