(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:getAdapter)(SingleVariableDeclaration(SimpleType(SimpleName:Class))(SimpleName:adapter))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:adapter)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:ZoomManager))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(SimpleName:getGraphicalViewer))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getGraphicalViewer)))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:ZoomManager))))(SimpleName:toString)))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:adapter)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:IContentOutlinePage))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(SimpleName:getGraphicalViewer))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:OverviewOutlinePage))(ThisExpression)))))(IfStatement(InfixExpression(SimpleName:adapter)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:IPropertySheetPage))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:TabbedPropertySheetPage))(ThisExpression)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:adapter)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:IArchimateModel))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(SimpleName:getModel))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getModel)))(SimpleName:getArchimateModel)))))(IfStatement(InfixExpression(SimpleName:adapter)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:IDiagramModel))))(Block(ReturnStatement(MethodInvocation(SimpleName:getModel)))))(ReturnStatement(SuperMethodInvocation(SimpleName:getAdapter)(SimpleName:adapter)))))))