(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:Dataset))(SimpleName:loadDataset)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:checkHost)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.net.HttpURLConnection))(VariableDeclarationFragment(SimpleName:httpUrlConn)(CastExpression(SimpleType(QualifiedName:java.net.HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:bis)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConn))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:Dataset))(VariableDeclarationFragment(SimpleName:ds)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DcmObjectFactory))(SimpleName:getInstance)))(SimpleName:newDataset))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ds))(SimpleName:readFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bis)(QualifiedName:FileFormat.DICOM_FILE)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignore))(Block)))))(ReturnStatement(SimpleName:ds))))))