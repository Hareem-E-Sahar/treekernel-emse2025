(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:shouldCompleteTransaction)(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(Assignment(SimpleName:valueToBeTransfered)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BigDecimal))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:debtorIsAbleToTransfer)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(SimpleName:debtorHasBalance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:valueToBeTransfered))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BigDecimal.ONE))))))(ExpressionStatement(MethodInvocation(SimpleName:debtorHasItsBalanceDeducted)))(ExpressionStatement(MethodInvocation(SimpleName:creditorHasItsBalanceCredited)))(ExpressionStatement(MethodInvocation(SimpleName:replayAll)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paymentService))(SimpleName:transferFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:debtor)(SimpleName:creditor)(SimpleName:valueToBeTransfered))))(ExpressionStatement(MethodInvocation(SimpleName:verifyAll)))))))