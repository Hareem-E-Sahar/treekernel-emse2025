(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:public)(SimpleName:DenseFileCache)(SingleVariableDeclaration(SimpleType(SimpleName:CacheSystem))(SimpleName:cacheSystem))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(SimpleType(SimpleName:DenseFileCacheProperties))(SimpleName:properties))(SingleVariableDeclaration(SimpleType(SimpleName:ClassLoader))(SimpleName:classloader))(SimpleType(SimpleName:IOException))(Block(SuperConstructorInvocation(SimpleName:cacheSystem)(SimpleName:name)(SimpleName:properties))(ExpressionStatement(Assignment(SimpleName:properties)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:DenseFileCacheProperties))(SuperFieldAccess(SimpleName:properties)))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:classloader))(ASSIGNMENT_OPERATOR:=)(SimpleName:classloader)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:properties))(ASSIGNMENT_OPERATOR:=)(SimpleName:properties)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:getPath))))(IfStatement(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(StringLiteral:<STR>))))(SimpleName:toFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:deleteOnExit)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:deleteOnClose))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:isDirectory))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:toPath))(SimpleName:name)(StringLiteral:<STR>))))(SimpleName:toFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:deleteOnExit)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:deleteOnClose))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:isFile))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:deleteOnClose))(ASSIGNMENT_OPERATOR:=)(QualifiedName:properties.deleteFileOnClose))))(IfStatement(QualifiedName:properties.deleteFileOnClose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:mkdirs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:toPath))(SimpleName:name)(StringLiteral:<STR>))))(SimpleName:toFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:deleteOnExit)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:deleteOnClose))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:getParentFile))))(IfStatement(InfixExpression(SimpleName:parent)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:mkdirs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:parent)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:createNewFile)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:deleteOnClose))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:path))(ASSIGNMENT_OPERATOR:=)(SimpleName:path)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:map))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ConcurrentHashXMap)))(NumberLiteral:1))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:openLockedRandomAccessFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)(StringLiteral:<STR>)(NumberLiteral:0)(QualifiedName:TimeUnit.MILLISECONDS)))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:file))(ASSIGNMENT_OPERATOR:=)(SimpleName:file)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:existingFileLength)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:file)))(SimpleName:length))))(IfStatement(InfixExpression(SimpleName:existingFileLength)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:existingFileLength)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:FILE_HEADER_LENGTH)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:readInt))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:MAGIC))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:close))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)))))))(IfStatement(InfixExpression(QualifiedName:properties.persistent)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:readInt))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:VERSION))))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:flags)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:read))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:vmLockId)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:readLong))))(IfStatement(InfixExpression(SimpleName:vmLockId)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:VM_LOCK_ID))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:close))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:flags)(INFIX_EXPRESSION_OPERATOR:&)(SimpleName:FLAG_CLEAN_SHUTDOWN)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:flags)(INFIX_EXPRESSION_OPERATOR:&)(SimpleName:FLAG_COMPRESSED)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:==)(ParenthesizedExpression(InfixExpression(QualifiedName:properties.compressionLevel)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))))(Block)))(Block))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:writeInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:MAGIC))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:writeInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:VERSION))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:flags)(NumberLiteral:0)))(IfStatement(InfixExpression(QualifiedName:properties.compressionLevel)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:flags)(ASSIGNMENT_OPERATOR:|=)(SimpleName:FLAG_COMPRESSED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:writeInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:flags))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:writeLong)(METHOD_INVOCATION_ARGUMENTS(SimpleName:VM_LOCK_ID))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:fileLength))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getFilePointer)))))(AssertStatement(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:fileLength))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:FILE_HEADER_LENGTH))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:fileChannel))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getChannel))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:fileOut))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GrowingFileBufferOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:fileOut)))(SimpleName:position)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:fileLength)))))(IfStatement(InfixExpression(QualifiedName:properties.compressionLevel)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:out))(ASSIGNMENT_OPERATOR:=)(SimpleName:fileOut))))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:out))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:DenseFileCache.NonClosingBufferedOutputStream))(ClassInstanceCreation(SimpleType(QualifiedName:DenseFileCache.NonClosingDeflatedOutputStream))(FieldAccess(ThisExpression)(SimpleName:fileOut))(QualifiedName:properties.compressionLevel)))))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:cacheStatistics))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DefaultCacheStatistics)))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:lock))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ReentrantReadWriteLock))(QualifiedName:properties.fair))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:readLock))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:lock)))(SimpleName:readLock))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:writeLock))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:lock)))(SimpleName:writeLock))))))))