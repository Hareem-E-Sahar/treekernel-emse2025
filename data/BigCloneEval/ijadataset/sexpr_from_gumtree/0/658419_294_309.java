(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:find)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:first))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:s)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:e)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ranges))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:e))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:m)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:Range))(VariableDeclarationFragment(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ranges))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m)))))(IfStatement(InfixExpression(QualifiedName:r.first)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:first))(Block(ExpressionStatement(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(IfStatement(InfixExpression(QualifiedName:r.first)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:first))(Block(ExpressionStatement(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ReturnStatement(SimpleName:m)))))))(ReturnStatement(SimpleName:s))))))