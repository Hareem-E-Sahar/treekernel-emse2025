(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:start)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:BundleContext))(SimpleName:context))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(Assignment(SimpleName:config)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Config))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FrameworkImpl.INSTANCE))(SimpleName:getConfig))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourceBundle))(SimpleName:getBundle)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getBundle)))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:openStream)))))(ExpressionStatement(Assignment(SimpleName:log)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:LogUtil))(SimpleName:context)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Core))))(SimpleName:getName))(SimpleName:config))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:bundleContext))(ASSIGNMENT_OPERATOR:=)(SimpleName:context)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleContext))(SimpleName:getDataFile)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CoreConstants.INSTANCE_LOCK)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:createNewFile))))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:lockFile)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockFile))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:lock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:tryLock))))(IfStatement(InfixExpression(SimpleName:lock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getResourceString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CoreConstants.KEY_ERRINSTANCE))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FrameworkImpl.INSTANCE))(SimpleName:stop)))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:addFrameworkListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:frameworkListener))))(VariableDeclarationStatement(SimpleType(SimpleName:Event))(VariableDeclarationFragment(SimpleName:event)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FrameworkImpl))(SimpleName:newEvent)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Listener))(Dimension))(VariableDeclarationFragment(SimpleName:listeners)(ArrayCreation(ArrayType(SimpleType(SimpleName:Listener))(Dimension))(ArrayInitializer(ClassInstanceCreation(SimpleType(SimpleName:Listener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onEvent)(SingleVariableDeclaration(SimpleType(SimpleName:Event))(SimpleName:ev))(SimpleType(SimpleName:FrameworkException))(Block(ExpressionStatement(Assignment(SimpleName:logTracker)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ServiceTracker))(SimpleName:context)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:LogService))))(SimpleName:getName))(NullLiteral))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logTracker))(SimpleName:open)))))))(ClassInstanceCreation(SimpleType(SimpleName:Listener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onEvent)(SingleVariableDeclaration(SimpleType(SimpleName:Event))(SimpleName:ev))(SimpleType(SimpleName:FrameworkException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Dictionary))(VariableDeclarationFragment(SimpleName:properties)))(ExpressionStatement(Assignment(SimpleName:properties)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Hashtable)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.SERVICE_COMMANDNAME)(QualifiedName:CoreConstants.HELP_COMMANDNAME))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:CommandHandler))))(SimpleName:getName))(ClassInstanceCreation(SimpleType(SimpleName:CommandHandler))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onCommand)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:command))(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:helpText)(MethodInvocation(SimpleName:getResourceString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CoreConstants.KEY_COMMANDHELP)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:helpText))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:newLine)))))))(SimpleName:properties))))(ExpressionStatement(Assignment(SimpleName:properties)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Hashtable)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.SERVICE_COMMANDNAME)(QualifiedName:CoreConstants.CORE_COMMANDNAME))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:CommandHandler))))(SimpleName:getName))(ClassInstanceCreation(SimpleType(SimpleName:CoreCommandHandler)))(SimpleName:properties))))(ExpressionStatement(Assignment(SimpleName:properties)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Hashtable)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.SERVICE_COMMANDNAME)(QualifiedName:CoreConstants.DISCONNECT_COMMANDNAME))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:CommandHandler))))(SimpleName:getName))(ClassInstanceCreation(SimpleType(SimpleName:CommandHandler))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onCommand)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:command))(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:close)))))))(SimpleName:properties))))(ExpressionStatement(Assignment(SimpleName:properties)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Hashtable)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.SERVICE_COMMANDNAME)(QualifiedName:CoreConstants.LIST_COMMANDNAME))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:CommandHandler))))(SimpleName:getName))(ClassInstanceCreation(SimpleType(SimpleName:CommandHandler))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onCommand)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:command))(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:ServiceReference))(Dimension))(VariableDeclarationFragment(SimpleName:commands)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CommandProcessor))(SimpleName:getCommands)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getBundleContext))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:commands.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:commands)(SimpleName:i)))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.SERVICE_COMMANDNAME))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))))))))(SimpleName:properties))))))))(ClassInstanceCreation(SimpleType(SimpleName:Listener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onEvent)(SingleVariableDeclaration(SimpleType(SimpleName:Event))(SimpleName:ev))(SimpleType(SimpleName:FrameworkException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ServiceFactory))(VariableDeclarationFragment(SimpleName:factory)(ClassInstanceCreation(SimpleType(SimpleName:ServiceFactory))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:getService)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Bundle))(SimpleName:bundle))(SingleVariableDeclaration(SimpleType(SimpleName:ServiceRegistration))(SimpleName:registration))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:BundleServiceImpl))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:File))(SimpleName:openConfigFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FrameworkImpl.INSTANCE))(SimpleName:getConfigFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bundle)(SimpleName:name))))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:addClasspathURL)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BundleImpl))(VariableDeclarationFragment(SimpleName:bundleImpl)(CastExpression(SimpleType(SimpleName:BundleImpl))(SimpleName:bundle))))(VariableDeclarationStatement(SimpleType(SimpleName:BundleRegistryImpl))(VariableDeclarationFragment(SimpleName:reg)(CastExpression(SimpleType(SimpleName:BundleRegistryImpl))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FrameworkImpl.INSTANCE))(SimpleName:getBundleRegistry)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reg))(SimpleName:addUrl)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleImpl))(SimpleName:getBundleClassLoader))(SimpleName:url))))))(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Config))(SimpleName:createConfig)(SingleVariableDeclaration(SimpleType(SimpleName:ResourceBundle))(SimpleName:resBundle))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:Config))(SimpleName:config)(SimpleName:resBundle)))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:addIdleEventListener)(SingleVariableDeclaration(SimpleType(SimpleName:IdleEventListener))(SimpleName:listener))(SimpleType(SimpleName:FrameworkException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BundleImpl))(VariableDeclarationFragment(SimpleName:bundleImpl)(CastExpression(SimpleType(SimpleName:BundleImpl))(SimpleName:bundle))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FrameworkImpl.INSTANCE))(SimpleName:addIdleEventListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:listener)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleImpl))(SimpleName:getBundleClassLoader))))))))))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:ungetService)(SingleVariableDeclaration(SimpleType(SimpleName:Bundle))(SimpleName:bundle))(SingleVariableDeclaration(SimpleType(SimpleName:ServiceRegistration))(SimpleName:registration))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:service))(Block))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:BundleService))))(SimpleName:getName))(SimpleName:factory)(NullLiteral))))(ExpressionStatement(Assignment(SimpleName:packageAdmin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PackageAdminImpl))(SimpleName:context))))(ExpressionStatement(Assignment(SimpleName:eventAdmin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:EventAdminImpl))(SimpleName:context))))(ExpressionStatement(Assignment(SimpleName:preferencesService)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PreferencesServiceImpl))(SimpleName:context))))(ExpressionStatement(Assignment(SimpleName:configurationAdmin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConfigurationAdminImpl))(SimpleName:context))))(ExpressionStatement(Assignment(SimpleName:peerAdmin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PeerAdminImpl))(SimpleName:context))))))))(ClassInstanceCreation(SimpleType(SimpleName:Listener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onEvent)(SingleVariableDeclaration(SimpleType(SimpleName:Event))(SimpleName:ev))(SimpleType(SimpleName:FrameworkException))(Block(ExpressionStatement(Assignment(SimpleName:daemonTracker)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ServiceTracker))(SimpleName:bundleContext)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Daemon))))(SimpleName:getName))(ClassInstanceCreation(SimpleType(SimpleName:ServiceTrackerCustomizer))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:addingService)(SingleVariableDeclaration(SimpleType(SimpleName:ServiceReference))(SimpleName:reference))(Block(ReturnStatement(MethodInvocation(SimpleName:startDaemon)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reference))))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:modifiedService)(SingleVariableDeclaration(SimpleType(SimpleName:ServiceReference))(SimpleName:reference))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:service))(Block))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:removedService)(SingleVariableDeclaration(SimpleType(SimpleName:ServiceReference))(SimpleName:reference))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:service))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:thread)(CastExpression(SimpleType(SimpleName:Thread))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapDaemons))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:service))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:thread)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thread))(SimpleName:isAlive)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thread))(SimpleName:interrupt))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapDaemons))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:service)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:daemonTracker))(SimpleName:open)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:ServiceReference))(Dimension))(VariableDeclarationFragment(SimpleName:serviceReferences)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:daemonTracker))(SimpleName:getServiceReferences))))(IfStatement(InfixExpression(SimpleName:serviceReferences)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:serviceReferences.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ServiceReference))(VariableDeclarationFragment(SimpleName:reference)(ArrayAccess(SimpleName:serviceReferences)(SimpleName:i))))(ExpressionStatement(MethodInvocation(SimpleName:startDaemon)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reference))))))))))))(ClassInstanceCreation(SimpleType(SimpleName:Listener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onEvent)(SingleVariableDeclaration(SimpleType(SimpleName:Event))(SimpleName:ev))(SimpleType(SimpleName:FrameworkException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:appId)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleContext))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.KEY_APPLICATION)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:appId)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:appId)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Filter))(VariableDeclarationFragment(SimpleName:filter)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:filter)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:createFilter)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:JIMOConstants.SERVICE_APPID)(StringLiteral:<STR>)(SimpleName:appId)(StringLiteral:<STR>)(QualifiedName:Constants.OBJECTCLASS)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Application))))(SimpleName:getName))(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidSyntaxException))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e1)))))))(ExpressionStatement(Assignment(SimpleName:applicationTracker)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ServiceTracker))(SimpleName:context)(SimpleName:filter)(ClassInstanceCreation(SimpleType(SimpleName:ServiceTrackerCustomizer))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:addingService)(SingleVariableDeclaration(SimpleType(SimpleName:ServiceReference))(SimpleName:reference))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getResourceString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CoreConstants.KEY_STARTINGAPPLICATION)))(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:appId))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Application))(VariableDeclarationFragment(SimpleName:app)(CastExpression(SimpleType(SimpleName:Application))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getService)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reference))))))(ExpressionStatement(MethodInvocation(SimpleName:launchApp)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reference)(SimpleName:app))))(ReturnStatement(SimpleName:app))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:modifiedService)(SingleVariableDeclaration(SimpleType(SimpleName:ServiceReference))(SimpleName:reference))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:service))(Block))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:removedService)(SingleVariableDeclaration(SimpleType(SimpleName:ServiceReference))(SimpleName:reference))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:service))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:serviceAppId)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reference))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.SERVICE_APPID))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appId))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:serviceAppId))))(ReturnStatement))(IfStatement(InfixExpression(InfixExpression(SimpleName:appMain)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appMain))(SimpleName:isAlive)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appMain))(SimpleName:interrupt)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appMain))(SimpleName:join))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:interrupt))))))(ExpressionStatement(Assignment(SimpleName:appMain)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applicationTracker))(SimpleName:open)))))))))(ClassInstanceCreation(SimpleType(SimpleName:Listener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onEvent)(SingleVariableDeclaration(SimpleType(SimpleName:Event))(SimpleName:ev))(SimpleType(SimpleName:FrameworkException))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:consoleMode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Boolean))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.KEY_CONSOLE)))))(SimpleName:booleanValue))))(IfStatement(SimpleName:consoleMode)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Daemon))))(SimpleName:getName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:CommandProcessor))))(SimpleName:getName))))(ClassInstanceCreation(SimpleType(SimpleName:CommandProcessor))(QualifiedName:System.in)(QualifiedName:System.err)(SimpleName:bundleContext)(SimpleName:COMMANDPROCESSOR)(BooleanLiteral:true))(NullLiteral))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:host)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.KEY_SHELLHOST)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:host)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:host)))))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:port)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JIMOConstants.KEY_SHELLPORT)))))))(VariableDeclarationStatement(SimpleType(SimpleName:ServerSocket))(VariableDeclarationFragment(SimpleName:socket)(ClassInstanceCreation(SimpleType(SimpleName:ServerSocket)))))(VariableDeclarationStatement(SimpleType(SimpleName:SocketAddress))(VariableDeclarationFragment(SimpleName:endpoint)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:host)(SimpleName:port))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:socket))(SimpleName:bind)(METHOD_INVOCATION_ARGUMENTS(SimpleName:endpoint))))(VariableDeclarationStatement(SimpleType(SimpleName:ServerSocketShell))(VariableDeclarationFragment(SimpleName:shell)(ClassInstanceCreation(SimpleType(SimpleName:ServerSocketShell))(SimpleName:socket)(SimpleName:context))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Daemon))))(SimpleName:getName))(SimpleName:shell)(NullLiteral)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))))))(ClassInstanceCreation(SimpleType(SimpleName:Listener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:onEvent)(SingleVariableDeclaration(SimpleType(SimpleName:Event))(SimpleName:ev))(SimpleType(SimpleName:FrameworkException))(Block(ExpressionStatement(MethodInvocation(SimpleName:loadBundlesFromStore)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BundleClassLoaderImpl))(SimpleName:resolve)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CoreConstants.KEY_UNRESOLVEDIMPORTS))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FrameworkImpl.INSTANCE))(SimpleName:getBundleRegistry)))(SimpleName:startPendingBundles)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FrameworkImpl.INSTANCE))(SimpleName:sendFrameworkEvent)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FrameworkEvent.STARTED)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleContext))(SimpleName:getBundle))(NullLiteral)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FrameworkException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:addListeners)(METHOD_INVOCATION_ARGUMENTS(SimpleName:listeners))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FrameworkImpl))(SimpleName:fireEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:event))))(VariableDeclarationStatement(SimpleType(SimpleName:EventHandler))(VariableDeclarationFragment(SimpleName:handler)(ClassInstanceCreation(SimpleType(SimpleName:EventHandler))(AnonymousClassDeclaration(FieldDeclaration(SimpleType(SimpleName:CommandContext))(VariableDeclarationFragment(SimpleName:commandContext)(ClassInstanceCreation(SimpleType(SimpleName:CommandContext))(NullLiteral)(QualifiedName:System.err)(BooleanLiteral:false))))(FieldDeclaration(SimpleType(SimpleName:CommandProcessor))(VariableDeclarationFragment(SimpleName:commandProcessor)(ClassInstanceCreation(SimpleType(SimpleName:CommandProcessor))(SimpleName:commandContext)(SimpleName:bundleContext)(StringLiteral:<STR>))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:handleEvent)(SingleVariableDeclaration(SimpleType(QualifiedName:org.osgi.service.event.Event))(SimpleName:event))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cmd)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CoreConstants.EVENT_COMMAND))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:args)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CoreConstants.EVENT_COMMAND))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commandProcessor))(SimpleName:process)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cmd)(SimpleName:args))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Dictionary))(VariableDeclarationFragment(SimpleName:properties)(ClassInstanceCreation(SimpleType(SimpleName:Hashtable)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:EventConstants.EVENT_TOPIC)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(QualifiedName:CoreConstants.TOPIC_COMMANDEXEC))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:EventHandler))))(SimpleName:getName))(SimpleName:handler)(SimpleName:properties))))))))