(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:sampledAtUnitTime)(SingleVariableDeclaration(PrimitiveType:float)(SimpleName:unitTime))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:repeatIteration))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AnimatableValue))(VariableDeclarationFragment(SimpleName:value))(VariableDeclarationFragment(SimpleName:accumulation))(VariableDeclarationFragment(SimpleName:nextValue)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:interpolation)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:unitTime)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:keyTimeIndex)(NumberLiteral:0)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:keyTimeIndex)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:keyTimes.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:unitTime)(INFIX_EXPRESSION_OPERATOR:>=)(ArrayAccess(SimpleName:keyTimes)(InfixExpression(SimpleName:keyTimeIndex)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(ExpressionStatement(PostfixExpression(SimpleName:keyTimeIndex)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(Assignment(SimpleName:value)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:values)(SimpleName:keyTimeIndex))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:calcMode)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CALC_MODE_LINEAR))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:calcMode)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CALC_MODE_PACED)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:calcMode)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CALC_MODE_SPLINE)))(Block(ExpressionStatement(Assignment(SimpleName:nextValue)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:values)(InfixExpression(SimpleName:keyTimeIndex)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ExpressionStatement(Assignment(SimpleName:interpolation)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:unitTime)(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:keyTimes)(SimpleName:keyTimeIndex))))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:keyTimes)(InfixExpression(SimpleName:keyTimeIndex)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:keyTimes)(SimpleName:keyTimeIndex)))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:calcMode)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CALC_MODE_SPLINE))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:unitTime)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Cubic))(VariableDeclarationFragment(SimpleName:c)(ArrayAccess(SimpleName:keySplineCubics)(SimpleName:keyTimeIndex))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:tolerance)(NumberLiteral:0.001f)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:min)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:max)(NumberLiteral:1)))(VariableDeclarationStatement(SimpleType(QualifiedName:Point2D.Double))(VariableDeclarationFragment(SimpleName:p)))(ForStatement(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:t)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:max)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:p)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:eval)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getX))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:interpolation))))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:tolerance))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:interpolation))(Block(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(SimpleName:t))))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(SimpleName:t)))))))(ExpressionStatement(Assignment(SimpleName:interpolation)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getY))))))))(Block(ExpressionStatement(Assignment(SimpleName:nextValue)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(Block(ExpressionStatement(Assignment(SimpleName:value)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:values)(InfixExpression(QualifiedName:values.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(Assignment(SimpleName:nextValue)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(SimpleName:cumulative)(Block(ExpressionStatement(Assignment(SimpleName:accumulation)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:values)(InfixExpression(QualifiedName:values.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(Block(ExpressionStatement(Assignment(SimpleName:accumulation)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:value))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:value))(SimpleName:interpolate)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:value))(SimpleName:nextValue)(SimpleName:interpolation)(SimpleName:accumulation)(SimpleName:repeatIteration)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:value)))(SimpleName:hasChanged))(Block(ExpressionStatement(MethodInvocation(SimpleName:markDirty)))))))))