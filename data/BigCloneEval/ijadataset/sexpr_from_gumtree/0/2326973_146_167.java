(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:copiar)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:origem))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:destino))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:base))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:pararError))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:apagar))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:debug))(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:IOFileFilter)))(SimpleName:filtros)))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origem))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origem))(SimpleName:exists)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destinoArquivo)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:destino)(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getCaminhoRelativo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origem)(SimpleName:base))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origem))(SimpleName:getName))(MethodInvocation(SimpleName:getCaminhoRelativo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origem)(SimpleName:base)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origem)(SimpleName:destinoArquivo))))(IfStatement(SimpleName:apagar)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origem))(SimpleName:delete))))(ReturnStatement)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origem))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origem))(SimpleName:exists)))(ExpressionStatement(Assignment(SimpleName:origem)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:origem)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:PathPattern))(VariableDeclarationFragment(SimpleName:pp)(ClassInstanceCreation(SimpleType(SimpleName:PathPattern))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origem))(SimpleName:getAbsolutePath)))))(VariableDeclarationStatement(SimpleType(SimpleName:Enumeration))(VariableDeclarationFragment(SimpleName:e)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pp))(SimpleName:enumerateFiles))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:origemArquivo)(CastExpression(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:nextElement)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:accept)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origemArquivo)(SimpleName:filtros))))(ContinueStatement))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destinoArquivo)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:destino)(MethodInvocation(SimpleName:getCaminhoRelativo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origemArquivo)(SimpleName:base))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origemArquivo)(SimpleName:destinoArquivo))))(IfStatement(SimpleName:apagar)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origemArquivo))(SimpleName:delete)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(IfStatement(SimpleName:pararError)(ThrowStatement(SimpleName:e1))))))))))))