(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:int)(SimpleName:solveInverseCumulativeProbability)(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:p))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:lower))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:upper))(Block(WhileStatement(InfixExpression(InfixExpression(SimpleName:lower)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:upper))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xm)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lower)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:upper)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(InfixExpression(SimpleName:xm)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:lower))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:xm)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:upper)))(Block(ExpressionStatement(Assignment(SimpleName:xm)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:lower)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:upper)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lower)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:pm)(MethodInvocation(SimpleName:checkedCumulativeProbability)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xm)))))(IfStatement(InfixExpression(SimpleName:pm)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:p))(Block(ExpressionStatement(Assignment(SimpleName:upper)(ASSIGNMENT_OPERATOR:=)(SimpleName:xm))))(Block(ExpressionStatement(Assignment(SimpleName:lower)(ASSIGNMENT_OPERATOR:=)(SimpleName:xm)))))))(ReturnStatement(SimpleName:upper))))))