(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:static)(SimpleType(SimpleName:Song))(SimpleName:deserialize)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:f))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:f)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ReturnStatement(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Song))(VariableDeclarationFragment(SimpleName:s)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:canonicalPath)(StringLiteral:<STR>)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:canonicalPath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getCanonicalPath)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Song.instantiated))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:canonicalPath)))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Song.instantiated))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:canonicalPath)))))(VariableDeclarationStatement(SimpleType(SimpleName:XStream))(VariableDeclarationFragment(SimpleName:xs)(ClassInstanceCreation(SimpleType(SimpleName:XStream)))))(ExpressionStatement(MethodInvocation(SimpleName:configXStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xs))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:xformed)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:f))))(ExpressionStatement(Assignment(SimpleName:xformed)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(SynchronizedStatement(TypeLiteral(SimpleType(SimpleName:Song)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:songXFormer))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(SimpleName:fis))(ClassInstanceCreation(SimpleType(SimpleName:StreamResult))(SimpleName:xformed)))))))(ExpressionStatement(Assignment(SimpleName:xformed)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:convertReferences)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xformed))(SimpleName:toByteArray)))))))(ExpressionStatement(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Song))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xs))(SimpleName:fromXML)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xformed))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:ex))(Block(ReturnStatement(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MainApp))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:canonicalPath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ErrorManager))(SimpleName:getDefault)))(SimpleName:notify)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))(ReturnStatement(NullLiteral))))(Block(IfStatement(InfixExpression(SimpleName:fis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Exceptions))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))))))(IfStatement(InfixExpression(SimpleName:xformed)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xformed))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Exceptions))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))))))))(ExpressionStatement(Assignment(QualifiedName:s.sourceFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:canonicalPath))))(SynchronizedStatement(QualifiedName:s.pageOrder)(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:MusicPage))(SimpleName:mp))(QualifiedName:s.pageOrder)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mp))(SimpleName:deserialize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)))))))(ExpressionStatement(MethodInvocation(SimpleName:findPages)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Song.instantiated))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:canonicalPath)(SimpleName:s))))(ReturnStatement(SimpleName:s))))))