(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:parseService)(SingleVariableDeclaration(SimpleType(SimpleName:KNXnetIPHeader))(SimpleName:h))(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:data))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:offset))(SingleVariableDeclaration(SimpleType(SimpleName:InetAddress))(SimpleName:src))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:port))(SimpleType(SimpleName:KNXFormatException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:svc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:h))(SimpleName:getServiceType))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:KNXnetIPHeader.CONNECT_REQ))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:KNXnetIPHeader.CONNECT_RES))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newState)(SimpleName:OK)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ConnectResponse))(VariableDeclarationFragment(SimpleName:res)(ClassInstanceCreation(SimpleType(SimpleName:ConnectResponse))(SimpleName:data)(SimpleName:offset))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:HPAI))(VariableDeclarationFragment(SimpleName:ep)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getDataEndpoint))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getStatus))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:ErrorCodes.NO_ERROR))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ep))(SimpleName:getHostProtocol))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:HPAI.IPV4_UDP)))(Block(ExpressionStatement(Assignment(SimpleName:channelID)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getChannelID))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InetAddress))(VariableDeclarationFragment(SimpleName:ip)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ep))(SimpleName:getAddress))))(IfStatement(InfixExpression(SimpleName:isNatAware)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:ip)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ip))(SimpleName:isAnyLocalAddress)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ep))(SimpleName:getPort))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))))(Block(ExpressionStatement(Assignment(SimpleName:dataEP)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:src)(SimpleName:port))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dataEP))))))(Block(ExpressionStatement(Assignment(SimpleName:dataEP)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:ip)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ep))(SimpleName:getPort)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dataEP)))))))(ExpressionStatement(MethodInvocation(SimpleName:checkVersion)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))))(Block(ExpressionStatement(Assignment(SimpleName:newState)(ASSIGNMENT_OPERATOR:=)(SimpleName:ACK_ERROR)))(IfStatement(InfixExpression(InfixExpression(SimpleName:ep)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ep))(SimpleName:getHostProtocol))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:HPAI.IPV4_UDP)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getStatusString))))))))(ExpressionStatement(MethodInvocation(SimpleName:setStateNotify)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newState)))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:KNXnetIPHeader.CONNECTIONSTATE_REQ))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:KNXnetIPHeader.CONNECTIONSTATE_RES))(Block(IfStatement(MethodInvocation(SimpleName:checkVersion)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:heartbeat))(SimpleName:setResponse)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ConnectionstateResponse))(SimpleName:data)(SimpleName:offset)))))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:KNXnetIPHeader.DISCONNECT_REQ))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctrlEP))(SimpleName:getAddress)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctrlEP))(SimpleName:getPort))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:port)))(ExpressionStatement(MethodInvocation(SimpleName:disconnectRequested)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:DisconnectRequest))(SimpleName:data)(SimpleName:offset)))))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:KNXnetIPHeader.DISCONNECT_RES))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:DisconnectResponse))(VariableDeclarationFragment(SimpleName:res)(ClassInstanceCreation(SimpleType(SimpleName:DisconnectResponse))(SimpleName:data)(SimpleName:offset))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getStatus))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:ErrorCodes.NO_ERROR))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getStatus))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ErrorCodes))(SimpleName:getErrorMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getStatus))))(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:closing)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:2)))(ExpressionStatement(MethodInvocation(SimpleName:setStateNotify)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CLOSED)))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:serviceRequest))(ExpressionStatement(MethodInvocation(SimpleName:handleService)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)(SimpleName:data)(SimpleName:offset))))(IfStatement(InfixExpression(SimpleName:svc)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:serviceAck))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ServiceAck))(VariableDeclarationFragment(SimpleName:res)(ClassInstanceCreation(SimpleType(SimpleName:ServiceAck))(SimpleName:svc)(SimpleName:data)(SimpleName:offset))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getChannelID))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:channelID))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getChannelID))(StringLiteral:<STR>)(SimpleName:channelID)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getSequenceNumber))(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(SimpleName:getSeqNoSend)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getSequenceNumber)))(StringLiteral:<STR>)(MethodInvocation(SimpleName:getSeqNoSend))(StringLiteral:<STR>)))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:checkVersion)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h))))(ReturnStatement))(ExpressionStatement(MethodInvocation(SimpleName:incSeqNoSend)))(ExpressionStatement(MethodInvocation(SimpleName:setStateNotify)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getStatus))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:ErrorCodes.NO_ERROR))(SimpleName:CEMI_CON_PENDING)(SimpleName:ACK_ERROR)))))(IfStatement(InfixExpression(SimpleName:internalState)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:ACK_ERROR))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:res))(SimpleName:getStatusString)))))))))))(ExpressionStatement(MethodInvocation(SimpleName:handleService)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)(SimpleName:data)(SimpleName:offset))))))))))))))))