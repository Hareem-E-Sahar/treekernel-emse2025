(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(SimpleName:setName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Looper))(SimpleName:prepare)))(ExpressionStatement(Assignment(SimpleName:mHandler)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Handler))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:handleMessage)(SingleVariableDeclaration(SimpleType(SimpleName:Message))(SimpleName:msg))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:msg2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Message))(SimpleName:obtain)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg)))))(SwitchStatement(QualifiedName:msg.what)(SwitchCase(QualifiedName:ConstMXA.MSG_CONNECT))(ExpressionStatement(Assignment(SimpleName:mReconnect)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:mConn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:isConnected)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:isAuthenticated)))(Block(ExpressionStatement(Assignment(QualifiedName:msg2.arg1)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_STATUS_SUCCESS)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmppResults))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg2))))(BreakStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:host)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NullLiteral)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:port)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:serviceName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:useEncryption)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getBoolean)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:true)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:useCompression)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getBoolean)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:false)))))(VariableDeclarationStatement(SimpleType(SimpleName:ConnectionConfiguration))(VariableDeclarationFragment(SimpleName:config)(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(SimpleName:host)(SimpleName:port)(SimpleName:serviceName))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:useEncryption))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setSecurityMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SecurityMode.disabled))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setSecurityMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SecurityMode.enabled)))))(ExpressionStatement(Assignment(SimpleName:mConn)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:XMPPConnection))(SimpleName:config))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:username)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:password)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:resource)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getBoolean)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:false)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debugger))(SimpleName:setEnabled)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debugger))(SimpleName:setDirectory)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NullLiteral))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:connect)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueue))(SimpleName:setMaxRetryTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueue))(SimpleName:setMaxRetryCount)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueue))(SimpleName:setRetryInterval)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:ServiceDiscoveryManager))(VariableDeclarationFragment(SimpleName:sdm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ServiceDiscoveryManager))(SimpleName:getInstanceFor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mConn)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sdm))(SimpleName:addFeature)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:PACKET_TIMEOUT)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ChatStateManager))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mConn))))(VariableDeclarationStatement(SimpleType(SimpleName:ProviderManager))(VariableDeclarationFragment(SimpleName:pm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProviderManager))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(SimpleName:configureProviderManager)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MXAIdentExtensionProvider))(SimpleName:install)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:addPacketListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmppReadWorker)(ClassInstanceCreation(SimpleType(SimpleName:OrFilter))(ClassInstanceCreation(SimpleType(SimpleName:OrFilter))(ClassInstanceCreation(SimpleType(SimpleName:PacketTypeFilter))(TypeLiteral(SimpleType(QualifiedName:org.jivesoftware.smack.packet.Message))))(ClassInstanceCreation(SimpleType(SimpleName:PacketTypeFilter))(TypeLiteral(SimpleType(SimpleName:Presence)))))(ClassInstanceCreation(SimpleType(SimpleName:PacketTypeFilter))(TypeLiteral(SimpleType(SimpleName:IQ))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:addConnectionListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmppReadWorker))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(SimpleName:username)(SimpleName:password)(SimpleName:resource))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getContentResolver)))(SimpleName:delete)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ConstMXA.RosterItems.CONTENT_URI)(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Roster))(VariableDeclarationFragment(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:XMPPRemoteService))(SimpleName:mConn)))(SimpleName:getRoster))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:addRosterListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmppReadWorker))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:RosterEntry)))(VariableDeclarationFragment(SimpleName:rosterEntries)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:getEntries))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:entries)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rosterEntries))(SimpleName:size)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:RosterEntry))(SimpleName:re))(SimpleName:rosterEntries)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:re))(SimpleName:getUser))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmppReadWorker))(SimpleName:entriesAdded)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entries))))(VariableDeclarationStatement(SimpleType(SimpleName:NotificationManager))(VariableDeclarationFragment(SimpleName:nm)(CastExpression(SimpleType(SimpleName:NotificationManager))(MethodInvocation(SimpleName:getSystemService)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Context.NOTIFICATION_SERVICE))))))(VariableDeclarationStatement(SimpleType(SimpleName:Notification))(VariableDeclarationFragment(SimpleName:status)(ClassInstanceCreation(SimpleType(SimpleName:Notification))(QualifiedName:R.drawable.stat_notify_chat)(MethodInvocation(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:R.string.sb_txt_text)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:status))(SimpleName:setLatestEventInfo)(METHOD_INVOCATION_ARGUMENTS(ThisExpression(SimpleName:XMPPRemoteService))(MethodInvocation(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:R.string.sb_txt_title)))(MethodInvocation(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:R.string.sb_txt_text)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PendingIntent))(SimpleName:getActivity)(METHOD_INVOCATION_ARGUMENTS(ThisExpression(SimpleName:XMPPRemoteService))(NumberLiteral:0)(ClassInstanceCreation(SimpleType(SimpleName:Intent))(QualifiedName:ConstMXA.INTENT_SERVICEMONITOR))(NumberLiteral:0))))))(ExpressionStatement(Assignment(QualifiedName:status.flags)(ASSIGNMENT_OPERATOR:|=)(QualifiedName:Notification.FLAG_ONGOING_EVENT)))(ExpressionStatement(Assignment(QualifiedName:status.icon)(ASSIGNMENT_OPERATOR:=)(QualifiedName:R.drawable.stat_notify_chat)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nm))(SimpleName:notify)(METHOD_INVOCATION_ARGUMENTS(SimpleName:XMPPSERVICE_STATUS)(SimpleName:status))))(ExpressionStatement(Assignment(SimpleName:mFileTransferService)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileTransferService))(ThisExpression(SimpleName:XMPPRemoteService)))))(ExpressionStatement(Assignment(SimpleName:mMultiUserChatService)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MultiUserChatService))(ThisExpression(SimpleName:XMPPRemoteService)))))(ExpressionStatement(Assignment(SimpleName:mPubSubService)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PubSubService))(ThisExpression(SimpleName:XMPPRemoteService)))))(ExpressionStatement(Assignment(SimpleName:mServiceDiscoveryService)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ServiceDiscoveryService))(ThisExpression(SimpleName:XMPPRemoteService)))))(ExpressionStatement(Assignment(SimpleName:mCollabEditingService)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CollabEditingService))(ThisExpression(SimpleName:XMPPRemoteService)))))(ExpressionStatement(Assignment(QualifiedName:msg2.arg1)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_STATUS_SUCCESS)))(ExpressionStatement(Assignment(SimpleName:mIQQueueTimer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Timer)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueueTimer))(SimpleName:schedule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:IQQueueCheckBackgroundRunner)))(NumberLiteral:0)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:XMPPException))(SimpleName:e))(Block(ExpressionStatement(Assignment(QualifiedName:msg2.arg1)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_STATUS_ERROR)))(VariableDeclarationStatement(SimpleType(SimpleName:Bundle))(VariableDeclarationFragment(SimpleName:b)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg2))(SimpleName:getData))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:errorMessage)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getCause))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getCause)))(SimpleName:getMessage))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:errorMessage)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getCause)))(SimpleName:getMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:putString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ConstMXA.EXTRA_ERROR_MESSAGE)(SimpleName:errorMessage))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg2))(SimpleName:setData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmppResults))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg2))))(BreakStatement)(SwitchCase(QualifiedName:ConstMXA.MSG_RECONNECT))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:mReconnect))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:v)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(StringLiteral:<STR>))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:mConn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:v)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:host2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NullLiteral)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:port2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:serviceName2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:useEncryption2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getBoolean)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:true)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:useCompressio2n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getBoolean)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:false)))))(VariableDeclarationStatement(SimpleType(SimpleName:ConnectionConfiguration))(VariableDeclarationFragment(SimpleName:config2)(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(SimpleName:host2)(SimpleName:port2)(SimpleName:serviceName2))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:useEncryption2))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config2))(SimpleName:setSecurityMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SecurityMode.disabled))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config2))(SimpleName:setSecurityMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SecurityMode.enabled)))))(ExpressionStatement(Assignment(SimpleName:mConn)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:XMPPConnection))(SimpleName:config2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:connect)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:username2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:password2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:resource2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mPreferences))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(SimpleName:username2)(SimpleName:password2)(SimpleName:resource2)))))(BreakStatement)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:e)(SimpleType(SimpleName:IllegalStateException)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:reconnect)(ClassInstanceCreation(SimpleType(SimpleName:Message)))))(ExpressionStatement(Assignment(QualifiedName:reconnect.what)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_CONNECT)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:xmppWriteWorker.mHandler))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reconnect))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:e)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:mConn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:isAuthenticated)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:v)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:getServiceName))))))(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:msgResend)(ClassInstanceCreation(SimpleType(SimpleName:Message)))))(ExpressionStatement(Assignment(QualifiedName:msgResend.what)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_IQ_RESEND)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:xmppWriteWorker.mHandler))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msgResend)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:v)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:getServiceName))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mNetworkMonitor))(SimpleName:isConnected))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:reconnect)(ClassInstanceCreation(SimpleType(SimpleName:Message)))))(ExpressionStatement(Assignment(QualifiedName:reconnect.what)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_CONNECT)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:xmppWriteWorker.mHandler))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reconnect))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:e)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(StringLiteral:<STR>))))))))(BreakStatement)(SwitchCase(QualifiedName:ConstMXA.MSG_DISCONNECT))(IfStatement(InfixExpression(InfixExpression(SimpleName:mConn)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:isConnected))))(Block(ExpressionStatement(Assignment(QualifiedName:msg2.arg1)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_STATUS_SUCCESS)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmppResults))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg2))))(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:mReconnect)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueueTimer))(SimpleName:cancel)))(VariableDeclarationStatement(SimpleType(SimpleName:NotificationManager))(VariableDeclarationFragment(SimpleName:nm)(CastExpression(SimpleType(SimpleName:NotificationManager))(MethodInvocation(SimpleName:getSystemService)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Context.NOTIFICATION_SERVICE))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nm))(SimpleName:cancel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:XMPPSERVICE_STATUS))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:disconnect)))(ExpressionStatement(Assignment(QualifiedName:msg2.arg1)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_STATUS_SUCCESS)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmppResults))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg2))))(BreakStatement)(SwitchCase(QualifiedName:ConstMXA.MSG_SEND_IQ))(VariableDeclarationStatement(SimpleType(SimpleName:Bundle))(VariableDeclarationFragment(SimpleName:data)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg))(SimpleName:getData))))(VariableDeclarationStatement(SimpleType(SimpleName:XMPPIQ))(VariableDeclarationFragment(SimpleName:payloadIQ)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:getParcelable)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:IQImpl))(VariableDeclarationFragment(SimpleName:iq)(ClassInstanceCreation(SimpleType(SimpleName:IQImpl))(QualifiedName:payloadIQ.payload))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:setTo)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:payloadIQ.to))))(SwitchStatement(QualifiedName:payloadIQ.type)(SwitchCase(QualifiedName:XMPPIQ.TYPE_GET))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:setType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Type.GET))))(BreakStatement)(SwitchCase(QualifiedName:XMPPIQ.TYPE_SET))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:setType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Type.SET))))(BreakStatement)(SwitchCase(QualifiedName:XMPPIQ.TYPE_RESULT))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:setType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Type.RESULT))))(BreakStatement)(SwitchCase(QualifiedName:XMPPIQ.TYPE_ERROR))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:setType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Type.ERROR))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:setType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Type.GET)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:setPacketID)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:payloadIQ.packetID))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:payloadIQ.namespace)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(QualifiedName:payloadIQ.token)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MXAIdentExtension))(VariableDeclarationFragment(SimpleName:mie)(ClassInstanceCreation(SimpleType(SimpleName:MXAIdentExtension))(QualifiedName:payloadIQ.namespace)(QualifiedName:payloadIQ.token))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iq))(SimpleName:addExtension)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mie))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:sendPacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:iq))))(BreakStatement)(SwitchCase(QualifiedName:ConstMXA.MSG_IQ_RESEND))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueue))(SimpleName:getCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:isAuthenticated))))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueueTimer))(SimpleName:cancel)))(ExpressionStatement(Assignment(SimpleName:mIQQueueTimer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Timer)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueueTimer))(SimpleName:schedule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:IQQueueCheckBackgroundRunner)))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueue))(SimpleName:getRetryInterval))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mIQQueue))(SimpleName:getRetryInterval))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000)))))(ExpressionStatement(MethodInvocation(SimpleName:resendIQ)))(BreakStatement)(SwitchCase(QualifiedName:ConstMXA.MSG_SEND_PRESENCE))(VariableDeclarationStatement(SimpleType(SimpleName:Bundle))(VariableDeclarationFragment(SimpleName:dataPresence)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg))(SimpleName:getData))))(VariableDeclarationStatement(SimpleType(SimpleName:XMPPPresence))(VariableDeclarationFragment(SimpleName:payloadPresence)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dataPresence))(SimpleName:getParcelable)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Presence))(VariableDeclarationFragment(SimpleName:presence)(ClassInstanceCreation(SimpleType(SimpleName:Presence))(QualifiedName:Presence.Type.available))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:payloadPresence.status))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setPriority)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:payloadPresence.priority))))(SwitchStatement(QualifiedName:payloadPresence.mode)(SwitchCase(QualifiedName:XMPPPresence.MODE_AVAILABLE))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Mode.available))))(BreakStatement)(SwitchCase(QualifiedName:XMPPPresence.MODE_AWAY))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Mode.away))))(BreakStatement)(SwitchCase(QualifiedName:XMPPPresence.MODE_CHAT))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Mode.chat))))(BreakStatement)(SwitchCase(QualifiedName:XMPPPresence.MODE_DND))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Mode.dnd))))(BreakStatement)(SwitchCase(QualifiedName:XMPPPresence.MODE_XA))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Mode.xa))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:presence))(SimpleName:setMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Mode.available)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mConn))(SimpleName:sendPacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:presence))))(ExpressionStatement(Assignment(QualifiedName:msg2.arg1)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_STATUS_DELIVERED))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalStateException))(SimpleName:e))(Block(ExpressionStatement(Assignment(QualifiedName:msg2.arg1)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ConstMXA.MSG_STATUS_ERROR))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmppResults))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg2))))(VariableDeclarationStatement(SimpleType(SimpleName:Intent))(VariableDeclarationFragment(SimpleName:i)(ClassInstanceCreation(SimpleType(SimpleName:Intent))(QualifiedName:ConstMXA.BROADCAST_PRESENCE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:putExtra)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:payloadPresence.status))))(ExpressionStatement(MethodInvocation(SimpleName:sendBroadcast)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(BreakStatement))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Looper))(SimpleName:loop)))))))