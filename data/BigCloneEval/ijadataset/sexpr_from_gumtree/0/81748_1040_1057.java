(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:numOverlaps)(SingleVariableDeclaration(SimpleType(SimpleName:ScheduleItem))(SimpleName:schItem))(SingleVariableDeclaration(SimpleType(SimpleName:StringBuffer))(SimpleName:buff))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DataStore))(VariableDeclarationFragment(SimpleName:store)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DataStore))(SimpleName:getInstance))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:ScheduleItem)))(VariableDeclarationFragment(SimpleName:overlapping)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:ScheduleItem))))))(VariableDeclarationStatement(SimpleType(SimpleName:SimpleDateFormat))(VariableDeclarationFragment(SimpleName:df)(ClassInstanceCreation(SimpleType(SimpleName:SimpleDateFormat))(StringLiteral:<STR>))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:ScheduleItem))(Dimension))(VariableDeclarationFragment(SimpleName:itemsArray)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:getScheduleArray))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:itemsArray.length))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ScheduleItem))(VariableDeclarationFragment(SimpleName:item)(ArrayAccess(SimpleName:itemsArray)(SimpleName:x))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:isOverlapping)(METHOD_INVOCATION_ARGUMENTS(SimpleName:schItem)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:overlapping))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:item))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buff))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:df))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getStart))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buff))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getDuration))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buff))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getChannel))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:overlapping))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:overlapCount)(MethodInvocation(SimpleName:getOverlapCount)(METHOD_INVOCATION_ARGUMENTS(SimpleName:schItem)(SimpleName:overlapping)))))(ReturnStatement(SimpleName:overlapCount))))))