(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:boolean)(SimpleName:moveFiles)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:sourceDir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:targetDir))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isFinished)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fileMoved)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:stagingDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:sourceDir))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stagingDir))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getTimeStamp))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement(BooleanLiteral:true))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stagingDir))(SimpleName:listFiles))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getTimeStamp))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:sourceDir)))))(ReturnStatement(BooleanLiteral:true))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:fileList)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stagingDir))(SimpleName:listFiles))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:fileList.length))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ArrayAccess(SimpleName:fileList)(SimpleName:x))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getName)))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ContinueStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:targetFileName)(InfixExpression(SimpleName:targetDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getName)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:operation)(StringLiteral:<STR>)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:success)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetFileName))))))(IfStatement(SimpleName:success)(Block(ExpressionStatement(Assignment(SimpleName:fileMoved)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(Assignment(SimpleName:operation)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:process)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getCanonicalPath))(SimpleName:targetFileName)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:waitFor)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:destroy)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetFileName)))(SimpleName:exists)))(Block(ExpressionStatement(Assignment(SimpleName:success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(Block(ExpressionStatement(Assignment(SimpleName:success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:fileMoved)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:success))(Block(ExpressionStatement(Assignment(SimpleName:operation)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:f)))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetFileName))))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:outFile)))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:size))(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:delete)))(ExpressionStatement(Assignment(SimpleName:success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(Block(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))(IfStatement(InfixExpression(SimpleName:out)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))))))))(IfStatement(SimpleName:success)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getTimeStamp))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:operation)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(SimpleName:targetDir)))))(ExpressionStatement(Assignment(SimpleName:fileMoved)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getTimeStamp))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:operation)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:targetFileName)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:isFinished)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(IfStatement(InfixExpression(SimpleName:fileMoved)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isFinished)))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:currentLastActivity)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(SimpleName:updateLastActivity)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentLastActivity)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getTimeStamp))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:isFinished)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getTimeStamp))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))))))(ExpressionStatement(Assignment(SimpleName:isFinished)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))(ReturnStatement(SimpleName:isFinished))))))