(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Element))(SimpleName:createElementNS)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:namespaceURI))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:qualifiedName))(SimpleType(SimpleName:DOMException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:namespaceURI))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:MathMLElementImpl.mathmlURI)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:localName)))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:elemClass)))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:cnst)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qualifiedName))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:localName)(ASSIGNMENT_OPERATOR:=)(SimpleName:qualifiedName))))(Block(ExpressionStatement(Assignment(SimpleName:localName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qualifiedName))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ExpressionStatement(Assignment(SimpleName:elemClass)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_elementTypesMathML))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:localName))))))(IfStatement(InfixExpression(SimpleName:elemClass)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:cnst)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:elemClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:_elemClassSigMathML)))))(ReturnStatement(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cnst))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(ThisExpression)(SimpleName:qualifiedName))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:except))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Throwable))(VariableDeclarationFragment(SimpleName:thrw)))(IfStatement(InstanceofExpression(SimpleName:except)(SimpleType(SimpleName:InvocationTargetException)))(Block(ExpressionStatement(Assignment(SimpleName:thrw)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:InvocationTargetException))(SimpleName:except))))(SimpleName:getTargetException)))))(Block(ExpressionStatement(Assignment(SimpleName:thrw)(ASSIGNMENT_OPERATOR:=)(SimpleName:except)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thrw))(SimpleName:getClass)))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thrw))(SimpleName:getMessage)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:qualifiedName)(StringLiteral:<STR>))))))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:MathMLElementImpl))(ThisExpression)(SimpleName:qualifiedName))))))(Block(ReturnStatement(SuperMethodInvocation(SimpleName:createElementNS)(SimpleName:namespaceURI)(SimpleName:qualifiedName)))))))))