(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:load)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:path))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Log.ERROR))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:loadtime))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Globals))(SimpleName:getStartupFilePath))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Log.ERROR))))))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:buffReader)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:path)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)(StringLiteral:<STR>))(QualifiedName:Log.ERROR)))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:encoding)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Toolkit))(SimpleName:getDeclaredXMLEncoding)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(ExpressionStatement(Assignment(SimpleName:buffReader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))(SimpleName:encoding))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)(StringLiteral:<STR>))(QualifiedName:Log.ERROR))))))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ASTERISK)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:files)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:files)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Toolkit))(SimpleName:glob)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)(SimpleName:workingDirectory))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))(QualifiedName:Log.ERROR)))))))(IfStatement(InfixExpression(SimpleName:files)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(NumberLiteral:0)))(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:files)(SimpleName:index)))))))(ReturnStatement)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:toRead)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toRead))(SimpleName:isAbsolute))(Block(ExpressionStatement(Assignment(SimpleName:workingDirectory)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toRead))(SimpleName:getParent))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loadedFiles))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:toRead)))(Block(IfStatement(SimpleName:loadtime)(Block(ReturnStatement))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loadedFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:toRead))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toRead))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toRead))(SimpleName:isDirectory))))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:encoding)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Toolkit))(SimpleName:getDeclaredXMLEncoding)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:path))))))(ExpressionStatement(Assignment(SimpleName:buffReader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:path))(SimpleName:encoding))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)(StringLiteral:<STR>))(QualifiedName:Log.ERROR))))(ReturnStatement))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Globals))(SimpleName:isWatcherActive))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AIMLWatcher))(SimpleName:addWatchFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toRead))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)(StringLiteral:<STR>))(QualifiedName:Log.ERROR))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toRead))(SimpleName:isDirectory))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:userinfo)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)(StringLiteral:<STR>))(QualifiedName:Log.ERROR))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:AIMLReader))(SimpleName:path)(SimpleName:buffReader)(ClassInstanceCreation(SimpleType(SimpleName:AIMLLoader))(SimpleName:path))))(SimpleName:read)))))))