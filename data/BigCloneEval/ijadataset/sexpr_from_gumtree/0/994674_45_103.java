(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(PrimitiveType:void)(SimpleName:executeTask)(SingleVariableDeclaration(SimpleType(SimpleName:ErrorHandler))(SimpleName:err))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetDirectory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:resolve)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getBaseDirectory))(MethodInvocation(SimpleName:getTargetDirectory))))))(VariableDeclarationStatement(SimpleType(SimpleName:PatternFileSelector))(VariableDeclarationFragment(SimpleName:existingFileSelector)(ClassInstanceCreation(SimpleType(SimpleName:PatternFileSelector))(SimpleName:targetDirectory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:singleton)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(NullLiteral)(NullLiteral))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:obsoleteFileSet)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:File)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:existingFileSelector))(SimpleName:getRelativeFileSet)(METHOD_INVOCATION_ARGUMENTS(SimpleName:err))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:timestamp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getArchive)))(SimpleName:lastModified))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:File))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:fileMap)(MethodInvocation(SimpleName:getFileMap))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zipFile)(NullLiteral)))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:isEnabled)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Severity.DEBUG)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(SimpleName:getArchive)))))))(ExpressionStatement(Assignment(SimpleName:zipFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(MethodInvocation(SimpleName:getArchive)))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Enumeration))(WildcardType(SimpleType(SimpleName:ZipEntry))))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:entries))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:zipEntry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:nextElement))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:entryFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipEntry))(SimpleName:getName)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipEntry))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileMap))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entryFile))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:target)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entryFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:normalizedTarget)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:child)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetDirectory)(SimpleName:target)))))(IfStatement(InfixExpression(SimpleName:normalizedTarget)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:DefaultProblem))(NullLiteral)(QualifiedName:Severity.WARNING)(NullLiteral)(StringLiteral:<STR>)(SimpleName:target)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipEntry))(SimpleName:getName)))))))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetDirectory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:normalizedTarget))(SimpleName:getPath)))))(ExpressionStatement(MethodInvocation(SimpleName:extractFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:err)(SimpleName:zipFile)(SimpleName:zipEntry)(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:obsoleteFileSet))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:normalizedTarget)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ZipException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))(Block(IfStatement(InfixExpression(SimpleName:zipFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:obsoleteFileList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:File)))(SimpleName:obsoleteFileSet))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:obsoleteFileList)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Objects))(SimpleName:reverseComparator)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleName:obsoleteFileList)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetDirectory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getPath)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:listFiles))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:setLastModified)(METHOD_INVOCATION_ARGUMENTS(SimpleName:timestamp)))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:isEnabled)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Severity.DEBUG)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:file))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:delete)))))))))))