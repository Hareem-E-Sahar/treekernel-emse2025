(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:solve_l1r_l2_svc)(SingleVariableDeclaration(SimpleType(SimpleName:Problem))(SimpleName:prob_col))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:w))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:eps))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:Cp))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:Cn))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(QualifiedName:prob_col.l)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:w_size)(QualifiedName:prob_col.n)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j))(VariableDeclarationFragment(SimpleName:s))(VariableDeclarationFragment(SimpleName:iter)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max_iter)(NumberLiteral:1000)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:active_size)(SimpleName:w_size)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max_num_linesearch)(NumberLiteral:20)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:sigma)(NumberLiteral:0.01)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d))(VariableDeclarationFragment(SimpleName:G_loss))(VariableDeclarationFragment(SimpleName:G))(VariableDeclarationFragment(SimpleName:H)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:Gmax_old)(QualifiedName:Double.POSITIVE_INFINITY)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:Gmax_new)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:Gmax_init)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d_old))(VariableDeclarationFragment(SimpleName:d_diff)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:loss_old)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:loss_new)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:appxcond))(VariableDeclarationFragment(SimpleName:cond)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:index)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(SimpleName:w_size))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:y)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:l))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:b)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:l))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:xj_sq)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:w_size))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:C)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension))(ArrayInitializer(SimpleName:Cn)(NumberLiteral:0)(SimpleName:Cp)))))(ForStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:b)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(IfStatement(InfixExpression(ArrayAccess(QualifiedName:prob_col.y)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ForStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:w_size))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:w)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:index)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(SimpleName:j)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:xj_sq)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:xi))(ArrayAccess(QualifiedName:prob_col.x)(SimpleName:j))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ind)(InfixExpression(QualifiedName:xi.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:val)(QualifiedName:xi.value)))(ExpressionStatement(Assignment(QualifiedName:xi.value)(ASSIGNMENT_OPERATOR:*=)(ArrayAccess(SimpleName:y)(SimpleName:ind))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:xj_sq)(SimpleName:j))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:C)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:ind))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:val)(SimpleName:val))))))))(WhileStatement(InfixExpression(SimpleName:iter)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:max_iter))(Block(ExpressionStatement(Assignment(SimpleName:Gmax_new)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ForStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:active_size))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:active_size)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:j)))))))(ExpressionStatement(MethodInvocation(SimpleName:swap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index)(SimpleName:i)(SimpleName:j))))))(ForStatement(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:active_size))(PostfixExpression(SimpleName:s)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:index)(SimpleName:s))))(ExpressionStatement(Assignment(SimpleName:G_loss)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:H)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:xi))(ArrayAccess(QualifiedName:prob_col.x)(SimpleName:j))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ind)(InfixExpression(QualifiedName:xi.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:b)(SimpleName:ind))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:val)(QualifiedName:xi.value)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:tmp)(InfixExpression(ArrayAccess(SimpleName:C)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:ind))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:val))))(ExpressionStatement(Assignment(SimpleName:G_loss)(ASSIGNMENT_OPERATOR:-=)(InfixExpression(SimpleName:tmp)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:b)(SimpleName:ind)))))(ExpressionStatement(Assignment(SimpleName:H)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:tmp)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:val))))))))(ExpressionStatement(Assignment(SimpleName:G_loss)(ASSIGNMENT_OPERATOR:*=)(NumberLiteral:2)))(ExpressionStatement(Assignment(SimpleName:G)(ASSIGNMENT_OPERATOR:=)(SimpleName:G_loss)))(ExpressionStatement(Assignment(SimpleName:H)(ASSIGNMENT_OPERATOR:*=)(NumberLiteral:2)))(ExpressionStatement(Assignment(SimpleName:H)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(SimpleName:H)(NumberLiteral:1e-12)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:Gp)(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:Gn)(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:violation)(NumberLiteral:0)))(IfStatement(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:Gp)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:violation)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:Gp))))(IfStatement(InfixExpression(SimpleName:Gn)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:violation)(ASSIGNMENT_OPERATOR:=)(SimpleName:Gn)))(IfStatement(InfixExpression(InfixExpression(SimpleName:Gp)(INFIX_EXPRESSION_OPERATOR:>)(InfixExpression(SimpleName:Gmax_old)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:l)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:Gn)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:Gmax_old))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:l))))(Block(ExpressionStatement(PostfixExpression(SimpleName:active_size)(POSTFIX_EXPRESSION_OPERATOR:--)))(ExpressionStatement(MethodInvocation(SimpleName:swap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index)(SimpleName:s)(SimpleName:active_size))))(ExpressionStatement(PostfixExpression(SimpleName:s)(POSTFIX_EXPRESSION_OPERATOR:--)))(ContinueStatement))))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:violation)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Gp)))))(ExpressionStatement(Assignment(SimpleName:violation)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Gn)))))))(ExpressionStatement(Assignment(SimpleName:Gmax_new)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Gmax_new)(SimpleName:violation)))))(IfStatement(InfixExpression(SimpleName:Gp)(INFIX_EXPRESSION_OPERATOR:<=)(InfixExpression(SimpleName:H)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:w)(SimpleName:j))))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:Gp))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:H))))(IfStatement(InfixExpression(SimpleName:Gn)(INFIX_EXPRESSION_OPERATOR:>=)(InfixExpression(SimpleName:H)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:w)(SimpleName:j))))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:Gn))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:H))))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:w)(SimpleName:j)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1.0e-12))(ContinueStatement))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:delta)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:d))))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:w)(SimpleName:j)))))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:d)))))(ExpressionStatement(Assignment(SimpleName:d_old)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:num_linesearch)))(ForStatement(Assignment(SimpleName:num_linesearch)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:num_linesearch)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:max_num_linesearch))(PostfixExpression(SimpleName:num_linesearch)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:d_diff)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:d_old)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:d))))(ExpressionStatement(Assignment(SimpleName:cond)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:d))))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:w)(SimpleName:j))))(InfixExpression(SimpleName:sigma)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:delta)))))(ExpressionStatement(Assignment(SimpleName:appxcond)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(InfixExpression(ArrayAccess(SimpleName:xj_sq)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:d)(SimpleName:d))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:G_loss)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:d)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cond))))(IfStatement(InfixExpression(SimpleName:appxcond)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:x))(ArrayAccess(QualifiedName:prob_col.x)(SimpleName:j))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:b)(InfixExpression(QualifiedName:x.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:d_diff)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:x.value))))))(BreakStatement)))(IfStatement(InfixExpression(SimpleName:num_linesearch)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:loss_old)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:loss_new)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:x))(ArrayAccess(QualifiedName:prob_col.x)(SimpleName:j))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ind)(InfixExpression(QualifiedName:x.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:b)(SimpleName:ind))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:loss_old)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:C)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:ind))))(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:b)(SimpleName:ind))(ArrayAccess(SimpleName:b)(SimpleName:ind)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:b_new)(InfixExpression(ArrayAccess(SimpleName:b)(SimpleName:ind))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:d_diff)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:x.value)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:b)(SimpleName:ind))(ASSIGNMENT_OPERATOR:=)(SimpleName:b_new)))(IfStatement(InfixExpression(SimpleName:b_new)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:loss_new)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:C)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:ind))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:b_new)(SimpleName:b_new)))))))))(Block(ExpressionStatement(Assignment(SimpleName:loss_new)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:x))(ArrayAccess(QualifiedName:prob_col.x)(SimpleName:j))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ind)(InfixExpression(QualifiedName:x.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:b_new)(InfixExpression(ArrayAccess(SimpleName:b)(SimpleName:ind))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:d_diff)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:x.value)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:b)(SimpleName:ind))(ASSIGNMENT_OPERATOR:=)(SimpleName:b_new)))(IfStatement(InfixExpression(SimpleName:b_new)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:loss_new)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:C)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:ind))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:b_new)(SimpleName:b_new))))))))))(ExpressionStatement(Assignment(SimpleName:cond)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:cond)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:loss_new))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:loss_old))))(IfStatement(InfixExpression(SimpleName:cond)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(BreakStatement)(Block(ExpressionStatement(Assignment(SimpleName:d_old)(ASSIGNMENT_OPERATOR:=)(SimpleName:d)))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:*=)(NumberLiteral:0.5)))(ExpressionStatement(Assignment(SimpleName:delta)(ASSIGNMENT_OPERATOR:*=)(NumberLiteral:0.5)))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:w)(SimpleName:j))(ASSIGNMENT_OPERATOR:+=)(SimpleName:d)))(IfStatement(InfixExpression(SimpleName:num_linesearch)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:max_num_linesearch))(Block(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:b)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:w_size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ContinueStatement))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:x))(ArrayAccess(QualifiedName:prob_col.x)(SimpleName:i))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:b)(InfixExpression(QualifiedName:x.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:-=)(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:x.value))))))))))))(IfStatement(InfixExpression(SimpleName:iter)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:Gmax_init)(ASSIGNMENT_OPERATOR:=)(SimpleName:Gmax_new))))(ExpressionStatement(PostfixExpression(SimpleName:iter)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(InfixExpression(SimpleName:iter)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:10))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:Gmax_new)(INFIX_EXPRESSION_OPERATOR:<=)(InfixExpression(SimpleName:eps)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:Gmax_init)))(Block(IfStatement(InfixExpression(SimpleName:active_size)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:w_size))(BreakStatement)(Block(ExpressionStatement(Assignment(SimpleName:active_size)(ASSIGNMENT_OPERATOR:=)(SimpleName:w_size)))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:Gmax_old)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.POSITIVE_INFINITY)))(ContinueStatement)))))(ExpressionStatement(Assignment(SimpleName:Gmax_old)(ASSIGNMENT_OPERATOR:=)(SimpleName:Gmax_new)))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:iter))))(IfStatement(InfixExpression(SimpleName:iter)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:max_iter))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:v)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nnz)(NumberLiteral:0)))(ForStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:w_size))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:x))(ArrayAccess(QualifiedName:prob_col.x)(SimpleName:j))(Block(ExpressionStatement(Assignment(QualifiedName:x.value)(ASSIGNMENT_OPERATOR:*=)(ArrayAccess(QualifiedName:prob_col.y)(InfixExpression(QualifiedName:x.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:v)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:w)(SimpleName:j))))))(ExpressionStatement(PostfixExpression(SimpleName:nnz)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(ForStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(IfStatement(InfixExpression(ArrayAccess(SimpleName:b)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:v)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:C)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:j))))(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:b)(SimpleName:j))(ArrayAccess(SimpleName:b)(SimpleName:j)))))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:v))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:nnz)(SimpleName:w_size))))))))