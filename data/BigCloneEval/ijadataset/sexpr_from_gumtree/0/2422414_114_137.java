(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:execute)(SimpleType(SimpleName:BuildException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Project))(VariableDeclarationFragment(SimpleName:proj)(MethodInvocation(SimpleName:getProject))))(IfStatement(InfixExpression(SimpleName:templateFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:targetFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(StringLiteral:<STR>))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:template)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:templateFile))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:target)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetFile))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:template))(SimpleName:exists)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:template))(SimpleName:toString))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:template))(SimpleName:canRead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:template))(SimpleName:toString))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:append)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:overwrite)))))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:exists)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:toString))))))(IfStatement(SimpleName:VERBOSE)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:template))(SimpleName:toString))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:toString))))))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:template)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:targetFile)(SimpleName:append)))))(ExpressionStatement(MethodInvocation(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reader)(SimpleName:writer))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(IfStatement(SimpleName:VERBOSE)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(SimpleName:e))))))))))