(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:LexiconEntry))(SimpleName:binarySearchForWordAndPartOfSpeechAndUpdate)(SingleVariableDeclaration(SimpleType(SimpleName:TaggedWord))(SimpleName:tw))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lowestPossibleLoc)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:highestPossibleLoc)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexicon))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:middle)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lowestPossibleLoc)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:highestPossibleLoc)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(WhileStatement(InfixExpression(SimpleName:highestPossibleLoc)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:lowestPossibleLoc))(Block(ExpressionStatement(Assignment(SimpleName:middle)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lowestPossibleLoc)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:highestPossibleLoc)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:LexiconEntry))(VariableDeclarationFragment(SimpleName:lxe)(CastExpression(SimpleType(SimpleName:LexiconEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexicon))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:middle))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:comparator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tw))(SimpleName:word))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tw))(SimpleName:tag)))))(SimpleName:compareToIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lxe))(SimpleName:getWord))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lxe))(SimpleName:getPartOfSpeech)))))))(IfStatement(InfixExpression(SimpleName:comparator)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement(SimpleName:lxe)))(IfStatement(InfixExpression(SimpleName:comparator)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:highestPossibleLoc)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:lowestPossibleLoc)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:LexiconEntry))(VariableDeclarationFragment(SimpleName:le)(ClassInstanceCreation(SimpleType(SimpleName:LexiconEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tw))(SimpleName:word))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tw))(SimpleName:tag)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexicon))(SimpleName:insertElementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:le)(SimpleName:lowestPossibleLoc))))(ReturnStatement(SimpleName:le))))))