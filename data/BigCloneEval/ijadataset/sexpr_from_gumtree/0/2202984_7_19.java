(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:deleteTree)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:start))(Block(AssertStatement(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:exists)))(ReturnStatement(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:isFile))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:delete))))(AssertStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:isDirectory)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:children)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:listFiles))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:succ)(BooleanLiteral:true)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:child))(SimpleName:children)(Block(ExpressionStatement(Assignment(SimpleName:succ)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(SimpleName:deleteTree)(METHOD_INVOCATION_ARGUMENTS(SimpleName:child)))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:succ))))))(ExpressionStatement(Assignment(SimpleName:succ)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:delete))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:succ))))(ReturnStatement(SimpleName:succ))))))