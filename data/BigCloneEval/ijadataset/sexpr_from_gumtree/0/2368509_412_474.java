(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:send_renew_repair)(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:renew))(SingleVariableDeclaration(SimpleType(SimpleName:cr_soundness_proof))(SimpleName:prev_proof))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:method_tag)(InfixExpression(SimpleName:tag)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(SimpleName:renew)(StringLiteral:<STR>)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:method_tag)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(SimpleName:renew)(StringLiteral:<STR>)(StringLiteral:<STR>)))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:cr_signed_certificate))(VariableDeclarationFragment(SimpleName:cert)(NullLiteral)))(IfStatement(SimpleName:renew)(Block(ExpressionStatement(Assignment(SimpleName:cert)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XdrUtils))(SimpleName:clone)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:prev_proof.cert)))))(ExpressionStatement(PostfixExpression(QualifiedName:cert.cert.seq_num)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(QualifiedName:cert.cert.timestamp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:now_ms))))(ExpressionStatement(Assignment(QualifiedName:cert.cert.expire_time)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:cert.cert.timestamp)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:MAX_TTL)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000L)))))(TryStatement(Block(ExpressionStatement(Assignment(QualifiedName:cert.signature)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createSignature)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:cert.cert)(SimpleName:_skey)(SimpleName:_sig_engine))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:BUG)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:method_tag)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:e))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:cr_ss_set_config))(VariableDeclarationFragment(SimpleName:proposed_config)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XdrUtils))(SimpleName:clone)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:prev_proof.config.config)))))(VariableDeclarationStatement(SimpleType(SimpleName:cr_signed_ss_set_config))(VariableDeclarationFragment(SimpleName:latest_config)(QualifiedName:prev_proof.config)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:cr_soundness_proof))(Dimension))(VariableDeclarationFragment(SimpleName:proofs)(ArrayCreation(ArrayType(SimpleType(SimpleName:cr_soundness_proof))(Dimension))(ArrayInitializer(SimpleName:prev_proof)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_md))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:serialize)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:prev_proof.cert.cert))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_md))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:serialize)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:prev_proof.config.config))))))(VariableDeclarationStatement(SimpleType(SimpleName:cr_guid))(VariableDeclarationFragment(SimpleName:sig_proof_hash)(ClassInstanceCreation(SimpleType(SimpleName:cr_guid))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_md))(SimpleName:digest)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:cr_signed_signature))(Dimension))(VariableDeclarationFragment(SimpleName:sigs)(ArrayCreation(ArrayType(SimpleType(SimpleName:cr_signed_signature))(Dimension(QualifiedName:prev_proof.config.config.ss_set_size))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:cr_guid))(Dimension))(VariableDeclarationFragment(SimpleName:sig_proof_hashes)(ArrayCreation(ArrayType(SimpleType(SimpleName:cr_guid))(Dimension(QualifiedName:sigs.length))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:prev_proof.sigs.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BigInteger))(VariableDeclarationFragment(SimpleName:gway_guid)(MethodInvocation(SimpleName:guidToBigInteger)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ArrayAccess(QualifiedName:prev_proof.config.config.ss_set)(SimpleName:i))(SimpleName:guid))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ValueTriple))(SimpleType(SimpleName:cr_public_key))(SimpleType(SimpleName:PrivateKey))(SimpleType(SimpleName:Signature)))(VariableDeclarationFragment(SimpleName:gway_keys)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_gwayKeys))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:gway_guid)))))(AssertStatement(InfixExpression(SimpleName:gway_keys)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GuidTools))(SimpleName:guid_to_string)(METHOD_INVOCATION_ARGUMENTS(SimpleName:gway_guid)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:sigs)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createRepairSignature)(METHOD_INVOCATION_ARGUMENTS(SimpleName:prev_proof)(QualifiedName:prev_proof.config)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gway_keys))(SimpleName:getFirst))(TypeLiteral(SimpleType(SimpleName:cr_signed_signature)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gway_keys))(SimpleName:getSecond))(SimpleName:_md)(SimpleName:_key_factory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gway_keys))(SimpleName:getThird))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:sig_proof_hashes)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(SimpleName:sig_proof_hash)))))(VariableDeclarationStatement(SimpleType(SimpleName:XdrAble))(VariableDeclarationFragment(SimpleName:args)(NullLiteral)))(IfStatement(SimpleName:renew)(Block(VariableDeclarationStatement(SimpleType(SimpleName:cr_renew_args))(VariableDeclarationFragment(SimpleName:renew_args)(ClassInstanceCreation(SimpleType(SimpleName:cr_renew_args)))))(ExpressionStatement(Assignment(QualifiedName:renew_args.cert)(ASSIGNMENT_OPERATOR:=)(SimpleName:cert)))(ExpressionStatement(Assignment(QualifiedName:renew_args.proposed_config)(ASSIGNMENT_OPERATOR:=)(SimpleName:proposed_config)))(ExpressionStatement(Assignment(QualifiedName:renew_args.latest_config)(ASSIGNMENT_OPERATOR:=)(SimpleName:latest_config)))(ExpressionStatement(Assignment(QualifiedName:renew_args.proof)(ASSIGNMENT_OPERATOR:=)(SimpleName:proofs)))(ExpressionStatement(Assignment(QualifiedName:renew_args.sig)(ASSIGNMENT_OPERATOR:=)(SimpleName:sigs)))(ExpressionStatement(Assignment(QualifiedName:renew_args.sig_proof_hash)(ASSIGNMENT_OPERATOR:=)(SimpleName:sig_proof_hashes)))(ExpressionStatement(Assignment(SimpleName:args)(ASSIGNMENT_OPERATOR:=)(SimpleName:renew_args))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:cr_repair_args))(VariableDeclarationFragment(SimpleName:repair_args)(ClassInstanceCreation(SimpleType(SimpleName:cr_repair_args)))))(ExpressionStatement(Assignment(QualifiedName:repair_args.proposed_config)(ASSIGNMENT_OPERATOR:=)(SimpleName:proposed_config)))(ExpressionStatement(Assignment(QualifiedName:repair_args.latest_config)(ASSIGNMENT_OPERATOR:=)(SimpleName:latest_config)))(ExpressionStatement(Assignment(QualifiedName:repair_args.proof)(ASSIGNMENT_OPERATOR:=)(SimpleName:proofs)))(ExpressionStatement(Assignment(QualifiedName:repair_args.sig)(ASSIGNMENT_OPERATOR:=)(SimpleName:sigs)))(ExpressionStatement(Assignment(QualifiedName:repair_args.sig_proof_hash)(ASSIGNMENT_OPERATOR:=)(SimpleName:sig_proof_hashes)))(ExpressionStatement(Assignment(SimpleName:args)(ASSIGNMENT_OPERATOR:=)(SimpleName:repair_args)))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:renew2)(SimpleName:renew)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Long))(VariableDeclarationFragment(SimpleName:start_time_us2)(MethodInvocation(SimpleName:now_us))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Long))(VariableDeclarationFragment(SimpleName:seq2)(ClassInstanceCreation(SimpleType(SimpleName:Long))(PostfixExpression(SimpleName:_next_seq)(POSTFIX_EXPRESSION_OPERATOR:++)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:RpcCall))(VariableDeclarationFragment(SimpleName:req)(ClassInstanceCreation(SimpleType(SimpleName:RpcCall))(SimpleName:gway)(MethodInvocation(SimpleName:getProcedureKey)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(SimpleName:renew)(QualifiedName:Procedure.CR_RENEW)(QualifiedName:Procedure.CR_REPAIR))))(SimpleName:args)(SimpleName:appId)(NullLiteral)(SimpleName:my_sink))))(ExpressionStatement(Assignment(QualifiedName:req.userData)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Thunk1))(SimpleType(SimpleName:RpcReply)))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SingleVariableDeclaration(SimpleType(SimpleName:RpcReply))(SimpleName:resp))(Block(ExpressionStatement(MethodInvocation(SimpleName:renew_repair_done)(METHOD_INVOCATION_ARGUMENTS(SimpleName:renew2)(SimpleName:req)(SimpleName:start_time_us2)(SimpleName:seq2)(SimpleName:resp))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_pending_events))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:seq2)(SimpleName:req))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_acore))(SimpleName:register_timer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TIMEOUT_MS)(MethodInvocation(SimpleName:curry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:timeout_cb)(SimpleName:seq2))))))(ExpressionStatement(MethodInvocation(SimpleName:dispatch)(METHOD_INVOCATION_ARGUMENTS(SimpleName:req))))))))