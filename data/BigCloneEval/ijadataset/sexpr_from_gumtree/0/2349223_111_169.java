(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:archiveLogs)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:LogTag))(Dimension))(SimpleName:tags))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:logBaseDir)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GlobalProps))(SimpleName:getHomeDir))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:LOG_DIR))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:min)(QualifiedName:Long.MAX_VALUE)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:max)(QualifiedName:Long.MIN_VALUE)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tags.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:time)(FieldAccess(ArrayAccess(SimpleName:tags)(SimpleName:i))(SimpleName:logTime))))(IfStatement(InfixExpression(SimpleName:time)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:min))(Block(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(SimpleName:time)))))(IfStatement(InfixExpression(SimpleName:time)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:max))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(SimpleName:time)))))))(VariableDeclarationStatement(SimpleType(SimpleName:GregorianCalendar))(VariableDeclarationFragment(SimpleName:cal)(ClassInstanceCreation(SimpleType(SimpleName:GregorianCalendar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:setTimeInMillis)(METHOD_INVOCATION_ARGUMENTS(SimpleName:min))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:minMonth)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MONTH)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:minYear)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.YEAR)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:setTimeInMillis)(METHOD_INVOCATION_ARGUMENTS(SimpleName:max))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxMonth)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MONTH)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxYear)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.YEAR)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:nameStr)(NullLiteral)))(IfStatement(InfixExpression(InfixExpression(SimpleName:minYear)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:maxYear))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:minMonth)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:maxMonth)))(Block(ExpressionStatement(Assignment(SimpleName:nameStr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TimeUtil))(SimpleName:monthNameStr)(METHOD_INVOCATION_ARGUMENTS(SimpleName:min))))))(Block(ExpressionStatement(Assignment(SimpleName:nameStr)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TimeUtil))(SimpleName:monthNameStr)(METHOD_INVOCATION_ARGUMENTS(SimpleName:min)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TimeUtil))(SimpleName:monthNameStr)(METHOD_INVOCATION_ARGUMENTS(SimpleName:max))))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:archiveDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:logBaseDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archiveDir))(SimpleName:isDirectory)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archiveDir))(SimpleName:mkdirs)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:archPath)(MethodInvocation(SimpleName:getUniqueLogName)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:logBaseDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>))(SimpleName:nameStr)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:archiveFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:archPath))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:2048))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zout)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:archiveFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:setLevel)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Deflater.DEFAULT_COMPRESSION))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tags.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:logPath)(InfixExpression(SimpleName:logBaseDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(FieldAccess(ArrayAccess(SimpleName:tags)(SimpleName:i))(SimpleName:logType))(QualifiedName:File.separator)(FieldAccess(ArrayAccess(SimpleName:tags)(SimpleName:i))(SimpleName:logName)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:logPath)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ArrayAccess(SimpleName:tags)(SimpleName:i))(SimpleName:logType)))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:+)(FieldAccess(ArrayAccess(SimpleName:tags)(SimpleName:i))(SimpleName:logName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:setComment)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ArrayAccess(SimpleName:tags)(SimpleName:i))(SimpleName:logType)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:len))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:close)))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(IfStatement(QualifiedName:GlobalProps.DEBUG)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:printStackTrace)))))(ReturnStatement(BooleanLiteral:false)))))))))