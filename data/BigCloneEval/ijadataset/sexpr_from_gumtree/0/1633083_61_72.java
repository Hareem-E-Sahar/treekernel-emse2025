(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:HttpResponse))(SimpleName:execute)(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:method))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:HttpMethod.GET))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:toString))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(FieldAccess(ThisExpression)(SimpleName:cutoff)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finer)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:length))(StringLiteral:<STR>)(SimpleName:url))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rebase)(InfixExpression(FieldAccess(ThisExpression)(SimpleName:baseURL))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:HttpMethod.POST)(SimpleName:rebase))))))))(ReturnStatement(SuperMethodInvocation(SimpleName:execute)))))))