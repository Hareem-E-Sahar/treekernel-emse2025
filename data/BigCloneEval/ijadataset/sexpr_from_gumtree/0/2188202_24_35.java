(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(PrimitiveType:boolean)(SimpleName:tryLock)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:mutex))(Block(IfStatement(InstanceofExpression(SimpleName:mutex)(SimpleType(SimpleName:ReentrantReadWriteLock)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ReentrantReadWriteLock))(VariableDeclarationFragment(SimpleName:lock)(CastExpression(SimpleType(SimpleName:ReentrantReadWriteLock))(SimpleName:mutex))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:getReadHoldCount))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:getWriteHoldCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>))))(TryStatement(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:writeLock)))(SimpleName:tryLock)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:30)(QualifiedName:TimeUnit.SECONDS)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ReturnStatement(BooleanLiteral:false))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>))))))))