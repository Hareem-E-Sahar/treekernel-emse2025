(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:workForRandomPeriod)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:minDuration))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:maxDuration))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Random))(VariableDeclarationFragment(SimpleName:random)(ClassInstanceCreation(SimpleType(SimpleName:Random)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:period)(InfixExpression(SimpleName:minDuration)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:maxDuration)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:minDuration)))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Process))(SimpleName:getElapsedCpuTime))))(WhileStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Process))(SimpleName:getElapsedCpuTime))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:period))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:temp)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:50))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:temp)(ASSIGNMENT_OPERATOR:+=)(SimpleName:i)))))))))))