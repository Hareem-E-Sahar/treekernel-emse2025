(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:TRNonBlockingServer)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:_name))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:_port))(SingleVariableDeclaration(SimpleType(SimpleName:InetAddress))(SimpleName:_bind_ip))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:_apply_ip_filter))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:_start_up_ready))(SingleVariableDeclaration(SimpleType(SimpleName:TRNonBlockingServerProcessorFactory))(SimpleName:_processor_factory))(SimpleType(SimpleName:TRTrackerServerException))(Block(SuperConstructorInvocation(SimpleName:_name)(SimpleName:_port)(BooleanLiteral:false)(SimpleName:_apply_ip_filter)(SimpleName:_start_up_ready))(ExpressionStatement(Assignment(SimpleName:processor_factory)(ASSIGNMENT_OPERATOR:=)(SimpleName:_processor_factory)))(ExpressionStatement(Assignment(SimpleName:read_selector)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:VirtualChannelSelector))(InfixExpression(SimpleName:_name)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:_port))(QualifiedName:VirtualChannelSelector.OP_READ)(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:write_selector)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:VirtualChannelSelector))(InfixExpression(SimpleName:_name)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:_port))(QualifiedName:VirtualChannelSelector.OP_WRITE)(BooleanLiteral:true))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ok)(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:_port)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ThrowStatement(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:TRTrackerServerException))(StringLiteral:<STR>))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InetSocketAddress))(VariableDeclarationFragment(SimpleName:address)))(IfStatement(InfixExpression(SimpleName:_bind_ip)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:_bind_ip)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NetworkAdmin))(SimpleName:getSingleton)))(SimpleName:getSingleHomedServiceBindAddress))))(IfStatement(InfixExpression(SimpleName:_bind_ip)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:address)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:_port)))))(Block(ExpressionStatement(Assignment(SimpleName:current_bind_ip)(ASSIGNMENT_OPERATOR:=)(SimpleName:_bind_ip)))(ExpressionStatement(Assignment(SimpleName:address)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:_bind_ip)(SimpleName:_port)))))))(Block(ExpressionStatement(Assignment(SimpleName:current_bind_ip)(ASSIGNMENT_OPERATOR:=)(SimpleName:_bind_ip)))(ExpressionStatement(Assignment(SimpleName:address)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:_bind_ip)(SimpleName:_port))))))(ExpressionStatement(Assignment(SimpleName:accept_server)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VirtualServerChannelSelectorFactory))(SimpleName:createBlocking)(METHOD_INVOCATION_ARGUMENTS(SimpleName:address)(NumberLiteral:0)(ThisExpression)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:accept_server))(SimpleName:start)))(VariableDeclarationStatement(SimpleType(SimpleName:AEThread))(VariableDeclarationFragment(SimpleName:read_thread)(ClassInstanceCreation(SimpleType(SimpleName:AEThread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:runSupport)(Block(ExpressionStatement(MethodInvocation(SimpleName:selectLoop)(METHOD_INVOCATION_ARGUMENTS(SimpleName:read_selector))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:read_thread))(SimpleName:setDaemon)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:read_thread))(SimpleName:start)))(VariableDeclarationStatement(SimpleType(SimpleName:AEThread))(VariableDeclarationFragment(SimpleName:write_thread)(ClassInstanceCreation(SimpleType(SimpleName:AEThread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:runSupport)(Block(ExpressionStatement(MethodInvocation(SimpleName:selectLoop)(METHOD_INVOCATION_ARGUMENTS(SimpleName:write_selector))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:write_thread))(SimpleName:setDaemon)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:write_thread))(SimpleName:start)))(VariableDeclarationStatement(SimpleType(SimpleName:AEThread))(VariableDeclarationFragment(SimpleName:close_thread)(ClassInstanceCreation(SimpleType(SimpleName:AEThread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:runSupport)(Block(ExpressionStatement(MethodInvocation(SimpleName:closeLoop)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:close_thread))(SimpleName:setDaemon)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:close_thread))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:LogEvent))(SimpleName:LOGID)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getPort)))))))(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:logTextResource)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:LogAlert))(QualifiedName:LogAlert.UNREPEATABLE)(QualifiedName:LogAlert.AT_ERROR)(StringLiteral:<STR>))(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getPort))))))))(ThrowStatement(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:TRTrackerServerException))(StringLiteral:<STR>)(SimpleName:e))))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:ok))(Block(ExpressionStatement(MethodInvocation(SimpleName:destroySupport)))))))))))