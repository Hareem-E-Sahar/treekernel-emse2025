(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:startResponse)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getChannelId))))))(VariableDeclarationStatement(SimpleType(SimpleName:HeaderParser))(VariableDeclarationFragment(SimpleName:requestHeader)(MethodInvocation(SimpleName:getRequestHeader))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:requestHeader))(SimpleName:isWs)))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:startResponse)))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:isWs)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:MappingResult))(VariableDeclarationFragment(SimpleName:mapping)(MethodInvocation(SimpleName:getRequestMapping))))(VariableDeclarationStatement(SimpleType(SimpleName:RequestContext))(VariableDeclarationFragment(SimpleName:requestContext)(MethodInvocation(SimpleName:getRequestContext))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:requestContext))(SimpleName:registerLogoutEvnet)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))(ExpressionStatement(Assignment(SimpleName:wsProtocol)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:WsProtocol))(SimpleName:createWsProtocol)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requestHeader)(MethodInvocation(SimpleName:getRequestMapping))))))(IfStatement(InfixExpression(SimpleName:wsProtocol)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:completeResponse)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wsProtocol))(SimpleName:getClass)))(SimpleName:getName))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:selectSubprotocol)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:reqSubprotocols)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wsProtocol))(SimpleName:getRequestSubProtocols)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requestHeader)))))(IfStatement(InfixExpression(SimpleName:reqSubprotocols)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wsProtocol))(SimpleName:isUseSubprotocol))(Block(ExpressionStatement(MethodInvocation(SimpleName:completeResponse)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement))))(Block(ExpressionStatement(Assignment(SimpleName:selectSubprotocol)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wsProtocol))(SimpleName:checkSubprotocol)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reqSubprotocols)))))(IfStatement(InfixExpression(SimpleName:selectSubprotocol)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:reqSubprotocols)))))(ExpressionStatement(MethodInvocation(SimpleName:completeResponse)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))))(ExpressionStatement(MethodInvocation(SimpleName:startWebSocketResponse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requestHeader)(SimpleName:selectSubprotocol))))))))