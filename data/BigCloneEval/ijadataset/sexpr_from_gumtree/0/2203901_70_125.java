(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:ZipFile))(SimpleName:getCachedZip)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:urlName))(Block(VariableDeclarationStatement(SimpleType(SimpleName:CryptoFunctions))(VariableDeclarationFragment(SimpleName:cfunctions)(ClassInstanceCreation(SimpleType(SimpleName:CryptoFunctions)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cfunctions))(SimpleName:initialize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m_application))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cacheName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cfunctions))(SimpleName:encrypt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:urlName)))))(ExpressionStatement(Assignment(SimpleName:cacheName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cacheName))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cacheName))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:20))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cacheName))(SimpleName:length))))))(ExpressionStatement(Assignment(SimpleName:cacheName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cacheName))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cacheFilePath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_application))(SimpleName:getApplicationContext)))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cacheFileName)(InfixExpression(SimpleName:cacheFilePath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cacheName))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zipFile)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:zipFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:cacheFileName))(QualifiedName:ZipFile.OPEN_READ))))(ReturnStatement(SimpleName:zipFile)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlName)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_application))(SimpleName:getLogger)))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:8)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:urlName)))))(ReturnStatement(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:urlConnection)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:urlConnection)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:setDefaultUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:setUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HttpURLConnection))(SimpleName:setFollowRedirects)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:connect)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:statusCode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:getResponseCode))))(IfStatement(InfixExpression(SimpleName:statusCode)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:HttpURLConnection.HTTP_OK))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_application))(SimpleName:getLogger)))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:8)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:statusCode)))))(ReturnStatement(NullLiteral))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:cacheFileName))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(WhileStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:len))))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_application))(SimpleName:getLogger)))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cacheName))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_application))(SimpleName:getLogger)))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:8)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e)))))(ReturnStatement(NullLiteral)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:zipFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:cacheFileName))(QualifiedName:ZipFile.OPEN_READ))))(ReturnStatement(SimpleName:zipFile)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ReturnStatement(NullLiteral)))))))))