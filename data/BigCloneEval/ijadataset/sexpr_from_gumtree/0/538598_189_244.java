(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:copyFile)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:src))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:dest))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:extent))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:boolean)(SimpleName:overwrite))(SimpleType(SimpleName:FileNotFoundException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:result)(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src)(StringLiteral:<STR>)(SimpleName:dest)(StringLiteral:<STR>)(SimpleName:extent)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:exists))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:exists))(Block(IfStatement(SimpleName:overwrite)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:delete)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:finer)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:getAbsolutePath))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(Block(ReturnStatement(SimpleName:result))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fcin)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fcout)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:src))))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:dest))))(ExpressionStatement(Assignment(SimpleName:fcin)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:fcout)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:getChannel))))(IfStatement(InfixExpression(SimpleName:extent)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:extent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcin))(SimpleName:size))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:trans)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcin))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:extent)(SimpleName:fcout)))))(IfStatement(InfixExpression(SimpleName:trans)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:extent))(Block(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:message)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(SimpleName:extent)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:severe)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:message)))))(ExpressionStatement(MethodInvocation(SimpleName:workaroundCopyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:dest)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IOException))(VariableDeclarationFragment(SimpleName:newE)(ClassInstanceCreation(SimpleType(SimpleName:IOException))(SimpleName:message))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newE))(SimpleName:setStackTrace)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getStackTrace)))))(ThrowStatement(SimpleName:newE))))))(Block(IfStatement(InfixExpression(SimpleName:fcin)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcin))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:fcout)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcout))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:fis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:fos)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close)))))))(ReturnStatement(SimpleName:result))))))