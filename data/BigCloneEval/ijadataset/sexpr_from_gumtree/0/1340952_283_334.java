(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cl)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fn)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stack_))(SimpleName:empty)))(Block(ExpressionStatement(Assignment(SimpleName:cl)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stack_))(SimpleName:pop)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:closure_))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cl))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:closure_))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cl))))(ExpressionStatement(Assignment(SimpleName:fn)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:cl)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ForStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:classpath_.length))(PostfixExpression(SimpleName:n)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:classpath_)(SimpleName:n)))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fn)))))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ContinueStatement)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf_))(SimpleName:clear)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf_))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))(ExpressionStatement(MethodInvocation(SimpleName:push)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cf_)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:mfd_)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf_))(SimpleName:toInputStream))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mfd_))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fn)(SimpleName:in))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:export_)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf_))(SimpleName:toInputStream))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:export)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:fn)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))(IfStatement(SimpleName:java_)(Block(ExpressionStatement(Assignment(SimpleName:fn)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:cl)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:classpath_)(SimpleName:n)))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fn)))))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:export)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:fn)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))))))(BreakStatement)))))))))))