(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:synchronized)(SimpleType(SimpleName:String))(SimpleName:getURLContent)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Log))(VariableDeclarationFragment(SimpleName:log)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogUtil))(SimpleName:getLog)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:FileManager)))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:content)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlCache))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url))))))(IfStatement(InfixExpression(SimpleName:content)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(SimpleName:content))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol))))(Block(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getFile))))))(Block(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:available)))))(ExpressionStatement(MethodInvocation(SimpleName:pump)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)(SimpleName:baos))))(ExpressionStatement(Assignment(SimpleName:content)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlCache))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)(SimpleName:content))))(ReturnStatement(SimpleName:content)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ReturnStatement(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Translator))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:XDocletMessages)))(QualifiedName:XDocletUtilMessages.EXCEPTION_READING_MERGE_FILE)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString)))))))))(ReturnStatement(NullLiteral)))))))))