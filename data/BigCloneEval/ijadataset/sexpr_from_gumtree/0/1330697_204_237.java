(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testDecode1000BinaryStore)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:EXISchema))(VariableDeclarationFragment(SimpleName:corpus)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EXISchemaFactoryTestUtil))(SimpleName:getEXISchema)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(SimpleName:getClass))(SimpleName:m_compilerErrors)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_compilerErrors))(SimpleName:getTotalCount)))))(VariableDeclarationStatement(SimpleType(SimpleName:GrammarCache))(VariableDeclarationFragment(SimpleName:grammarCache)(ClassInstanceCreation(SimpleType(SimpleName:GrammarCache))(SimpleName:corpus)(QualifiedName:GrammarOptions.STRICT_OPTIONS))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:base64Values100)(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(StringLiteral:<STR>)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(StringLiteral:<STR>)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:AlignmentType))(VariableDeclarationFragment(SimpleName:alignment)(QualifiedName:AlignmentType.bitPacked)))(VariableDeclarationStatement(SimpleType(SimpleName:Transmogrifier))(VariableDeclarationFragment(SimpleName:encoder)(ClassInstanceCreation(SimpleType(SimpleName:Transmogrifier)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encoder))(SimpleName:setEXISchema)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grammarCache))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encoder))(SimpleName:setAlignmentType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:alignment))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encoder))(SimpleName:setOutputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:baos))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(SimpleName:resolveSystemIdAsURL)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encoder))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bts)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))))(VariableDeclarationStatement(SimpleType(SimpleName:Scanner))(VariableDeclarationFragment(SimpleName:scanner)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n_texts)))(VariableDeclarationStatement(SimpleType(SimpleName:EXIDecoder))(VariableDeclarationFragment(SimpleName:decoder)(ClassInstanceCreation(SimpleType(SimpleName:EXIDecoder))(NumberLiteral:999))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoder))(SimpleName:setEXISchema)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grammarCache))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoder))(SimpleName:setAlignmentType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:alignment))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoder))(SimpleName:setInputStream)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:bts)))))(ExpressionStatement(Assignment(SimpleName:scanner)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoder))(SimpleName:processHeader))))(VariableDeclarationStatement(SimpleType(SimpleName:EXIEvent))(VariableDeclarationFragment(SimpleName:exiEvent)))(ExpressionStatement(Assignment(SimpleName:n_texts)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:exiEvent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanner))(SimpleName:nextEvent))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exiEvent))(SimpleName:getEventVariety))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:EXIEvent.EVENT_CH))(Block(IfStatement(InfixExpression(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:n_texts))(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:100))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:expected)(ArrayAccess(SimpleName:base64Values100)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:n_texts)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:100)))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:val)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exiEvent))(SimpleName:getCharacters)))(SimpleName:makeString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:expected)(SimpleName:val))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1000)(SimpleName:n_texts))))))))