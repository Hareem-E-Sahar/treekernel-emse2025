(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:fetch)(SingleVariableDeclaration(SimpleType(SimpleName:M_joogoo))(SimpleName:account))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:account))(SimpleName:getToken))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:M_service))(VariableDeclarationFragment(SimpleName:service)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:account))(SimpleName:getMServiceRef)))(SimpleName:getModel))))(VariableDeclarationStatement(SimpleType(SimpleName:OAuthConsumer))(VariableDeclarationFragment(SimpleName:consumer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:service))(SimpleName:getConsumer))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:JSONObject))(VariableDeclarationFragment(SimpleName:token)(ClassInstanceCreation(SimpleType(SimpleName:JSONObject))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:account))(SimpleName:getToken)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:key)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:secret)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:consumer))(SimpleName:setTokenWithSecret)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(SimpleName:secret)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:JSONException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:account))(SimpleName:getUserId)))(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:targetUrl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:service))(SimpleName:getTargetUrl)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:targetUrl))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:c)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:consumer))(SimpleName:sign)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:OAuthMessageSignerException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:OAuthExpectationFailedException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:OAuthCommunicationException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpTransport))(VariableDeclarationFragment(SimpleName:transport)(ClassInstanceCreation(SimpleType(SimpleName:HttpTransport)))))(ExpressionStatement(Assignment(QualifiedName:transport.defaultHeaders.authorization)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:FetcherService))(VariableDeclarationFragment(SimpleName:fetcher)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FetcherServiceFactory))(SimpleName:createFetcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:service)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fetcher))(SimpleName:setUpTransport)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transport))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:T_new)))(VariableDeclarationFragment(SimpleName:news)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fetcher))(SimpleName:executeGet)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transport)(SimpleName:targetUrl)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:T_new))(SimpleName:n))(SimpleName:news)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Datastore))(SimpleName:getOrNull)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:T_new)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:n))(SimpleName:getKey))))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:n))(SimpleName:setUserId)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:account))(SimpleName:getUserId)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:n))(SimpleName:getMJoogooRef)))(SimpleName:setModel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:account))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Datastore))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n))))))))))))