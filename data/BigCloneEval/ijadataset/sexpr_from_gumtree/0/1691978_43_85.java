(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Float))(VariableDeclarationFragment(SimpleName:vact)(ClassInstanceCreation(SimpleType(SimpleName:Float))(QualifiedName:Utilidades.actualVersion))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:FutureTask))(SimpleType(SimpleName:Void)))(VariableDeclarationFragment(SimpleName:calli)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ver)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utilidades))(SimpleName:getLatestVersion))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:VersionLauncher))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:java.util.ResourceBundle))(SimpleName:getBundle)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:ver))))))(IfStatement(InfixExpression(SimpleName:ver)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Float))(VariableDeclarationFragment(SimpleName:vlast)(ClassInstanceCreation(SimpleType(SimpleName:Float))(SimpleName:ver))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vlast))(SimpleName:floatValue))(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vact))(SimpleName:floatValue)))(Block(ExpressionStatement(Assignment(SimpleName:calli)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:FutureTask))(SimpleType(SimpleName:Void)))(ClassInstanceCreation(SimpleType(SimpleName:CallableImpl))(SimpleName:vlast)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SwingUtilities))(SimpleName:invokeLater)(METHOD_INVOCATION_ARGUMENTS(SimpleName:calli))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:val)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calli))(SimpleName:get))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:VersionLauncher))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(NullLiteral)(SimpleName:ex))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ExecutionException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:VersionLauncher))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(NullLiteral)(SimpleName:ex)))))))(IfStatement(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JOptionPane.OK_OPTION))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URI))(VariableDeclarationFragment(SimpleName:uri)(ClassInstanceCreation(SimpleType(SimpleName:URI))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:isDesktopSupported))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:getDesktop)))(SimpleName:browse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uri)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:VersionLauncher))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(NullLiteral)(SimpleName:ex))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:URISyntaxException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:VersionLauncher))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(NullLiteral)(SimpleName:ex))))))))))(Block(IfStatement(SimpleName:mostrarFallo)(Block(ExpressionStatement(Assignment(SimpleName:calli)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:FutureTask))(SimpleType(SimpleName:Void)))(ClassInstanceCreation(SimpleType(SimpleName:CallableImpl))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:java.util.ResourceBundle))(SimpleName:getBundle)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SwingUtilities))(SimpleName:invokeLater)(METHOD_INVOCATION_ARGUMENTS(SimpleName:calli)))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SwingUtilities))(SimpleName:invokeLater)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:FutureTask))(SimpleType(SimpleName:Void)))(ClassInstanceCreation(SimpleType(SimpleName:CallableImpl))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:java.util.ResourceBundle))(SimpleName:getBundle)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))))))