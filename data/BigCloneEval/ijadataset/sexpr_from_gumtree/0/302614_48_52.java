(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:getDensity)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:rint)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))(VariableDeclarationFragment(SimpleName:m)))(IfStatement(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:steps)))(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:m)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:steps)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:m)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:steps)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(ReturnStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Functions))(SimpleName:comb)(METHOD_INVOCATION_ARGUMENTS(SimpleName:steps)(SimpleName:m)))(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:pow)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)(SimpleName:steps)))))))))