(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:data)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:soundMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:effect)))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:af)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:soundFormat))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:effect)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:CyclicBarrier))(VariableDeclarationFragment(SimpleName:barrier)(ClassInstanceCreation(SimpleType(SimpleName:CyclicBarrier))(NumberLiteral:2))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Clip))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getClip))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:af)(SimpleName:data)(NumberLiteral:0)(QualifiedName:data.length))))(VariableDeclarationStatement(SimpleType(SimpleName:FloatControl))(VariableDeclarationFragment(SimpleName:fc)(CastExpression(SimpleType(SimpleName:FloatControl))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getControl)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FloatControl.Type.MASTER_GAIN))))))(IfStatement(InfixExpression(SimpleName:fc)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fc))(SimpleName:setValue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioThread))(SimpleName:computeGain)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fc)(SimpleName:vol))))))))(VariableDeclarationStatement(SimpleType(SimpleName:LineListener))(VariableDeclarationFragment(SimpleName:ll)(ClassInstanceCreation(SimpleType(SimpleName:LineListener))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:update)(SingleVariableDeclaration(SimpleType(SimpleName:LineEvent))(SimpleName:event))(Block(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Type.STOP))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Type.CLOSE)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:barrier))(SimpleName:await))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:ex))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:BrokenBarrierException))(SimpleName:ex))(Block)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:addLineListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ll))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:barrier))(SimpleName:await)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:removeLineListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ll))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:LineUnavailableException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:ex))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:BrokenBarrierException))(SimpleName:ex))(Block)))))))