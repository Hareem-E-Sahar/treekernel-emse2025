(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:OutputStreamZipTracer)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:fileName))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:fos)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:fileName))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.ZipOutputStream))(VariableDeclarationFragment(SimpleName:zos)))(ExpressionStatement(Assignment(SimpleName:zos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.ZipOutputStream))(SimpleName:fos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.ZipEntry))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(SimpleName:zos)))(ExpressionStatement(MethodInvocation(SimpleName:setOutputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fos)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:m_error)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:m_errorStr)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getStackTrace)))(SimpleName:toString))))))))))))