(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:exitCode)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:poolAddress)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:inputReader)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(QualifiedName:System.in))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:stdin)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(SimpleName:inputReader))))(VariableDeclarationStatement(SimpleType(SimpleName:TimeZone))(VariableDeclarationFragment(SimpleName:TZ)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TimeZone))(SimpleName:getTimeZone)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:FPQueryResult))(VariableDeclarationFragment(SimpleName:queryResult)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:queryStatus)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:timeConverter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TZ)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:poolAddress)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:answer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stdin))(SimpleName:readLine))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:answer))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:poolAddress)(ASSIGNMENT_OPERATOR:=)(SimpleName:answer))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:poolAddress)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FPPool))(SimpleName:setGlobalOption)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FPLibraryConstants.FP_OPTION_OPENSTRATEGY)(QualifiedName:FPLibraryConstants.FP_LAZY_OPEN))))(VariableDeclarationStatement(SimpleType(SimpleName:FPPool))(VariableDeclarationFragment(SimpleName:thePool)(ClassInstanceCreation(SimpleType(SimpleName:FPPool))(SimpleName:poolAddress))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thePool))(SimpleName:getCapability)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FPLibraryConstants.FP_CLIPENUMERATION)(QualifiedName:FPLibraryConstants.FP_ALLOWED)))(INFIX_EXPRESSION_OPERATOR:==)(StringLiteral:<STR>))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:DateFormat))(VariableDeclarationFragment(SimpleName:dFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DateFormat))(SimpleName:getDateTimeInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:DateFormat.SHORT)(QualifiedName:DateFormat.LONG)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dFormat))(SimpleName:setTimeZone)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TZ))))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:clusterTime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TZ)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clusterTime))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thePool))(SimpleName:getClusterTime))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dFormat))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clusterTime))(SimpleName:getTime))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:epoch)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TZ)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:epoch))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date))(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(SimpleName:ConvertDateTimeToString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:epoch)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:start)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:answer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stdin))(SimpleName:readLine))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:answer))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:=)(SimpleName:answer))))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:startTime)(MethodInvocation(SimpleName:ConvertDisplayToCalendar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:start)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:end)(MethodInvocation(SimpleName:ConvertDateTimeToString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clusterTime)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:end)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:answer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stdin))(SimpleName:readLine))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:answer))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(SimpleName:answer))))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:endTime)(MethodInvocation(SimpleName:ConvertDisplayToCalendar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:end)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dFormat))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startTime))(SimpleName:getTime))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dFormat))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:endTime))(SimpleName:getTime))))))))(VariableDeclarationStatement(SimpleType(SimpleName:FPQueryExpression))(VariableDeclarationFragment(SimpleName:queryExp)(ClassInstanceCreation(SimpleType(SimpleName:FPQueryExpression)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryExp))(SimpleName:setStartTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startTime))(SimpleName:getTime)))(SimpleName:getTime)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryExp))(SimpleName:setEndTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:endTime))(SimpleName:getTime)))(SimpleName:getTime)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryExp))(SimpleName:setType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FPLibraryConstants.FP_QUERY_TYPE_EXISTING))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryExp))(SimpleName:selectField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryExp))(SimpleName:selectField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:FPPoolQuery))(VariableDeclarationFragment(SimpleName:theQuery)(ClassInstanceCreation(SimpleType(SimpleName:FPPoolQuery))(SimpleName:thePool)(SimpleName:queryExp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clusterTime))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thePool))(SimpleName:getClusterTime))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dFormat))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clusterTime))(SimpleName:getTime))))))))(WhileStatement(BooleanLiteral:true)(Block(ExpressionStatement(Assignment(SimpleName:queryResult)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:theQuery))(SimpleName:FetchResult))))(ExpressionStatement(Assignment(SimpleName:queryStatus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryResult))(SimpleName:getResultCode))))(IfStatement(InfixExpression(SimpleName:queryStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FPLibraryConstants.FP_QUERY_RESULT_CODE_OK))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timeConverter))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryResult))(SimpleName:getTimestamp))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryResult))(SimpleName:getClipID))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dFormat))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timeConverter))(SimpleName:getTime))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryResult))(SimpleName:getField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryResult))(SimpleName:getField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(PostfixExpression(SimpleName:count)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(InfixExpression(SimpleName:queryStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FPLibraryConstants.FP_QUERY_RESULT_CODE_INCOMPLETE))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:queryStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FPLibraryConstants.FP_QUERY_RESULT_CODE_COMPLETE))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:queryStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FPLibraryConstants.FP_QUERY_RESULT_CODE_END))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(BreakStatement))(IfStatement(InfixExpression(SimpleName:queryStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FPLibraryConstants.FP_QUERY_RESULT_CODE_ABORT))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(BreakStatement))(IfStatement(InfixExpression(SimpleName:queryStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FPLibraryConstants.FP_QUERY_RESULT_CODE_ERROR))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:queryStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FPLibraryConstants.FP_QUERY_RESULT_CODE_PROGRESS))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:queryStatus)))))(BreakStatement)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryResult))(SimpleName:Close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryResult))(SimpleName:Close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:count)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:theQuery))(SimpleName:Close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stdin))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thePool))(SimpleName:Close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:poolAddress)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FPLibraryException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:exitCode)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getErrorCode))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))(StringLiteral:<STR>)(SimpleName:exitCode)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(Assignment(SimpleName:exitCode)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))(ExpressionStatement(Assignment(SimpleName:exitCode)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exitCode))))))))