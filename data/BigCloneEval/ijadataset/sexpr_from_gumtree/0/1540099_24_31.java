(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:public)(SimpleType(SimpleName:TestInterpreter))(SimpleName:getTestInterpreter)(SingleVariableDeclaration(SimpleType(SimpleName:XMLConfiguration))(SimpleName:config))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:section))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:i))(SimpleType(SimpleName:SecurityException))(SimpleType(SimpleName:ClassNotFoundException))(SimpleType(SimpleName:IllegalArgumentException))(SimpleType(SimpleName:InstantiationException))(SimpleType(SimpleName:IllegalAccessException))(SimpleType(SimpleName:InvocationTargetException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:testResultsInterpreterClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:section)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:i)(StringLiteral:<STR>))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Constructor))(Dimension))(VariableDeclarationFragment(SimpleName:a)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testResultsInterpreterClass))))(SimpleName:getConstructors))))(VariableDeclarationStatement(SimpleType(SimpleName:TestInterpreter))(VariableDeclarationFragment(SimpleName:tri)(CastExpression(SimpleType(SimpleName:TestInterpreter))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:a)(NumberLiteral:0)))(SimpleName:newInstance)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tri))(SimpleName:configTestInterpreter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:config)(InfixExpression(SimpleName:section)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:i)(StringLiteral:<STR>)))))(ReturnStatement(SimpleName:tri))))))