(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:ensureSize)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:size))(Block(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokens))(SimpleName:size)))(Block(ReturnStatement(BooleanLiteral:true))))(WhileStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokens))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Token))(VariableDeclarationFragment(SimpleName:nextToken)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenSource))(SimpleName:nextToken))))(IfStatement(InfixExpression(SimpleName:nextToken)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Token.EOF_TOKEN))(Block(ReturnStatement(BooleanLiteral:false))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nextToken))(SimpleName:getChannel))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:channel))(Block(ExpressionStatement(Assignment(FieldAccess(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:XQToken))(SimpleName:nextToken)))(SimpleName:spaceBefore))(ASSIGNMENT_OPERATOR:=)(SimpleName:spaceBefore)))(ExpressionStatement(Assignment(SimpleName:spaceBefore)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokens))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextToken)))))(Block(ExpressionStatement(Assignment(SimpleName:spaceBefore)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(ReturnStatement(BooleanLiteral:true))))))