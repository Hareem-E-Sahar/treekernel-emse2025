(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testInvariants)(Block(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:SOURCE_TYPE))(SimpleName:s))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SOURCE_TYPE))(SimpleName:values))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:DefaultGroupSource))(SimpleType(SimpleName:GeneratedPatientRecord)))(VariableDeclarationFragment(SimpleName:tmp)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:tmp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:s.cls))(SimpleName:newInstance)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))))))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:DefaultGroupSource))(SimpleType(SimpleName:GeneratedPatientRecord)))(VariableDeclarationFragment(SimpleName:source)(SimpleName:tmp)))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:isOpen))))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:sourceInvariant)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:CMSink))(ParameterizedType(SimpleType(SimpleName:GeneratedPair))(SimpleType(SimpleName:GeneratedPatientRecord))))(VariableDeclarationFragment(SimpleName:sink)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:CMSink))(ParameterizedType(SimpleType(SimpleName:GeneratedPair))(SimpleType(SimpleName:GeneratedPatientRecord))))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:open)(Block))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:write)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:GeneratedPair))(SimpleType(SimpleName:GeneratedPatientRecord)))(SimpleName:pair))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:isOpen)))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:sourceInvariant))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:x))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x))(SimpleName:toString)))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:pairInvariant)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pair)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:x))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x))(SimpleName:toString)))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:groupInvariant)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pair)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalStateException))(SimpleName:x))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x))(SimpleName:toString)))))))))))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:close)(Block))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:open))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CMException))(SimpleName:x))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x))(SimpleName:toString)))))))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:isOpen)))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:sourceInvariant)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(InfixExpression(SimpleName:count)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:DEFAULT_COUNT))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:count))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sink))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:read))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CMException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString)))))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CMException))(SimpleName:x))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x))(SimpleName:toString)))))))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:isOpen))))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:sourceInvariant)))))))))))