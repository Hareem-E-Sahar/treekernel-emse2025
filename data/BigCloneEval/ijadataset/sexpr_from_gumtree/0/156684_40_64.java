(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:AntProjectHelper))(SimpleName:createFlexProject)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:projectFolder))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:FlexPlatform))(SimpleName:flexSdk))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:mainClass))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:AntProjectHelper))(Dimension))(VariableDeclarationFragment(SimpleName:antProjectHelper)(ArrayCreation(ArrayType(SimpleType(SimpleName:AntProjectHelper))(Dimension(NumberLiteral:1))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileObject))(VariableDeclarationFragment(SimpleName:projectFolderFO)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:createFolder)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectFolder)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectFolderFO))(SimpleName:getFileSystem)))(SimpleName:runAtomicAction)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:FileSystem.AtomicAction))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:antProjectHelper)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(SimpleName:projectFolderFO)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:flexSdk)(SimpleName:mainClass)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FlexProject))(VariableDeclarationFragment(SimpleName:flexProject)(CastExpression(SimpleType(SimpleName:FlexProject))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProjectManager))(SimpleName:getDefault)))(SimpleName:findProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectFolderFO))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProjectManager))(SimpleName:getDefault)))(SimpleName:saveProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:flexProject))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileObject))(VariableDeclarationFragment(SimpleName:srcFolderFO)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectFolderFO))(SimpleName:createFolder)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileObject))(VariableDeclarationFragment(SimpleName:dest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectFolderFO))(SimpleName:createData)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GeneratedFilesHelper.BUILD_XML_PATH)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:FlexProjectGenerator))))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:out)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:getOutputStream))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(IfStatement(InfixExpression(SimpleName:mainClass)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:createMainClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFolderFO)(SimpleName:mainClass))))))(ReturnStatement))))))))(ReturnStatement(ArrayAccess(SimpleName:antProjectHelper)(NumberLiteral:0)))))))