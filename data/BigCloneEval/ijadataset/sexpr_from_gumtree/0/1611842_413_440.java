(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:String))(SimpleName:findMostSpecificResourceTree2)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(ParameterizedType(SimpleType(SimpleName:GeneralisedQueryTree))(SimpleType(SimpleName:N))))(SimpleName:trees))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(SimpleName:knownResources))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:low))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:high))(SimpleType(SimpleName:TimeOutException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:testIndex)(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:low)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:t)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:GeneralisedQueryTree))(SimpleType(SimpleName:N)))(VariableDeclarationFragment(SimpleName:genTree)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trees))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testIndex)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:genTree))(SimpleName:getQueryTree)))(SimpleName:getStringRepresentation))))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:t)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNewResource2)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:fSparql)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lgg)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:genTree))(SimpleName:getChanges))))(SimpleName:knownResources))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:HTTPException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TimeOutException))(SimpleName:maxExecutionTimeInSeconds))))))(IfStatement(MethodInvocation(SimpleName:isTerminationCriteriaReached))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TimeOutException))(SimpleName:maxExecutionTimeInSeconds)))))(IfStatement(InfixExpression(SimpleName:testIndex)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:high))(Block(ExpressionStatement(Assignment(SimpleName:lastSequence)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trees))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testIndex))))(SimpleName:getChanges))))(ReturnStatement(SimpleName:t))))(IfStatement(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(MethodInvocation(SimpleName:findMostSpecificResourceTree2)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trees)(SimpleName:knownResources)(InfixExpression(SimpleName:testIndex)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:high)))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:t)(StringLiteral:<STR>)))))))(ReturnStatement(MethodInvocation(SimpleName:findMostSpecificResourceTree2)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trees)(SimpleName:knownResources)(SimpleName:low)(SimpleName:testIndex))))))))))