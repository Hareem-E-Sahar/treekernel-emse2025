(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:nativeReassertNeeded)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:setCheckInterval)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:60))))(WhileStatement(SimpleName:isRunning)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Socket))(VariableDeclarationFragment(SimpleName:s)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serverSocket))(SimpleName:getChannel)))(SimpleName:socket)))(SimpleName:accept))))(IfStatement(InfixExpression(SimpleName:isRunning)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:true))(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(IfStatement(SimpleName:listenForLostLock)(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(SynchronizedStatement(ThisExpression(SimpleName:FileConcurrencyLock))(Block(IfStatement(InfixExpression(SimpleName:isRunning)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(BreakStatement))(ExpressionStatement(MethodInvocation(SimpleName:assertLock)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nativeReassertNeeded))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:end)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINEST)(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Long))(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start))))))(ExpressionStatement(Assignment(SimpleName:nativeReassertNeeded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:setCheckInterval)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:60)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:LockUncertainException))(SimpleName:lue))(Block(ExpressionStatement(Assignment(SimpleName:nativeReassertNeeded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(SimpleName:setCheckInterval)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:20))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)(StringLiteral:<STR>)(SimpleName:e))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:dispatchMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LockMessage.LOCK_LOST_MESSAGE)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e1))(Block)))(ExpressionStatement(MethodInvocation(SimpleName:setCheckInterval)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))))))))))