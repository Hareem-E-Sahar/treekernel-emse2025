(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:PlanStrategy))(SimpleName:loadStrategy)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(Modifier:final)(SimpleType(QualifiedName:StrategyConfigGroup.StrategySettings))(SimpleName:settings))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Network))(VariableDeclarationFragment(SimpleName:network)(FieldAccess(ThisExpression)(SimpleName:network))))(VariableDeclarationStatement(SimpleType(SimpleName:PersonalizableTravelCost))(VariableDeclarationFragment(SimpleName:travelCostCalc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:travelCostCalculatorFactory)))(SimpleName:createTravelCostCalculator)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:travelTimeCalculator))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:config)))(SimpleName:charyparNagelScoring))))))(VariableDeclarationStatement(SimpleType(SimpleName:PersonalizableTravelTime))(VariableDeclarationFragment(SimpleName:travelTimeCalc)(FieldAccess(ThisExpression)(SimpleName:travelTimeCalculator))))(VariableDeclarationStatement(SimpleType(SimpleName:Config))(VariableDeclarationFragment(SimpleName:config)(FieldAccess(ThisExpression)(SimpleName:config))))(VariableDeclarationStatement(SimpleType(SimpleName:PlanStrategy))(VariableDeclarationFragment(SimpleName:strategy)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:KeepSelected)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReRoute))(ThisExpression))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReRouteDijkstra))(SimpleName:config)(SimpleName:network)(SimpleName:travelCostCalc)(SimpleName:travelTimeCalc))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReRouteLandmarks))(SimpleName:config)(SimpleName:network)(SimpleName:travelCostCalc)(SimpleName:travelTimeCalc)(ClassInstanceCreation(SimpleType(SimpleName:FreespeedTravelTimeCost))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:charyparNagelScoring))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector))))))(VariableDeclarationStatement(SimpleType(SimpleName:TimeAllocationMutator))(VariableDeclarationFragment(SimpleName:tam)(ClassInstanceCreation(SimpleType(SimpleName:TimeAllocationMutator))(SimpleName:config))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tam)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:TimeAllocationMutator))(SimpleName:config)(NumberLiteral:7200)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReRouteLandmarks))(SimpleName:config)(SimpleName:network)(SimpleName:travelCostCalc)(SimpleName:travelTimeCalc)(ClassInstanceCreation(SimpleType(SimpleName:FreespeedTravelTimeCost))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:charyparNagelScoring))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(PostfixExpression(SimpleName:externalCounter)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:exePath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:settings))(SimpleName:getExePath))))(VariableDeclarationStatement(SimpleType(SimpleName:ExternalModule))(VariableDeclarationFragment(SimpleName:em)(ClassInstanceCreation(SimpleType(SimpleName:ExternalModule))(SimpleName:exePath)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:externalCounter))(SimpleName:controlerIO)(MethodInvocation(SimpleName:getScenario))(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:em))(SimpleName:setIterationNumber)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getIterationNumber)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:em)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:BestPlanSelector)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:ExpBetaPlanSelector))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:charyparNagelScoring)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:ExpBetaPlanChanger))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:charyparNagelScoring)))(SimpleName:getBrainExpBeta)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PlanStrategy))(ClassInstanceCreation(SimpleType(SimpleName:RandomPlanSelector))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ChangeLegMode))(SimpleName:config)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strategy))(SimpleName:addStrategyModule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReRoute))(ThisExpression))))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType(SimpleType(SimpleName:PlanStrategy))))(VariableDeclarationFragment(SimpleName:klas)(CastExpression(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType(SimpleType(SimpleName:PlanStrategy))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Class))(Dimension))(VariableDeclarationFragment(SimpleName:args)(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:args)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(TypeLiteral(SimpleType(SimpleName:Scenario)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType(SimpleType(SimpleName:PlanStrategy))))(VariableDeclarationFragment(SimpleName:c)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:klas))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)))))(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getScenario)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:args)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(TypeLiteral(SimpleType(SimpleName:MZControler)))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:klas))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)))))(ExpressionStatement(Assignment(SimpleName:strategy)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SecurityException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))))))))))))))))))(ReturnStatement(SimpleName:strategy))))))