(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testDecimal)(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:C))(SimpleName:coding))(MethodInvocation(SimpleName:getCodings))(Block(IfStatement(MethodInvocation(SimpleName:isEncodableValueLimited)(METHOD_INVOCATION_ARGUMENTS(SimpleName:coding)))(ReturnStatement))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bits)(NumberLiteral:10240)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:memory)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(InfixExpression(SimpleName:bits)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:8)))))))(VariableDeclarationStatement(SimpleType(SimpleName:IntArrayBitWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:IntArrayBitWriter))(SimpleName:memory)(SimpleName:bits))))(VariableDeclarationStatement(SimpleType(SimpleName:IntArrayBitReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:IntArrayBitReader))(SimpleName:memory)(SimpleName:bits))))(VariableDeclarationStatement(SimpleType(SimpleName:Random))(VariableDeclarationFragment(SimpleName:r)(ClassInstanceCreation(SimpleType(SimpleName:Random))(NumberLiteral:0L))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:10000))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:checkDecimal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:BigDecimal))(ClassInstanceCreation(SimpleType(SimpleName:BigInteger))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:bits)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:4))))(SimpleName:r))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:100)))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:50))))))))))))))