(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:InetSocketAddress))(SimpleName:executeTest)(SingleVariableDeclaration(SimpleType(SimpleName:DatagramChannel))(SimpleName:channelToUse))(SingleVariableDeclaration(SimpleType(SimpleName:InetSocketAddress))(SimpleName:testAddress))(SingleVariableDeclaration(SimpleType(SimpleName:BlockingHook))(SimpleName:hook))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ICommFacade))(VariableDeclarationFragment(SimpleName:commFacade)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connBroker))(SimpleName:getCommFacade))))(VariableDeclarationStatement(SimpleType(SimpleName:IMessageProcessor))(VariableDeclarationFragment(SimpleName:msgProc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commFacade))(SimpleName:getMessageProcessor))))(VariableDeclarationStatement(SimpleType(SimpleName:DatagramChannel))(VariableDeclarationFragment(SimpleName:dc)(SimpleName:channelToUse)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:unregisterAfterTest)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commFacade))(SimpleName:getChannelManager)))(SimpleName:getSelectionKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelToUse)))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:unregisterAfterTest))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commFacade))(SimpleName:getChannelManager)))(SimpleName:registerChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dc)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msgProc))(SimpleName:installHook)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hook)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hook))(SimpleName:getPredicate)))))(TryStatement(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InetSocketAddress))(VariableDeclarationFragment(SimpleName:result)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commFacade))(SimpleName:getChannelManager)))(SimpleName:registerChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dc))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commFacade))(SimpleName:sendUDPMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dc)(ClassInstanceCreation(SimpleType(SimpleName:UDPPing))(SimpleName:myPeerID))(SimpleName:testAddress))))(VariableDeclarationStatement(SimpleType(SimpleName:IEnvelope))(VariableDeclarationFragment(SimpleName:env)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hook))(SimpleName:waitForMessage))))(IfStatement(InfixExpression(SimpleName:env)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:MappedAddressResult))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:env))(SimpleName:getMessage)))))(SimpleName:getMappedAddress)))))(ReturnStatement(SimpleName:result)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)(StringLiteral:<STR>))))(ReturnStatement(NullLiteral))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msgProc))(SimpleName:removeHook)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hook))))(IfStatement(SimpleName:unregisterAfterTest)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commFacade))(SimpleName:getChannelManager)))(SimpleName:unregisterChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelToUse)))))))))))