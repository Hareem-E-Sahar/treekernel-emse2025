(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:synchronized)(PrimitiveType:void)(SimpleName:loadLib)(Block(IfStatement(SimpleName:loaded)(Block(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:libName)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:loadLibrary)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getLibName)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ExpressionStatement(Assignment(SimpleName:loaded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsatisfiedLinkError))(SimpleName:e))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)(QualifiedName:File.separator)(MethodInvocation(SimpleName:getLibName)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(Block(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getParentFile)))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getParentFile)))(SimpleName:mkdir)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:resName)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getLibName)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:resName)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:OvNativeLibLoader))))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resName)))))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Win32Exception))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:file))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:buffer)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:8192))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:written)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:>)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:written)(ASSIGNMENT_OPERATOR:+=)(SimpleName:read)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(IfStatement(InfixExpression(SimpleName:written)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:delete)))(ExpressionStatement(Assignment(SimpleName:loaded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(Assignment(SimpleName:loaded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:delete)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Win32Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))(StringLiteral:<STR>)(QualifiedName:File.separator)(StringLiteral:<STR>))(SimpleName:ex))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))))))))))))