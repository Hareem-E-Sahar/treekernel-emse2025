(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(VariableDeclarationStatement(SimpleType(SimpleName:GtalkTest2))(VariableDeclarationFragment(SimpleName:gtalkTest2)(ClassInstanceCreation(SimpleType(SimpleName:GtalkTest2)))))(VariableDeclarationStatement(SimpleType(SimpleName:ConnectionConfiguration))(VariableDeclarationFragment(SimpleName:connConfig)(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(StringLiteral:<STR>)(NumberLiteral:5222)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:XMPPConnection))(VariableDeclarationFragment(SimpleName:connection)(ClassInstanceCreation(SimpleType(SimpleName:XMPPConnection))(SimpleName:connConfig))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:connect)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getHost)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:XMPPException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getHost))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getUser))))))(VariableDeclarationStatement(SimpleType(SimpleName:Presence))(VariableDeclarationFragment(SimpleName:presence)(ClassInstanceCreation(SimpleType(SimpleName:Presence))(QualifiedName:Presence.Type.available))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:sendPacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:presence))))(VariableDeclarationStatement(SimpleType(SimpleName:Roster))(VariableDeclarationFragment(SimpleName:roster)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getRoster))))(VariableDeclarationStatement(SimpleType(SimpleName:PacketFilter))(VariableDeclarationFragment(SimpleName:myFilter)(ClassInstanceCreation(SimpleType(SimpleName:PacketFilter))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:Packet))(SimpleName:packet))(Block(ReturnStatement(BooleanLiteral:true))))))))(VariableDeclarationStatement(SimpleType(SimpleName:PacketCollector))(VariableDeclarationFragment(SimpleName:collector)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:createPacketCollector)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myFilter)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:roster))(SimpleName:addRosterListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:RosterListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:entriesAdded)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:String)))(SimpleName:addresses))(Block))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:entriesDeleted)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:String)))(SimpleName:addresses))(Block))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:entriesUpdated)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:String)))(SimpleName:addresses))(Block))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:presenceChanged)(SingleVariableDeclaration(SimpleType(SimpleName:Presence))(SimpleName:presence))(Block)))))))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Packet))(VariableDeclarationFragment(SimpleName:packet)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collector))(SimpleName:nextResult))))(IfStatement(InstanceofExpression(SimpleName:packet)(SimpleType(SimpleName:Message)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:msg)(CastExpression(SimpleType(SimpleName:Message))(SimpleName:packet))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:RosterEntry))(SimpleName:e))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gtalkTest2))(SimpleName:getOnlineEntries)(METHOD_INVOCATION_ARGUMENTS(SimpleName:connection)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isNotBlank)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg))(SimpleName:getFrom))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg))(SimpleName:getFrom)))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getUser))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(Block(ContinueStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getUser))))))(VariableDeclarationStatement(SimpleType(SimpleName:Chat))(VariableDeclarationFragment(SimpleName:chat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getChatManager)))(SimpleName:createChat)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getUser))(ClassInstanceCreation(SimpleType(SimpleName:MessageListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:processMessage)(SingleVariableDeclaration(SimpleType(SimpleName:Chat))(SimpleName:chat))(SingleVariableDeclaration(SimpleType(SimpleName:Message))(SimpleName:message))(Block))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chat))(SimpleName:sendMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg))(SimpleName:getFrom))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:msg))(SimpleName:getBody)))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:XMPPException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getUser))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.in))(SimpleName:read))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:disconnect)))))))