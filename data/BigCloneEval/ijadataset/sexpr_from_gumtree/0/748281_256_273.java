(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(SimpleType(SimpleName:PipedWriter))(VariableDeclarationFragment(SimpleName:writer)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PipedWriter))(SimpleName:reader))))(ExpressionStatement(MethodInvocation(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:character))(SimpleName:export)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ExportHandler))(SimpleName:templateFile))(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(SimpleName:writer)(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:errorPrint)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:ex))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:writer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:errorPrint)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:ex)))))))))))))