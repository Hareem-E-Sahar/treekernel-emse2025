(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:writeProject)(SingleVariableDeclaration(SimpleType(SimpleName:ProjectModel))(SimpleName:projectModel))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:path))(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JDemResourceLoader))(SimpleName:getAsFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zos)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:file))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:settingsEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:settingsEntry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JsonProjectFileWriter))(SimpleName:writeProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectModel)(SimpleName:zos))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModel))(SimpleName:getUserScript))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:scriptEntry)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModel))(SimpleName:getScriptLanguage))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:ScriptLanguageEnum.GROOVY))(Block(ExpressionStatement(Assignment(SimpleName:scriptEntry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModel))(SimpleName:getScriptLanguage))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:ScriptLanguageEnum.JYTHON))(Block(ExpressionStatement(Assignment(SimpleName:scriptEntry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(SimpleName:scriptEntry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:scriptEntry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModel))(SimpleName:getUserScript)))(SimpleName:getBytes))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:close)))))))