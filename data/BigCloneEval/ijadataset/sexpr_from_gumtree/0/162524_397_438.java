(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:copyZipWithoutExcludes)(SingleVariableDeclaration(SimpleType(SimpleName:ZipInputStream))(SimpleName:zin))(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:out))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(SimpleName:excludes))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.ZipEntry))(VariableDeclarationFragment(SimpleName:zentry)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:alreadyWrittenFiles))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:alreadyWrittenFiles))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:String)))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:currentSet)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:alreadyWrittenFiles))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:zentry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zin))(SimpleName:getNextEntry))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:currentName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zentry))(SimpleName:getName))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:testName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentName))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:testName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testName))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:excludes)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:excludes))(SimpleName:iterator))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:skip)(BooleanLiteral:false)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:doExclude)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testName))(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(SimpleName:doExclude)))(Block(ExpressionStatement(Assignment(SimpleName:skip)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))(IfStatement(SimpleName:skip)(Block(ContinueStatement)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentSet))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentName)))(Block(ContinueStatement)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:newEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:currentName))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:fileTime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zentry))(SimpleName:getTime))))(IfStatement(InfixExpression(SimpleName:fileTime)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newEntry))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileTime))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newEntry))))(ExpressionStatement(MethodInvocation(SimpleName:copyStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zin)(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zin))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentSet))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentName)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ZipException))(SimpleName:x))(Block)))))))))