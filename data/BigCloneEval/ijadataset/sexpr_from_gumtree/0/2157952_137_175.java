(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:timeout)(InfixExpression(NumberLiteral:10)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000L))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(SimpleName:getTime))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:socket))(SimpleName:getInputStream))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:available)(BooleanLiteral:false)))(WhileStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:socket))(SimpleName:isClosed))))(Block(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:available)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:100)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:curr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(SimpleName:getTime))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:curr)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start)))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:timeout))(Block(BreakStatement)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:socket))(SimpleName:isClosed))(Block)(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)(SimpleName:baos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:msg)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FtpResponse.ReadComplete))(SimpleName:asString))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ClientCommand.SP)(StringLiteral:<STR>)(QualifiedName:ClientCommand.CRLF))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:list)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg))))(VariableDeclarationStatement(SimpleType(SimpleName:ClientResponse))(VariableDeclarationFragment(SimpleName:response)(ClassInstanceCreation(SimpleType(SimpleName:ClientResponse))(SimpleName:list))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftpClient))(SimpleName:notifyListeners)(METHOD_INVOCATION_ARGUMENTS(SimpleName:response)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))))))