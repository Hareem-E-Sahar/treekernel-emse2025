(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:moveObject)(SingleVariableDeclaration(SimpleType(SimpleName:Map))(SimpleName:sourceUri))(SingleVariableDeclaration(SimpleType(SimpleName:Map))(SimpleName:targetUri))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:overwrite))(SimpleType(SimpleName:NoAccessException))(SimpleType(SimpleName:NoSuchObjectException))(SimpleType(SimpleName:AlreadyExistsException))(SimpleType(SimpleName:TypeMismatchException))(SimpleType(SimpleName:WriteEntryDataException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:sourceMap)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sourceInfo)(MethodInvocation(SimpleName:objectInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceUri)(SimpleName:sourceMap)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_NON_EXISTING)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NoSuchObjectException))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_DIRECTORY)))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isLibraryFolder)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getLeafBinder)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceMap))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:KablinkFileSystemException))(StringLiteral:<STR>)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:targetMap)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:targetInfo)(MethodInvocation(SimpleName:objectInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetUri)(SimpleName:targetMap)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getParentBinderPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceMap))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getParentBinderPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetMap)))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_NON_EXISTING))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AlreadyExistsException))(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:renameFolder)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceUri)(SimpleName:sourceMap)(SimpleName:targetUri)(SimpleName:targetMap)))))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_NON_EXISTING))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AlreadyExistsException))(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:moveFolder)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceUri)(SimpleName:sourceMap)(SimpleName:targetUri)(SimpleName:targetMap)))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_VIRTUAL_HELP_FILE)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:KablinkFileSystemException))(StringLiteral:<STR>)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_FILE)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:targetMap)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:targetInfo)(MethodInvocation(SimpleName:objectInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetUri)(SimpleName:targetMap)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getParentBinderPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceMap))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getParentBinderPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetMap)))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_NON_EXISTING))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AlreadyExistsException))(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:renameResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceUri)(SimpleName:sourceMap)(SimpleName:targetUri)(SimpleName:targetMap)))))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetInfo))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:CrossContextConstants.OBJECT_INFO_NON_EXISTING))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AlreadyExistsException))(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:moveResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceUri)(SimpleName:sourceMap)(SimpleName:targetUri)(SimpleName:targetMap)))))))))))))))))