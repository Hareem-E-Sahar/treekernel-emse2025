(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:update)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:updatable))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Main))(SimpleName:fenetre)))(SimpleName:erreur)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Fenetre.OLD_VERSION))))(ReturnStatement)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Main))(SimpleName:fenetre)))(SimpleName:update)))(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:remoteRoot)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:SAXBuilder))))(SimpleName:build)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xml))))(SimpleName:getRootElement))))(ExpressionStatement(Assignment(SimpleName:addPackages)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:Integer))(SimpleType(SimpleName:PackageVersion))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Iterator))(WildcardType))(VariableDeclarationFragment(SimpleName:iterElem)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:remoteRoot))(SimpleName:getChildren)))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterElem))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PackageVersion))(VariableDeclarationFragment(SimpleName:pack)(ClassInstanceCreation(SimpleType(SimpleName:PackageVersion))(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterElem))(SimpleName:next))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addPackages))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:id))(SimpleName:pack))))))(ExpressionStatement(Assignment(SimpleName:removePackages)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:Integer))(SimpleType(SimpleName:PackageVersion))))))(ExpressionStatement(Assignment(SimpleName:iterElem)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:getChildren)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterElem))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PackageVersion))(VariableDeclarationFragment(SimpleName:pack)(ClassInstanceCreation(SimpleType(SimpleName:PackageVersion))(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterElem))(SimpleName:next))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:id)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:id))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addPackages))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:removePackages))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id)(SimpleName:pack)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addPackages))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id))))(SimpleName:version)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pack))(SimpleName:version))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addPackages))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addPackages))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id))))(SimpleName:ecrase))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:PackageVersion)))(VariableDeclarationFragment(SimpleName:iterPack)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addPackages))(SimpleName:values)))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterPack))(SimpleName:hasNext))(Block(ExpressionStatement(MethodInvocation(SimpleName:install)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterPack))(SimpleName:next)))))))(ExpressionStatement(Assignment(SimpleName:iterPack)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:removePackages))(SimpleName:values)))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterPack))(SimpleName:hasNext))(Block(ExpressionStatement(MethodInvocation(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterPack))(SimpleName:next)))))))(IfStatement(SimpleName:offline)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:addShutdownHook)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AddPackage))(SimpleName:xml)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Main))(SimpleName:fenetre)))(SimpleName:erreur)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Fenetre.UPDATE_TERMINE_RESTART)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:oldXML)(ClassInstanceCreation(SimpleType(SimpleName:File))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oldXML))(SimpleName:delete)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oldXML))(SimpleName:createNewFile)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:out)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:oldXML)))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:xml)))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:size))(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xml))(SimpleName:delete)))(IfStatement(SimpleName:restart)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Main))(SimpleName:fenetre)))(SimpleName:erreur)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Fenetre.UPDATE_TERMINE_RESTART)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Main))(SimpleName:updateVersion))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Main))(SimpleName:fenetre)))(SimpleName:erreur)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Fenetre.ERREUR_UPDATE)(SimpleName:e)))))))))))