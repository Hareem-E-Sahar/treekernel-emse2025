(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:createProjectModelRepository)(Block(VariableDeclarationStatement(SimpleType(SimpleName:JFileChooser))(VariableDeclarationFragment(SimpleName:fileChooser)(ClassInstanceCreation(SimpleType(SimpleName:JFileChooser)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChooser))(SimpleName:setFileFilter)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileFilter))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getDescription)(Block(ReturnStatement(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ProjectModelRepositoryStore.FILE_EXTENSION)(StringLiteral:<STR>)))))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ProjectModelRepositoryStore.FILE_EXTENSION)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChooser))(SimpleName:setFileSelectionMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JFileChooser.FILES_AND_DIRECTORIES))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:state)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChooser))(SimpleName:showDialog)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getMView))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JFileChooser.APPROVE_OPTION))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:projectModelRepositoryFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChooser))(SimpleName:getSelectedFile))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModelRepositoryFile))(SimpleName:exists))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:options)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showOptionDialog)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getMView))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModelRepositoryFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModelRepositoryFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(StringLiteral:<STR>))(QualifiedName:JOptionPane.YES_NO_CANCEL_OPTION)(QualifiedName:JOptionPane.QUESTION_MESSAGE)(NullLiteral)(SimpleName:options)(ArrayAccess(SimpleName:options)(NumberLiteral:2))))))(IfStatement(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(Block(ReturnStatement)))(IfStatement(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ProjectModelRepository))(VariableDeclarationFragment(SimpleName:projectModelRepository)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProjectModelRepository))(SimpleName:createDefaultProjectModelRepository))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModelRepository))(SimpleName:setFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectModelRepositoryFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProjectModelRepositoryStore))(SimpleName:store)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectModelRepository))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:updateProjectModelRepository)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectModelRepositoryFile)))(Block(ExpressionStatement(MethodInvocation(SimpleName:updateView))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(Block(IfStatement(InfixExpression(BooleanLiteral:false)(INFIX_EXPRESSION_OPERATOR:==)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModelRepositoryFile))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ProjectModelRepositoryStore.FILE_EXTENSION))))(Block(ExpressionStatement(Assignment(SimpleName:projectModelRepositoryFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModelRepositoryFile))(SimpleName:getAbsolutePath))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ProjectModelRepositoryStore.FILE_EXTENSION)))))))(VariableDeclarationStatement(SimpleType(SimpleName:ProjectModelRepository))(VariableDeclarationFragment(SimpleName:projectModelRepository)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProjectModelRepository))(SimpleName:createDefaultProjectModelRepository))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectModelRepository))(SimpleName:setFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectModelRepositoryFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProjectModelRepositoryStore))(SimpleName:store)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectModelRepository))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:updateProjectModelRepository)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectModelRepositoryFile)))(Block(ExpressionStatement(MethodInvocation(SimpleName:updateView))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))))))