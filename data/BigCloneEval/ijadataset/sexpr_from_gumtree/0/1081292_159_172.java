(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:protected)(SimpleType(SimpleName:Message))(SimpleName:createMessage)(SingleVariableDeclaration(SimpleType(SimpleName:Representation))(SimpleName:xmlMessage))(SingleVariableDeclaration(SimpleType(SimpleName:Session))(SimpleName:session))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:AddressException))(SimpleType(SimpleName:MessagingException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:representationMessageClassName)(MethodInvocation(SimpleName:getRepresentationMessageClass))))(IfStatement(InfixExpression(SimpleName:representationMessageClassName)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:RepresentationMessage))(SimpleName:xmlMessage)(SimpleName:session)))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType(SimpleType(SimpleName:RepresentationMessage))))(VariableDeclarationFragment(SimpleName:representationMessageClass)(CastExpression(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType(SimpleType(SimpleName:RepresentationMessage))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:representationMessageClassName))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:representationMessageClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:Representation)))(TypeLiteral(SimpleType(SimpleName:Session))))))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmlMessage)(SimpleName:session)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLogger)))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:representationMessageClassName))(SimpleName:e))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:RepresentationMessage))(SimpleName:xmlMessage)(SimpleName:session))))))))))