(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:replaceEntry)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:entryName))(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:stream))(SimpleType(SimpleName:PersistenceException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:temporaryFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temporaryFile))(SimpleName:deleteOnExit)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:inputStream)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipInputStream))(VariableDeclarationFragment(SimpleName:input)(ClassInstanceCreation(SimpleType(SimpleName:ZipInputStream))(SimpleName:inputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:output)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:temporaryFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getNextEntry))))(WhileStatement(InfixExpression(SimpleName:entry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:zipEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:entry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipEntry))(SimpleName:setCompressedSize)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipEntry))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entryName))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(SimpleName:output)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stream)(SimpleName:output))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:closeEntry)))(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getNextEntry))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputStream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:gc)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isSuccess)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:delete))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isSuccess))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PersistenceException))))))(ExpressionStatement(Assignment(SimpleName:isSuccess)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temporaryFile))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isSuccess))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PersistenceException)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PersistenceException))(SimpleName:e))))))))))