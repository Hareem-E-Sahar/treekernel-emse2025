(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:addZipEntry)(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:out))(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:in))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:name)))))(ExpressionStatement(MethodInvocation(SimpleName:copyToOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:IOHelper))))))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:ex)))))))))))