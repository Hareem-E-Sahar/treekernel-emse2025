(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:usingStream)(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:NameNotFoundException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:InterproNameHandler))(VariableDeclarationFragment(SimpleName:handler)(ClassInstanceCreation(SimpleType(SimpleName:InterproNameHandler))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:interproName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:getNameById)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:assertNotNull)(METHOD_INVOCATION_ARGUMENTS(SimpleName:interproName))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:interproName))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:getNameById)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))