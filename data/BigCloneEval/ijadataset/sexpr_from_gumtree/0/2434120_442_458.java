(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SimpleType(SimpleName:FileLock))(SimpleName:tryLock)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:lockF)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:root)(SimpleName:STORAGE_FILE_LOCK))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockF))(SimpleName:deleteOnExit)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:lockF)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:res)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:res)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getChannel)))(SimpleName:tryLock)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:OverlappingFileLockException))(SimpleName:oe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:close)))(ReturnStatement(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:stringifyException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:close)))(ThrowStatement(SimpleName:e)))))(ReturnStatement(SimpleName:res))))))