(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:File))(SimpleName:createfileHandle)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filePath))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:overwriteIfExists))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:append))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sinkFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:filePath))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sinkFile))(SimpleName:exists))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sinkFile))(SimpleName:isFile)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(IfStatement(SimpleName:overwriteIfExists)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sinkFile))(SimpleName:delete)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filePath)(StringLiteral:<STR>)))))))(IfStatement(SimpleName:append)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sinkFile))(SimpleName:canWrite)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filePath)))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filePath)(StringLiteral:<STR>)(StringLiteral:<STR>)))))))))(ReturnStatement(SimpleName:sinkFile))))))