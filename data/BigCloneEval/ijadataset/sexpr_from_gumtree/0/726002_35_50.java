(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:configClassifier)(SingleVariableDeclaration(SimpleType(SimpleName:XMLConfiguration))(SimpleName:config))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:section))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Configuration))(VariableDeclarationFragment(SimpleName:methodConf)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:configurationAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:section)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:classifierName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CommonUtils))(SimpleName:getFromConfIfNotNull)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methodConf)(StringLiteral:<STR>)(SimpleName:classifierName)))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classifierName)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Constructor))(Dimension))(VariableDeclarationFragment(SimpleName:a)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getConstructors))))(ExpressionStatement(Assignment(SimpleName:cModel)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Classifier))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:a)(NumberLiteral:0)))(SimpleName:newInstance))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:wantsNumericClass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:methodConf))(SimpleName:getBoolean)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:wantsNumericClass))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))))