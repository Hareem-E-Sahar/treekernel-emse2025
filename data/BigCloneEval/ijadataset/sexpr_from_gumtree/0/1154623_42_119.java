(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:final)(PrimitiveType:boolean)(SimpleName:parseAuxFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Pattern))(VariableDeclarationFragment(SimpleName:pattern)))(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:matcher)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:weiter)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:back)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:loopFileOpen)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:pattern)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:br)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:fileList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:String)))(NumberLiteral:5))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dummy)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:filename))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dummy))(SimpleName:getParent))))(IfStatement(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:nestedAuxCounter)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:fileIndex)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:fileIndex)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileList))(SimpleName:size)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileList))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileIndex)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:br)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:fName)))))(ExpressionStatement(Assignment(SimpleName:weiter)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:loopFileOpen)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:fnfe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fnfe))(SimpleName:getMessage))))))(ExpressionStatement(Assignment(SimpleName:back)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:weiter)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:loopFileOpen)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(WhileStatement(SimpleName:weiter)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:br)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:readLine)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:weiter)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:matcher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pattern))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:find))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:end))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:start)))))(IfStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:11))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:str)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:group)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:start))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:10))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:end))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:keys)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:str))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:keys)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:keyCount)(QualifiedName:keys.length)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:t)(NumberLiteral:0)))(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:keyCount))(PostfixExpression(SimpleName:t)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dummyStr)(ArrayAccess(SimpleName:keys)(SimpleName:t))))(IfStatement(InfixExpression(SimpleName:dummyStr)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mySet))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dummyStr))(SimpleName:trim)))))))))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start)(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:8))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:end)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:start)))))(IfStatement(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:start))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:str)(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:8))(SimpleName:end))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileList))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:str))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:str)))))))))))(ExpressionStatement(Assignment(SimpleName:weiter)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(IfStatement(SimpleName:loopFileOpen)(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:br)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:close))))(ExpressionStatement(PostfixExpression(SimpleName:nestedAuxCounter)(POSTFIX_EXPRESSION_OPERATOR:++))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block)))))(ExpressionStatement(PostfixExpression(SimpleName:fileIndex)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ReturnStatement(SimpleName:back))))))