(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:expandRLE4)(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:rle))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:off))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:width))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:height))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lineBytes)(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:width)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:4))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:31)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:32))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:4))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(InfixExpression(SimpleName:off)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:lineBytes)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:height)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:dib)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:size))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:fill)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dib)(CastExpression(PrimitiveType:byte)(NumberLiteral:0x00)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rle)(NumberLiteral:0)(SimpleName:dib)(NumberLiteral:0)(SimpleName:off))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:sidx)(SimpleName:off)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(NumberLiteral:0)))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:height))(PostfixExpression(SimpleName:y)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:didx)(InfixExpression(SimpleName:off)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:lineBytes)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:y)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:high)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:width))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:code1)(InfixExpression(ArrayAccess(SimpleName:rle)(PostfixExpression(SimpleName:sidx)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:code2)(InfixExpression(ArrayAccess(SimpleName:rle)(PostfixExpression(SimpleName:sidx)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(IfStatement(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0x00))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:eol)(BooleanLiteral:false)))(SwitchStatement(SimpleName:code2)(SwitchCase(NumberLiteral:0x00))(IfStatement(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:eol)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(BreakStatement)(SwitchCase(NumberLiteral:0x01))(ReturnStatement(SimpleName:dib))(SwitchCase(NumberLiteral:0x02))(Block(ExpressionStatement(Assignment(SimpleName:code1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:rle)(PostfixExpression(SimpleName:sidx)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(ExpressionStatement(Assignment(SimpleName:code2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:rle)(PostfixExpression(SimpleName:sidx)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:+=)(SimpleName:code1)))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:+=)(SimpleName:code2)))(ExpressionStatement(Assignment(SimpleName:didx)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:lineBytes)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:code2)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:high))))(IfStatement(SimpleName:high)(Block(ExpressionStatement(PostfixExpression(SimpleName:didx)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(BreakStatement))(SwitchCase)(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:+=)(SimpleName:code2)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cnt)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code2)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(SimpleName:high)(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:cnt))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(PostfixExpression(SimpleName:didx)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:rle)(PostfixExpression(SimpleName:sidx)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code2)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:didx)(POSTFIX_EXPRESSION_OPERATOR:--)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(SimpleName:didx))(ASSIGNMENT_OPERATOR:&=)(NumberLiteral:0xf0)))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:cnt))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(PostfixExpression(SimpleName:didx)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:|=)(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:rle)(SimpleName:sidx))(INFIX_EXPRESSION_OPERATOR:>>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0f))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(SimpleName:didx))(ASSIGNMENT_OPERATOR:|=)(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:rle)(PostfixExpression(SimpleName:sidx)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xf0))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code2)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(SimpleName:didx))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(NumberLiteral:0x00))))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:cnt)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:sidx)(POSTFIX_EXPRESSION_OPERATOR:++)))))(BreakStatement))(IfStatement(SimpleName:eol)(Block(BreakStatement))))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:+=)(SimpleName:code1)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:high))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(PostfixExpression(SimpleName:didx)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code2)(INFIX_EXPRESSION_OPERATOR:>>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0f))))))(ExpressionStatement(Assignment(SimpleName:code2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code2)(INFIX_EXPRESSION_OPERATOR:>>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0f)))(INFIX_EXPRESSION_OPERATOR:|)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code2)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xf0))))))(ExpressionStatement(PostfixExpression(SimpleName:code1)(POSTFIX_EXPRESSION_OPERATOR:--)))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cnt)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:cnt))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(PostfixExpression(SimpleName:didx)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(SimpleName:code2))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:didx)(POSTFIX_EXPRESSION_OPERATOR:--)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dib)(SimpleName:didx))(ASSIGNMENT_OPERATOR:&=)(NumberLiteral:0xf0)))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))))))(ReturnStatement(SimpleName:dib))))))