(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:createBatchFile)(SingleVariableDeclaration(SimpleType(SimpleName:Reader))(SimpleName:reader))(SingleVariableDeclaration(SimpleType(SimpleName:Writer))(SimpleName:writer))(SingleVariableDeclaration(SimpleType(SimpleName:Hashtable))(SimpleName:variables))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:reader)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(SimpleName:writer)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(ParenthesizedExpression(InfixExpression(SimpleName:variables)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))))(Block(ReturnStatement(BooleanLiteral:false))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(SimpleName:reader))))(VariableDeclarationStatement(SimpleType(SimpleName:StreamTokenizer))(VariableDeclarationFragment(SimpleName:tin)(ClassInstanceCreation(SimpleType(SimpleName:StreamTokenizer))(SimpleName:in))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tin))(SimpleName:eolIsSignificant)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:quoteChar)(CastExpression(PrimitiveType:int)(SimpleName:quotingCharacter))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tin))(SimpleName:resetSyntax)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tin))(SimpleName:wordChars)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(NumberLiteral:255))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tin))(SimpleName:whitespaceChars)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(CharacterLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tin))(SimpleName:quoteChar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:quoteChar))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tin))(SimpleName:eolIsSignificant)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:type)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:outString)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:eol)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:quoted)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:newLine)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:space)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:noSpace)(ClassInstanceCreation(SimpleType(SimpleName:String)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:usedSpace)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:variable)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tin))(SimpleName:nextToken))))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:StreamTokenizer.TT_EOF))(Block(IfStatement(InfixExpression(SimpleName:quoted)(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:newLine))(Block(ExpressionStatement(Assignment(SimpleName:usedSpace)(ASSIGNMENT_OPERATOR:=)(SimpleName:noSpace)))(ExpressionStatement(Assignment(SimpleName:quoted)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:newLine)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(Block(ExpressionStatement(Assignment(SimpleName:usedSpace)(ASSIGNMENT_OPERATOR:=)(SimpleName:space)))))(ExpressionStatement(Assignment(SimpleName:outString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(SwitchStatement(SimpleName:type)(SwitchCase(QualifiedName:StreamTokenizer.TT_NUMBER))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:usedSpace))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:tin.nval))))))(BreakStatement)(SwitchCase(QualifiedName:StreamTokenizer.TT_WORD))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:usedSpace))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:tin.sval))))(BreakStatement)(SwitchCase(QualifiedName:StreamTokenizer.TT_EOL))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:eol))))(ExpressionStatement(Assignment(SimpleName:newLine)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:quoteChar))(Block(ExpressionStatement(Assignment(SimpleName:variable)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:outString)(ASSIGNMENT_OPERATOR:=)(QualifiedName:tin.sval))))(ExpressionStatement(Assignment(SimpleName:quoted)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outString))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:outString)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:variables))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:variable)))))))))(IfStatement(InfixExpression(SimpleName:outString)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:variable)(StringLiteral:<STR>)))))(ReturnStatement(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outString))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))