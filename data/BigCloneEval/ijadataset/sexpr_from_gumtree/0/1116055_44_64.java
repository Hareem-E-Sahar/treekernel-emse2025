(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:boolean)(SimpleName:lockImpl)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isValid)))(IfStatement(InfixExpression(InfixExpression(SimpleName:fl)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fl))(SimpleName:isValid)))(Block(ReturnStatement(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:fc)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:fl)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fl)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fc))(SimpleName:tryLock)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:MIN_LOCK_REGION)(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fl))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))))))))(ExpressionStatement(MethodInvocation(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:deleteOnExit)))(ExpressionStatement(Assignment(SimpleName:isValid)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:fl)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fl))(SimpleName:isValid)))))(ExpressionStatement(MethodInvocation(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:isValid)))))(ReturnStatement(SimpleName:isValid))))))