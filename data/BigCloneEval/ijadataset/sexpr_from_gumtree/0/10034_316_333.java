(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:loadTaskList)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilderFactory))(VariableDeclarationFragment(SimpleName:docBuilderFactory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DocumentBuilderFactory))(SimpleName:newInstance))))(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilder))(VariableDeclarationFragment(SimpleName:docBuilder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:docBuilderFactory))(SimpleName:newDocumentBuilder))))(VariableDeclarationStatement(SimpleType(SimpleName:Document))(VariableDeclarationFragment(SimpleName:doc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:docBuilder))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeList))(VariableDeclarationFragment(SimpleName:tasksNodes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:doc))(SimpleName:getElementsByTagName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:tasks)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:TaskCommand))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tasksNodes))(SimpleName:getLength)))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:item)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tasksNodes))(SimpleName:item)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))(VariableDeclarationStatement(SimpleType(SimpleName:TaskCommand))(VariableDeclarationFragment(SimpleName:taskCommand)(ClassInstanceCreation(SimpleType(SimpleName:TaskCommand))(SimpleName:item))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tasks))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taskCommand))(SimpleName:getName))(SimpleName:taskCommand))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tasksNodes))(SimpleName:getLength))(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:tasks)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:TaskCommand))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))))