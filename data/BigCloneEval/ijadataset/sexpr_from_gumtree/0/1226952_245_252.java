(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:convierteStringFechaAIntFecha)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:strFecha))(SimpleType(QualifiedName:java.text.ParseException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DateFormat))(VariableDeclarationFragment(SimpleName:dateF)(ClassInstanceCreation(SimpleType(SimpleName:SimpleDateFormat))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:DateFormat))(VariableDeclarationFragment(SimpleName:date1)(ClassInstanceCreation(SimpleType(SimpleName:SimpleDateFormat))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:fechaAux)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:strFecha)))))(ExpressionStatement(Assignment(SimpleName:fechaAux)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dateF))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:strFecha)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:date1))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fechaAux))))))))))