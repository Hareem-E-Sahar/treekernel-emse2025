(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:ComponentTester))(SimpleName:getTester)(SingleVariableDeclaration(SimpleType(SimpleName:Class))(SimpleName:forClass))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Component))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:forClass)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:ComponentTester))(VariableDeclarationFragment(SimpleName:tester)(CastExpression(SimpleType(SimpleName:ComponentTester))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testers))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:forClass))))))(IfStatement(InfixExpression(SimpleName:tester)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cname)(MethodInvocation(SimpleName:simpleClassName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:forClass)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pkg)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:ComponentTester))))(SimpleName:getPackage)))(SimpleName:getName))))(ExpressionStatement(Assignment(SimpleName:cname)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:pkg)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:cname)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:testClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cname)))))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:ctor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension))(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:ComponentFinder)))))))))(ExpressionStatement(Assignment(SimpleName:tester)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:ComponentTester))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(ThisExpression))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testers))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:forClass)(SimpleName:tester))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tested))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tester)(SimpleName:forClass)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:ite))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ite))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:nsm))(Block(ExpressionStatement(Assignment(SimpleName:tester)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getTester)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:forClass))(SimpleName:getSuperclass))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:ie))(Block(ExpressionStatement(Assignment(SimpleName:tester)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getTester)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:forClass))(SimpleName:getSuperclass))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:iae))(Block(ExpressionStatement(Assignment(SimpleName:tester)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getTester)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:forClass))(SimpleName:getSuperclass))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:cnf))(Block(ExpressionStatement(Assignment(SimpleName:tester)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getTester)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:forClass))(SimpleName:getSuperclass)))))))))))(ReturnStatement(SimpleName:tester))))))