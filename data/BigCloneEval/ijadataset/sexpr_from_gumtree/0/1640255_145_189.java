(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:convert)(SimpleType(SimpleName:ConverterException))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:TabConversionException))(Block(IfStatement(InfixExpression(SimpleName:xmlFilesToConvert)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmlFilesToConvert))(SimpleName:isEmpty))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:outputFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:overwriteOutputFile)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:canWrite))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:OntologyNameFinder))(VariableDeclarationFragment(SimpleName:finder)(ClassInstanceCreation(SimpleType(SimpleName:OntologyNameFinder))(SimpleName:ontologyIndexSearcher))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SimpleName:ontologyNameToAutocomplete)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:finder))(SimpleName:addOntologyName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))))(VariableDeclarationStatement(SimpleType(SimpleName:Xml2Tab))(VariableDeclarationFragment(SimpleName:x2t)(ClassInstanceCreation(SimpleType(SimpleName:IntactXml2Tab))(SimpleName:finder))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x2t))(SimpleName:addOverrideSourceDatabase)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:CrossReferenceImpl))(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x2t))(SimpleName:setExpansionStrategy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:expansionStragegy))))(IfStatement(SimpleName:interactorPairClustering)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x2t))(SimpleName:setPostProcessor)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:IntactClusterInteractorPairProcessor)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x2t))(SimpleName:setPostProcessor)(METHOD_INVOCATION_ARGUMENTS(NullLiteral))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:BinaryInteraction)))(VariableDeclarationFragment(SimpleName:interactions)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x2t))(SimpleName:convert)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmlFilesToConvert)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:interactions))(SimpleName:isEmpty))(Block(IfStatement(InfixExpression(SimpleName:logWriter)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logWriter))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:NEW_LINE)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleName:xmlFilesToConvert)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logWriter))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(SimpleName:NEW_LINE)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logWriter))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:NEW_LINE)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logWriter))(SimpleName:flush))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getName))(StringLiteral:<STR>))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PsimiTabWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:IntactPsimiTabWriter)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:interactions)(SimpleName:outputFile))))))))))