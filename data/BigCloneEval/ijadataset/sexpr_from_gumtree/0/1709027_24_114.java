(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:args)(Dimension))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:VERSION)(StringLiteral:<STR>)(SimpleName:BUILD_DATE)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:INFO_URL)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.GregorianCalendar))(VariableDeclarationFragment(SimpleName:calendar)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.GregorianCalendar)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.Date))(VariableDeclarationFragment(SimpleName:startDate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getTime))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DateUtils))(SimpleName:getCurrentDateAndTime))))))(VariableDeclarationStatement(SimpleType(SimpleName:CommandLineParser))(VariableDeclarationFragment(SimpleName:parser)(ClassInstanceCreation(SimpleType(SimpleName:CommandLineParser))(SimpleName:args))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:taskType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parser))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:propsPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parser))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dataFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parser))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:output)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parser))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InputUtils))(SimpleName:isValid)(METHOD_INVOCATION_ARGUMENTS(SimpleName:taskType)(SimpleName:TASK_TYPES)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InputUtils))(SimpleName:isValid)(METHOD_INVOCATION_ARGUMENTS(SimpleName:propsPath)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InputUtils))(SimpleName:arrayToString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TASK_TYPES))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InputUtils))(SimpleName:arrayToString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DATA_FORMATS))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taskType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InputUtils))(SimpleName:isValid)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataFormat)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:dataFormat)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InputUtils))(SimpleName:isValid)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataFormat)(SimpleName:DATA_FORMATS)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dataFormat)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InputUtils))(SimpleName:arrayToString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DATA_FORMATS))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:status)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:PropertiesManager))(VariableDeclarationFragment(SimpleName:properties)(ClassInstanceCreation(SimpleType(SimpleName:PropertiesManager)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:loadFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:propsPath)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taskType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:true))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DbManager))(VariableDeclarationFragment(SimpleName:database)(ClassInstanceCreation(SimpleType(SimpleName:DbManager))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:database))(SimpleName:connect))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:BuildNetworkData))(VariableDeclarationFragment(SimpleName:task)(ClassInstanceCreation(SimpleType(SimpleName:BuildNetworkData))(SimpleName:database)(SimpleName:properties))))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:doReset))))(IfStatement(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:doTask)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taskType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ExportNetworkData))(VariableDeclarationFragment(SimpleName:task)(ClassInstanceCreation(SimpleType(SimpleName:ExportNetworkData))(SimpleName:properties))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:doesFileExist)(METHOD_INVOCATION_ARGUMENTS(SimpleName:output)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outputFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:output))))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:doTask)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataFormat)(SimpleName:outputFile))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))))(IfStatement(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DateUtils))(SimpleName:getCurrentDateAndTime))))))(ExpressionStatement(Assignment(SimpleName:calendar)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.GregorianCalendar)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.Date))(VariableDeclarationFragment(SimpleName:finishDate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getTime))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:startTime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startDate))(SimpleName:getTime))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:finishTime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:finishDate))(SimpleName:getTime))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:minuteConstant)(NumberLiteral:60000)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:timeDifference)(InfixExpression(SimpleName:finishTime)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:startTime))))(ExpressionStatement(Assignment(SimpleName:timeDifference)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:timeDifference)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:minuteConstant))))(IfStatement(InfixExpression(SimpleName:timeDifference)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:timeDifference)))))(Block(ExpressionStatement(Assignment(SimpleName:timeDifference)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:timeDifference)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:60))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:timeDifference))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))))))