(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:go)(SimpleType(SimpleName:UploadException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:state)(SimpleName:BEFORE_FILE_STATE)))(VariableDeclarationStatement(SimpleType(SimpleName:Comparator))(VariableDeclarationFragment(SimpleName:comparator)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayComparator)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:previous_newline_pos)(NumberLiteral:0L)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start_pos)(NumberLiteral:0L)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:stop_pos)(NumberLiteral:0L)))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:headers)(ClassInstanceCreation(SimpleType(SimpleName:LinkedList)))))(ExpressionStatement(Assignment(SimpleName:upload_results)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:LinkedList)))))(VariableDeclarationStatement(SimpleType(SimpleName:UploadResults))(VariableDeclarationFragment(SimpleName:current_results)(NullLiteral)))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Long))(VariableDeclarationFragment(SimpleName:current)(CastExpression(SimpleType(SimpleName:Long))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:current_newline_pos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:current))(SimpleName:longValue))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:difference)(InfixExpression(SimpleName:current_newline_pos)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:previous_newline_pos))))(SwitchStatement(SimpleName:state)(SwitchCase(SimpleName:BEFORE_FILE_STATE))(IfStatement(InfixExpression(SimpleName:difference)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:start_boundary_length))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:UploadException))(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:previous_newline_pos)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:current_newline_pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:READ_HEADERS_STATE)))))(BreakStatement)(SwitchCase(SimpleName:READ_HEADERS_STATE))(IfStatement(InfixExpression(SimpleName:difference)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:current_results)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:_walkHeaders)(METHOD_INVOCATION_ARGUMENTS(SimpleName:headers)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:upload_results))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:current_results))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:headers))(SimpleName:clear)))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:READ_FILE_STATE)))(ExpressionStatement(Assignment(SimpleName:start_pos)(ASSIGNMENT_OPERATOR:=)(SimpleName:current_newline_pos))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previous_newline_pos))))(ExpressionStatement(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(CastExpression(PrimitiveType:int)(SimpleName:difference))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:headers))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:buffer)(NumberLiteral:0)(SimpleName:count)))))))(ExpressionStatement(Assignment(SimpleName:previous_newline_pos)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:current_newline_pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))))(BreakStatement)(SwitchCase(SimpleName:READ_FILE_STATE))(IfStatement(InfixExpression(SimpleName:difference)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:start_boundary_length))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previous_newline_pos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(CastExpression(PrimitiveType:int)(SimpleName:difference)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comparator))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:start_boundary)(SimpleName:buffer)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:stop_pos)(ASSIGNMENT_OPERATOR:=)(SimpleName:previous_newline_pos)))(ExpressionStatement(MethodInvocation(SimpleName:_readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:start_pos)(SimpleName:stop_pos)(SimpleName:current_results)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:oops))(Block)))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:READ_HEADERS_STATE))))))(IfStatement(InfixExpression(SimpleName:difference)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:end_boundary_length))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previous_newline_pos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(CastExpression(PrimitiveType:int)(SimpleName:difference)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comparator))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:end_boundary)(SimpleName:buffer)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:stop_pos)(ASSIGNMENT_OPERATOR:=)(SimpleName:previous_newline_pos)))(ExpressionStatement(MethodInvocation(SimpleName:_readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:start_pos)(SimpleName:stop_pos)(SimpleName:current_results)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:oops))(Block)))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:READ_HEADERS_STATE))))))))(ExpressionStatement(Assignment(SimpleName:previous_newline_pos)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:current_newline_pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))))(BreakStatement))))))))