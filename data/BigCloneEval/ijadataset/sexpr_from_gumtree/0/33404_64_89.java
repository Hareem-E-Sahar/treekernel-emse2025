(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:write)(SingleVariableDeclaration(SimpleType(SimpleName:SpantusBundle))(SimpleName:bundle))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:zipFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:zipFile)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:id)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Entry))(SimpleType(SimpleName:String))(SimpleType(SimpleName:MarkerSet)))(SimpleName:markerSetEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:getHolder))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Marker))(SimpleName:markerEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:markerSetEntry))(SimpleName:getValue))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:idStr)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:markerSetEntry))(SimpleName:getKey))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(PostfixExpression(SimpleName:id)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:idStr)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:SIGNAL_SEGMENT_MARKER))))))(VariableDeclarationStatement(SimpleType(SimpleName:SignalSegment))(VariableDeclarationFragment(SimpleName:segment)(ClassInstanceCreation(SimpleType(SimpleName:SignalSegment)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:segment))(SimpleName:setId)(METHOD_INVOCATION_ARGUMENTS(SimpleName:idStr))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:segment))(SimpleName:setMarker)(METHOD_INVOCATION_ARGUMENTS(SimpleName:markerEntry))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:IValues)))(VariableDeclarationFragment(SimpleName:features)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractorInputReaderService))(SimpleName:findAllVectorValuesForMarker)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:getReader))(SimpleName:markerEntry)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:segment))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:features))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:signalSegmentDao))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:segment)(SimpleName:out))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:BUNDLE_FILE_SAMPLE)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:readerDao))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:getReader))(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:BUNDLE_FILE_MARKER)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:markerDao))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:getHolder))(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))))))))))