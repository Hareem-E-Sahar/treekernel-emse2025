(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:validateInput)(SingleVariableDeclaration(SimpleType(SimpleName:Map))(SimpleName:propertyMap))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:requiredPropStr)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:authority)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:authority)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:requiredPropStr))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:conceptType)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:conceptType)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:requiredPropStr))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:type)(StringLiteral:<STR>)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conceptType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conceptType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conceptType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:conceptType)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:versionStr)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:versionStr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:requiredPropStr))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:versionNumStr)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:DTSBaseTable.VERSION_NUM_STR))))))(IfStatement(InfixExpression(SimpleName:versionNumStr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:DTSBaseTable.VERSION_NUM_STR)(StringLiteral:<STR>)(SimpleName:requiredPropStr)))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:versionNumStr)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:DTSBaseTable.VERSION_NUM_STR)(StringLiteral:<STR>)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:accessMode)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:accessMode)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:requiredPropStr))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:mode)(StringLiteral:<STR>)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:accessMode))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:accessMode))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:accessMode)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:namespaceType)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:namespaceType)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:namespaceType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(QualifiedName:GidGenerator.localNamespaceFlag)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setLocalNamespaceFlag)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:namespaceType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(QualifiedName:GidGenerator.localNamespaceFlag)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setLocalNamespaceFlag)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:namespaceType)(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:semanticType)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:semanticType)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:semanticType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setHasSemanticTypes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:semanticType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setHasSemanticTypes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:semanticType)(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:namespaceId)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:namespaceId)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:namespaceId))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:numSourceRecords)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:numSourceRecords)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:value)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:numSourceRecords)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setNumSourceRecords)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:numTargetRecords)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:numTargetRecords)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:value)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:numTargetRecords)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setNumTargetRecords)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setAuthority)(METHOD_INVOCATION_ARGUMENTS(SimpleName:authority))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setConceptType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:type))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setVersion)(METHOD_INVOCATION_ARGUMENTS(SimpleName:versionStr))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setAccessMode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mode))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setNamespaceType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:namespaceType))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:DTSBaseTable.VERSION_NUM_STR)(SimpleName:versionNumStr))))(VariableDeclarationStatement(SimpleType(SimpleName:Connection))(VariableDeclarationFragment(SimpleName:sourceConn)(CastExpression(SimpleType(SimpleName:Connection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:getSourceConKey)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Connection))(VariableDeclarationFragment(SimpleName:targetConn)(CastExpression(SimpleType(SimpleName:Connection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propertyMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DTSBaseTable))(SimpleName:getTargetConKey)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TableDTS_NAMESPACE))(SimpleName:checkNameSpace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceConn)(SimpleName:targetConn))))))))