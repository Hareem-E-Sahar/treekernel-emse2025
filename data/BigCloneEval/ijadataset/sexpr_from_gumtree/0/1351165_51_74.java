(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:encode)(SingleVariableDeclaration(SimpleType(SimpleName:TheMatrix))(SimpleName:m))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:outFileName))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outFileName)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zipout)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(InfixExpression(SimpleName:outFileName)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:EXT))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipout))(SimpleName:setMethod)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ZipOutputStream.DEFLATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipout))(SimpleName:setLevel)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:9))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:outFileName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipout))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(VariableDeclarationStatement(SimpleType(SimpleName:PrintWriter))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:PrintWriter))(SimpleName:zipout))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:getImageHeight))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:getImageWidth))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:getImageWidth)))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:x))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(NumberLiteral:0)))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:getImageHeight)))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:y))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Color))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:getColor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)(SimpleName:y)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getRGB)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipout))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Error))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e)))))))))))