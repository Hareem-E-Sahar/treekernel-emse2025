(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:startBatch)(SingleVariableDeclaration(SimpleType(SimpleName:Batch))(SimpleName:batch))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:extractingFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dir)(MethodInvocation(SimpleName:toFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:batch)(BooleanLiteral:true))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractingFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractingFile))(SimpleName:delete)))))(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:extractingFile)))(SimpleName:getChannel))))(ExpressionStatement(SuperMethodInvocation(SimpleName:startBatch)(SimpleName:batch))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IoException))(SimpleName:ex))))))))))