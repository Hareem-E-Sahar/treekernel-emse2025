(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Notification))(VariableDeclarationFragment(SimpleName:notif)))(VariableDeclarationStatement(SimpleType(SimpleName:SMTPClient))(VariableDeclarationFragment(SimpleName:client)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:running)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(WhileStatement(SimpleName:running)(Block(SynchronizedStatement(ThisExpression)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:wait)))))(ExpressionStatement(Assignment(SimpleName:notif)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:removeFirst))))))(IfStatement(InfixExpression(SimpleName:notif)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ContinueStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:header)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:SimpleSMTPHeader))(SimpleName:sender)(SimpleName:recipient)(QualifiedName:notif.subject)))(SimpleName:toString))))(ExpressionStatement(Assignment(SimpleName:client)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SMTPClient)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(SimpleName:host))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SMTPReply))(SimpleName:isPositiveCompletion)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyCode)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:host)(StringLiteral:<STR>))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:login)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyCode))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyString)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:setSender)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sender))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sender)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyCode))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyString)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:addRecipient)(METHOD_INVOCATION_ARGUMENTS(SimpleName:recipient))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:recipient)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyCode))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyString)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:sendShortMessageData)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:header)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:notif.body)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyCode))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:getReplyString)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:logout)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:disconnect))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:client)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:logout)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:disconnect))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:f))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:enableNotifications)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))))