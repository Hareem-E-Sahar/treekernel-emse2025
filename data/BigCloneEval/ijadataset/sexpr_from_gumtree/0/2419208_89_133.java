(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(Modifier:synchronized)(PrimitiveType:void)(SimpleName:newTask)(SingleVariableDeclaration(SimpleType(SimpleName:Task))(SimpleName:task_))(SingleVariableDeclaration(SimpleType(SimpleName:WorkerThread))(SimpleName:currentThread_))(Block(IfStatement(InfixExpression(SimpleName:resetting)(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:task_)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(ReturnStatement))(VariableDeclarationStatement(SimpleType(SimpleName:AWorkerThread))(VariableDeclarationFragment(SimpleName:current_)(CastExpression(SimpleType(SimpleName:AWorkerThread))(SimpleName:currentThread_))))(IfStatement(InfixExpression(SimpleName:debug)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isDebugEnabledAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_Q)))(InfixExpression(SimpleName:current_)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:_getTime))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qReady))(SimpleName:getLength))(StringLiteral:<STR>)(QualifiedName:current_.state))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:current_)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:current_))(SimpleName:isReadyForNextTask))))(ExpressionStatement(Assignment(SimpleName:current_)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(IfStatement(InfixExpression(QualifiedName:task_.time)(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(SimpleName:_getTime)))(Block(IfStatement(InfixExpression(SimpleName:debug)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isDebugEnabledAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD))))(ExpressionStatement(MethodInvocation(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD)(SimpleName:current_)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:task_))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:wakeupThread.Q))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:task_.time)(SimpleName:task_))))(IfStatement(SimpleName:logenabled)(Block(IfStatement(InfixExpression(SimpleName:tf)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(SimpleName:_openlog))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:task_.time)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:wakeupThread.Q))(SimpleName:getLength))(StringLiteral:<STR>))))(SimpleName:toCharArray)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:flush))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e_))(Block)))))(IfStatement(InfixExpression(SimpleName:maxlength)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:wakeupThread.Q))(SimpleName:getLength)))(ExpressionStatement(Assignment(SimpleName:maxlength)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:wakeupThread.Q))(SimpleName:getLength)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:timeScaleReciprocal)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0.0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:wakeupThread.Q))(SimpleName:firstElement))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:task_)))(ExpressionStatement(MethodInvocation(SimpleName:triggerWakeupThread))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:State_INACTIVE))(ExpressionStatement(MethodInvocation(SimpleName:_startAll)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)))))(ReturnStatement)))(IfStatement(InfixExpression(InfixExpression(SimpleName:current_)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qReady))(SimpleName:isEmpty)))(Block(IfStatement(InfixExpression(SimpleName:debug)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isDebugEnabledAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD))))(ExpressionStatement(MethodInvocation(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD)(SimpleName:current_)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:task_)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(QualifiedName:current_.nextTask)(ASSIGNMENT_OPERATOR:=)(SimpleName:task_)))(ReturnStatement)))(SynchronizedStatement(ThisExpression)(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qReady))(SimpleName:isEmpty)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:current_)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:getWorkforce))))))(Block(IfStatement(InfixExpression(SimpleName:debug)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isDebugEnabledAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD))))(ExpressionStatement(MethodInvocation(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD)(SimpleName:current_)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:task_))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qReady))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:task_))))(ReturnStatement)))(IfStatement(InfixExpression(SimpleName:current_)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(SimpleName:debug)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isDebugEnabledAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD))))(ExpressionStatement(MethodInvocation(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD)(SimpleName:current_)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:task_)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(QualifiedName:current_.nextTask)(ASSIGNMENT_OPERATOR:=)(SimpleName:task_))))(Block(ExpressionStatement(Assignment(SimpleName:current_)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:grabOne))))(IfStatement(InfixExpression(SimpleName:debug)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isDebugEnabledAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD))))(ExpressionStatement(MethodInvocation(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Debug_THREAD)(NullLiteral)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:task_)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:current_))(SimpleName:_getName)))))))(SynchronizedStatement(SimpleName:current_)(Block(ExpressionStatement(Assignment(QualifiedName:current_.mainContext)(ASSIGNMENT_OPERATOR:=)(SimpleName:task_)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:current_))(SimpleName:start)))))))))))))