(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:eval)(SimpleType(SimpleName:BuildException))(Block(IfStatement(InfixExpression(SimpleName:spec)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:spec))(QualifiedName:Project.MSG_VERBOSE))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:spec))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(IfStatement(InstanceofExpression(SimpleName:conn)(SimpleType(SimpleName:HttpURLConnection)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:http)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:conn))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:http))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requestMethod))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:code)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:http))(SimpleName:getResponseCode))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:spec)(StringLiteral:<STR>)(SimpleName:code))(QualifiedName:Project.MSG_VERBOSE))))(IfStatement(InfixExpression(InfixExpression(SimpleName:code)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:code)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:errorsBeginAt)))(Block(ReturnStatement(BooleanLiteral:true))))(ReturnStatement(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.net.ProtocolException))(SimpleName:pe))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:requestMethod))(SimpleName:pe)))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:e))(Block(ReturnStatement(BooleanLiteral:false))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:spec))(SimpleName:e))))))(ReturnStatement(BooleanLiteral:true))))))