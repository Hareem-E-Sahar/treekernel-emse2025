(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleName:FilePageServer)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:aVolumeFileName))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:shouldForceOpen))(SimpleType(SimpleName:PageServerException))(Block(ExpressionStatement(Assignment(SimpleName:mVolumeFileName)(ASSIGNMENT_OPERATOR:=)(SimpleName:aVolumeFileName)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:aVolumeFileName))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PageServerNotFoundException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aVolumeFileName))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canRead)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PageServerException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aVolumeFileName)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:mReadOnly)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canWrite)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:openMode)(ParenthesizedExpression(ConditionalExpression(SimpleName:mReadOnly)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:success)(BooleanLiteral:false)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:mVolumeFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(SimpleName:openMode))))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:fileLock)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mVolumeFile))(SimpleName:getChannel)))(SimpleName:tryLock))))(IfStatement(InfixExpression(SimpleName:fileLock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PageServerException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aVolumeFileName))))))(ExpressionStatement(Assignment(SimpleName:mHeader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:VolumeHeader)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mHeader))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mVolumeFile))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mHeader))(SimpleName:isOpen))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:shouldForceOpen)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:VolumeNeedsRecoveryException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aVolumeFileName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mHeader))(SimpleName:setOpenFlag)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mHeader))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mVolumeFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mVolumeFile))(SimpleName:getChannel)))(SimpleName:force)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:mPageSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mHeader))(SimpleName:getPageSize))))(ExpressionStatement(Assignment(SimpleName:success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PageServerNotFoundException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aVolumeFileName))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:PageServerException))(SimpleName:e))(Block(ThrowStatement(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PageServerException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aVolumeFileName)(StringLiteral:<STR>)(SimpleName:t))(SimpleName:t)))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:success))(Block(IfStatement(InfixExpression(SimpleName:mVolumeFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mVolumeFile))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(ExpressionStatement(Assignment(SimpleName:mVolumeFile)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))))))))))