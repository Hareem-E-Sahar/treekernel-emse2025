(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:fetchFixedBlock)(SingleVariableDeclaration(SimpleType(SimpleName:BufferedReader))(SimpleName:reader))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:blockSize))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:start)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:text)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mUrl2DocnoMap))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:mBlockNumber)(POSTFIX_EXPRESSION_OPERATOR:++)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:number)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mBlockNumber)(StringLiteral:<STR>)))))(WhileStatement(InfixExpression(InfixExpression(PostfixExpression(SimpleName:number)(POSTFIX_EXPRESSION_OPERATOR:++))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:blockSize))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:text)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fields)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:text))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:fields)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:fields.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:2)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:msg)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:text))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mUrl2DocnoMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MD5))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:fields)(NumberLiteral:0))))(ArrayAccess(SimpleName:fields)(NumberLiteral:1)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:end)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mBlockNumber)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mUrl2DocnoMap))(SimpleName:size))(StringLiteral:<STR>)(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:end))(SimpleName:getTime))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:getTime))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:1000)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:text)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ReturnStatement(BooleanLiteral:true))))))