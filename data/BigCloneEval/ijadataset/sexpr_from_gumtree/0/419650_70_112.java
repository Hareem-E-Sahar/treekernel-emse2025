(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:long)(SimpleName:getTagDate)(SimpleType(SimpleName:ConfigurationException))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:tagDate)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:found)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.net.URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Resources))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LICENSE_MARKER_FILE)))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(IfStatement(InstanceofExpression(SimpleName:conn)(SimpleType(SimpleName:JarURLConnection)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:JarURLConnection))(VariableDeclarationFragment(SimpleName:juc)(CastExpression(SimpleType(SimpleName:JarURLConnection))(SimpleName:conn))))(VariableDeclarationStatement(SimpleType(SimpleName:JarEntry))(VariableDeclarationFragment(SimpleName:tagEntry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:juc))(SimpleName:getJarEntry))))(IfStatement(InfixExpression(SimpleName:tagEntry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:entryDate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tagEntry))(SimpleName:getTime))))(IfStatement(InfixExpression(SimpleName:entryDate)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:tagDate)(ASSIGNMENT_OPERATOR:=)(SimpleName:entryDate))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TBException))(StringLiteral:<STR>))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getClass)))(SimpleName:getName)))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ReturnStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Date))))(SimpleName:getTime))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1000000L))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getFile))))(ExpressionStatement(Assignment(SimpleName:fileName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileName))(SimpleName:replaceAll)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tagFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fileName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tagFile))(SimpleName:exists))(Block(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:tagDate)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tagFile))(SimpleName:lastModified)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TBException))(StringLiteral:<STR>)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:found))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TBException))(StringLiteral:<STR>)))))(ReturnStatement(SimpleName:tagDate))))))