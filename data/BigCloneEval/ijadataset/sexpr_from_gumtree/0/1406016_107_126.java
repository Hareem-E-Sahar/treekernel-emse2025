(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:CharTrieBase))(SimpleName:createTrieInternal)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:CharSequence))(Dimension))(SimpleName:seqs))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:pos))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:start))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:end))(Block(IfStatement(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:end))(ReturnStatement(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:end)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:split)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:seqs)(SimpleName:mid)))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pos)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:goRight)(SimpleName:mid)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:goRight)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:end))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:seqs)(SimpleName:goRight))(SimpleName:pos)))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:split)))(ExpressionStatement(PostfixExpression(SimpleName:goRight)(POSTFIX_EXPRESSION_OPERATOR:++))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:goLeft)(SimpleName:mid)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:goLeft)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:start))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:seqs)(InfixExpression(SimpleName:goLeft)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(SimpleName:pos)))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:split)))(ExpressionStatement(PostfixExpression(SimpleName:goLeft)(POSTFIX_EXPRESSION_OPERATOR:--))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:goLeft2)(SimpleName:goLeft)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:id)(SimpleName:NO_INDEX)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:seqs)(SimpleName:goLeft)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:id)(ASSIGNMENT_OPERATOR:=)(SimpleName:goLeft)))(ExpressionStatement(PostfixExpression(SimpleName:goLeft2)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:goLeft))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:goRight)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:end)))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FullTree))(SimpleName:id)(SimpleName:split)(MethodInvocation(SimpleName:createTrieInternal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:seqs)(SimpleName:pos)(SimpleName:start)(SimpleName:goLeft)))(MethodInvocation(SimpleName:createTrieInternal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:seqs)(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:goLeft2)(SimpleName:goRight)))(MethodInvocation(SimpleName:createTrieInternal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:seqs)(SimpleName:pos)(SimpleName:goRight)(SimpleName:end))))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:ForwardTree))(SimpleName:start)(SimpleName:split)(MethodInvocation(SimpleName:createTrieInternal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:seqs)(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:goLeft2)(SimpleName:goRight)))))))))))