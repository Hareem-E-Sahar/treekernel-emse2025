(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:SwLocaleProvider)(SingleVariableDeclaration(SimpleType(SimpleName:IKernel))(SimpleName:kernel))(Block(SuperConstructorInvocation(SimpleName:kernel))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:IConfigProvidingChannel))(VariableDeclarationFragment(SimpleName:iconf)(CastExpression(SimpleType(SimpleName:IConfigProvidingChannel))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:kernel))(SimpleName:getChannel)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:IConfigProvidingChannel))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dlocale)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iconf))(SimpleName:getItem)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:spl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dlocale))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lang)(ArrayAccess(SimpleName:spl)(NumberLiteral:0)))(VariableDeclarationFragment(SimpleName:country)(ArrayAccess(SimpleName:spl)(NumberLiteral:1)))(VariableDeclarationFragment(SimpleName:variant)(ArrayAccess(SimpleName:spl)(NumberLiteral:2))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:lang)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:country)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:variant)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:_locale)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Locale))(SimpleName:lang)(SimpleName:country)(SimpleName:variant))))(IfStatement(InfixExpression(InfixExpression(SimpleName:lang)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:country)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:_locale)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Locale))(SimpleName:lang)(SimpleName:country))))(IfStatement(InfixExpression(SimpleName:lang)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:_locale)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Locale))(SimpleName:lang))))(ExpressionStatement(Assignment(SimpleName:_locale)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Locale))(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ModuleNotFoundException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:_locale)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Locale))(StringLiteral:<STR>)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SwConfigurationFaultException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:_locale)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Locale))(StringLiteral:<STR>)(StringLiteral:<STR>)))))))))))