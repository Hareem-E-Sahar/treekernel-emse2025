(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:URLConnection))(SimpleName:getURLConnection)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:ignoreBadCertificates))(SimpleType(SimpleName:KeyManagementException))(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleType(SimpleName:UnknownHostException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:SSLSocketFactory))(VariableDeclarationFragment(SimpleName:sslSocketFactory)(NullLiteral)))(IfStatement(SimpleName:ignoreBadCertificates)(Block(VariableDeclarationStatement(SimpleType(SimpleName:SSLContext))(VariableDeclarationFragment(SimpleName:sslContext)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SSLContext))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslContext))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(MethodInvocation(SimpleName:getAllTrustingTrustManager))(ClassInstanceCreation(SimpleType(QualifiedName:java.security.SecureRandom))))))(ExpressionStatement(Assignment(SimpleName:sslSocketFactory)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslContext))(SimpleName:getSocketFactory)))))(Block(ExpressionStatement(Assignment(SimpleName:sslSocketFactory)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SSLSocketFactory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SSLSocketFactory))(SimpleName:getDefault)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HttpsURLConnection))(SimpleName:setDefaultSSLSocketFactory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sslSocketFactory))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))))