(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:authenticateUser)(SingleVariableDeclaration(SimpleType(SimpleName:RSAPrivateKey))(SimpleName:privateKey_))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:SSHProtocolException))(SimpleType(SimpleName:SSHAuthFailedException))(Block(IfStatement(InfixExpression(SimpleName:_phase)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:PHASE_AUTHENTICATE))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:privateKey_))(SimpleName:getComment))(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:modulus)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:privateKey_))(SimpleName:getModulus))))(VariableDeclarationStatement(SimpleType(SimpleName:CMSG_AUTH_RSA))(VariableDeclarationFragment(SimpleName:auth_rsa)(ClassInstanceCreation(SimpleType(SimpleName:CMSG_AUTH_RSA))(SimpleName:modulus))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_ssh_out))(SimpleName:writePacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:auth_rsa))))(VariableDeclarationStatement(SimpleType(SimpleName:Packet))(VariableDeclarationFragment(SimpleName:packet)(MethodInvocation(SimpleName:readNextPacket))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:packet_type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:packet))(SimpleName:getPacketType))))(IfStatement(InfixExpression(SimpleName:packet_type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:SSH_SMSG_FAILURE))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:packet_type)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:SSH_SMSG_AUTH_RSA_CHALLENGE))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SSHProtocolException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:packet_type)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:SMSG_AUTH_RSA_CHALLENGE))(VariableDeclarationFragment(SimpleName:challenge_packet)(CastExpression(SimpleType(SimpleName:SMSG_AUTH_RSA_CHALLENGE))(SimpleName:packet))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:challenge)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:challenge_packet))(SimpleName:getChallenge))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:serverRandomBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RSAAlgorithm))(SimpleName:encrypt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:challenge)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:privateKey_))(SimpleName:getExponent))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:privateKey_))(SimpleName:getModulus))))))(ExpressionStatement(Assignment(SimpleName:serverRandomBytes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RSAAlgorithm))(SimpleName:stripPKCSPadding)(METHOD_INVOCATION_ARGUMENTS(SimpleName:serverRandomBytes)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:toBeHashed)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SSHMisc))(SimpleName:concatenate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:serverRandomBytes)(SimpleName:_session_id)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:response_bytes)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:md5)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:response_bytes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md5))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:toBeHashed))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SSHProtocolException))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:CMSG_AUTH_RSA_RESPONSE))(VariableDeclarationFragment(SimpleName:response_packet)(ClassInstanceCreation(SimpleType(SimpleName:CMSG_AUTH_RSA_RESPONSE))(SimpleName:response_bytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_ssh_out))(SimpleName:writePacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:response_packet))))(ExpressionStatement(Assignment(SimpleName:packet)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:readNextPacket))))(ExpressionStatement(Assignment(SimpleName:packet_type)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:packet))(SimpleName:getPacketType))))(IfStatement(InfixExpression(SimpleName:packet_type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:SSH_SMSG_FAILURE))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:packet_type)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:SSH_SMSG_SUCCESS))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SSHProtocolException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:packet_type)(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:_phase)(ASSIGNMENT_OPERATOR:=)(SimpleName:PHASE_PREPARATORY)))(ReturnStatement(BooleanLiteral:true))))))