(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:nextBytes)(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:b))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:off))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:len))(Block(SynchronizedStatement(SimpleName:md)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(WhileStatement(BooleanLiteral:true)(Block(IfStatement(InfixExpression(SimpleName:bytesAvailable)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:seed)(NumberLiteral:0)(QualifiedName:seed.length))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:randomBytes)(NumberLiteral:0)(QualifiedName:randomBytes.length)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:DigestException))(SimpleName:de))(Block)))(ExpressionStatement(MethodInvocation(SimpleName:updateSeed)))(ExpressionStatement(Assignment(SimpleName:bytesAvailable)(ASSIGNMENT_OPERATOR:=)(QualifiedName:randomBytes.length)))))(WhileStatement(InfixExpression(SimpleName:bytesAvailable)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:len))(ReturnStatement))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:b)(InfixExpression(SimpleName:off)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:randomBytes)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:--)(SimpleName:bytesAvailable)))))(ExpressionStatement(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++)))))))))))))