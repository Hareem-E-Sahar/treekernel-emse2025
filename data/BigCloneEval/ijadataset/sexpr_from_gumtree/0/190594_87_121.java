(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:readLanguageList)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:languageList)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageList))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:numLangs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageList))(SimpleName:keySet)))(SimpleName:size))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:langList))(SimpleName:ensureCapacity)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:numLangs)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:3)))))(VariableDeclarationStatement(SimpleType(SimpleName:EdLangName))(VariableDeclarationFragment(SimpleName:commentsLang)(MethodInvocation(SimpleName:readLang)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:readRef)(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:commentsLang)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:commentsLang)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:readLang)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:readRef)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:refLang)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:addLang)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(NullLiteral)(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:refLang)(ASSIGNMENT_OPERATOR:=)(FieldAccess(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:EdLangName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:langList))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(SimpleName:readRef)(NumberLiteral:0)(NumberLiteral:1))))))(SimpleName:edLang))))))(VariableDeclarationStatement(SimpleType(SimpleName:EdLangName))(VariableDeclarationFragment(SimpleName:hintsLang)(MethodInvocation(SimpleName:readLang)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:id)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Enumeration))(VariableDeclarationFragment(SimpleName:languageKeys)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageList))(SimpleName:keys))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageKeys))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:languageName)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageKeys))(SimpleName:nextElement)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:languageCode)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageList))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:languageName))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:languageNameLwr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageName))(SimpleName:toLowerCase))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageNameLwr))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageNameLwr))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageNameLwr))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ContinueStatement))(ExpressionStatement(MethodInvocation(SimpleName:readLang)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:id)(POSTFIX_EXPRESSION_OPERATOR:++))))(SimpleName:languageCode)(SimpleName:languageName)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:printStackTrace)))))(Block(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:langList))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:languageList))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:addLang)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(NullLiteral)(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:refLang)(ASSIGNMENT_OPERATOR:=)(FieldAccess(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:EdLangName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:langList))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(SimpleName:edLang))))))))))))