(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:findRootBetween)(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:x1))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:y1))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:z1))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:x2))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:y2))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:z2))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:xx)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:yy)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:zz)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:evaluateF)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xx)(SimpleName:yy)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zz)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1e-10))(Block(ReturnStatement)))(IfStatement(InfixExpression(InfixExpression(SimpleName:zz)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:z1))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:findRootBetween)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x1)(SimpleName:y1)(SimpleName:z1)(SimpleName:xx)(SimpleName:yy)(SimpleName:zz)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:findRootBetween)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xx)(SimpleName:yy)(SimpleName:zz)(SimpleName:x2)(SimpleName:y2)(SimpleName:z2)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))))