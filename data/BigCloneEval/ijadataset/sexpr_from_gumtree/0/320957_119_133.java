(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:register)(SingleVariableDeclaration(SimpleType(SimpleName:AbstractChannelBasedEndpoint))(SimpleName:handler))(Block(AssertStatement(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:getChannel)))(SimpleName:isBlocking)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isWakeUpRequired)(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:registerQueue))(SimpleName:isEmpty))(Block(ExpressionStatement(Assignment(SimpleName:isWakeUpRequired)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:registerQueue))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:handler))))(IfStatement(SimpleName:isWakeUpRequired)(Block(ExpressionStatement(MethodInvocation(SimpleName:wakeUp))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))))