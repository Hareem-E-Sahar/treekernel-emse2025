(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:stop)(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:finer)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getSimpleName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:track)(NumberLiteral:0)))(InfixExpression(SimpleName:track)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numTracks))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:track))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:writerThreads)(SimpleName:track)))(SimpleName:close)))))(TryStatement(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:track)(NumberLiteral:0)))(InfixExpression(SimpleName:track)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numTracks))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:track))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:writerThreads)(SimpleName:track)))(SimpleName:waitUntilClosed))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InterruptedIOException)))))))))))