(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:process)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:recvString))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:retXml)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:surl)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:conn)))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:recvString))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:5))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:recvString))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(NumberLiteral:5))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(Assignment(SimpleName:recvString)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:Constans.REQUEST_CHARSET)(StringLiteral:<STR>)(SimpleName:recvString))))))(VariableDeclarationStatement(SimpleType(SimpleName:XMLDataObject))(VariableDeclarationFragment(SimpleName:reqXdo)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLDataObject))(SimpleName:parseString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:recvString)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:actionName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reqXdo))(SimpleName:getItemValue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:actionName))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:surl)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:Constans.SOCKET_SERVLET_ADDRESS)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:actionName))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:surl)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:Constans.SOCKET_SERVLET_ADDRESS)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(Block(ExpressionStatement(Assignment(SimpleName:surl)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:Constans.SOCKET_SERVLET_ADDRESS)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:surl))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setDoOutput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStreamWriter))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getOutputStream))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:recvString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)))))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(NumberLiteral:0)(SimpleName:read))))))(ExpressionStatement(Assignment(SimpleName:retXml)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))(QualifiedName:Constans.RESPONSE_CHARSET))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:retXml))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:5))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:retXml))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(NumberLiteral:5))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(Assignment(SimpleName:retXml)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:Constans.RESPONSE_CHARSET)(StringLiteral:<STR>)(SimpleName:retXml))))))(ReturnStatement(SimpleName:retXml))))))