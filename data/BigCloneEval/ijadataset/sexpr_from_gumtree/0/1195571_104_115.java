(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:readAndVerifyVersion)(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(Assignment(SimpleName:version)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readInt))))(ExpressionStatement(Assignment(SimpleName:writerVersion)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Version))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readInt)))))(ExpressionStatement(Assignment(SimpleName:releaseVersion)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Version))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readInt)))))(IfStatement(InfixExpression(SimpleName:version)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:VERSION2))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:releaseVersion))(SimpleName:isExperimental))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:version)(SimpleName:writerVersion))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:version)(SimpleName:releaseVersion)(SimpleName:releaseVersion)))))))))))))