(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(Modifier:final)(PrimitiveType:void)(SimpleName:writeTheClassWhenTheFileAlreadyExist)(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:CoreException))(SimpleType(SimpleName:InterruptedException))(SimpleType(SimpleName:DOMException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:DataTestFileSource))(VariableDeclarationFragment(SimpleName:dataTestFileSource)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:TestFileSourceBuilder))))(SimpleName:with)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:mock)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:IVectorInclude))))))))(SimpleName:with)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:mock)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:IFileBuilder))))))))(SimpleName:with)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:mock)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:IFixture))))))))(SimpleName:with)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:mock)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:ITestClassStructure))))))))(SimpleName:build))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IProgressMonitor))(VariableDeclarationFragment(SimpleName:monitor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:mock)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:IProgressMonitor)))))))(VariableDeclarationStatement(SimpleType(SimpleName:TestFileSource))(VariableDeclarationFragment(SimpleName:toTest)(ClassInstanceCreation(SimpleType(SimpleName:TestFileSource))(SimpleName:dataTestFileSource))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:checking)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Expectations))(AnonymousClassDeclaration(Initializer(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:oneOf)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dataTestFileSource.fileClassBuilder))))(SimpleName:isExist)))(ExpressionStatement(MethodInvocation(SimpleName:will)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:returnValue)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:oneOf)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dataTestFileSource.fileClassBuilder))))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dataTestFileSource.mockClassInclude)(SimpleName:monitor))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:oneOf)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dataTestFileSource.fileClassBuilder))))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dataTestFileSource.classOfTest)(SimpleName:monitor))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:oneOf)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dataTestFileSource.fileClassBuilder))))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dataTestFileSource.emptyFixture)(SimpleName:monitor))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:exactly)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3))))(SimpleName:of)(METHOD_INVOCATION_ARGUMENTS(SimpleName:monitor))))(SimpleName:worked)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toTest))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:monitor))))))))