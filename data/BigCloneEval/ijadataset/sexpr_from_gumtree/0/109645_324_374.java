(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:addTestSchedules)(SingleVariableDeclaration(SimpleType(SimpleName:HTTPurl))(SimpleName:urlData))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer))(NumberLiteral:4096))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:type)(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:number)(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:duration)(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:gap)(NumberLiteral:1)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlData))(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:number)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlData))(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:duration)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlData))(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:gap)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlData))(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.SECOND)(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MILLISECOND)(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(NumberLiteral:1))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Channel)))(VariableDeclarationFragment(SimpleName:channels)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:getChannels))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:keys)(CastExpression(ArrayType(SimpleType(SimpleName:String))(Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:keySet)))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension(NumberLiteral:0)))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(NumberLiteral:0)))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:number))(PostfixExpression(SimpleName:y)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:keys.length))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:start))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(InfixExpression(SimpleName:duration)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:gap)))))(VariableDeclarationStatement(SimpleType(SimpleName:ScheduleItem))(VariableDeclarationFragment(SimpleName:item)(ClassInstanceCreation(SimpleType(SimpleName:ScheduleItem))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:store.rand))(SimpleName:nextLong)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setCapType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:type))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ScheduleItem.ONCE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ScheduleItem.WAITING))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setStart)(METHOD_INVOCATION_ARGUMENTS(SimpleName:start))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setDuration)(METHOD_INVOCATION_ARGUMENTS(SimpleName:duration))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setChannel)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:keys)(SimpleName:x)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setAutoDeletable)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setPostTask)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:namePatterns)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:getNamePatterns))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:setFilePattern)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:namePatterns)(NumberLiteral:0)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:addScheduleItem)(METHOD_INVOCATION_ARGUMENTS(SimpleName:item))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlData))(SimpleName:getServletClass))(StringLiteral:<STR>)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toString)))(SimpleName:getBytes)))))))