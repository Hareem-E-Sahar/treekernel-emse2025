(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleName:PersistableCodeGenerator)(SimpleType(SimpleName:IOException))(Block(SuperConstructorInvocation)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:packageMgr))(SimpleName:addPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:EnumTransformationType.NONE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:packageMgr))(SimpleName:addPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:EnumTransformationType.STORABLE))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classLoaderProvider))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inputStream)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exception))(Block(ExpressionStatement(Assignment(SimpleName:inputStream)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(IfStatement(InfixExpression(SimpleName:inputStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream))))))))))