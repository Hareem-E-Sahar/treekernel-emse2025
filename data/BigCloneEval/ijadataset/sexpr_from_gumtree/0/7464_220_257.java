(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:loadClass)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:resolve))(SimpleType(QualifiedName:java.lang.ClassNotFoundException))(Block(IfStatement(InfixExpression(SimpleName:bcel_jar)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(SuperMethodInvocation(SimpleName:loadClass)(SimpleName:name)(SimpleName:resolve))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(Block(ReturnStatement(SuperMethodInvocation(SimpleName:loadClass)(SimpleName:name)(SimpleName:resolve)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(SimpleName:findLoadedClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(SimpleName:resolve)(ExpressionStatement(MethodInvocation(SimpleName:resolveClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c)))))(ReturnStatement(SimpleName:c))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:resource_name)(MethodInvocation(SimpleName:classname_to_resource_name)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassLoader))(SimpleName:getSystemResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resource_name)))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:entry_name)(MethodInvocation(SimpleName:classname_to_resource_name)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))(VariableDeclarationStatement(SimpleType(SimpleName:JarEntry))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bcel_jar))(SimpleName:getJarEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry_name)))))(AssertStatement(InfixExpression(SimpleName:entry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:entry_name)))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bcel_jar))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:available)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:available))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:available))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:total)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:total)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:available))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(SimpleName:total)(InfixExpression(SimpleName:available)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:total))))))(ExpressionStatement(Assignment(SimpleName:total)(ASSIGNMENT_OPERATOR:+=)(SimpleName:len)))))(AssertStatement(InfixExpression(SimpleName:total)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:bytes.length))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:total)))(AssertStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(StringLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:defineClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(SimpleName:bytes)(NumberLiteral:0)(QualifiedName:bytes.length)))))(IfStatement(SimpleName:resolve)(ExpressionStatement(MethodInvocation(SimpleName:resolveClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c)))))(ReturnStatement(SimpleName:c)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name))(SimpleName:e))))))))))