(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:processAudio)(SingleVariableDeclaration(SimpleType(SimpleName:AudioBuffer))(SimpleName:buffer))(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:buff)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:getChannel)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:getSampleCount))))(IfStatement(SimpleName:steady)(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:phase)(ASSIGNMENT_OPERATOR:+=)(SimpleName:dphase2)))(IfStatement(InfixExpression(SimpleName:phase)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:twoPI))(Block(ExpressionStatement(Assignment(SimpleName:phase)(ASSIGNMENT_OPERATOR:-=)(SimpleName:twoPI)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:buff)(SimpleName:i))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:amp2)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FloatSinTable))(SimpleName:sinFast)(METHOD_INVOCATION_ARGUMENTS(SimpleName:phase)))))))))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:ddphase)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:dphase2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:dphase1)))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:n))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:ddamp)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:amp2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:amp1)))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:n))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:phase)(ASSIGNMENT_OPERATOR:+=)(SimpleName:dphase1)))(ExpressionStatement(Assignment(SimpleName:dphase1)(ASSIGNMENT_OPERATOR:+=)(SimpleName:ddphase)))(IfStatement(InfixExpression(SimpleName:phase)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:twoPI))(Block(ExpressionStatement(Assignment(SimpleName:phase)(ASSIGNMENT_OPERATOR:-=)(SimpleName:twoPI)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:buff)(SimpleName:i))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:amp1)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FloatSinTable))(SimpleName:sinFast)(METHOD_INVOCATION_ARGUMENTS(SimpleName:phase))))))(ExpressionStatement(Assignment(SimpleName:amp1)(ASSIGNMENT_OPERATOR:+=)(SimpleName:ddamp)))))))(ExpressionStatement(Assignment(SimpleName:steady)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:active)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:amp2)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))))(ReturnStatement(SimpleName:AUDIO_OK))))))