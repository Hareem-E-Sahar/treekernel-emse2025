(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testLoadError)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:ras)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:lock)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:theFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:INPUT_JAD_PATH))))(ExpressionStatement(Assignment(SimpleName:ras)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:theFile)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:lock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ras))(SimpleName:getChannel)))(SimpleName:lock))))(ExpressionStatement(MethodInvocation(SimpleName:executeBuildExceptionTarget)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:assertExceptionMessageContains)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:release)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ras))(SimpleName:close)))))))))