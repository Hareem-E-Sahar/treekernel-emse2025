(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:drawHexside)(SingleVariableDeclaration(SimpleType(SimpleName:Graphics2D))(SimpleName:g2))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:vx1))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:vy1))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:vx2))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:vy2))(SingleVariableDeclaration(PrimitiveType:char)(SimpleName:hexsideType))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x1)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y1)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x2)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y2)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:theta)))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:x)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(NumberLiteral:4))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:y)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(NumberLiteral:4))))))(ExpressionStatement(Assignment(SimpleName:x0)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vx1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vx2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vx1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:6)))))(ExpressionStatement(Assignment(SimpleName:y0)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vy1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vy2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vy1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:6)))))(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vx1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vx2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vx1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:3)))))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vy1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vy2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vy1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:3)))))(ExpressionStatement(Assignment(SimpleName:theta)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan2)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:vy2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vy1))(InfixExpression(SimpleName:vx2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vx1))))))(SwitchStatement(SimpleName:hexsideType)(SwitchCase(CharacterLiteral:<STR>))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:3))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getCliffOrArrowsPositionXArray)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:vx1)(SimpleName:vx2)(SimpleName:theta)))))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getCliffOrArrowsPositionYArray)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:vy1)(SimpleName:vy2)(SimpleName:theta)))))(VariableDeclarationStatement(SimpleType(SimpleName:GeneralPath))(VariableDeclarationFragment(SimpleName:polygon)(MethodInvocation(SimpleName:makePolygon)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3)(SimpleName:x)(SimpleName:y)(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.white))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:fill)(METHOD_INVOCATION_ARGUMENTS(SimpleName:polygon))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.black))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:draw)(METHOD_INVOCATION_ARGUMENTS(SimpleName:polygon))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:3))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:x0)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vx1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vx2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vx1)))(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:3)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:j)))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:12)))))(ExpressionStatement(Assignment(SimpleName:y0)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vy1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vy2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vy1)))(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:3)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:j)))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:12)))))(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vx1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vx2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vx1)))(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(NumberLiteral:4)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:3)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:j)))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:12)))))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:vy1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:vy2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:vy1)))(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(NumberLiteral:4)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:3)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:j)))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:12)))))(ExpressionStatement(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x0)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:y2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:y0)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(QualifiedName:Rectangle2D.Double))(VariableDeclarationFragment(SimpleName:rect)(ClassInstanceCreation(SimpleType(QualifiedName:Rectangle2D.Double)))))(ExpressionStatement(Assignment(QualifiedName:rect.x)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:len))))(ExpressionStatement(Assignment(QualifiedName:rect.y)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:y2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:len))))(ExpressionStatement(Assignment(QualifiedName:rect.width)(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:len))))(ExpressionStatement(Assignment(QualifiedName:rect.height)(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:len))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.white))))(VariableDeclarationStatement(SimpleType(QualifiedName:Arc2D.Double))(VariableDeclarationFragment(SimpleName:arc)(ClassInstanceCreation(SimpleType(QualifiedName:Arc2D.Double))(QualifiedName:rect.x)(QualifiedName:rect.y)(QualifiedName:rect.width)(QualifiedName:rect.height)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:toDegrees)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:theta))))(NumberLiteral:180)(QualifiedName:Arc2D.OPEN))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:fill)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arc))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.black))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:draw)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arc))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:3))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getWallOrSlopePositionXArray)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:vx1)(SimpleName:vx2)(SimpleName:theta)(NumberLiteral:3)))))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getWallOrSlopePositionYArray)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:vy1)(SimpleName:vy2)(SimpleName:theta)(NumberLiteral:3)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.black))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:draw)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Line2D.Double))(ArrayAccess(SimpleName:x)(NumberLiteral:0))(ArrayAccess(SimpleName:y)(NumberLiteral:0))(ArrayAccess(SimpleName:x)(NumberLiteral:1))(ArrayAccess(SimpleName:y)(NumberLiteral:1))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:draw)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Line2D.Double))(ArrayAccess(SimpleName:x)(NumberLiteral:2))(ArrayAccess(SimpleName:y)(NumberLiteral:2))(ArrayAccess(SimpleName:x)(NumberLiteral:3))(ArrayAccess(SimpleName:y)(NumberLiteral:3))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:3))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getWallOrSlopePositionXArray)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:vx1)(SimpleName:vx2)(SimpleName:theta)(NumberLiteral:2)))))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getWallOrSlopePositionYArray)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:vy1)(SimpleName:vy2)(SimpleName:theta)(NumberLiteral:2)))))(VariableDeclarationStatement(SimpleType(SimpleName:GeneralPath))(VariableDeclarationFragment(SimpleName:polygon)(MethodInvocation(SimpleName:makePolygon)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:4)(SimpleName:x)(SimpleName:y)(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.white))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:fill)(METHOD_INVOCATION_ARGUMENTS(SimpleName:polygon))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.black))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:draw)(METHOD_INVOCATION_ARGUMENTS(SimpleName:polygon))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:HTMLColor.skyBlue))))(VariableDeclarationStatement(SimpleType(SimpleName:Stroke))(VariableDeclarationFragment(SimpleName:oldStroke)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:getStroke))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setStroke)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BasicStroke))(CastExpression(PrimitiveType:float)(NumberLiteral:5.))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:draw)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Line2D.Double))(SimpleName:vx1)(SimpleName:vy1)(SimpleName:vx2)(SimpleName:vy2)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setColor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Color.black))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g2))(SimpleName:setStroke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldStroke))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)))))))))