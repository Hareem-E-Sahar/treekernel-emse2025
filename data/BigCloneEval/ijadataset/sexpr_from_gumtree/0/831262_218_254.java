(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:initializeVisualStateMachine)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:errorNumber))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:erroneousPaths))(SimpleName:isEmpty))(ReturnStatement))(IfStatement(InfixExpression(SimpleName:choiceTrace)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:choiceTrace))(SimpleName:delete)))))(ExpressionStatement(MethodInvocation(SimpleName:clearAnimation)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedWriter))(VariableDeclarationFragment(SimpleName:bw)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:choiceTrace)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:choiceTrace))(SimpleName:deleteOnExit)))(ExpressionStatement(Assignment(SimpleName:bw)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:choiceTrace))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ReturnStatement))))(VariableDeclarationStatement(SimpleType(SimpleName:Scanner))(VariableDeclarationFragment(SimpleName:scan)(ClassInstanceCreation(SimpleType(SimpleName:Scanner))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:erroneousPaths))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:errorNumber))))))(TryStatement(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:x)(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scan))(SimpleName:hasNextLine))(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scan))(SimpleName:nextLine)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bw))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:NEW_LINE))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bw))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ReturnStatement))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stateMachine))(SimpleName:hasMasterState)))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:stateMachine)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:VisualSimStateMachine))(SimpleName:machineLog))))(VariableDeclarationStatement(SimpleType(SimpleName:Config))(VariableDeclarationFragment(SimpleName:errorConfig)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JPF))(SimpleName:createConfig)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:selectedConfig))(SimpleName:getTargetArgParameters))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorConfig))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:choiceTrace))(SimpleName:getPath)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stateMachine))(SimpleName:initializeMachine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:errorConfig))))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:choiceTrace))(SimpleName:delete)))(ExpressionStatement(MethodInvocation(SimpleName:updateStatus)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Status.ERRORS_GENERATED))))(ExpressionStatement(MethodInvocation(SimpleName:initDiagram)))))))