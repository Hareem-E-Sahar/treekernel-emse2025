(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:static)(PrimitiveType:int)(SimpleName:decomposeIndex)(SingleVariableDeclaration(PrimitiveType:char)(SimpleName:c))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:end)(InfixExpression(QualifiedName:DecompositionKeys.k.length)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:half)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:end)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:code)(ArrayAccess(QualifiedName:DecompositionKeys.k)(InfixExpression(SimpleName:half)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2)))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:code))(Block(ReturnStatement(ArrayAccess(QualifiedName:DecompositionKeys.k)(InfixExpression(InfixExpression(SimpleName:half)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(IfStatement(InfixExpression(SimpleName:half)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:start))(Block(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:code))(Block(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:=)(SimpleName:half))))(Block(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(SimpleName:half))))))))))))