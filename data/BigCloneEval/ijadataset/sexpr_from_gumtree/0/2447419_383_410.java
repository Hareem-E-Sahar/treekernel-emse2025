(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:distance)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:x0))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:y0))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:x1))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:y1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:d)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(SimpleName:getTileShape))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:SQUARE))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x0)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x1))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:y0)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y1))))))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y))))(SimpleName:y))))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:getTileShape))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:HEXAGONAL))(Block(ExpressionStatement(Assignment(SimpleName:y0)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:y0)(INFIX_EXPRESSION_OPERATOR:-)(InfixExpression(ParenthesizedExpression(SimpleName:x0))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:-)(InfixExpression(ParenthesizedExpression(SimpleName:x1))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(IfStatement(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:x0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(SimpleName:x0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(SimpleName:y0)))(ExpressionStatement(Assignment(SimpleName:x0)(ASSIGNMENT_OPERATOR:=)(SimpleName:x1)))(ExpressionStatement(Assignment(SimpleName:y0)(ASSIGNMENT_OPERATOR:=)(SimpleName:y1)))(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(SimpleName:y)))))(IfStatement(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:y0))(Block(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x0))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y1))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y0)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:x0)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y0))(INFIX_EXPRESSION_OPERATOR:>)(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y1)))(Block(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:y0)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y1)))))(Block(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x0))))))))))(ReturnStatement(SimpleName:d))))))