(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:print)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Data))(Dimension))(SimpleName:d))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:channelBuffer)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:l)(QualifiedName:d.length)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ChannelInfo))(VariableDeclarationFragment(SimpleName:cInfo)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:d)(SimpleName:i)))(SimpleName:getChannelInfo))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:dataType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cInfo))(SimpleName:getDataType))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:valueString)(StringLiteral:<STR>)))(SwitchStatement(SimpleName:dataType)(SwitchCase(QualifiedName:ChannelInfo.TYPE_DOUBLE))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:values)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:d)(SimpleName:i)))(SimpleName:getDoubleValues))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l2)(QualifiedName:values.length)))(ExpressionStatement(Assignment(SimpleName:valueString)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(InfixExpression(SimpleName:l2)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(MethodInvocation(SimpleName:resolved)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cInfo)(ArrayAccess(SimpleName:values)(InfixExpression(SimpleName:l2)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(NullLiteral))))(BreakStatement))(SwitchCase(QualifiedName:ChannelInfo.TYPE_INT))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:values)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:d)(SimpleName:i)))(SimpleName:getIntValues))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l2)(QualifiedName:values.length)))(ExpressionStatement(Assignment(SimpleName:valueString)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(InfixExpression(SimpleName:l2)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(MethodInvocation(SimpleName:resolved)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cInfo)(ArrayAccess(SimpleName:values)(InfixExpression(SimpleName:l2)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(NullLiteral))))(BreakStatement))(SwitchCase(QualifiedName:ChannelInfo.TYPE_OBJECT))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:values)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:d)(SimpleName:i)))(SimpleName:getObjectValues))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l2)(QualifiedName:values.length)))(ExpressionStatement(Assignment(SimpleName:valueString)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(InfixExpression(SimpleName:l2)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:values)(InfixExpression(SimpleName:l2)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(SimpleName:toString))(NullLiteral))))(BreakStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:channelString)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cInfo))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:valueString)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelBuffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelString))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelBuffer))))))))