(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:processFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:f))(Block(SynchronizedStatement(SimpleName:PROCESS_MUTEX)(Block(IfStatement(InfixExpression(SimpleName:bufferFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:writeToBuffer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exc))(Block(ExpressionStatement(Assignment(SimpleName:bufferOS)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:exc)))))(ExpressionStatement(MethodInvocation(SimpleName:addFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f))))(ReturnStatement(BooleanLiteral:false)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:urlString)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileUrlTemplate))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:toString))))))(ExpressionStatement(Assignment(SimpleName:urlString)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlString))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:type)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlString))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:connection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:s)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:results)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtil))(SimpleName:readInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:results))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:addFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f))))(IfStatement(SimpleName:debug)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:results)))))))(ReturnStatement(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exc))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:exc)))))(ExpressionStatement(MethodInvocation(SimpleName:addFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f))))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))))