(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:messageReceived)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IoSession))(SimpleName:iosession))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Object))(SimpleName:message))(SimpleType(SimpleName:Exception))(Block(IfStatement(InstanceofExpression(SimpleName:message)(SimpleType(SimpleName:Protocol)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Protocol))(VariableDeclarationFragment(SimpleName:header)(CastExpression(SimpleType(SimpleName:Protocol))(SimpleName:message))))(TryStatement(Block(SwitchStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getProtocol))(SwitchCase(QualifiedName:Protocol.PROTOCOL_SESSION_MESSAGE))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Listener))(SimpleName:receivedMessage)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)(SimpleName:header)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getMessage)))))(BreakStatement))(SwitchCase(QualifiedName:Protocol.PROTOCOL_CHANNEL_MESSAGE))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClientChannelImpl))(VariableDeclarationFragment(SimpleName:channel)(NullLiteral)))(SynchronizedStatement(SimpleName:channels)(Block(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getChannelID))))))(IfStatement(InfixExpression(SimpleName:channel)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ClientChannelImpl))(ThisExpression)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getChannelID)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:putIfAbsent)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getChannelID))(SimpleName:channel))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Listener))(SimpleName:receivedChannelMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel)(SimpleName:header)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getMessage)))))(BreakStatement))(SwitchCase(QualifiedName:Protocol.PROTOCOL_CHANNEL_JOIN_S2C))(Block(SynchronizedStatement(SimpleName:channels)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getChannelID))(ClassInstanceCreation(SimpleType(SimpleName:ClientChannelImpl))(ThisExpression)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getChannelID))))))))(BreakStatement))(SwitchCase(QualifiedName:Protocol.PROTOCOL_CHANNEL_LEAVE_S2C))(Block(SynchronizedStatement(SimpleName:channels)(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClientChannelImpl))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getChannelID))))))(IfStatement(InfixExpression(SimpleName:channel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Listener))(SimpleName:leftChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getChannelID)))))))))(BreakStatement))(SwitchCase(QualifiedName:ProtocolImpl.PROTOCOL_SYSTEM_NOTIFY))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Listener))(SimpleName:receivedMessage)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)(SimpleName:header)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getMessage)))))(BreakStatement))(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:getProtocol))(NumberLiteral:16)))(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:header)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:header)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:message)))))))))))