(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:parse)(SimpleType(SimpleName:Exception))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isVar)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:isVar)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(SimpleName:isVar)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getPosOfLastVariable))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:foundBegin)(BooleanLiteral:false)))(WhileStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:foundBegin))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:size))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++)))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:foundBegin)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:foundBegin))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getPosOfLastVariable))))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:a)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:b)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isChar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isChar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isInteger)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isInteger)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isKeyword)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isKeyword)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isReal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isReal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isOperator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isOperator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isArithemiticalExpression)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isLogicalOperator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isArithemiticalExpression)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:b))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isInteger)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isReal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a)(StringLiteral:<STR>)(SimpleName:b)(StringLiteral:<STR>)))))))))(WhileStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lexem)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:temp)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:open)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:close)(NumberLiteral:0)))(WhileStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexem))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:size))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ExpressionStatement(PostfixExpression(SimpleName:open)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ExpressionStatement(PostfixExpression(SimpleName:close)(POSTFIX_EXPRESSION_OPERATOR:++))))(ExpressionStatement(Assignment(SimpleName:lexem)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexem))))))(IfStatement(InfixExpression(SimpleName:open)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:close))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:foundDo)(BooleanLiteral:false)))(ForStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:foundDo)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:foundDo))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:foundDo)(BooleanLiteral:false)))(ForStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:foundDo)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:foundDo))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:xx)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xx))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xx))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(Block(ExpressionStatement(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:xx)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))))(ExpressionStatement(MethodInvocation(SimpleName:logicalInstruction)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(SimpleName:x)(SimpleName:temp))))))(IfStatement(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:temp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:subList)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lvalue)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:Variable))(VariableDeclarationFragment(SimpleName:v)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lvalue)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:v)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isKeyword)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lvalue)(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isKeyword)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lvalue))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:v))(SimpleName:getType))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:h)(SimpleName:x)))(InfixExpression(SimpleName:h)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))(PostfixExpression(SimpleName:h)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isLogicalOperator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isReal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isChar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isBoolean)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:typ)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(SimpleName:getType))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:h)(SimpleName:x)))(InfixExpression(SimpleName:h)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))(PostfixExpression(SimpleName:h)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isLogicalOperator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isChar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isBoolean)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:typ)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(SimpleName:getType))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:h)(SimpleName:x)))(InfixExpression(SimpleName:h)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))(PostfixExpression(SimpleName:h)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isLogicalOperator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isBoolean)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:typ)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(SimpleName:getType))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:h)(SimpleName:x)))(InfixExpression(SimpleName:h)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:size)))(PostfixExpression(SimpleName:h)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lex))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isBoolean)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:typ)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(SimpleName:getType))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bool)(BooleanLiteral:false)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:typ)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getVariables)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(SimpleName:getType))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typ))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:typ)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Scanner))(SimpleName:isBoolean)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lex))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lex)(StringLiteral:<STR>))))))))))))))(ContinueStatement))))(Block))))))