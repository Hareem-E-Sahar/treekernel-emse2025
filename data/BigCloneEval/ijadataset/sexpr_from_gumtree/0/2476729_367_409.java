(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Channel))(SimpleName:openChannel)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:kind))(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:parameters))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:timeout_ms))(SimpleType(SimpleName:IOException))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:mActive))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SSHException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Event))(VariableDeclarationFragment(SimpleName:e)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:chanid)(NumberLiteral:0)))(SynchronizedStatement(SimpleName:mLock)(Block(ExpressionStatement(Assignment(SimpleName:chanid)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNextChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:m)(ClassInstanceCreation(SimpleType(SimpleName:Message)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:putByte)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:MessageType.CHANNEL_OPEN))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:putString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kind))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:putInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:chanid))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:putInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mWindowSize))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:putInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mMaxPacketSize))))(IfStatement(InfixExpression(SimpleName:parameters)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:parameters))))))(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(SimpleName:getChannelForKind)(METHOD_INVOCATION_ARGUMENTS(SimpleName:chanid)(SimpleName:kind)(SimpleName:parameters)))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ChannelException))(QualifiedName:ChannelError.ADMINISTRATIVELY_PROHIBITED)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:mChannels)(SimpleName:chanid))(ASSIGNMENT_OPERATOR:=)(SimpleName:c)))(ExpressionStatement(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Event)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:mChannelEvents)(SimpleName:chanid))(ASSIGNMENT_OPERATOR:=)(SimpleName:e)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:setTransport)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)(SimpleName:mLog))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:setWindow)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mWindowSize)(SimpleName:mMaxPacketSize))))(ExpressionStatement(MethodInvocation(SimpleName:sendUserMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m)(SimpleName:timeout_ms))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:waitForEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)(SimpleName:timeout_ms))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SSHException))(StringLiteral:<STR>)))))(SynchronizedStatement(SimpleName:mLock)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:c)(ArrayAccess(SimpleName:mChannels)(SimpleName:chanid))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IOException))(VariableDeclarationFragment(SimpleName:x)(MethodInvocation(SimpleName:getException))))(IfStatement(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SSHException))(StringLiteral:<STR>))))))(ThrowStatement(SimpleName:x))))(ReturnStatement(SimpleName:c))))))))