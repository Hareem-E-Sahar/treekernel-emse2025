(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:recover)(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:committedSingleTmTransactions))(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:committedMultiTmTransactions))(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:inDoubtTransactions))(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:inDoubtJcaTransactions))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:activeMultiTmTransactions)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)))(VariableDeclarationStatement(SimpleType(SimpleName:DataInputStream))(VariableDeclarationFragment(SimpleName:dis)))(VariableDeclarationStatement(SimpleType(SimpleName:CorruptedLogRecordException))(VariableDeclarationFragment(SimpleName:corruptedLogRecordException)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:logFile))))(ExpressionStatement(Assignment(SimpleName:dis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DataInputStream))(SimpleName:fis)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:readHeaderObject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dis))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:LogRecord.FULL_HEADER_LEN))(ReturnStatement))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:buf)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogRecord.FULL_HEADER_LEN)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf))))(VariableDeclarationStatement(SimpleType(QualifiedName:LogRecord.Data))(VariableDeclarationFragment(SimpleName:data)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getNextRecordLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)))))(WhileStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:LogRecord.FULL_HEADER_LEN))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:len))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFile))(SimpleName:getName))))))(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buf))(SimpleName:flip)))(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:LogRecord.Data)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:len)(SimpleName:data)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CorruptedLogRecordException))(SimpleName:e))(Block(IfStatement(InfixExpression(SimpleName:corruptedLogRecordException)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:corruptedLogRecordException)(ASSIGNMENT_OPERATOR:=)(SimpleName:e))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:corruptedRecordPos)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:position))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buf))(SimpleName:limit))(QualifiedName:LogRecord.FULL_HEADER_LEN))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:nextPos)(MethodInvocation(SimpleName:scanForward)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:corruptedRecordPos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(IfStatement(InfixExpression(SimpleName:nextPos)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFile))(SimpleName:getName))))))(BreakStatement))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFile))(SimpleName:getName))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:nextPos)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:corruptedRecordPos)))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:position)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextPos))))(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogRecord.FULL_HEADER_LEN)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf))))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getNextRecordLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)))))(ExpressionStatement(Assignment(QualifiedName:corruptedLogRecordException.disablePresumedRollback)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ContinueStatement))))))(SwitchStatement(QualifiedName:data.recordType)(SwitchCase(QualifiedName:LogRecord.TX_COMMITTED))(ExpressionStatement(Assignment(QualifiedName:data.globalTransactionId)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xidFactory))(SimpleName:localIdToGlobalId)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:data.localTransactionId)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:committedSingleTmTransactions))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))(BreakStatement)(SwitchCase(QualifiedName:LogRecord.MULTI_TM_TX_COMMITTED))(ExpressionStatement(Assignment(QualifiedName:data.globalTransactionId)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xidFactory))(SimpleName:localIdToGlobalId)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:data.localTransactionId)))))(SwitchCase(QualifiedName:LogRecord.TX_PREPARED))(SwitchCase(QualifiedName:LogRecord.JCA_TX_PREPARED))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeMultiTmTransactions))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Long))(QualifiedName:data.localTransactionId))(SimpleName:data))))(BreakStatement)(SwitchCase(QualifiedName:LogRecord.TX_END))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeMultiTmTransactions))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Long))(QualifiedName:data.localTransactionId)))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(BreakStatement))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getNextRecordLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:len))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CorruptedLogRecordException))(SimpleName:e))(Block(IfStatement(InfixExpression(SimpleName:corruptedLogRecordException)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:corruptedLogRecordException)(ASSIGNMENT_OPERATOR:=)(SimpleName:e))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:corruptedRecordPos)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:position))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buf))(SimpleName:limit))(QualifiedName:LogRecord.FULL_HEADER_LEN))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:nextPos)(MethodInvocation(SimpleName:scanForward)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:corruptedRecordPos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(IfStatement(InfixExpression(SimpleName:nextPos)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFile))(SimpleName:getName))))))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFile))(SimpleName:getName))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:nextPos)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:corruptedRecordPos)))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:position)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextPos))))(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogRecord.FULL_HEADER_LEN)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf))))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getNextRecordLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)))))(ExpressionStatement(Assignment(QualifiedName:corruptedLogRecordException.disablePresumedRollback)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeMultiTmTransactions))(SimpleName:values)))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(QualifiedName:LogRecord.Data))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(SwitchStatement(QualifiedName:data.recordType)(SwitchCase(QualifiedName:LogRecord.MULTI_TM_TX_COMMITTED))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:committedMultiTmTransactions))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))(BreakStatement)(SwitchCase(QualifiedName:LogRecord.TX_PREPARED))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inDoubtTransactions))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))(BreakStatement)(SwitchCase(QualifiedName:LogRecord.JCA_TX_PREPARED))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inDoubtJcaTransactions))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(BreakStatement))))(IfStatement(InfixExpression(SimpleName:corruptedLogRecordException)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ThrowStatement(SimpleName:corruptedLogRecordException))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errorLog))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))))))