(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SimpleType(SimpleName:BaseNodehandler))(SimpleName:loadJavaNodehandler)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(SimpleType(SimpleName:Element))(SimpleName:e))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:classname)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getClassLoader)))(SimpleName:loadClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classname)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Class))(Dimension))(VariableDeclarationFragment(SimpleName:arg_types)(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:Element))))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.lang.reflect.Constructor))(VariableDeclarationFragment(SimpleName:ctor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg_types)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:args)(ArrayInitializer(SimpleName:e))))(VariableDeclarationStatement(SimpleType(SimpleName:BaseNodehandler))(VariableDeclarationFragment(SimpleName:bnh)(CastExpression(SimpleType(SimpleName:BaseNodehandler))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args))))))(ReturnStatement(SimpleName:bnh)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:ex))(Block(ReturnStatement(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ExceptionHandler))(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))(ReturnStatement(NullLiteral)))))))))