(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:HttpURLConnection))(SimpleName:createHTTPConnection)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:urlStr))(SingleVariableDeclaration(SimpleType(SimpleName:StringBuilder))(SimpleName:messages))(SimpleType(SimpleName:MalformedURLException))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(SimpleName:messages)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:messages)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlStr))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:uc)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:newProxy)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NeissModel))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:PCONST.WEB_PROXY)(BooleanLiteral:false)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:split)))(IfStatement(InfixExpression(InfixExpression(SimpleName:newProxy)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProxy))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(Assignment(SimpleName:split)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProxy))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:proxyURL)(ArrayAccess(SimpleName:split)(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:proxyPort)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:split)(NumberLiteral:1))))))(VariableDeclarationStatement(SimpleType(SimpleName:Proxy))(VariableDeclarationFragment(SimpleName:prxy)(ClassInstanceCreation(SimpleType(SimpleName:Proxy))(QualifiedName:Proxy.Type.HTTP)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:proxyURL)(SimpleName:proxyPort)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messages))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:proxyURL)(StringLiteral:<STR>)(SimpleName:proxyPort)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:uc)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:prxy)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messages))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:split)(NumberLiteral:1))(StringLiteral:<STR>)))))(ReturnStatement(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ArrayIndexOutOfBoundsException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messages))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:newProxy)(StringLiteral:<STR>)(StringLiteral:<STR>)(QualifiedName:split.length)(StringLiteral:<STR>)))))(ReturnStatement(NullLiteral))))))(Block(ExpressionStatement(Assignment(SimpleName:uc)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))))(ReturnStatement(SimpleName:uc))))))