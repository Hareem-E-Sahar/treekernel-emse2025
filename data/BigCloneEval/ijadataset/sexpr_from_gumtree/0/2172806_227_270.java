(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:execute)(SimpleType(SimpleName:MojoExecutionException))(Block(ExpressionStatement(Assignment(SimpleName:m_bundleIds)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(ExpressionStatement(MethodInvocation(SimpleName:setupRuntimeHelpers)))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:addBundles)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:firstBundle)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_project))(SimpleName:getArtifacts)))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Artifact))(VariableDeclarationFragment(SimpleName:art)(CastExpression(SimpleType(SimpleName:Artifact))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next)))))(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:art))(SimpleName:getScope)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:jarUrl)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:art))(SimpleName:getFile))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:jarUrl))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:uc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(IfStatement(InstanceofExpression(SimpleName:uc)(SimpleType(SimpleName:JarURLConnection)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:JarURLConnection))(VariableDeclarationFragment(SimpleName:jarurl)(CastExpression(SimpleType(SimpleName:JarURLConnection))(SimpleName:uc))))(VariableDeclarationStatement(SimpleType(SimpleName:JarFile))(VariableDeclarationFragment(SimpleName:jarfile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarurl))(SimpleName:getJarFile))))(VariableDeclarationStatement(SimpleType(SimpleName:Attributes))(VariableDeclarationFragment(SimpleName:attr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarfile))(SimpleName:getManifest)))(SimpleName:getMainAttributes))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:bsymbol)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attr))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:bsymbol)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:firstBundle))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addBundles))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:firstBundle)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cleanupPos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bsymbol))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:cleanupPos)(INFIX_EXPRESSION_OPERATOR:>)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:bsymbol)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bsymbol))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:cleanupPos)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addBundles))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:makeBootstrapString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bsymbol)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:art))(SimpleName:getVersion))))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:firstBundle))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addBundles))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:firstBundle)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:Artifact))(VariableDeclarationFragment(SimpleName:art)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_project))(SimpleName:getArtifact))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:symbolic)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_project))(SimpleName:getProperties)))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:symbolic)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addBundles))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:makeBootstrapString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:symbolic)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:art))(SimpleName:getVersion))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:firstBundle))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addBundles))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:firstBundle)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:version)))(ExpressionStatement(Assignment(SimpleName:version)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_project))(SimpleName:getProperties)))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:version)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:version)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_project))(SimpleName:getVersion)))))(ExpressionStatement(Assignment(SimpleName:version)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:version))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addBundles))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:version)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:deployBundles)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_localRepo))(SimpleName:getBasedir))(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:addBundles))(SimpleName:toString)))))))))