(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:unSync)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:templateId))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:language))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:type))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:EXTS.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ext)(ArrayAccess(SimpleName:EXTS)(SimpleName:i))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:from)(MethodInvocation(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:templateId)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ext))(SimpleName:language)(SimpleName:type)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:to)(MethodInvocation(SimpleName:getLocalFile)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:templateId)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ext))(SimpleName:language)(SimpleName:type)))))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:exists))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:from)(SimpleName:to)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)(SimpleName:e))))))))))))