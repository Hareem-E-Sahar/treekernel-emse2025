(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:initInitialNativeThread)(Block(ExpressionStatement(Assignment(QualifiedName:initial_native_thread.pid)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SystemInterface))(SimpleName:init_thread))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Unsafe))(SimpleName:setThreadBlock)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:initial_native_thread.schedulerThread))))(ExpressionStatement(Assignment(QualifiedName:initial_native_thread.thread_handle)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SystemInterface))(SimpleName:get_current_thread_handle))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:initial_native_thread.myHeapAllocator))(SimpleName:init)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:initial_native_thread.myCodeAllocator))(SimpleName:init)))(IfStatement(SimpleName:TRACE)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SystemInterface))(SimpleName:debugwriteln)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))