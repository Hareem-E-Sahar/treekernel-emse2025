(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:overlapDepth)(SingleVariableDeclaration(SimpleType(SimpleName:ScheduleItem))(SimpleName:item))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:cal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:ScheduleItem))(Dimension))(VariableDeclarationFragment(SimpleName:items)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:getScheduleArray))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Channel)))(VariableDeclarationFragment(SimpleName:channels)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:getChannels))))(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:schChan)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getChannel))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:muxString)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schChan))(SimpleName:getFrequency))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schChan))(SimpleName:getBandWidth)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:ScheduleItem)))(VariableDeclarationFragment(SimpleName:operlapItems)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:ScheduleItem))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:items.length))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:items)(SimpleName:x)))(SimpleName:toString)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:toString))))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:isOverlapping)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:items)(SimpleName:x))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:operlapItems))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:items)(SimpleName:x)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getStart)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:duration)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getDuration))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxCount)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:duration))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Integer)))(VariableDeclarationFragment(SimpleName:muxCountMap)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Integer))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxCountMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:muxString)(ClassInstanceCreation(SimpleType(SimpleName:Integer))(NumberLiteral:1)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(NumberLiteral:0)))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:operlapItems))(SimpleName:size)))(PostfixExpression(SimpleName:y)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ScheduleItem))(VariableDeclarationFragment(SimpleName:checkItem)(CastExpression(SimpleType(SimpleName:ScheduleItem))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:operlapItems))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:slice)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:getTime)))(SimpleName:getTime))))(IfStatement(InfixExpression(InfixExpression(SimpleName:slice)(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:checkItem))(SimpleName:getStart)))(SimpleName:getTime)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:slice)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:checkItem))(SimpleName:getStop)))(SimpleName:getTime))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:chackChan)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:checkItem))(SimpleName:getChannel))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:checkMuxString)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chackChan))(SimpleName:getFrequency))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chackChan))(SimpleName:getBandWidth)))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:muxCount)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxCountMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:checkMuxString)))))(IfStatement(InfixExpression(SimpleName:muxCount)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxCountMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:checkMuxString)(ClassInstanceCreation(SimpleType(SimpleName:Integer))(NumberLiteral:1))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxCountMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:checkMuxString)(ClassInstanceCreation(SimpleType(SimpleName:Integer))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxCount))(SimpleName:intValue))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:muxTotal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxCountMap))(SimpleName:keySet)))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension(NumberLiteral:0))))))))(IfStatement(InfixExpression(SimpleName:maxCount)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:muxTotal.length))(ExpressionStatement(Assignment(SimpleName:maxCount)(ASSIGNMENT_OPERATOR:=)(QualifiedName:muxTotal.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cal))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(NumberLiteral:1))))))(ReturnStatement(SimpleName:maxCount))))))