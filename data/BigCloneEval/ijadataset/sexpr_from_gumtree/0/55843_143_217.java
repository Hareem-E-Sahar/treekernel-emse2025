(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:CalculateTreeWidth)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:myGraph)(Dimension)(Dimension))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:SolutionVector)(Dimension))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:zaehler))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:DecompositionedMatrix)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:ConnectedNodes)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:NextSolutionVector)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:TreeWidth)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:NumVerticesOfMyGraph)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:DeeperTreeWidth)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:LineIndex)))(ExpressionStatement(Assignment(SimpleName:NumVerticesOfMyGraph)(ASSIGNMENT_OPERATOR:=)(QualifiedName:myGraph.length)))(ExpressionStatement(Assignment(SimpleName:DecompositionedMatrix)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(InfixExpression(SimpleName:NumVerticesOfMyGraph)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Dimension(InfixExpression(SimpleName:NumVerticesOfMyGraph)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(SimpleName:ConnectedNodes)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(SimpleName:NumVerticesOfMyGraph))))))(ExpressionStatement(Assignment(SimpleName:TreeWidth)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:DeeperTreeWidth)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:LineIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:NextSolutionVector)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(InfixExpression(QualifiedName:SolutionVector.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:1)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:NumVerticesOfMyGraph))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:SolutionVector)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(ArrayAccess(SimpleName:myGraph)(SimpleName:i))(NumberLiteral:0)))(Block(ExpressionStatement(Assignment(SimpleName:LineIndex)(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:1)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:NumVerticesOfMyGraph))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(ArrayAccess(SimpleName:myGraph)(SimpleName:LineIndex))(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ConnectedNodes)(SimpleName:TreeWidth))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:myGraph)(NumberLiteral:0))(SimpleName:j))))(ExpressionStatement(PostfixExpression(SimpleName:TreeWidth)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:NumVerticesOfMyGraph))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:LineIndex))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:NumVerticesOfMyGraph))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:LineIndex))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(SimpleName:i))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:myGraph)(SimpleName:i))(SimpleName:j)))))(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:LineIndex))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(SimpleName:i))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:myGraph)(SimpleName:i))(SimpleName:j))))))))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:LineIndex))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:NumVerticesOfMyGraph))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:LineIndex))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:myGraph)(SimpleName:i))(SimpleName:j)))))(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:LineIndex))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:myGraph)(SimpleName:i))(SimpleName:j))))))))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:TreeWidth))(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:DecompositionedMatrix.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(SimpleName:i))(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:ConnectedNodes)(SimpleName:k)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(NumberLiteral:0)))(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:TreeWidth))(PostfixExpression(SimpleName:l)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:DecompositionedMatrix.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(NumberLiteral:0))(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:ConnectedNodes)(SimpleName:l)))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(SimpleName:i))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))))))))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:1)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:DecompositionedMatrix.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(SimpleName:i))(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:1)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:DecompositionedMatrix.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(SimpleName:i))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:DecompositionedMatrix)(SimpleName:j))(SimpleName:i))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(NumberLiteral:1)))(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:SolutionVector.length))(PostfixExpression(SimpleName:l)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:NextSolutionVector)(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:SolutionVector)(SimpleName:l))))))(IfStatement(InfixExpression(QualifiedName:NextSolutionVector.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:DeeperTreeWidth)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:CalculateTreeWidth)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DecompositionedMatrix)(SimpleName:NextSolutionVector)(InfixExpression(SimpleName:zaehler)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(IfStatement(InfixExpression(SimpleName:TreeWidth)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:DeeperTreeWidth))(Block(ExpressionStatement(Assignment(SimpleName:TreeWidth)(ASSIGNMENT_OPERATOR:=)(SimpleName:DeeperTreeWidth)))))))(ReturnStatement(SimpleName:TreeWidth))))))