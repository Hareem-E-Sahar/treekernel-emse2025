(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:parseRepositoryFile)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:hopCount))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:urlStr))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:isr)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:br)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlStr))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:auth)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_context))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:auth)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auth))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol))))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:base64)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:base64Encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:auth)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:base64)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:basicAuth)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_context))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:basicAuth)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:basicAuth)))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol))))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:base64)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:base64Encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:basicAuth)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:base64)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(MethodInvocation(SimpleName:getUserAgentForBundle)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_context))(SimpleName:getBundle))))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(SimpleName:getUserAgentForBundle)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_context))(SimpleName:getBundle)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:XmlCommonHandler))(VariableDeclarationFragment(SimpleName:handler)(ClassInstanceCreation(SimpleType(SimpleName:XmlCommonHandler)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:addType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:ArrayList))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:addType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:HashMap))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:addType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:ArrayList))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:addType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:MultivalueMap))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:addType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:HashMap))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:addType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:HashMap))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:setDefaultType)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String))))))(ExpressionStatement(Assignment(SimpleName:br)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:is)))))(VariableDeclarationStatement(SimpleType(SimpleName:KXmlSAXParser))(VariableDeclarationFragment(SimpleName:parser)))(ExpressionStatement(Assignment(SimpleName:parser)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:KXmlSAXParser))(SimpleName:br))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parser))(SimpleName:parseXML)(METHOD_INVOCATION_ARGUMENTS(SimpleName:handler)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))(ReturnStatement))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:root)(CastExpression(SimpleType(SimpleName:List))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:getRoot)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bundleIdx)(NumberLiteral:0)))(InfixExpression(SimpleName:bundleIdx)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:size)))(PostfixExpression(SimpleName:bundleIdx)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:obj)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bundleIdx)))))(IfStatement(InstanceofExpression(SimpleName:obj)(SimpleType(SimpleName:HashMap)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:repoMap)(ClassInstanceCreation(SimpleType(SimpleName:TreeMap))(ClassInstanceCreation(SimpleType(SimpleName:Comparator))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:compare)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o1))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o2))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o1))(SimpleName:toString)))(SimpleName:compareToIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o2))(SimpleName:toString))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repoMap))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:Map))(SimpleName:obj)))))(IfStatement(InfixExpression(SimpleName:hopCount)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:externList)(CastExpression(SimpleType(SimpleName:List))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repoMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:EXTERN_REPOSITORY_TAG))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:externList)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:externList))(SimpleName:size)))))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:parseRepositoryFile)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:hopCount)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:externList))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))))))))(IfStatement(InstanceofExpression(SimpleName:obj)(SimpleType(SimpleName:MultivalueMap)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:bundleMap)(ClassInstanceCreation(SimpleType(SimpleName:TreeMap))(ClassInstanceCreation(SimpleType(SimpleName:Comparator))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:compare)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o1))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o2))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o1))(SimpleName:toString)))(SimpleName:compareToIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o2))(SimpleName:toString))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleMap))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:Map))(SimpleName:obj)))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:target)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BundleRecord.IMPORT_PACKAGE)))))(IfStatement(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BundleRecord.IMPORT_PACKAGE)(MethodInvocation(SimpleName:convertPackageDeclarations)(METHOD_INVOCATION_ARGUMENTS(SimpleName:target))))))))(ExpressionStatement(Assignment(SimpleName:target)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BundleRecord.EXPORT_PACKAGE)))))(IfStatement(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundleMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BundleRecord.EXPORT_PACKAGE)(MethodInvocation(SimpleName:convertPackageDeclarations)(METHOD_INVOCATION_ARGUMENTS(SimpleName:target))))))))(VariableDeclarationStatement(SimpleType(SimpleName:BundleRecord))(VariableDeclarationFragment(SimpleName:record)(ClassInstanceCreation(SimpleType(SimpleName:BundleRecord))(SimpleName:bundleMap))))(TryStatement(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:PackageDeclaration))(Dimension))(VariableDeclarationFragment(SimpleName:exportPkgs)(CastExpression(ArrayType(SimpleType(SimpleName:PackageDeclaration))(Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:record))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BundleRecord.EXPORT_PACKAGE))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:exportIdx)(NumberLiteral:0)))(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:exportPkgs)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:exportIdx)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:exportPkgs.length))))(PostfixExpression(SimpleName:exportIdx)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:exporterList)(CastExpression(SimpleType(SimpleName:ArrayList))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_exportPackageMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:exportPkgs)(SimpleName:exportIdx)))(SimpleName:getName)))))))(IfStatement(InfixExpression(SimpleName:exporterList)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:exporterList)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:exportInfo)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(NumberLiteral:2))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:exportInfo)(SimpleName:EXPORT_PACKAGE_IDX))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:exportPkgs)(SimpleName:exportIdx))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:exportInfo)(SimpleName:EXPORT_BUNDLE_IDX))(ASSIGNMENT_OPERATOR:=)(SimpleName:record)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exporterList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exportInfo))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_exportPackageMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:exportPkgs)(SimpleName:exportIdx)))(SimpleName:getName))(SimpleName:exporterList))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_bundleList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:record)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:ex))(Block)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex)))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:is)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m_bundleList)(ClassInstanceCreation(SimpleType(SimpleName:Comparator))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:compare)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o1))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o2))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BundleRecord))(VariableDeclarationFragment(SimpleName:r1)(CastExpression(SimpleType(SimpleName:BundleRecord))(SimpleName:o1))))(VariableDeclarationStatement(SimpleType(SimpleName:BundleRecord))(VariableDeclarationFragment(SimpleName:r2)(CastExpression(SimpleType(SimpleName:BundleRecord))(SimpleName:o2))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name1)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r1))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BundleRecord.BUNDLE_NAME))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name2)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r2))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BundleRecord.BUNDLE_NAME))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name1))(SimpleName:compareToIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name2)))))))))))))))