(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:backup)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:backupFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:backupFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:backupFile))(SimpleName:delete)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:backupFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(StringLiteral:<STR>)(SimpleName:e)))))))))))