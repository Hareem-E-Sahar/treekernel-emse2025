(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:ChannelFuture))(SimpleName:getRemoteFuture)(Block(IfStatement(InfixExpression(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:remoteFuture))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:remoteFuture))(SimpleName:getChannel)))(SimpleName:isConnected)))(Block(ReturnStatement(SimpleName:remoteFuture))))(VariableDeclarationStatement(SimpleType(SimpleName:ChannelPipeline))(VariableDeclarationFragment(SimpleName:pipeline)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:pipeline))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pipeline))(SimpleName:addLast)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:HttpResponseDecoder))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pipeline))(SimpleName:addLast)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:RemoteChannelResponseHandler))))))(VariableDeclarationStatement(SimpleType(SimpleName:SocketChannel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClientSocketChannelFactory)))(SimpleName:newChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pipeline)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:getConfig)))(SimpleName:setOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(NumberLiteral:40)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000)))))(VariableDeclarationStatement(SimpleType(SimpleName:ChannelFuture))(VariableDeclarationFragment(SimpleName:future)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:host)(SimpleName:port))))))(ReturnStatement(SimpleName:future))))))