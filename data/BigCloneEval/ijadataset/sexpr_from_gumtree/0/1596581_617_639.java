(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:removeCSSClass)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:el))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:cssClazz))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:e)(CastExpression(SimpleType(SimpleName:Element))(SimpleName:el))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:className)(QualifiedName:e.className)))(IfStatement(InfixExpression(InfixExpression(SimpleName:className)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:className))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:clazz)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:className))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:existed)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:clazz.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:clazz)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:cssClazz))(Block(ExpressionStatement(Assignment(SimpleName:existed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(SimpleName:i)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:clazz.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:clazz)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:clazz)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(Block)(BreakStatement)))))(IfStatement(SimpleName:existed)(Block))(ReturnStatement(SimpleName:existed))))))