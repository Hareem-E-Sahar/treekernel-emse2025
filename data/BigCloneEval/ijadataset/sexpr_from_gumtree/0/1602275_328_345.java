(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:archiveFileTo)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:destination))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:pathPrefix))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destinationFile)(MethodInvocation(SimpleName:prepareDestinationArchive)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destination)))))(IfStatement(InfixExpression(SimpleName:destinationFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(BooleanLiteral:false))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:JarOutputStream))(VariableDeclarationFragment(SimpleName:outputStream)(ClassInstanceCreation(SimpleType(SimpleName:JarOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destinationFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:pathPrefix)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFileAsBytes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:close)))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))(ReturnStatement(BooleanLiteral:false))))))