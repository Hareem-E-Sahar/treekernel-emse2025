(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:openFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:resetPlaylist))(SimpleType(SimpleName:FileNotFoundException))(Block(IfStatement(SimpleName:resetPlaylist)(ExpressionStatement(Assignment(SimpleName:playlist)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:status))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Status.paused))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:status))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Status.stopped)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:stopPlayback)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:openPlaylist)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename))))(ExpressionStatement(Assignment(SimpleName:filename)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:playlist))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))))(VariableDeclarationStatement(SimpleType(SimpleName:MpegAudioFileReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:MpegAudioFileReader)))))(ExpressionStatement(Assignment(SimpleName:currentFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:filename))))(ExpressionStatement(Assignment(SimpleName:openedFile)(ASSIGNMENT_OPERATOR:=)(SimpleName:filename)))(VariableDeclarationStatement(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentFile))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedAudioFileException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:baseFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:getFormat))))(ExpressionStatement(Assignment(SimpleName:decodedFormat)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:AudioFormat))(QualifiedName:AudioFormat.Encoding.PCM_SIGNED)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getSampleRate))(NumberLiteral:16)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getChannels))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getSampleRate))(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:din)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:decodedFormat)(SimpleName:in)))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFileFormat))(VariableDeclarationFragment(SimpleName:baseFileFormat)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:baseFileFormat)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioFileFormat)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentFile))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedAudioFileException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(IfStatement(InstanceofExpression(SimpleName:baseFileFormat)(SimpleType(SimpleName:TAudioFileFormat)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:properties)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:TAudioFileFormat))(SimpleName:baseFileFormat))))(SimpleName:properties))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:key)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Long))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key))))))(ExpressionStatement(Assignment(SimpleName:key)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:title)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:title)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:title))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:title)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentFile))(SimpleName:getName)))))))(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:info)(ClassInstanceCreation(SimpleType(QualifiedName:DataLine.Info))(TypeLiteral(SimpleType(SimpleName:SourceDataLine)))(SimpleName:decodedFormat))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SourceDataLine))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:info)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:LineUnavailableException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(ExpressionStatement(Assignment(SimpleName:opened)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(SimpleName:play)))))))