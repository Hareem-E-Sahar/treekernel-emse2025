(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:parse)(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:inputFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:outputFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block(ExpressionStatement(MethodInvocation(SimpleName:showParametersExit)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringReader))(VariableDeclarationFragment(SimpleName:sr)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:str)))(ExpressionStatement(MethodInvocation(SimpleName:printHeader)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:inputFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outputFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outputPath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:includeFunc)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:agreement)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:markGrammarError)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mergeLabels)))))(ExpressionStatement(Assignment(SimpleName:sr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringReader))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:TagEncoder))(VariableDeclarationFragment(SimpleName:tagEncdr)(ClassInstanceCreation(SimpleType(SimpleName:TagEncoder))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tagEncdr)(SimpleName:inputFile)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Preprocess))(VariableDeclarationFragment(SimpleName:preprocess)(ClassInstanceCreation(SimpleType(SimpleName:Preprocess))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:preprocess)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_FOREIGN))(VariableDeclarationFragment(SimpleName:frgn)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_FOREIGN))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:frgn)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_MWE))(VariableDeclarationFragment(SimpleName:mwe)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_MWE))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mwe)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_MWEP1))(VariableDeclarationFragment(SimpleName:mwep1)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_MWEP1))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mwep1)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_MWEP2))(VariableDeclarationFragment(SimpleName:mwep2)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_MWEP2))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mwep2)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_AdvP))(VariableDeclarationFragment(SimpleName:advp)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_AdvP))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:advp)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_AP))(VariableDeclarationFragment(SimpleName:ap)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_AP))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ap)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Case_AP))(VariableDeclarationFragment(SimpleName:cap)(ClassInstanceCreation(SimpleType(SimpleName:Case_AP))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cap)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_APs))(VariableDeclarationFragment(SimpleName:aps)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_APs))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:aps)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_NP))(VariableDeclarationFragment(SimpleName:np)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_NP))(SimpleName:sr))))(IfStatement(SimpleName:agreement)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:np))(SimpleName:set_doAgreementCheck)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(IfStatement(SimpleName:markGrammarError)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:np))(SimpleName:set_markGrammarError)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:np)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:agreement)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:markGrammarError)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_NP2))(VariableDeclarationFragment(SimpleName:np2)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_NP2))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:np2)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_VP))(VariableDeclarationFragment(SimpleName:vp)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_VP))(SimpleName:sr))))(IfStatement(InfixExpression(SimpleName:agreement)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:markGrammarError)))(Block(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vp)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vp)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Case_NP))(VariableDeclarationFragment(SimpleName:cnp)(ClassInstanceCreation(SimpleType(SimpleName:Case_NP))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cnp)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_NPs))(VariableDeclarationFragment(SimpleName:nps)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_NPs))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nps)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_PP))(VariableDeclarationFragment(SimpleName:pp)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_PP))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pp)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Clean1))(VariableDeclarationFragment(SimpleName:cl1)(ClassInstanceCreation(SimpleType(SimpleName:Clean1))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cl1)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(IfStatement(SimpleName:includeFunc)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Func_TIMEX))(VariableDeclarationFragment(SimpleName:f_time)(ClassInstanceCreation(SimpleType(SimpleName:Func_TIMEX))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_time)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Func_QUAL))(VariableDeclarationFragment(SimpleName:f_qual)(ClassInstanceCreation(SimpleType(SimpleName:Func_QUAL))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_qual)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Func_SUBJ))(VariableDeclarationFragment(SimpleName:f_subj)(ClassInstanceCreation(SimpleType(SimpleName:Func_SUBJ))(SimpleName:sr))))(IfStatement(SimpleName:agreement)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f_subj))(SimpleName:set_doAgreementCheck)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(IfStatement(SimpleName:markGrammarError)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f_subj))(SimpleName:set_markGrammarError)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_subj)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Func_COMP))(VariableDeclarationFragment(SimpleName:f_comp)(ClassInstanceCreation(SimpleType(SimpleName:Func_COMP))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_comp)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Func_OBJ))(VariableDeclarationFragment(SimpleName:f_obj)(ClassInstanceCreation(SimpleType(SimpleName:Func_OBJ))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_obj)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Func_OBJ2))(VariableDeclarationFragment(SimpleName:f_obj2)(ClassInstanceCreation(SimpleType(SimpleName:Func_OBJ2))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_obj2)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Func_OBJ3))(VariableDeclarationFragment(SimpleName:f_obj3)(ClassInstanceCreation(SimpleType(SimpleName:Func_OBJ3))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_obj3)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Func_SUBJ2))(VariableDeclarationFragment(SimpleName:f_subj2)(ClassInstanceCreation(SimpleType(SimpleName:Func_SUBJ2))(SimpleName:sr))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f_subj2)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Clean2))(VariableDeclarationFragment(SimpleName:cl2)(ClassInstanceCreation(SimpleType(SimpleName:Clean2))(SimpleName:sr))))(IfStatement(SimpleName:includeFunc)(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cl2)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cl2)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:Phrase_Per_Line))(VariableDeclarationFragment(SimpleName:ppl)(ClassInstanceCreation(SimpleType(SimpleName:Phrase_Per_Line))(SimpleName:sr))))(VariableDeclarationStatement(SimpleType(SimpleName:TagDecoder))(VariableDeclarationFragment(SimpleName:tagDecdr)(ClassInstanceCreation(SimpleType(SimpleName:TagDecoder))(SimpleName:sr))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:outputType)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:OutputFormatter.OutputType.plain))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:outputType)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:OutputFormatter.OutputType.phrase_per_line))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:mergeLabels)))(Block(IfStatement(InfixExpression(SimpleName:outputType)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:OutputFormatter.OutputType.plain))(Block(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tagDecdr)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(SimpleName:outputFile)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ppl)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tagDecdr)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(SimpleName:outputFile)))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:readwrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tagDecdr)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputFormatter))(VariableDeclarationFragment(SimpleName:of)(ClassInstanceCreation(SimpleType(SimpleName:OutputFormatter)))))(ExpressionStatement(MethodInvocation(SimpleName:formatter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:of)(InfixExpression(SimpleName:outputPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))(SimpleName:outputFile)(SimpleName:outputType)(SimpleName:mergeLabels))))))))))