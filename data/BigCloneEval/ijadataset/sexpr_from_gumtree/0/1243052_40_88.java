(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:synchronized)(PrimitiveType:void)(SimpleName:createTone)(SimpleType(SimpleName:Exception))(Block(IfStatement(SimpleName:toneCreated)(Block(ReturnStatement)))(IfStatement(InfixExpression(InfixExpression(SimpleName:ringToneSampleRate)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:samplesPerFrame)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0)))(Block(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:toneDescCount)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:RingtoneSpecification))(SimpleName:ringSpec))(SimpleName:ringParams)(Block(ExpressionStatement(Assignment(SimpleName:toneDescCount)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:ringSpec.ringCount)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:pjmedia_tone_desc))(VariableDeclarationFragment(SimpleName:tones)(Dimension)(ArrayCreation(ArrayType(SimpleType(SimpleName:pjmedia_tone_desc))(Dimension(SimpleName:toneDescCount))))))(ExpressionStatement(Assignment(SimpleName:ringPort)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:pjmedia_port)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:status)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:PjsuaClient.pjsuaWorker))(SimpleName:syncExec)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Callable))(SimpleType(SimpleName:Integer)))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:Integer))(SimpleName:call)(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PjsuaClient))(SimpleName:pjmedia_tonegen_create2)(METHOD_INVOCATION_ARGUMENTS(SimpleName:memoryPool)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pjsua))(SimpleName:pj_str_copy)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:ringToneSampleRate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mediaConfig))(SimpleName:getChannel_count))(SimpleName:samplesPerFrame)(SimpleName:DEFAULT_BITS_PER_SAMPLE)(QualifiedName:pjsuaConstants.PJMEDIA_TONEGEN_LOOP)(SimpleName:ringPort))))))))))))(IfStatement(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:pjsuaConstants.PJ_SUCCESS))(Block(ExpressionStatement(Assignment(SimpleName:ringPort)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:status))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:toneIndex)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:RingtoneSpecification))(SimpleName:ringSpec))(SimpleName:ringParams)(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:ringSpec.ringCount))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(Block(VariableDeclarationStatement(SimpleType(SimpleName:pjmedia_tone_desc))(VariableDeclarationFragment(SimpleName:tone)(ClassInstanceCreation(SimpleType(SimpleName:pjmedia_tone_desc)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tone))(SimpleName:setFreq1)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ringSpec.freq1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tone))(SimpleName:setFreq2)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ringSpec.freq2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tone))(SimpleName:setOn_msec)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ringSpec.onMs))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tone))(SimpleName:setOff_msec)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ringSpec.offMs))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tone))(SimpleName:setVolume)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ringSpec.volume))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:tones)(SimpleName:toneIndex))(ASSIGNMENT_OPERATOR:=)(SimpleName:tone)))(ExpressionStatement(PostfixExpression(SimpleName:toneIndex)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:tones)(InfixExpression(SimpleName:toneDescCount)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(SimpleName:setOff_msec)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ringParams))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ringParams))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(SimpleName:intervalMs)))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:finalToneDescCount)(SimpleName:toneDescCount)))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:PjsuaClient.pjsuaWorker))(SimpleName:syncExec)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Callable))(SimpleType(SimpleName:Integer)))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:Integer))(SimpleName:call)(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PjsuaClient))(SimpleName:pjmedia_tonegen_play)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ringPort)(SimpleName:finalToneDescCount)(SimpleName:tones)(QualifiedName:pjsuaConstants.PJMEDIA_TONEGEN_LOOP))))))))))))(ExpressionStatement(MethodInvocation(SimpleName:createToneExtended)))(ExpressionStatement(Assignment(SimpleName:toneCreated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))