(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:write)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dest))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:forcePreferredSize))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytesRead)))(IfStatement(InfixExpression(MethodInvocation(SimpleName:getFrameCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:exists)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:fout)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:dest)))))(ExpressionStatement(MethodInvocation(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fout))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fout))(SimpleName:close)))(ReturnStatement)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:canWrite)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dest))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:headerData)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:10))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tempFile)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:canOverwritePresentTag)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:foundTag)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:tagSize)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:fin)(ClassInstanceCreation(SimpleType(SimpleName:PushbackInputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:dest)))(NumberLiteral:10))))(ExpressionStatement(Assignment(SimpleName:bytesRead)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:headerData)(NumberLiteral:0)(NumberLiteral:10)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Bytes))(SimpleName:checkRead)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytesRead)(NumberLiteral:10)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:PushbackInputStream))(SimpleName:fin))))(SimpleName:unread)(METHOD_INVOCATION_ARGUMENTS(SimpleName:headerData)(NumberLiteral:0)(QualifiedName:headerData.length))))(ExpressionStatement(Assignment(SimpleName:foundTag)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:isTag)(METHOD_INVOCATION_ARGUMENTS(SimpleName:headerData)(NumberLiteral:0)))))(ExpressionStatement(MethodInvocation(SimpleName:recalculateSizeIfNeccessary)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dest)(StringLiteral:<STR>)(SimpleName:forcePreferredSize)))))(IfStatement(SimpleName:foundTag)(Block(ExpressionStatement(Assignment(SimpleName:tagSize)(ASSIGNMENT_OPERATOR:=)(InfixExpression(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Bytes))(SimpleName:convertLong)(METHOD_INVOCATION_ARGUMENTS(SimpleName:headerData)(NumberLiteral:7)(NumberLiteral:6)(NumberLiteral:4))))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:10))))(ExpressionStatement(Assignment(SimpleName:canOverwritePresentTag)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:tagSize)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:contentSize))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:forcePreferredSize))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:tagSize)(INFIX_EXPRESSION_OPERATOR:==)(MethodInvocation(SimpleName:getSize)))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:forcePreferredSize))))))(IfStatement(SimpleName:canOverwritePresentTag)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:oldPreferredSize)(MethodInvocation(SimpleName:getPreferredSize))))(ExpressionStatement(MethodInvocation(SimpleName:setPreferredSize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tagSize)(QualifiedName:ID3Constants.ABSOLUTE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:fout)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:dest)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:bout)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(MethodInvocation(SimpleName:getSize)))))(ExpressionStatement(MethodInvocation(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bout))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fout))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bout))(SimpleName:toByteArray)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fout))(SimpleName:close)))(ExpressionStatement(MethodInvocation(SimpleName:setPreferredSize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldPreferredSize)(QualifiedName:ID3Constants.ABSOLUTE))))(ReturnStatement))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:tagData)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:tagSize))))))(ExpressionStatement(Assignment(SimpleName:bytesRead)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tagData)(NumberLiteral:0)(QualifiedName:tagData.length)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Bytes))(SimpleName:checkRead)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytesRead)(QualifiedName:tagData.length)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:tagData)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))))(ExpressionStatement(Assignment(SimpleName:tempFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:getName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:getParentFile))))))(ExpressionStatement(MethodInvocation(SimpleName:copyData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fin)(SimpleName:tempFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:tempFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fout)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fout)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:dest))))(ExpressionStatement(MethodInvocation(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fout))))(ExpressionStatement(MethodInvocation(SimpleName:copyData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fin)(SimpleName:fout)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fout))(SimpleName:close)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:couldDelete)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:delete))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:couldRename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempFile))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dest)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:couldDelete)(StringLiteral:<STR>)(SimpleName:couldRename))(SimpleName:e))))(ThrowStatement(SimpleName:e)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fout))(SimpleName:close)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempFile))(SimpleName:delete)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempFile))(SimpleName:deleteOnExit))))))))