(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:respawn)(SingleVariableDeclaration(SimpleType(SimpleName:XmppAgent))(SimpleName:agent))(Block(VariableDeclarationStatement(SimpleType(SimpleName:XMPPConnection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connections))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:getJID))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:conn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:isConnected)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XmppUtils))(SimpleName:closeQuietly)(METHOD_INVOCATION_ARGUMENTS(SimpleName:conn))))))(VariableDeclarationStatement(SimpleType(SimpleName:ConnectionConfiguration))(VariableDeclarationFragment(SimpleName:cc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XmppUtils))(SimpleName:getConnectionCfg)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:getJID))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:getHost))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:getPort))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:isSecure))))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:JID))(VariableDeclarationFragment(SimpleName:jid)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:getJID))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:uid)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:getUid))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:XMPPConnection))(SimpleName:cc))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:connect)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jid))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agent))(SimpleName:getPassword)))))(VariableDeclarationStatement(SimpleType(SimpleName:Presence))(VariableDeclarationFragment(SimpleName:presence)(ClassInstanceCreation(SimpleType(SimpleName:Presence))(QualifiedName:Presence.Type.available))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:sendPacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:presence))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getRoster)))(SimpleName:setSubscriptionMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SubscriptionMode.accept_all))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getChatManager)))(SimpleName:addChatListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ChatManagerListener))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:chatCreated)(SingleVariableDeclaration(SimpleType(SimpleName:Chat))(SimpleName:chat))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:locally))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageListener))(VariableDeclarationFragment(SimpleName:ml)(ClassInstanceCreation(SimpleType(SimpleName:MessageListener))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:processMessage)(SingleVariableDeclaration(SimpleType(SimpleName:Chat))(SimpleName:chat))(SingleVariableDeclaration(SimpleType(SimpleName:Message))(SimpleName:message))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:peer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chat))(SimpleName:getParticipant))))(VariableDeclarationStatement(SimpleType(SimpleName:JID))(VariableDeclarationFragment(SimpleName:from)(ClassInstanceCreation(SimpleType(SimpleName:JID))(SimpleName:peer))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:reply)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uid)(SimpleName:from)(SimpleName:jid)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:message))(SimpleName:getBody))))))(IfStatement(InfixExpression(SimpleName:reply)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XmppUtils))(SimpleName:sendSilently)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reply)(SimpleName:chat)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))(SimpleName:e)))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chat))(SimpleName:addMessageListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ml)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:connections)))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:jid)(SimpleName:conn))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:jid))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(IfStatement(InfixExpression(SimpleName:conn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:disconnect))))))))))))