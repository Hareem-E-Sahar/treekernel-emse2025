(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:copyAssetFile)(SingleVariableDeclaration(SimpleType(SimpleName:Context))(SimpleName:ctx))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:srcFileName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:targetFilePath))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AssetManager))(VariableDeclarationFragment(SimpleName:assetManager)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctx))(SimpleName:getAssets))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:assetManager))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFileName)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetFilePath))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:getParentFile)))(SimpleName:mkdirs)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:createNewFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:os)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)(SimpleName:os))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AIOUtils))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))))))