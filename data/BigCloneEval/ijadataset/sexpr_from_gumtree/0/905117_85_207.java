(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:ProcessResponse))(SimpleName:processData)(SingleVariableDeclaration(SimpleType(SimpleName:ProcessRequest))(SimpleName:signRequest))(SingleVariableDeclaration(SimpleType(SimpleName:RequestContext))(SimpleName:requestContext))(SimpleType(SimpleName:IllegalRequestException))(SimpleType(SimpleName:CryptoTokenOfflineException))(SimpleType(SimpleName:SignServerException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isTraceEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:ProcessResponse))(VariableDeclarationFragment(SimpleName:ret)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ISignRequest))(VariableDeclarationFragment(SimpleName:sReq)(CastExpression(SimpleType(SimpleName:ISignRequest))(SimpleName:signRequest))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:signRequest)(SimpleType(SimpleName:SODSignRequest)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalRequestException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SODSignRequest))(VariableDeclarationFragment(SimpleName:sodRequest)(CastExpression(SimpleType(SimpleName:SODSignRequest))(SimpleName:signRequest))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ICryptoToken))(VariableDeclarationFragment(SimpleName:token)(MethodInvocation(SimpleName:getCryptoToken))))(SynchronizedStatement(SimpleName:syncObj)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:status)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getCryptoTokenStatus))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:status)))))))(IfStatement(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:SignerStatus.STATUS_ACTIVE))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pin)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:pin)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:pin)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(SimpleName:pin)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:deactivate)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:activate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pin)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CryptoTokenAuthenticationFailureException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CryptoTokenOfflineException))(SimpleName:e)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:X509Certificate))(VariableDeclarationFragment(SimpleName:cert)(CastExpression(SimpleType(SimpleName:X509Certificate))(MethodInvocation(SimpleName:getSigningCertificate)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:PrivateKey))(VariableDeclarationFragment(SimpleName:privKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getPrivateKey)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ICryptoToken.PURPOSE_SIGN)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:provider)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getProvider)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ICryptoToken.PURPOSE_SIGN)))))(IfStatement(InfixExpression(SimpleName:cert)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CryptoTokenOfflineException))(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CertTools))(SimpleName:getSubjectDN)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cert)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CertTools))(SimpleName:getIssuerDN)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cert)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CertTools))(SimpleName:getSerialNumberAsString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cert)))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SODFile))(VariableDeclarationFragment(SimpleName:sod)))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:digestAlgorithm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PROPERTY_DIGESTALGORITHM)(SimpleName:DEFAULT_DIGESTALGORITHM)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:digestEncryptionAlgorithm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PROPERTY_SIGNATUREALGORITHM)(SimpleName:DEFAULT_SIGNATUREALGORITHM)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:digestAlgorithm)(StringLiteral:<STR>)(SimpleName:digestEncryptionAlgorithm)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:doHashing)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PROPERTY_DODATAGROUPHASHING)(SimpleName:DEFAULT_DODATAGROUPHASHING)))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:Integer))(ArrayType(PrimitiveType:byte)(Dimension)))(VariableDeclarationFragment(SimpleName:dgvalues)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sodRequest))(SimpleName:getDataGroupHashes))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:Integer))(ArrayType(PrimitiveType:byte)(Dimension)))(VariableDeclarationFragment(SimpleName:dghashes)(SimpleName:dgvalues)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:doHashing)(StringLiteral:<STR>)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:digestAlgorithm)))))))(ExpressionStatement(Assignment(SimpleName:dghashes)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:Integer))(ArrayType(PrimitiveType:byte)(Dimension)))(NumberLiteral:16))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Integer))(SimpleName:dgId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dgvalues))(SimpleName:keySet))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:value)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dgvalues))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dgId)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dgId)(StringLiteral:<STR>)(QualifiedName:value.length)))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(QualifiedName:value.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:digest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digestAlgorithm)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:result.length)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dghashes))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dgId)(SimpleName:result))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ldsVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PROPERTY_LDSVERSION)(SimpleName:DEFAULT_LDSVERSION)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:unicodeVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PROPERTY_UNICODEVERSION)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ldsVersionRequest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sodRequest))(SimpleName:getLdsVersion))))(IfStatement(InfixExpression(SimpleName:ldsVersionRequest)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:ldsVersion)(ASSIGNMENT_OPERATOR:=)(SimpleName:ldsVersionRequest)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:unicodeVersionRequest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sodRequest))(SimpleName:getUnicodeVersion))))(IfStatement(InfixExpression(SimpleName:unicodeVersionRequest)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:unicodeVersion)(ASSIGNMENT_OPERATOR:=)(SimpleName:unicodeVersionRequest)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ldsVersion)))(Block(ExpressionStatement(Assignment(SimpleName:ldsVersion)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:unicodeVersion)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ldsVersion)))(Block(IfStatement(InfixExpression(SimpleName:unicodeVersion)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalRequestException))(StringLiteral:<STR>))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalRequestException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ldsVersion)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ldsVersion)(StringLiteral:<STR>)(SimpleName:unicodeVersion)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SODFile))(VariableDeclarationFragment(SimpleName:constructedSod)(ClassInstanceCreation(SimpleType(SimpleName:SODFile))(SimpleName:digestAlgorithm)(SimpleName:digestEncryptionAlgorithm)(SimpleName:dghashes)(SimpleName:privKey)(SimpleName:cert)(SimpleName:provider)(SimpleName:ldsVersion)(SimpleName:unicodeVersion))))(ExpressionStatement(Assignment(SimpleName:sod)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SODFile))(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructedSod))(SimpleName:getEncoded)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SignServerException))(StringLiteral:<STR>)(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:CertificateException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SignServerException))(StringLiteral:<STR>)(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SignServerException))(StringLiteral:<STR>)(SimpleName:ex))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:verifySignatureAndChain)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sod)(MethodInvocation(SimpleName:getSigningCertificateChain)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:signedbytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sod))(SimpleName:getEncoded))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CertTools))(SimpleName:getFingerprintAsString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:signedbytes)))))(ExpressionStatement(Assignment(SimpleName:ret)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SODSignResponse))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sReq))(SimpleName:getRequestID))(SimpleName:signedbytes)(SimpleName:cert)(SimpleName:fp)(ClassInstanceCreation(SimpleType(SimpleName:ArchiveData))(SimpleName:signedbytes))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:GeneralSecurityException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SignServerException))(StringLiteral:<STR>)(SimpleName:e))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isTraceEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ReturnStatement(SimpleName:ret))))))