(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:InputStream))(SimpleName:openStream)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:stream)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:filename))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ReturnStatement(SimpleName:stream)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(QualifiedName:pApplet.online))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(QualifiedName:pApplet.sketchPath)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>))(SimpleName:filename))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(Block(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(QualifiedName:pApplet.sketchPath)(SimpleName:filename))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filenameActual)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path)))(SimpleName:getName))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filenameActual))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filenameActual))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filenameActual)(StringLiteral:<STR>)(SimpleName:filename)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(IfStatement(InfixExpression(SimpleName:stream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ReturnStatement(SimpleName:stream))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SecurityException))(SimpleName:se))(Block)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pApplet))(SimpleName:getClass)))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename)))))(IfStatement(InfixExpression(SimpleName:stream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ReturnStatement(SimpleName:stream)))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pApplet))(SimpleName:getClass)))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))))(IfStatement(InfixExpression(SimpleName:stream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ReturnStatement(SimpleName:stream)))(TryStatement(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(QualifiedName:pApplet.sketchPath)(SimpleName:filename))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(IfStatement(InfixExpression(SimpleName:stream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ReturnStatement(SimpleName:stream))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(StringLiteral:<STR>)(SimpleName:filename)))))(IfStatement(InfixExpression(SimpleName:stream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ReturnStatement(SimpleName:stream))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e2))(Block)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:filename))))(IfStatement(InfixExpression(SimpleName:stream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ReturnStatement(SimpleName:stream))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SecurityException))(SimpleName:se))(Block)))(IfStatement(InfixExpression(SimpleName:stream)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(ReturnStatement(NullLiteral))))))