(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:boolean)(SimpleName:canNavigatedByParent)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:c))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:high)(SimpleName:_ParentsSize)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:low)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:low)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:p)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:low)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:_Parents)(SimpleName:p)))(Block(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(SimpleName:p))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:_Parents)(SimpleName:p))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:c))(Block(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(SimpleName:p))))(ReturnStatement(BooleanLiteral:true))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ArrayAccess(SimpleName:_Parents)(SimpleName:low))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:c)))(ReturnStatement(BooleanLiteral:true)))(ReturnStatement(BooleanLiteral:false))))))