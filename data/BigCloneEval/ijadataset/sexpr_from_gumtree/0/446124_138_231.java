(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:calculateBoundByStaticTransshipmentAndScaleFactorSearch)(SingleVariableDeclaration(SimpleType(SimpleName:AbstractNetwork))(SimpleName:network))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(SimpleName:transitTimes))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(SimpleName:edgeCapacities))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Node)))(SimpleName:supplies))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:sink)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Node)))(VariableDeclarationFragment(SimpleName:oneSupplies)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Node)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:supplies))(SimpleName:getDomainSize)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:Node)))(VariableDeclarationFragment(SimpleName:sources)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:Node))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:Node)))(VariableDeclarationFragment(SimpleName:sinks)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:Node))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxSupply)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Node))(SimpleName:node))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:network))(SimpleName:nodes))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:supplies))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:sink)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AssertionError))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GraphLocalization))(SimpleName:getSingleton)))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:sink)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:sink)(ASSIGNMENT_OPERATOR:=)(SimpleName:node))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:supplies))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oneSupplies))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sources))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:supplies))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:maxSupply))(ExpressionStatement(Assignment(SimpleName:maxSupply)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:supplies))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oneSupplies))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sink)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sources))(SimpleName:size))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sinks))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sink))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:upperBound)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sources))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:left)(NumberLiteral:1))(VariableDeclarationFragment(SimpleName:right)(SimpleName:upperBound)))(VariableDeclarationStatement(SimpleType(SimpleName:StaticTransshipment))(VariableDeclarationFragment(SimpleName:staticTransshipment)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(VariableDeclarationFragment(SimpleName:staticFlow)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(VariableDeclarationFragment(SimpleName:resultStaticFlow)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:staticTransshipment)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StaticTransshipment))(SimpleName:network)(SimpleName:edgeCapacities)(SimpleName:oneSupplies))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:staticTransshipment))(SimpleName:run)))(ExpressionStatement(Assignment(SimpleName:staticFlow)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:staticTransshipment))(SimpleName:getFlow))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:found)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nonFeasibleT)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:feasibleT)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(SimpleName:staticFlow)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:nonFeasibleT)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:nonFeasibleT)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:feasibleT)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:found))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:testScaleFactor)(ParenthesizedExpression(InfixExpression(SimpleName:nonFeasibleT)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2)))))(IfStatement(InfixExpression(SimpleName:testScaleFactor)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:upperBound))(Block(ExpressionStatement(Assignment(SimpleName:feasibleT)(ASSIGNMENT_OPERATOR:=)(SimpleName:upperBound)))(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(VariableDeclarationFragment(SimpleName:multipliedCapacities)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeCapacities))(SimpleName:getDomainSize)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Edge))(SimpleName:edge))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:network))(SimpleName:edges))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:eCap)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeCapacities))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)))))(IfStatement(InfixExpression(SimpleName:eCap)(INFIX_EXPRESSION_OPERATOR:>=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:floor)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:Integer.MAX_VALUE)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:testScaleFactor)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:multipliedCapacities))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)(QualifiedName:Integer.MAX_VALUE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:multipliedCapacities))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeCapacities))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:testScaleFactor))))))))(ExpressionStatement(Assignment(SimpleName:staticTransshipment)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StaticTransshipment))(SimpleName:network)(SimpleName:multipliedCapacities)(SimpleName:oneSupplies))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:staticTransshipment))(SimpleName:run)))(ExpressionStatement(Assignment(SimpleName:staticFlow)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:staticTransshipment))(SimpleName:getFlow))))(IfStatement(InfixExpression(SimpleName:staticFlow)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:nonFeasibleT)(ASSIGNMENT_OPERATOR:=)(SimpleName:testScaleFactor)))(Block(ExpressionStatement(Assignment(SimpleName:feasibleT)(ASSIGNMENT_OPERATOR:=)(SimpleName:testScaleFactor)))(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))(ExpressionStatement(Assignment(SimpleName:left)(ASSIGNMENT_OPERATOR:=)(SimpleName:nonFeasibleT)))(ExpressionStatement(Assignment(SimpleName:right)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:feasibleT)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:upperBound)))))(DoStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:testScaleFactor)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:left)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:right)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(VariableDeclarationFragment(SimpleName:multipliedCapacities)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:IdentifiableIntegerMapping))(SimpleType(SimpleName:Edge)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeCapacities))(SimpleName:getDomainSize)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Edge))(SimpleName:edge))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:network))(SimpleName:edges))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:eCap)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeCapacities))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)))))(IfStatement(InfixExpression(SimpleName:eCap)(INFIX_EXPRESSION_OPERATOR:>=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:floor)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:Integer.MAX_VALUE)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:testScaleFactor)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:multipliedCapacities))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)(QualifiedName:Integer.MAX_VALUE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:multipliedCapacities))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeCapacities))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:testScaleFactor))))))))(ExpressionStatement(Assignment(SimpleName:staticTransshipment)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StaticTransshipment))(SimpleName:network)(SimpleName:multipliedCapacities)(SimpleName:oneSupplies))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:staticTransshipment))(SimpleName:run)))(ExpressionStatement(Assignment(SimpleName:staticFlow)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:staticTransshipment))(SimpleName:getFlow))))(IfStatement(InfixExpression(SimpleName:staticFlow)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:left)(ASSIGNMENT_OPERATOR:=)(SimpleName:testScaleFactor)))(Block(ExpressionStatement(Assignment(SimpleName:right)(ASSIGNMENT_OPERATOR:=)(SimpleName:testScaleFactor)))(ExpressionStatement(Assignment(SimpleName:resultStaticFlow)(ASSIGNMENT_OPERATOR:=)(SimpleName:staticFlow))))))(InfixExpression(SimpleName:left)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(InfixExpression(SimpleName:left)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:resultStaticFlow)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PathBasedFlow))(VariableDeclarationFragment(SimpleName:pathFlows)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PathDecomposition))(SimpleName:calculatePathDecomposition)(METHOD_INVOCATION_ARGUMENTS(SimpleName:network)(SimpleName:supplies)(SimpleName:sources)(SimpleName:sinks)(SimpleName:staticFlow)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxLength)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:StaticPathFlow))(SimpleName:staticPathFlow))(SimpleName:pathFlows)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:length)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Edge))(SimpleName:edge))(SimpleName:staticPathFlow)(Block(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transitTimes))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)))))))(IfStatement(InfixExpression(SimpleName:length)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:maxLength))(ExpressionStatement(Assignment(SimpleName:maxLength)(ASSIGNMENT_OPERATOR:=)(SimpleName:length))))))(IfStatement(QualifiedName:Flags.BOUND_ESTIMATOR_LONG)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:pathFlows)))))))(IfStatement(QualifiedName:Flags.BOUND_ESTIMATOR)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maxLength)(StringLiteral:<STR>)(SimpleName:maxSupply)(StringLiteral:<STR>)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxLength)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maxSupply)))(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sources))(SimpleName:size)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))))(ReturnStatement(ParenthesizedExpression(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxLength)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maxSupply)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:right))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AssertionError))(StringLiteral:<STR>)))))))