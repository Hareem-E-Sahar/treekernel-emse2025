(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:transferFrom)(SingleVariableDeclaration(SimpleType(SimpleName:User))(SimpleName:debtor))(SingleVariableDeclaration(SimpleType(SimpleName:User))(SimpleName:creditor))(SingleVariableDeclaration(SimpleType(SimpleName:BigDecimal))(SimpleName:transferValue))(SimpleType(SimpleName:ServiceException))(Block(IfStatement(InfixExpression(SimpleName:debtor)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:creditor)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:transferValue)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:validationService))(SimpleName:conformsTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:debtor)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BigDecimal))(VariableDeclarationFragment(SimpleName:debtorBalance)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paymentRepository))(SimpleName:findBalance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:debtor)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:debtorBalance)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:debtorBalance))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transferValue)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paymentRepository))(SimpleName:addBalance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:debtor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transferValue))(SimpleName:negate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paymentRepository))(SimpleName:addBalance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:creditor)(SimpleName:transferValue)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ServiceException))(StringLiteral:<STR>)))))))))))