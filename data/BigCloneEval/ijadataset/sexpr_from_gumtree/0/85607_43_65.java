(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:doCopyRecursively)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:src))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dest))(SimpleType(SimpleName:IOException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:isDirectory))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:mkdir)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:entries)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:listFiles))))(IfStatement(InfixExpression(SimpleName:entries)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:entries.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ArrayAccess(SimpleName:entries)(SimpleName:i))))(ExpressionStatement(MethodInvocation(SimpleName:doCopyRecursively)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:isFile))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:createNewFile))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IOException))(VariableDeclarationFragment(SimpleName:ioex)(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dest)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioex))(SimpleName:initCause)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))(ThrowStatement(SimpleName:ioex)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:dest)))))(Block)))))))