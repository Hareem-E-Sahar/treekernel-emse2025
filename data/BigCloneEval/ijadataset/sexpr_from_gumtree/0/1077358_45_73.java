(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:parse)(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputSource))(VariableDeclarationFragment(SimpleName:urlInputStream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:SAXParserFactory))(VariableDeclarationFragment(SimpleName:spf)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:SAXParser))(VariableDeclarationFragment(SimpleName:sp)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:conn)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(FieldAccess(ThisExpression)(SimpleName:urlString)))))(ExpressionStatement(MethodInvocation(SimpleName:_setProxy)))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(ExpressionStatement(Assignment(SimpleName:urlInputStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamUtils))(SimpleName:inputStreamToReader)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream)))))))(ExpressionStatement(Assignment(SimpleName:spf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SAXParserFactory))(SimpleName:newInstance))))(IfStatement(InfixExpression(SimpleName:spf)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:sp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:spf))(SimpleName:newSAXParser))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sp))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:urlInputStream)(ThisExpression)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(IfStatement(InfixExpression(SimpleName:conn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getHeaderField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rateLimit)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getHeaderField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rateRemaining)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getHeaderField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:rateReset)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getHeaderField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rateLimit)(StringLiteral:<STR>)(SimpleName:rateRemaining)(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Date))(SimpleName:rateReset))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(Block))))))