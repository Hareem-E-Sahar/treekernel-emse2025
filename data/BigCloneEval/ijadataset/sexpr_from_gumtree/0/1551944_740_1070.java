(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:DataSet))(SimpleName:parse)(SimpleType(SimpleName:SnifflibDatatypeException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NumberFormat))(VariableDeclarationFragment(SimpleName:numformat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NumberFormat))(SimpleName:getInstance))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:size)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:size))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:size))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:DataSet))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DataSet)))))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:r)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:StreamTokenizer))(VariableDeclarationFragment(SimpleName:tokenizer)(NullLiteral)))(TryStatement(Block(IfStatement(FieldAccess(ThisExpression)(SimpleName:isURL))(Block(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:url2goto))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(ParenthesizedExpression(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:DataInputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DataInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:url2goto)))(SimpleName:openStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url2goto)))))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:in))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(FieldAccess(ThisExpression)(SimpleName:url2goto))(StringLiteral:<STR>))(SimpleName:err)))))))(Block(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:file))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:file)))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(FieldAccess(ThisExpression)(SimpleName:file))(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(FieldAccess(ThisExpression)(SimpleName:file))))))))(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:ignorePreHeaderLines))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strLine)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(FieldAccess(ThisExpression)(SimpleName:ignorePreHeaderLines))))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:strLine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))))(Block(ExpressionStatement(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(ExpressionStatement(Assignment(SimpleName:tokenizer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StreamTokenizer))(SimpleName:r))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:resetSyntax)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:eolIsSignificant)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:parseNumbers)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:delimiter)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:whitespaceChars)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:delimiter)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:whitespaceChars)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:quoteChar)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:whitespaceChars)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:readingHeaders)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:readingInitialValues)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:readingData)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:readingScientificNotation)(BooleanLiteral:false)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:readingHeaders)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:readingInitialValues)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:readingInitialValues)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:targetclass)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:size)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:targetclass)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetclass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.NoSuchMethodException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:targetclass)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage))))))))))(ExpressionStatement(Assignment(SimpleName:readingData)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:currentColumn)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:currentRow)(NumberLiteral:0)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:rowcount))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:advanceField)(BooleanLiteral:true)))(WhileStatement(BooleanLiteral:true)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:nextToken)))(SwitchStatement(QualifiedName:tokenizer.ttype)(SwitchCase(QualifiedName:StreamTokenizer.TT_WORD))(Block(IfStatement(SimpleName:readingScientificNotation)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:currentRow)(StringLiteral:<STR>)(SimpleName:currentColumn)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:advanceField)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(IfStatement(SimpleName:readingHeaders)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:tokenizer.sval)))))(Block(IfStatement(SimpleName:readingInitialValues)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:getColumnCount))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:currentColumn))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:addColumn)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn))))(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn)))))))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:construct)))(IfStatement(InfixExpression(SimpleName:currentColumn)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:size)))(Block(ExpressionStatement(Assignment(SimpleName:construct)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Constructor))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:targetclass)(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn))))))(ExpressionStatement(Assignment(SimpleName:construct)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetclass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:construct))))))(TryStatement(Block(TryStatement(Block(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:setValueAt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:construct))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(QualifiedName:tokenizer.sval))))(SimpleName:currentRow)(SimpleName:currentColumn)))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:findingTargetValue))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetRow))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentRow)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetColumn))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentColumn))))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:targetValue))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:construct))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(QualifiedName:tokenizer.sval))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:close)))(ReturnStatement(ParenthesizedExpression(NullLiteral)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.reflect.InvocationTargetException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.IllegalAccessException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.InstantiationException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.NoSuchMethodException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage))))))))))(BreakStatement))(SwitchCase(QualifiedName:StreamTokenizer.TT_NUMBER))(Block(ExpressionStatement(Assignment(SimpleName:advanceField)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(IfStatement(SimpleName:readingHeaders)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:currentRow)(StringLiteral:<STR>)(SimpleName:currentColumn)(StringLiteral:<STR>)))))(Block(IfStatement(SimpleName:readingInitialValues)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:Double))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:getColumnCount))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:currentColumn))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:addColumn)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn))))(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn)))))))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:construct)))(IfStatement(InfixExpression(SimpleName:currentColumn)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:size)))(Block(ExpressionStatement(Assignment(SimpleName:construct)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Constructor))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:targetclass)(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn))))))(ExpressionStatement(Assignment(SimpleName:construct)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetclass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(PrimitiveType:double))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:construct))))))(IfStatement(SimpleName:readingScientificNotation)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Double))(VariableDeclarationFragment(SimpleName:val)(FieldAccess(ThisExpression)(SimpleName:scientificNumber))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:setValueAt)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Double))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:val))(SimpleName:doubleValue))(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:tokenizer.nval)))(SimpleName:currentRow)(SimpleName:currentColumn)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:construct))(SimpleName:getDeclaringClass))(StringLiteral:<STR>)(SimpleName:currentRow)(StringLiteral:<STR>)(SimpleName:currentColumn)(StringLiteral:<STR>))(SimpleName:err)))))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:findingTargetValue))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetRow))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentRow)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetColumn))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentColumn))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Double))(VariableDeclarationFragment(SimpleName:NVAL)(ClassInstanceCreation(SimpleType(SimpleName:Double))(QualifiedName:tokenizer.nval))))(TryStatement(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:targetValue))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:numformat))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:NVAL)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:currentRow)(StringLiteral:<STR>)(SimpleName:currentColumn)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:nextToken)))(IfStatement(InfixExpression(QualifiedName:tokenizer.ttype)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:close)))(ReturnStatement(ParenthesizedExpression(NullLiteral))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:pushBack))))))))))(ExpressionStatement(Assignment(SimpleName:readingScientificNotation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(Block(TryStatement(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:scientificNumber))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Double))(QualifiedName:tokenizer.nval))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:setValueAt)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:scientificNumber))(SimpleName:currentRow)(SimpleName:currentColumn)))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:findingTargetValue))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetRow))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentRow)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetColumn))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentColumn))))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:targetValue))(ASSIGNMENT_OPERATOR:=)(FieldAccess(ThisExpression)(SimpleName:scientificNumber))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:close)))(ReturnStatement(ParenthesizedExpression(NullLiteral)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:construct))(SimpleName:getDeclaringClass))(StringLiteral:<STR>)(SimpleName:currentRow)(StringLiteral:<STR>)(SimpleName:currentColumn)(StringLiteral:<STR>))(SimpleName:err)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.NoSuchMethodException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage))))))))))(BreakStatement))(SwitchCase(QualifiedName:StreamTokenizer.TT_EOL))(Block(IfStatement(SimpleName:readingHeaders)(Block(ExpressionStatement(Assignment(SimpleName:readingHeaders)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:readingInitialValues)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(IfStatement(SimpleName:readingInitialValues)(Block(ExpressionStatement(Assignment(SimpleName:readingInitialValues)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:readingData)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(IfStatement(SimpleName:readingData)(Block(ExpressionStatement(PostfixExpression(SimpleName:currentRow)(POSTFIX_EXPRESSION_OPERATOR:++)))))(BreakStatement))(SwitchCase(QualifiedName:StreamTokenizer.TT_EOF))(Block(IfStatement(SimpleName:readingHeaders)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(StringLiteral:<STR>)))))(IfStatement(SimpleName:readingInitialValues)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(StringLiteral:<STR>)))))(IfStatement(SimpleName:readingData)(Block(ExpressionStatement(Assignment(SimpleName:readingData)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(BreakStatement))(SwitchCase)(Block(IfStatement(InfixExpression(QualifiedName:tokenizer.ttype)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:advanceField)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(IfStatement(SimpleName:readingHeaders)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:tokenizer.sval)))))(Block(IfStatement(SimpleName:readingInitialValues)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:getColumnCount))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:currentColumn))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:addColumn)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn))))(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn)))))))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:construct)))(IfStatement(InfixExpression(SimpleName:currentColumn)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:size)))(Block(ExpressionStatement(Assignment(SimpleName:construct)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Constructor))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:targetclass)(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn))))))(ExpressionStatement(Assignment(SimpleName:construct)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetclass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:constructors)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:construct))))))(TryStatement(Block(TryStatement(Block(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:setValueAt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:construct))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(QualifiedName:tokenizer.sval))))(SimpleName:currentRow)(SimpleName:currentColumn)))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:findingTargetValue))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetRow))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentRow)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:targetColumn))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:currentColumn))))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:targetValue))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:construct))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(QualifiedName:tokenizer.sval))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:close)))(ReturnStatement(ParenthesizedExpression(NullLiteral)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.reflect.InvocationTargetException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.IllegalAccessException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.InstantiationException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.NoSuchMethodException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))))))(IfStatement(InfixExpression(QualifiedName:tokenizer.ttype)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:targetclass)(CastExpression(SimpleType(SimpleName:Class))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:types)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentColumn))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Number))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetclass)))(Block(ExpressionStatement(PostfixExpression(SimpleName:currentColumn)(POSTFIX_EXPRESSION_OPERATOR:--)))(ExpressionStatement(Assignment(SimpleName:readingScientificNotation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:advanceField)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(Block(ExpressionStatement(Assignment(SimpleName:advanceField)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(BreakStatement)))(IfStatement(InfixExpression(QualifiedName:tokenizer.ttype)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:StreamTokenizer.TT_EOF))(Block(BreakStatement)))(IfStatement(SimpleName:advanceField)(Block(ExpressionStatement(PostfixExpression(SimpleName:currentColumn)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:readingHeaders))(Block(IfStatement(InfixExpression(SimpleName:currentColumn)(INFIX_EXPRESSION_OPERATOR:>=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:size)))(Block(ExpressionStatement(Assignment(SimpleName:currentColumn)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:readingHeaders))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:rowcount))(ASSIGNMENT_OPERATOR:=)(SimpleName:currentRow))))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:rowcount))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:readingHeaders)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:ignorePostHeaderLines))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strLine)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(FieldAccess(ThisExpression)(SimpleName:ignorePostHeaderLines))))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:strLine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))))(Block(ExpressionStatement(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SnifflibDatatypeException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getMessage)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:dryrun)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:size)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:setColumnName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:headers)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)))))))))))(ReturnStatement(ParenthesizedExpression(SimpleName:out)))))))