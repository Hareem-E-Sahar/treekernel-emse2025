(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:fileCopy)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:filename))(SimpleType(SimpleName:IOException))(Block(IfStatement(FieldAccess(ThisExpression)(SimpleName:stdOut))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:fileDump)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:source_file)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:spoolPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:filename)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destination_file)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:copyPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:filename)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:source)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:destination)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytes_read)))(TryStatement(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:isFile))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source_file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:canRead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source_file)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:exists))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:isFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(QualifiedName:System.in)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:canWrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destination_file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:overwrite)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destination_file)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:flush)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readLine)))(SimpleName:toUpperCase)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(StringLiteral:<STR>)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destination_file))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parentdir)(MethodInvocation(SimpleName:parent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destination_file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentdir))(SimpleName:exists)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destination_file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentdir))(SimpleName:canWrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destination_file)))))))(ExpressionStatement(Assignment(SimpleName:source)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:source_file))))(ExpressionStatement(Assignment(SimpleName:destination)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destination_file))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:bytes_read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:bytes_read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename)(StringLiteral:<STR>)(SimpleName:destination_file)))))(IfStatement(InfixExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:keep))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:isFile)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:delete))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(FieldAccess(ThisExpression)(SimpleName:spoolPath))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:filename)(StringLiteral:<STR>))))(SimpleName:delete))))))))(Block(IfStatement(InfixExpression(SimpleName:source)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))(IfStatement(InfixExpression(SimpleName:destination)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:flush))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))(IfStatement(InfixExpression(SimpleName:destination)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))))))))