(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:programmingOpReply)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:value))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:retval))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:_num)(StringLiteral:<STR>)(SimpleName:retval)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(SimpleName:_reading)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(SimpleName:_confirm)(StringLiteral:<STR>)(StringLiteral:<STR>))))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:_busy))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:oldBusy)(SimpleName:_busy)))(IfStatement(InfixExpression(SimpleName:retval)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:OK))(Block(IfStatement(InfixExpression(SimpleName:_status)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_status))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rbt))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(SimpleName:_reading)(Block(ExpressionStatement(Assignment(SimpleName:_value)(ASSIGNMENT_OPERATOR:=)(SimpleName:value)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_tableEntry))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))))(ExpressionStatement(MethodInvocation(SimpleName:notifyValueChange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(SimpleName:READ))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:_busy)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:notifyBusyChange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldBusy)(SimpleName:_busy)))))(IfStatement(SimpleName:_confirm)(Block(ExpressionStatement(Assignment(SimpleName:_decoderValue)(ASSIGNMENT_OPERATOR:=)(SimpleName:value)))(IfStatement(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:_value))(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(SimpleName:SAME))))(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DIFF)))))(ExpressionStatement(Assignment(SimpleName:_busy)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:notifyBusyChange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldBusy)(SimpleName:_busy)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(SimpleName:STORED))))(ExpressionStatement(Assignment(SimpleName:_busy)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:notifyBusyChange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldBusy)(SimpleName:_busy))))))))(Block(IfStatement(InfixExpression(SimpleName:_status)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_status))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:java.text.MessageFormat))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rbt))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mProgrammer))(SimpleName:decodeErrorCode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:retval)))))))))))(VariableDeclarationStatement(SimpleType(QualifiedName:javax.swing.Timer))(VariableDeclarationFragment(SimpleName:timer)(ClassInstanceCreation(SimpleType(QualifiedName:javax.swing.Timer))(NumberLiteral:1000)(ClassInstanceCreation(SimpleType(QualifiedName:java.awt.event.ActionListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:actionPerformed)(SingleVariableDeclaration(SimpleType(QualifiedName:java.awt.event.ActionEvent))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:errorTimeout))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:setInitialDelay)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1000))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:setRepeats)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:start)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:_num))))))))))