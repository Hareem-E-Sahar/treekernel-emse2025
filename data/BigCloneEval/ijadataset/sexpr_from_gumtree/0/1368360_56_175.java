(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:LoadSeries)))(SimpleName:buildDicomSeriesFromXml)(SingleVariableDeclaration(SimpleType(SimpleName:URI))(SimpleName:uri))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:DicomModel))(SimpleName:model))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:LoadSeries)))(VariableDeclarationFragment(SimpleName:seriesList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:LoadSeries))))))(VariableDeclarationStatement(SimpleType(SimpleName:XMLStreamReader))(VariableDeclarationFragment(SimpleName:xmler)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:stream)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:XMLInputFactory))(VariableDeclarationFragment(SimpleName:xmlif)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLInputFactory))(SimpleName:newInstance))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uri))(SimpleName:getPath))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uri))(SimpleName:toURL))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:url))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GzipManager))(SimpleName:gzipUncompressToStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(QualifiedName:AbstractProperties.APP_TEMP_DIR)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:writeFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)(SimpleName:outFile)))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MimeInspector))(SimpleName:isMatchingMimeTypeFromMagicNumber)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outFile)(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:GZIPInputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ParenthesizedExpression(SimpleName:outFile)))))))))(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tempFile)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uri))(SimpleName:toString)))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:tempFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path)))))(Block(ExpressionStatement(Assignment(SimpleName:tempFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(QualifiedName:AbstractProperties.APP_TEMP_DIR)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:writeFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:tempFile)))))))(ExpressionStatement(Assignment(SimpleName:xmler)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmlif))(SimpleName:createXMLStreamReader)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:tempFile))))))(VariableDeclarationStatement(SimpleType(SimpleName:Source))(VariableDeclarationFragment(SimpleName:xmlFile)(ClassInstanceCreation(SimpleType(SimpleName:StAXSource))(SimpleName:xmler))))(VariableDeclarationStatement(SimpleType(SimpleName:SchemaFactory))(VariableDeclarationFragment(SimpleName:schemaFactory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SchemaFactory))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:XMLConstants.W3C_XML_SCHEMA_NS_URI)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Schema))(VariableDeclarationFragment(SimpleName:schema)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schemaFactory))(SimpleName:newSchema)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:DownloadManager))))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Validator))(VariableDeclarationFragment(SimpleName:validator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schema))(SimpleName:newValidator))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:validator))(SimpleName:validate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmlFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SAXException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getLocalizedMessage)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ExpressionStatement(Assignment(SimpleName:xmler)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmlif))(SimpleName:createXMLStreamReader)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:tempFile))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:eventType)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmler))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:eventType)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmler))(SimpleName:next))))(SwitchStatement(SimpleName:eventType)(SwitchCase(QualifiedName:XMLStreamConstants.START_ELEMENT))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:key)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmler))(SimpleName:getName)))(SimpleName:getLocalPart))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:WadoParameters.TAG_DOCUMENT_ROOT))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:wadoURL)(MethodInvocation(SimpleName:getTagAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler)(QualifiedName:WadoParameters.TAG_WADO_URL)(NullLiteral)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:onlySopUID)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Boolean))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getTagAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler)(QualifiedName:WadoParameters.TAG_WADO_ONLY_SOP_UID)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:additionnalParameters)(MethodInvocation(SimpleName:getTagAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler)(QualifiedName:WadoParameters.TAG_WADO_ADDITIONNAL_PARAMETERS)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:overrideList)(MethodInvocation(SimpleName:getTagAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler)(QualifiedName:WadoParameters.TAG_WADO_OVERRIDE_TAGS)(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:webLogin)(MethodInvocation(SimpleName:getTagAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler)(QualifiedName:WadoParameters.TAG_WADO_WEB_LOGIN)(NullLiteral)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:WadoParameters))(VariableDeclarationFragment(SimpleName:wadoParameters)(ClassInstanceCreation(SimpleType(SimpleName:WadoParameters))(SimpleName:wadoURL)(SimpleName:onlySopUID)(SimpleName:additionnalParameters)(SimpleName:overrideList)(SimpleName:webLogin))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pat)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:MediaSeriesGroup))(VariableDeclarationFragment(SimpleName:patient)(NullLiteral)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmler))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:eventType)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmler))(SimpleName:next))))(SwitchStatement(SimpleName:eventType)(SwitchCase(QualifiedName:XMLStreamConstants.START_ELEMENT))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:TagW.DICOM_LEVEL.Patient))(SimpleName:name)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmler))(SimpleName:getName)))(SimpleName:getLocalPart))))(Block(ExpressionStatement(Assignment(SimpleName:patient)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:readPatient)(METHOD_INVOCATION_ARGUMENTS(SimpleName:model)(SimpleName:seriesList)(SimpleName:xmler)(SimpleName:wadoParameters)))))(ExpressionStatement(PostfixExpression(SimpleName:pat)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:WadoParameters.TAG_HTTP_TAG))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmler))(SimpleName:getName)))(SimpleName:getLocalPart))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:httpkey)(MethodInvocation(SimpleName:getTagAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler)(StringLiteral:<STR>)(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:httpvalue)(MethodInvocation(SimpleName:getTagAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler)(StringLiteral:<STR>)(NullLiteral)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wadoParameters))(SimpleName:addHttpTag)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpkey)(SimpleName:httpvalue)))))))(BreakStatement)(SwitchCase)(BreakStatement))))(IfStatement(InfixExpression(SimpleName:pat)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:MediaSeriesGroup))(VariableDeclarationFragment(SimpleName:uniquePatient)(SimpleName:patient)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GuiExecutor))(SimpleName:instance)))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(SynchronizedStatement(QualifiedName:UIManager.VIEWER_PLUGINS)(Block(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ViewerPlugin))(SimpleName:p))(QualifiedName:UIManager.VIEWER_PLUGINS)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uniquePatient))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getGroupID))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:setSelectedAndGetFocus)))(BreakStatement))))))))))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:LoadSeries))(SimpleName:loadSeries))(SimpleName:seriesList)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:modality)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loadSeries))(SimpleName:getDicomSeries)))(SimpleName:getTagValue)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:TagW.Modality))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ps)(InfixExpression(InfixExpression(SimpleName:modality)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modality)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modality))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:ps))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loadSeries))(SimpleName:startDownloadImageReference)(METHOD_INVOCATION_ARGUMENTS(SimpleName:wadoParameters))))))))))(BreakStatement)(SwitchCase)(BreakStatement)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:XMLStreamException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:safeClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmler))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:safeClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stream))))))(ReturnStatement(SimpleName:seriesList))))))