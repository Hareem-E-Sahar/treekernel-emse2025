(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:createTestSuite)(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedWriter))(VariableDeclarationFragment(SimpleName:output)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:outputFileName)(InfixExpression(SimpleName:mTestSuiteDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:mTestName)(QualifiedName:File.separator)(QualifiedName:StaticConfiguration.TEST_SCRIPT_FILENAME))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:outputFileName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destFile))(SimpleName:exists))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showConfirmDialog)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mTestName)(StringLiteral:<STR>))(StringLiteral:<STR>)(QualifiedName:JOptionPane.YES_NO_OPTION)(QualifiedName:JOptionPane.QUESTION_MESSAGE)))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JOptionPane.NO_OPTION))(ReturnStatement))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:templateFile)(InfixExpression(SimpleName:TEMPLATE_DIR)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(QualifiedName:StaticConfiguration.TEST_SCRIPT_FILENAME))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strContents)(MethodInvocation(SimpleName:getTemplateContent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:templateFile)))))(ExpressionStatement(Assignment(SimpleName:strContents)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strContents))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:mTestName)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outputFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:outputFileName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getParentFile)))(SimpleName:mkdirs)))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:outputFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:strContents))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close)))(ExpressionStatement(MethodInvocation(SimpleName:copyTestData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TEMPLATE_DIR)(InfixExpression(SimpleName:mTestSuiteDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:mTestName))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:ex))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block))(Block(IfStatement(InfixExpression(SimpleName:output)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))))