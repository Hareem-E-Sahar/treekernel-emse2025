(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getPrintString)(SingleVariableDeclaration(SimpleType(SimpleName:ObjectIdentifierValue))(SimpleName:oid))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MibType))(VariableDeclarationFragment(SimpleName:type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oid))(SimpleName:getSymbol)))(SimpleName:getType))))(IfStatement(InstanceofExpression(SimpleName:type)(SimpleType(SimpleName:SnmpObjectType)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:SnmpObjectType))(VariableDeclarationFragment(SimpleName:objType)(CastExpression(SimpleType(SimpleName:SnmpObjectType))(SimpleName:type))))(VariableDeclarationStatement(SimpleType(SimpleName:SnmpAccess))(VariableDeclarationFragment(SimpleName:access)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:objType))(SimpleName:getAccess))))(IfStatement(InfixExpression(SimpleName:access)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SnmpAccess.READ_ONLY))(Block(ReturnStatement(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:access)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SnmpAccess.READ_WRITE))(Block(ReturnStatement(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:access)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SnmpAccess.READ_CREATE))(Block(ReturnStatement(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:access)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SnmpAccess.WRITE_ONLY))(Block(ReturnStatement(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:access)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SnmpAccess.NOT_IMPLEMENTED))(Block(ReturnStatement(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:access)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SnmpAccess.NOT_ACCESSIBLE))(Block(ReturnStatement(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:access)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SnmpAccess.ACCESSIBLE_FOR_NOTIFY))(Block(ReturnStatement(StringLiteral:<STR>))))))))))))(ReturnStatement(StringLiteral:<STR>))))))