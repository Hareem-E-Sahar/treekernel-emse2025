(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:execute)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:commandArgs))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Object)))(SimpleName:context))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:locations)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commandArgs))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Constants.SPACE)))))(IfStatement(InfixExpression(QualifiedName:locations.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:2))(Block(ReturnStatement(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pwd)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Constants.KEY_PWD))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:src)(ArrayAccess(SimpleName:locations)(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:destn)(ArrayAccess(SimpleName:locations)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:src)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pwd))))(ParenthesizedExpression(InfixExpression(SimpleName:pwd)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:src)))(SimpleName:src))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFileToDirectory)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:src))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:destn))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))(ReturnStatement(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src)(StringLiteral:<STR>)(SimpleName:destn)))))))