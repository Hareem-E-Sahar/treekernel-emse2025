(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:EstimatedPolynomial))(SimpleName:evaluate)(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:systemConstants.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:systemConstants.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:systemMatrix)(SimpleName:i))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:systemMatrix)(SimpleName:j))(SimpleName:i)))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:LUPDecomposition))(VariableDeclarationFragment(SimpleName:lupSystem)(ClassInstanceCreation(SimpleType(SimpleName:LUPDecomposition))(SimpleName:systemMatrix))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:components)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lupSystem))(SimpleName:inverseMatrixComponents))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LUPDecomposition))(SimpleName:symmetrizeComponents)(METHOD_INVOCATION_ARGUMENTS(SimpleName:components))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:EstimatedPolynomial))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lupSystem))(SimpleName:solve)(METHOD_INVOCATION_ARGUMENTS(SimpleName:systemConstants)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SymmetricMatrix))(SimpleName:fromComponents)(METHOD_INVOCATION_ARGUMENTS(SimpleName:components))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:DhbIllegalDimension))(SimpleName:e))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:DhbNonSymmetricComponents))(SimpleName:ex))(Block)))(ReturnStatement(NullLiteral))))))