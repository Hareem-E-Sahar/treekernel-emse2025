(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:calculateMac)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:values))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:secret))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:md)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:md)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.security.NoSuchAlgorithmException))(SimpleName:nsae))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:asciiValue)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(QualifiedName:values.length)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:paramString)(StringLiteral:<STR>)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:paramString)(ASSIGNMENT_OPERATOR:+=)(ArrayAccess(SimpleName:values)(SimpleName:i))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:strSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paramString))(SimpleName:length))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:strSize))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:asciiValue)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paramString))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:hashBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(InfixExpression(SimpleName:asciiValue)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:secret)(StringLiteral:<STR>))))(SimpleName:getBytes))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:reset)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:mac)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:hexByte)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:hashBytes.length))(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:hexByte)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(ArrayAccess(SimpleName:hashBytes)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(InfixExpression(ArrayAccess(SimpleName:hashBytes)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:256))(ArrayAccess(SimpleName:hashBytes)(SimpleName:k)))))))(ExpressionStatement(Assignment(SimpleName:mac)(ASSIGNMENT_OPERATOR:+=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hexByte))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1)))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hexByte))(SimpleName:hexByte))))))(ReturnStatement(SimpleName:mac))))))