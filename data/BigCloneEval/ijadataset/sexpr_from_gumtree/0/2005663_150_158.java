(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:fromRandomAccessFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:absPath))(SimpleType(SimpleName:FileNotFoundException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rafMode)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(SimpleName:writing)(StringLiteral:<STR>)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:plus)(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:reading)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:absPath))(SimpleName:isFile))))(Block(ExpressionStatement(Assignment(SimpleName:writing)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileNotFoundException))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:absPath)(SimpleName:rafMode))))(ExpressionStatement(Assignment(SimpleName:fileChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getChannel))))))))