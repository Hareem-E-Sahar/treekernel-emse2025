(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:FlexotaskRunner))(SimpleName:cloneAndStartThread)(SingleVariableDeclaration(SimpleType(SimpleName:FlexotaskSingleThreadRunner))(SimpleName:toClone))(SingleVariableDeclaration(SimpleType(SimpleName:FlexotaskThreadFactory))(SimpleName:threadFactory))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:FlexotaskSchedulerRunnable))(Dimension))(SimpleName:otherRunnables))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nRunnables)(ConditionalExpression(InfixExpression(SimpleName:otherRunnables)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(NumberLiteral:1)(InfixExpression(QualifiedName:otherRunnables.length)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:FlexotaskSchedulerRunnable))(Dimension))(VariableDeclarationFragment(SimpleName:runnables)(ArrayCreation(ArrayType(SimpleType(SimpleName:FlexotaskSchedulerRunnable))(Dimension(SimpleName:nRunnables))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:runnables)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:toClone)))(IfStatement(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:otherRunnables)(NumberLiteral:0)(SimpleName:runnables)(NumberLiteral:1)(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(IfStatement(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(QualifiedName:toClone.otherRunnables)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(SimpleType(SimpleName:FlexotaskSchedulerRunnable))(Dimension(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:toClone.otherRunnables)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:runnables)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(QualifiedName:toClone.otherThreads)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(SimpleType(SimpleName:Thread))(Dimension(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:theLocks)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toClone))(SimpleName:getThreadCoordinationLockCount))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:theLocks.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:theLocks)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Object)))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Thread))(Dimension))(VariableDeclarationFragment(SimpleName:allThreads)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threadFactory))(SimpleName:createThreads)(METHOD_INVOCATION_ARGUMENTS(SimpleName:runnables)(SimpleName:theLocks)))))(VariableDeclarationStatement(SimpleType(SimpleName:FlexotaskSingleThreadRunner))(VariableDeclarationFragment(SimpleName:clonedMasterRunnable)(CastExpression(SimpleType(SimpleName:FlexotaskSingleThreadRunner))(ArrayAccess(SimpleName:runnables)(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:nRunnables)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:clonedMasterRunnable.otherThreads)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:allThreads)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nRunnables))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:allThreads)(SimpleName:i)))(SimpleName:start)))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:DelegatingFlexotaskRunner))(SimpleName:clonedMasterRunnable)))))))