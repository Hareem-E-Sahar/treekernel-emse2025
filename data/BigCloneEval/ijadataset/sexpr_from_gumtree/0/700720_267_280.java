(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:open)(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:STATE_CLOSED))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isInitOk)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:isInitOk)(ASSIGNMENT_OPERATOR:&=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensorDevice))(SimpleName:initSensor))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:isInitOk)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:channels.length)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:isInitOk)(ASSIGNMENT_OPERATOR:&=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:channels)(SimpleName:i)))(SimpleName:getChannelDevice)))(SimpleName:initChannel))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isInitOk))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:STATE_OPENED)))))))