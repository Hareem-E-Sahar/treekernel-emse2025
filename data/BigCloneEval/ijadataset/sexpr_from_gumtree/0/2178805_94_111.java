(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:zip)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:d))(SimpleType(SimpleName:FileNotFoundException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:entries)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:list))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:4096))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytesRead)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:getParent))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:entries.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:d)(ArrayAccess(SimpleName:entries)(SimpleName:i)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isDirectory))(ContinueStatement))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:f))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:skipl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:getCanonicalPath)))(SimpleName:length))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getPath)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:skipl))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:bytesRead)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:bytesRead)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:moveFile)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:getParent))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>))))))))))