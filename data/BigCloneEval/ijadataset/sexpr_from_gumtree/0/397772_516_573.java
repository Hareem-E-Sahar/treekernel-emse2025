(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SimpleType(SimpleName:CodeSource))(SimpleName:performUrlConversion)(SingleVariableDeclaration(SimpleType(SimpleName:CodeSource))(SimpleName:cs))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:extractSignerCerts))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:CodeSource))(VariableDeclarationFragment(SimpleName:parsedCodeSource)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:locationURL)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cs))(SimpleName:getLocation))))(IfStatement(InfixExpression(SimpleName:locationURL)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Permission))(VariableDeclarationFragment(SimpleName:urlAccessPermission)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:urlAccessPermission)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:locationURL))(SimpleName:openConnection)))(SimpleName:getPermission)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))(IfStatement(InfixExpression(InfixExpression(SimpleName:urlAccessPermission)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InstanceofExpression(SimpleName:urlAccessPermission)(SimpleType(SimpleName:FilePermission))))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:FilePermission))(SimpleName:urlAccessPermission))))(SimpleName:getName)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:urlAccessPermission)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:locationURL))(SimpleName:getProtocol)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:locationURL))(SimpleName:getFile)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:File.separator))))))(Block)))))(IfStatement(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(IfStatement(SimpleName:extractSignerCerts)(Block(ExpressionStatement(Assignment(SimpleName:parsedCodeSource)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CodeSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cs))(SimpleName:getLocation))(MethodInvocation(SimpleName:getSignerCertificates)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cs)))))))))(Block(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:removeTrailingFileSep)(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:File.separator)))(ExpressionStatement(Assignment(SimpleName:removeTrailingFileSep)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getCanonicalPath))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:sb)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer))(SimpleName:path))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:File.separator))))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:removeTrailingFileSep))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:File.separator)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:toString)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:File.separator)))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path)))(SimpleName:getCanonicalPath)))))))(ExpressionStatement(Assignment(SimpleName:locationURL)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:fileToEncodedURL)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path))))))(IfStatement(SimpleName:extractSignerCerts)(Block(ExpressionStatement(Assignment(SimpleName:parsedCodeSource)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CodeSource))(SimpleName:locationURL)(MethodInvocation(SimpleName:getSignerCertificates)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cs)))))))(Block(ExpressionStatement(Assignment(SimpleName:parsedCodeSource)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CodeSource))(SimpleName:locationURL)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cs))(SimpleName:getCertificates))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(IfStatement(SimpleName:extractSignerCerts)(Block(ExpressionStatement(Assignment(SimpleName:parsedCodeSource)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CodeSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cs))(SimpleName:getLocation))(MethodInvocation(SimpleName:getSignerCertificates)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cs)))))))))))))(ReturnStatement(SimpleName:parsedCodeSource))))))