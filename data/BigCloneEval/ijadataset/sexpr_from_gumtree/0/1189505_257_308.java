(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:configureSensor)(SingleVariableDeclaration(SimpleType(SimpleName:WindRoseInstrumentSensor))(SimpleName:sensor))(SingleVariableDeclaration(SimpleType(SimpleName:WindRoseInstrument))(SimpleName:windRoseInstrument))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:historyRequestAlreadySend))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sensor)))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:incSensorCount)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:historyRequestAlreadySend))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sensor))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:channelNumber)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AppContext))(SimpleName:instance)))(SimpleName:getChannelNumber))))(VariableDeclarationStatement(SimpleType(SimpleName:ClientTransceiver))(VariableDeclarationFragment(SimpleName:clientTransceiver)(ClassInstanceCreation(SimpleType(SimpleName:ClientTransceiver))(SimpleName:channelNumber))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientTransceiver))(SimpleName:addReceiver)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelNumber))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getMinExtrema))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:calendar)(ClassInstanceCreation(SimpleType(SimpleName:GregorianCalendar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:10)))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:startDate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getTime))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:stopDate)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getSensorConfig)))(SimpleName:setStartDate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:startDate))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getSensorConfig)))(SimpleName:setStopDate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stopDate))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:HistoricalDataRequestAction))(VariableDeclarationFragment(SimpleName:historyDataServerAction)(ClassInstanceCreation(SimpleType(SimpleName:HistoricalDataRequestAction))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getUniqueId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getStationId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getSensorId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getStartDate))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getStopDate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:historyDataServerAction))(SimpleName:setTransceiver)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clientTransceiver))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ActionProcessorRegistry))(VariableDeclarationFragment(SimpleName:actionProcessorRegistry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Engine))(SimpleName:instance)))(SimpleName:getActionProcessorRegistry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CommandTools))(SimpleName:performAsync)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Command))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:canPerform)(Block(ReturnStatement(BooleanLiteral:true))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:perform)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ActionTools))(SimpleName:sendToServer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:historyDataServerAction)))))))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getHourExtrema))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:calendar)(ClassInstanceCreation(SimpleType(SimpleName:GregorianCalendar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.HOUR_OF_DAY)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:startDate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getTime))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:stopDate)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getSensorConfig)))(SimpleName:setStartDate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:startDate))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getSensorConfig)))(SimpleName:setStopDate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stopDate))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:HistoricalDataRequestAction))(VariableDeclarationFragment(SimpleName:historyDataServerAction)(ClassInstanceCreation(SimpleType(SimpleName:HistoricalDataRequestAction))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:windRoseInstrument))(SimpleName:getUniqueId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getStationId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getSensorId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getStartDate))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sensor))(SimpleName:getStopDate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:historyDataServerAction))(SimpleName:setTransceiver)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clientTransceiver))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ActionProcessorRegistry))(VariableDeclarationFragment(SimpleName:actionProcessorRegistry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Engine))(SimpleName:instance)))(SimpleName:getActionProcessorRegistry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CommandTools))(SimpleName:performAsync)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Command))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:canPerform)(Block(ReturnStatement(BooleanLiteral:true))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:perform)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ActionTools))(SimpleName:sendToServer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:historyDataServerAction)))))))))))))))))