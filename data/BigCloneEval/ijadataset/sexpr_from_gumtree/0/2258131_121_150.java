(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:boolean)(SimpleName:deployFiles)(SingleVariableDeclaration(SimpleType(SimpleName:ApplicationSettings))(SimpleName:applicationSettings))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:auxTempRootFolder))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:generatorsPackageKey))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:from)(InfixExpression(SimpleName:auxTempRootFolder)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:ar.com.coonocer.CodingJoy.utils.FileUtils.TEMPLATES_FOLDER))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:from)))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:from)))))(ReturnStatement(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:appServerTemplatesRootPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Plugins_App_PIn_M1_EntityHelper))(SimpleName:getAppServerTemplatesRootFolder)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applicationSettings))(SimpleName:getPlugins))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:to)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:ar.com.coonocer.CodingJoy.utils.FileUtils))(SimpleName:getAbsolutePath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:appServerTemplatesRootPath)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:to)))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:to)))))(ReturnStatement(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:to)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:to)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:ar.com.coonocer.CodingJoy.utils.FileUtils.TEMPLATES_FOLDER)(StringLiteral:<STR>)(SimpleName:generatorsPackageKey))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fileTo)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:to))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileTo))(SimpleName:exists)))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileTo))(SimpleName:mkdirs)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:to)))))(ReturnStatement(BooleanLiteral:false))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:from)))(SimpleName:listFiles))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ArrayAccess(SimpleName:files)(SimpleName:i))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFileToDirectory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:fileTo))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(SimpleName:to)))))))))(ReturnStatement(BooleanLiteral:true))))))