(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Filesystem))(SimpleName:addFilesystemOpt)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filesystemClass))(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:Object)))(SimpleName:args)))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:clazz)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType))(VariableDeclarationFragment(SimpleName:constructor)))(VariableDeclarationStatement(SimpleType(SimpleName:Filesystem))(VariableDeclarationFragment(SimpleName:filesystem)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:clazz)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filesystemClass))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoClassDefFoundError))(SimpleName:e))(Block(ReturnStatement(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filesystemClass))(SimpleName:e))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:constructor)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType))(SimpleName:c))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clazz))(SimpleName:getConstructors))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Reflect))(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getParameterTypes))(SimpleName:args)))(Block(IfStatement(InfixExpression(SimpleName:constructor)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:constructor)(ASSIGNMENT_OPERATOR:=)(SimpleName:c)))))))(IfStatement(InfixExpression(SimpleName:constructor)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filesystemClass))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:filesystem)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Filesystem))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:e))(Block(ReturnStatement(NullLiteral)))))(ExpressionStatement(MethodInvocation(SimpleName:addFilesystem)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filesystem))))(ReturnStatement(SimpleName:filesystem)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RuntimeException))(SimpleName:e))(Block(ThrowStatement(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filesystemClass))(SimpleName:e))))))))))