(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:int)(SimpleName:getInsertionPos)(SingleVariableDeclaration(SimpleType(SimpleName:Vector))(SimpleName:vect))(SingleVariableDeclaration(SimpleType(SimpleName:TreeNode))(SimpleName:node))(SingleVariableDeclaration(SimpleType(SimpleName:VirtualTreeCommands))(SimpleName:comparer))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vect))(SimpleName:size))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:begin))(VariableDeclarationFragment(SimpleName:end))(VariableDeclarationFragment(SimpleName:middle))(VariableDeclarationFragment(SimpleName:begRes))(VariableDeclarationFragment(SimpleName:midRes))(VariableDeclarationFragment(SimpleName:endRes)))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:begin)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:begRes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comparer))(SimpleName:vtCompareNodes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)(CastExpression(SimpleType(SimpleName:TreeNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vect))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:begin))))))))(ExpressionStatement(Assignment(SimpleName:endRes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comparer))(SimpleName:vtCompareNodes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)(CastExpression(SimpleType(SimpleName:TreeNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vect))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:end))))))))(IfStatement(InfixExpression(SimpleName:begRes)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ReturnStatement(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:endRes)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ReturnStatement(SimpleName:size)))(ForStatement(Block(ExpressionStatement(Assignment(SimpleName:middle)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:begin)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:end)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:midRes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comparer))(SimpleName:vtCompareNodes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)(CastExpression(SimpleType(SimpleName:TreeNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vect))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:middle))))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:midRes)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:endRes)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:midRes)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:endRes)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))))))(Block(ExpressionStatement(Assignment(SimpleName:begin)(ASSIGNMENT_OPERATOR:=)(SimpleName:middle)))(ExpressionStatement(Assignment(SimpleName:begRes)(ASSIGNMENT_OPERATOR:=)(SimpleName:midRes))))(Block(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(SimpleName:middle)))(ExpressionStatement(Assignment(SimpleName:endRes)(ASSIGNMENT_OPERATOR:=)(SimpleName:midRes)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:begin)))(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:1))(Block(IfStatement(InfixExpression(SimpleName:begRes)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ReturnStatement(SimpleName:begin))(ReturnStatement(SimpleName:end)))))))))))