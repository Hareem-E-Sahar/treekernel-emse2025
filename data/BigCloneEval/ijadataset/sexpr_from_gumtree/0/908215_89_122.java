(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:addFile)(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:out))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:basePath))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:origin)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fi)(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:basePath))(SimpleName:trim)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:basePath)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:basePath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:SEPARATOR))))))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:data)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER))))))(ExpressionStatement(Assignment(SimpleName:fi)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:origin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:fi)(SimpleName:BUFFER))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:basePath)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origin))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:BUFFER)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:count))))))(ExpressionStatement(Assignment(SimpleName:currentMessage)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:finishSpace)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:finishSpace)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getTotalSpace)))))(IfStatement(InfixExpression(SimpleName:zipMonitor)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipMonitor))(SimpleName:printMessage)))))(IfStatement(SimpleName:printToConsoleFlag)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentMessage))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getZipPercetage))(StringLiteral:<STR>))))))))(Block(IfStatement(InfixExpression(SimpleName:origin)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origin))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:fi)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fi))(SimpleName:close)))))))))))