(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:initializeTemplates)(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:XPathExpressionException))(SimpleType(SimpleName:ParserConfigurationException))(SimpleType(SimpleName:SAXException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NodeList))(VariableDeclarationFragment(SimpleName:elements)(CastExpression(SimpleType(SimpleName:NodeList))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getXpath)))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(SimpleName:getXmldoc))(QualifiedName:XPathConstants.NODESET))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:elements))(SimpleName:getLength)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:element)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:elements))(SimpleName:item)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(VariableDeclarationStatement(SimpleType(SimpleName:NamedNodeMap))(VariableDeclarationFragment(SimpleName:attr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:getAttributes))))(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:nameNode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attr))(SimpleName:getNamedItem)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nameNode))(SimpleName:getNodeValue))))(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:urlNode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attr))(SimpleName:getNamedItem)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:urlString)(NullLiteral)))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:urlNode))(Block(ExpressionStatement(Assignment(SimpleName:urlString)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(SimpleName:getBaseUrl))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlNode))(SimpleName:getNodeValue))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:absUrlNode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attr))(SimpleName:getNamedItem)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:absUrlNode))(Block(ExpressionStatement(Assignment(SimpleName:urlString)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:absUrlNode))(SimpleName:getNodeValue))))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlString))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:con)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:Template))(VariableDeclarationFragment(SimpleName:templ)(ClassInstanceCreation(SimpleType(SimpleName:Template))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:getInputStream))(MethodInvocation(SimpleName:getBaseUrl)))))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:templ))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getTemplates)))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(SimpleName:templ))))))))))))