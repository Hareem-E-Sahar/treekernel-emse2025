(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:start)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:name))(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(MethodInvocation(SimpleName:openSerialLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:onMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Action))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:action)(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:String)))(SimpleName:args)))(Block(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:1)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:serialLine1)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:openSerialLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:autostart))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:1)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:closeSerialLine))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:onMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Action))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:action)(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:String)))(SimpleName:args)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:1)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(SimpleName:i)))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:list)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(SimpleName:i)))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:list)(NumberLiteral:0))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:list)(NumberLiteral:1))))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:cmd)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(SimpleName:i))))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:onMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Action))(AnonymousClassDeclaration(FieldDeclaration(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:t1)))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:action)(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:String)))(SimpleName:args)))(Block(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:6))(ReturnStatement))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:1))))))(IfStatement(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:arg)(NumberLiteral:2)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:mx)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:my)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:otype)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(PostfixExpression(SimpleName:arg)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:confi)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:parseDouble)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(PostfixExpression(SimpleName:arg)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:parseDouble)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(PostfixExpression(SimpleName:arg)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:parseDouble)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(PostfixExpression(SimpleName:arg)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:id)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:9))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:id)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:otype)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:otype)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2)))))(Block(ExpressionStatement(Assignment(SimpleName:mx)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))(ExpressionStatement(Assignment(SimpleName:my)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:200))))))))(IfStatement(InfixExpression(SimpleName:my)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:a)(InfixExpression(SimpleName:f2)(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(MethodInvocation(SimpleName:atan2)(METHOD_INVOCATION_ARGUMENTS(SimpleName:my)(SimpleName:mx)))(INFIX_EXPRESSION_OPERATOR:-)(InfixExpression(SimpleName:PI)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))))(ExpressionStatement(MethodInvocation(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:otype))))(ExpressionStatement(MethodInvocation(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:a))))(ExpressionStatement(Assignment(SimpleName:t1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(Assignment(SimpleName:my)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NumberLiteral:3)))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:onMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Action))(AnonymousClassDeclaration(FieldDeclaration(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:t1)))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:action)(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:String)))(SimpleName:args)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:seq)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:1))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:mytime)(InfixExpression(NumberLiteral:0xffffffffL)(INFIX_EXPRESSION_OPERATOR:&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:parseLong)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:2)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lw)(InfixExpression(NumberLiteral:0xffff)(INFIX_EXPRESSION_OPERATOR:&)(CastExpression(PrimitiveType:int)(SimpleName:mytime)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hw)(InfixExpression(NumberLiteral:0xffff)(INFIX_EXPRESSION_OPERATOR:&)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:mytime)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:16)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:seq)(StringLiteral:<STR>)(SimpleName:mytime))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:serialReadChannel1)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputStream1))(SimpleName:readLine))))(IfStatement(SimpleName:debugflag)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(SimpleName:setGateInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1000))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serialReadChannel1))(SimpleName:setDaemon)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serialReadChannel1))(SimpleName:start)))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:serialWriteChannel2)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(WhileStatement(BooleanLiteral:true)(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:outputStream2)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(SimpleName:getGateInfo))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream2))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream2))(SimpleName:flush))))(Block(ExpressionStatement(MethodInvocation(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:100)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serialWriteChannel2))(SimpleName:setDaemon)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serialWriteChannel2))(SimpleName:start)))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:serialReadChannel2)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:serialLine2)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputStream2))(SimpleName:readLine))))(IfStatement(SimpleName:debugflag)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1000))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serialReadChannel2))(SimpleName:setDaemon)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serialReadChannel2))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:SendMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:autostart)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bb))(SimpleName:startMessageLoop)))))))