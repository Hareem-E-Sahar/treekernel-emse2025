(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:exportTheme)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ZipOutStreamTaskAdapter))(SimpleName:out))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:TemplateEntity))(SimpleName:theme))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:TaskTimeoutException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:themeFolder)(MethodInvocation(SimpleName:getThemeZipPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:theme)))))(ExpressionStatement(MethodInvocation(SimpleName:addThemeResources)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(SimpleName:theme))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:descriptionName)(InfixExpression(SimpleName:themeFolder)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:isSkip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:descriptionName))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:descriptionName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:createThemeExportXML)(METHOD_INVOCATION_ARGUMENTS(SimpleName:theme))))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:nextFile)))))))))