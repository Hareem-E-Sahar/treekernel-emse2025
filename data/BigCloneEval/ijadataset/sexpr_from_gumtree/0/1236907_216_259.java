(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:beginProcessing)(SingleVariableDeclaration(SimpleType(SimpleName:SafletContext))(SimpleName:context))(SimpleType(SimpleName:ActionStepException))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:beginProcessing)(SimpleName:context)))(VariableDeclarationStatement(SimpleType(SimpleName:Exception))(VariableDeclarationFragment(SimpleName:exception)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:call1)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)(ClassInstanceCreation(SimpleType(SimpleName:ActionStepException))(StringLiteral:<STR>)))))(ReturnStatement))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:call1)(SimpleType(SimpleName:Call)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)(ClassInstanceCreation(SimpleType(SimpleName:ActionStepException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:call1))(SimpleName:getClass)))(SimpleName:getName)))))))(ReturnStatement))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Call))(SimpleName:call1))))(SimpleName:getChannel))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)(ClassInstanceCreation(SimpleType(SimpleName:ActionStepException))(StringLiteral:<STR>)))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:AgiChannel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Call))(SimpleName:call1))))(SimpleName:getChannel))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:channelName)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VariableTranslator))(SimpleName:translateValue)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:VariableType.TEXT)(MethodInvocation(SimpleName:resolveDynamicValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelnamePrefix)(SimpleName:context))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:debugLog))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINEST)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:channelName))))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:appCmd)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isNotBlank)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelName)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channelName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(IfStatement(SimpleName:spyBridgedOnly)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isNotBlank)(METHOD_INVOCATION_ARGUMENTS(SimpleName:group)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:group))))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:beep))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isNotBlank)(METHOD_INVOCATION_ARGUMENTS(SimpleName:recordFilenamePrefix)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:recordFilenamePrefix))))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:volume)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:4)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:4))(SimpleName:volume))))))))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(SimpleName:privateWhisperEnabled)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(IfStatement(SimpleName:whisperEnabled)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCmd))(SimpleName:toString))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:debugLog))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINEST)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:translateAppReturnValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:result)))(StringLiteral:<STR>)(SimpleName:result))))))(IfStatement(InfixExpression(SimpleName:result)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2)))(Block(ExpressionStatement(Assignment(SimpleName:exception)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ActionStepException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:result)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:exception)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ActionStepException))(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:exception)(ASSIGNMENT_OPERATOR:=)(SimpleName:e))))))(IfStatement(InfixExpression(SimpleName:exception)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)(SimpleName:exception))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:handleSuccess)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context))))))))