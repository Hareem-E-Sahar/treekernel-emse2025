(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleName:ExamModel)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:urlQuestions))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:DataCoherencyException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlQuestions))(SimpleName:openStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(ExpressionStatement(Assignment(SimpleName:questions)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:Question))))))(ExpressionStatement(Assignment(SimpleName:questionsMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Question))))))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlQuestions))(SimpleName:openStream))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:questionNumber)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Question))(VariableDeclarationFragment(SimpleName:question)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:questText)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:hash)(StringLiteral:<STR>)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lookingFor)(QualifiedName:ExamModel.READING_HASH)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(SwitchStatement(SimpleName:lookingFor)(SwitchCase(QualifiedName:ExamModel.READING_HASH))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:trim)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ContinueStatement))(ExpressionStatement(Assignment(SimpleName:hash)(ASSIGNMENT_OPERATOR:=)(SimpleName:line)))(ExpressionStatement(PostfixExpression(SimpleName:questionNumber)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:lookingFor)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ExamModel.READING_QUESTION)))(BreakStatement)(SwitchCase(QualifiedName:ExamModel.READING_QUESTION))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:question)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Question))(SimpleName:questionNumber)(SimpleName:hash)(SimpleName:questText))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:questions))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:question))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:questionsMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:question))(SimpleName:getHash))(SimpleName:question))))(ExpressionStatement(Assignment(SimpleName:questText)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:hash)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:lookingFor)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ExamModel.READING_HASH))))(Block(ExpressionStatement(Assignment(SimpleName:questText)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:questText))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:Constants.nl))))))))(BreakStatement)(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DataCoherencyException))(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:questions))(SimpleName:trimToSize)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))))