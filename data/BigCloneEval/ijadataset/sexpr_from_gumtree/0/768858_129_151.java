(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(SimpleName:zipExtractedList)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:fileName))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:fileNames)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zf)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(SimpleName:fileName))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Enumeration))(VariableDeclarationFragment(SimpleName:entries)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zf))(SimpleName:entries))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(CastExpression(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:nextElement)))))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileNames))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:copyInputStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zf))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileNames))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:zipExtractedList)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zf))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileName))(SimpleName:delete))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:FindSub))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(NullLiteral)(SimpleName:ex)))))))(ReturnStatement(SimpleName:fileNames))))))