(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:ITaskResult))(SimpleName:call)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ProcessBuilder))(VariableDeclarationFragment(SimpleName:pb)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:ProcessBuilder))(SimpleName:commandLine)))(SimpleName:directory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:workingDirectory))))(SimpleName:redirectErrorStream)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pb))(SimpleName:environment)))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:additionalEnvironment))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pb))(SimpleName:environment)))))(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pb))(SimpleName:start))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:input)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInputStream))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:err))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:printStackTrace))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:status)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:waitFor))))(IfStatement(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:status)(StringLiteral:<STR>)(SimpleName:commandLine)(StringLiteral:<STR>)(SimpleName:workingDirectory))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:IPostProcessor))(SimpleName:postProcessor))(SimpleName:postProcessors)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:postProcessor))(SimpleName:process)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputDirectory))(SimpleName:exists))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:MaltcmsTaskResult))(SimpleName:outputDirectory)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Task))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getTaskId))(StringLiteral:<STR>)))))(ReturnStatement(QualifiedName:DefaultTaskResult.EMPTY))))))