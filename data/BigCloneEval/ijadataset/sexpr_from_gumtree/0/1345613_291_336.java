(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:copyRangeFrom)(SingleVariableDeclaration(SimpleType(SimpleName:AudioTrail))(SimpleName:srcTrail))(SingleVariableDeclaration(SimpleType(SimpleName:Span))(SimpleName:copySpan))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:insertPos))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:mode))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:source))(SingleVariableDeclaration(SimpleType(SimpleName:AbstractCompoundEdit))(SimpleName:ce))(SingleVariableDeclaration(ArrayType(PrimitiveType:int)(Dimension))(SimpleName:trackMap))(SingleVariableDeclaration(SimpleType(SimpleName:BlendContext))(SimpleName:bcPre))(SingleVariableDeclaration(SimpleType(SimpleName:BlendContext))(SimpleName:bcPost))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(QualifiedName:trackMap.length)(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getChannelNum)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:trackMap)))))(IfStatement(InfixExpression(QualifiedName:trackMap.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(BooleanLiteral:true)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:hasBlend)(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:bcPre)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bcPre))(SimpleName:getLen))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:bcPost)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bcPost))(SimpleName:getLen))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AudioStake))(VariableDeclarationFragment(SimpleName:writeStake)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:copySpan))(SimpleName:getLength))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bufLen)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:len)(SimpleName:BUFSIZE))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:progWeight)(InfixExpression(NumberLiteral:1.0)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:len))))(ExpressionStatement(Assignment(SimpleName:writeStake)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:alloc)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Span))(SimpleName:insertPos)(InfixExpression(SimpleName:insertPos)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:len)))))))(TryStatement(Block(SwitchStatement(SimpleName:mode)(SwitchCase(SimpleName:MODE_INSERT))(IfStatement(SimpleName:hasBlend)(Block(ExpressionStatement(MethodInvocation(SimpleName:insertRangeFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcTrail)(QualifiedName:copySpan.start)(SimpleName:writeStake)(SimpleName:insertPos)(SimpleName:len)(SimpleName:bufLen)(SimpleName:trackMap)(SimpleName:progWeight)(SimpleName:bcPre)(SimpleName:bcPost)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:insertRangeFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcTrail)(QualifiedName:copySpan.start)(SimpleName:writeStake)(SimpleName:insertPos)(SimpleName:len)(SimpleName:bufLen)(SimpleName:trackMap)(SimpleName:progWeight))))))(BreakStatement)(SwitchCase(SimpleName:MODE_MIX))(IfStatement(SimpleName:hasBlend)(Block(ExpressionStatement(MethodInvocation(SimpleName:mixRangeFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcTrail)(QualifiedName:copySpan.start)(SimpleName:writeStake)(SimpleName:insertPos)(SimpleName:len)(SimpleName:bufLen)(SimpleName:trackMap)(SimpleName:progWeight)(SimpleName:bcPre)(SimpleName:bcPost)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:mixRangeFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcTrail)(QualifiedName:copySpan.start)(SimpleName:writeStake)(SimpleName:insertPos)(SimpleName:len)(SimpleName:bufLen)(SimpleName:trackMap)(SimpleName:progWeight))))))(BreakStatement)(SwitchCase(SimpleName:MODE_OVERWRITE))(IfStatement(SimpleName:hasBlend)(Block(ExpressionStatement(MethodInvocation(SimpleName:overwriteRangeFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcTrail)(QualifiedName:copySpan.start)(SimpleName:writeStake)(SimpleName:insertPos)(SimpleName:len)(SimpleName:bufLen)(SimpleName:trackMap)(SimpleName:progWeight)(SimpleName:bcPre)(SimpleName:bcPost)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:overwriteRangeFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcTrail)(QualifiedName:copySpan.start)(SimpleName:writeStake)(SimpleName:insertPos)(SimpleName:len)(SimpleName:bufLen)(SimpleName:trackMap)(SimpleName:progWeight))))))(BreakStatement)(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mode)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writeStake))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:editAdd)(METHOD_INVOCATION_ARGUMENTS(SimpleName:source)(SimpleName:writeStake)(SimpleName:ce))))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writeStake))(SimpleName:dispose)))(ReturnStatement(BooleanLiteral:false))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writeStake))(SimpleName:dispose)))(ThrowStatement(SimpleName:e1)))))))))