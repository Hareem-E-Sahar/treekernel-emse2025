(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:update)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:excCommandList))(SimpleName:clear)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inhCommandList))(SimpleName:clear)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mail))(SimpleName:size))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IntFireMessage))(VariableDeclarationFragment(SimpleName:intFireMessage)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mail))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(QualifiedName:IntFireMessage.Type))(VariableDeclarationFragment(SimpleName:type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:intFireMessage))(SimpleName:getType))))(SwitchStatement(SimpleName:type)(SwitchCase(SimpleName:EXCITATORY_INJECTOR_OFF_REQUEST))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:excCommandList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ExpDecayInjector.Command.OFF))))(BreakStatement)(SwitchCase(SimpleName:EXCITATORY_INJECTOR_ON_REQUEST))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:excCommandList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ExpDecayInjector.Command.ON))))(BreakStatement)(SwitchCase(SimpleName:INHIBITORY_INJECTOR_OFF_REQUEST))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inhCommandList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ExpDecayInjector.Command.OFF))))(BreakStatement)(SwitchCase(SimpleName:INHIBITORY_INJECTOR_ON_REQUEST))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inhCommandList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ExpDecayInjector.Command.ON))))(BreakStatement)(SwitchCase(SimpleName:TOGGLE_PAUSE_REQUEST))(ExpressionStatement(Assignment(SimpleName:simulationRunning)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:simulationRunning))))(BreakStatement)(SwitchCase))))(IfStatement(SimpleName:simulationRunning)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:spiked)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:spikeCount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:UPDATES_PER_UPDATE))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ThreePhaseUpdate))(SimpleName:threePhaseUpdate))(SimpleName:threePhaseUpdates)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threePhaseUpdate))(SimpleName:access)))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ThreePhaseUpdate))(SimpleName:threePhaseUpdate))(SimpleName:threePhaseUpdates)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threePhaseUpdate))(SimpleName:digest)))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ThreePhaseUpdate))(SimpleName:threePhaseUpdate))(SimpleName:threePhaseUpdates)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threePhaseUpdate))(SimpleName:mutate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SimLib))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:intFireNeuronImp))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:intFireNeuronImp))(SimpleName:isSpiking))(Block(ExpressionStatement(Assignment(SimpleName:spiked)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(PostfixExpression(SimpleName:spikeCount)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:membraneVoltage)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:intFireNeuronImp))(SimpleName:getMembraneVoltage))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:absMembraneVoltage)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:membraneVoltage)))))(IfStatement(InfixExpression(SimpleName:absMembraneVoltage)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:membraneVoltageRange))(Block(ExpressionStatement(Assignment(SimpleName:membraneVoltageRange)(ASSIGNMENT_OPERATOR:=)(SimpleName:absMembraneVoltage)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:membraneVoltageTimeSeries)(SimpleName:offset))(ASSIGNMENT_OPERATOR:=)(SimpleName:membraneVoltage)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:spikeTimeSeries)(SimpleName:offset))(ASSIGNMENT_OPERATOR:=)(SimpleName:spiked)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:excitatoryCurrent)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:inhibitoryCurrent)(NumberLiteral:0)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:injectorSeqSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:injectorSeq))(SimpleName:size))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:injectorSeqSize))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Injector))(VariableDeclarationFragment(SimpleName:injector)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:injectorSeq))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:injector))(SimpleName:isOn)))(Block(ContinueStatement)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:current)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:injector))(SimpleName:getCurrent))))(IfStatement(InfixExpression(SimpleName:current)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:inhibitoryCurrent)(ASSIGNMENT_OPERATOR:+=)(SimpleName:current)))(IfStatement(InfixExpression(SimpleName:current)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:inhibitoryCurrentRange))(Block(ExpressionStatement(Assignment(SimpleName:inhibitoryCurrentRange)(ASSIGNMENT_OPERATOR:=)(SimpleName:current))))))(Block(ExpressionStatement(Assignment(SimpleName:excitatoryCurrent)(ASSIGNMENT_OPERATOR:+=)(SimpleName:current)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:absCurrent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:current)))))(IfStatement(InfixExpression(SimpleName:absCurrent)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:excitatoryCurrentRange))(Block(ExpressionStatement(Assignment(SimpleName:excitatoryCurrentRange)(ASSIGNMENT_OPERATOR:=)(SimpleName:absCurrent)))))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:excitatoryCurrentTimeSeries)(SimpleName:offset))(ASSIGNMENT_OPERATOR:=)(SimpleName:excitatoryCurrent)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:inhibitoryCurrentTimeSeries)(SimpleName:offset))(ASSIGNMENT_OPERATOR:=)(SimpleName:inhibitoryCurrent)))(ExpressionStatement(Assignment(SimpleName:offset)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:offset)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:%)(SimpleName:timeSeriesLength))))(ExpressionStatement(PostfixExpression(SimpleName:timeStep)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:timeMin)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:timeStep)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:timeSeriesLength)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:TIME_INTERVAL))))))))))