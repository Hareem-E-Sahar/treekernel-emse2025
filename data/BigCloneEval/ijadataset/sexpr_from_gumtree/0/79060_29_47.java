(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Interval))(SimpleName:findOverlap)(SingleVariableDeclaration(SimpleType(SimpleName:Interval))(SimpleName:interval1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:low)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:high)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:intervals))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(SimpleType(SimpleName:Interval))(VariableDeclarationFragment(SimpleName:interval2)))(VariableDeclarationStatement(SimpleType(SimpleName:Interval))(VariableDeclarationFragment(SimpleName:result)(NullLiteral)))(WhileStatement(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:low))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:middle)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:low)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:interval2)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Interval))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:intervals))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:middle))))))(IfStatement(InfixExpression(QualifiedName:interval1.start)(INFIX_EXPRESSION_OPERATOR:<=)(QualifiedName:interval2.end))(Block(IfStatement(InfixExpression(QualifiedName:interval1.end)(INFIX_EXPRESSION_OPERATOR:>=)(QualifiedName:interval2.start))(Block(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(SimpleName:interval2)))))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ReturnStatement(SimpleName:result))))))