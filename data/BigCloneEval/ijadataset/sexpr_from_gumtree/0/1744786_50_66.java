(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:updateArtifact)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:from))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:to))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:urlStr))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:exists)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:os)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlStr))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:os)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:to)(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamUtil))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:os)(SimpleName:is)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamUtil))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:os))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamUtil))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:delete)))))))))))