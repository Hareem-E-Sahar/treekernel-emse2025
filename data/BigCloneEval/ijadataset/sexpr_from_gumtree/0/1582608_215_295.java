(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:dumpPool)(Block(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:BlockingQueue))(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Pool))))(VariableDeclarationFragment(SimpleName:queue)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayBlockingQueue))(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Pool))))(SimpleName:capacity))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:consoleId)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:Thread))(Dimension))(VariableDeclarationFragment(SimpleName:threads)(ArrayCreation(ArrayType(SimpleType(SimpleName:Thread))(Dimension(NumberLiteral:2))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:threads)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:writerThread)(ArrayAccess(SimpleName:threads)(NumberLiteral:1))))(VariableDeclarationStatement(SimpleType(SimpleName:PoolDao))(VariableDeclarationFragment(SimpleName:poolDao)(ClassInstanceCreation(SimpleType(SimpleName:PoolDao))(QualifiedName:BaseDao.ConnType.DUMP))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:next)(NumberLiteral:1))(VariableDeclarationFragment(SimpleName:progress)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:tmp)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Paging))(VariableDeclarationFragment(SimpleName:paging)(ClassInstanceCreation(SimpleType(SimpleName:Paging))(SimpleName:pageSize))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Pool)))(VariableDeclarationFragment(SimpleName:list)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:offer)(BooleanLiteral:false)))(DoStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paging))(SimpleName:setPageNumber)(METHOD_INVOCATION_ARGUMENTS(SimpleName:next))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:list)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:poolDao))(SimpleName:listFullPools)(METHOD_INVOCATION_ARGUMENTS(SimpleName:paging))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:printStackTrace)))(ReturnStatement))))(ExpressionStatement(Assignment(SimpleName:tmp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paging))(SimpleName:getPageNumber))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1f))(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paging))(SimpleName:getPageTotal)))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:100))))))(IfStatement(InfixExpression(SimpleName:progress)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:tmp))(Block(ExpressionStatement(Assignment(SimpleName:progress)(ASSIGNMENT_OPERATOR:=)(SimpleName:tmp)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:console))(SimpleName:flushablePrint)(METHOD_INVOCATION_ARGUMENTS(SimpleName:consoleId)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:progress)(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:offer)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(DoStatement(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:offer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:offer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:list)(NumberLiteral:5)(QualifiedName:TimeUnit.SECONDS))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writerThread))(SimpleName:isAlive)))(Block(ReturnStatement))))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:offer)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paging))(SimpleName:hasNext))(Block(ExpressionStatement(PostfixExpression(SimpleName:next)(POSTFIX_EXPRESSION_OPERATOR:++))))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:paging))(SimpleName:hasNext)))))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:threads)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:readerThread)(ArrayAccess(SimpleName:threads)(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:PoolDao))(VariableDeclarationFragment(SimpleName:poolDao)(ClassInstanceCreation(SimpleType(SimpleName:PoolDao)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Pool)))(VariableDeclarationFragment(SimpleName:list)(NullLiteral)))(WhileStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:isEmpty)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:readerThread))(SimpleName:isAlive)))(Block(ExpressionStatement(Assignment(SimpleName:list)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(DoStatement(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:list)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:poll)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:5)(QualifiedName:TimeUnit.SECONDS))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))(IfStatement(InfixExpression(InfixExpression(SimpleName:list)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:readerThread))(SimpleName:isAlive))))(Block(BreakStatement))))(InfixExpression(SimpleName:list)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(TryStatement(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Pool))(SimpleName:pool))(SimpleName:list)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:poolDao))(SimpleName:insertPool)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pool)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:countDownLatch))(SimpleName:countDown)))(ReturnStatement))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:countDownLatch))(SimpleName:countDown)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:console))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:consoleId))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:console))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:console))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Thread))(SimpleName:thread))(SimpleName:threads)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thread))(SimpleName:start)))))))))