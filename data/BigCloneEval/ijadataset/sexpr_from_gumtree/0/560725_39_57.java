(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:String))(SimpleName:filterLatexExpressions)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:text))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pattern)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:Pattern))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pattern)))))(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:text)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:myStringBuffer)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:find))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isInline)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:formula)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:text))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:start))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:end))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:formula))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:formula)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:text))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:start))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:end))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))))(ExpressionStatement(Assignment(SimpleName:isInline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:formula)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:text))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:start))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:end))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:replacement)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:oxdoc.config.MathProcessor))(SimpleName:ProcessFormula)(METHOD_INVOCATION_ARGUMENTS(SimpleName:formula)(SimpleName:isInline)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:args)(ArrayInitializer(ConditionalExpression(SimpleName:isInline)(StringLiteral:<STR>)(StringLiteral:<STR>))(SimpleName:replacement))))(ExpressionStatement(Assignment(SimpleName:replacement)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageFormat))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:args)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:appendReplacement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myStringBuffer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Matcher))(SimpleName:quoteReplacement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:replacement))))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:appendTail)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myStringBuffer))))(SimpleName:toString)))))))