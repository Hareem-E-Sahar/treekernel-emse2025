(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:float)(SimpleName:sqrt)(SingleVariableDeclaration(PrimitiveType:float)(SimpleName:num))(SingleVariableDeclaration(PrimitiveType:float)(SimpleName:e))(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:low)(NumberLiteral:0F)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:high)(SimpleName:num)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:guess))(VariableDeclarationFragment(SimpleName:e0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(DoStatement(Block(ExpressionStatement(Assignment(SimpleName:guess)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:high)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(InfixExpression(SimpleName:guess)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:guess))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:num))(Block(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess)))(ExpressionStatement(Assignment(SimpleName:e0)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:guess)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:guess))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:num)))))(Block(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess)))(ExpressionStatement(Assignment(SimpleName:e0)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:-)(InfixExpression(SimpleName:guess)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:guess)))))))(ExpressionStatement(PostfixExpression(SimpleName:count)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:printf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:guess)(SimpleName:e0)))))(InfixExpression(SimpleName:e0)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:e)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:printf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:count)(SimpleName:guess))))(ReturnStatement(SimpleName:guess))))))