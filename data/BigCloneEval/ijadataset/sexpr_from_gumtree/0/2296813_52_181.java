(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:schedule)(SimpleType(SimpleName:Exception))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:budget)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:budgetSpent)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:budgetLeft)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:deadline)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:timeSpent)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:timeLeft)(NumberLiteral:0)))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:finished))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Qos))(VariableDeclarationFragment(SimpleName:qos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:getQos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:applicationID)))))(ExpressionStatement(Assignment(SimpleName:budget)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qos))(SimpleName:getBudget))))(ExpressionStatement(Assignment(SimpleName:budgetSpent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qos))(SimpleName:getBudgetSpent))))(ExpressionStatement(Assignment(SimpleName:budgetLeft)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:budget)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:budgetSpent))))(ExpressionStatement(Assignment(SimpleName:deadline)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qos))(SimpleName:getDeadline))))(ExpressionStatement(Assignment(SimpleName:timeSpent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qos))(SimpleName:getTimeSpent))))(ExpressionStatement(Assignment(SimpleName:timeLeft)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:deadline)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:timeSpent))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ScheduleOptimisationType))(SimpleName:stringValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:optimisation)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:budget)(StringLiteral:<STR>)(SimpleName:deadline)))))(VariableDeclarationStatement(SimpleType(SimpleName:Job))(VariableDeclarationFragment(SimpleName:jNext)(MethodInvocation(SimpleName:getNextReadyJob))))(IfStatement(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:servers)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getCandidateServers)(METHOD_INVOCATION_ARGUMENTS(SimpleName:jNext)))))(SwitchStatement(SimpleName:optimisation)(SwitchCase(QualifiedName:ScheduleOptimisationType.COST_TIME))(ExpressionStatement(MethodInvocation(SimpleName:sortByCost)(METHOD_INVOCATION_ARGUMENTS(SimpleName:servers))))(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:grpSrvLst)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(ExpressionStatement(MethodInvocation(SimpleName:groupServers)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grpSrvLst)(SimpleName:servers))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(NumberLiteral:0)))(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:grpSrvLst))(SimpleName:size)))(PostfixExpression(SimpleName:l)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:servList)(CastExpression(SimpleType(SimpleName:ArrayList))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:grpSrvLst))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:p)(NumberLiteral:0)))(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:servList))(SimpleName:size)))(PostfixExpression(SimpleName:p)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ComputeServer))(VariableDeclarationFragment(SimpleName:server)(CastExpression(SimpleType(SimpleName:ComputeServer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:servList))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p))))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:currentAvailBudget)(InfixExpression(SimpleName:budgetLeft)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:budgetAllocated))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:budgetAvailPerJob)(InfixExpression(SimpleName:currentAvailBudget)(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:totalStats))(SimpleName:getReadyJobs)))))(IfStatement(InfixExpression(SimpleName:budgetAvailPerJob)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getPricePerJob)))(ContinueStatement))(WhileStatement(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:budgetAllocated)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getPricePerJob))))(ExpressionStatement(MethodInvocation(SimpleName:saveJobMapping)(METHOD_INVOCATION_ARGUMENTS(SimpleName:jNext)(SimpleName:server))))(ExpressionStatement(Assignment(SimpleName:jNext)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNextReadyJob))))))(IfStatement(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))))(IfStatement(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))))(BreakStatement)(SwitchCase(QualifiedName:ScheduleOptimisationType.COST))(ExpressionStatement(MethodInvocation(SimpleName:sortByCost)(METHOD_INVOCATION_ARGUMENTS(SimpleName:servers))))(IfStatement(InfixExpression(SimpleName:servers)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:servers))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ComputeServer))(VariableDeclarationFragment(SimpleName:server)(CastExpression(SimpleType(SimpleName:ComputeServer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:servers))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))(SynchronizedStatement(SimpleName:oBudgetAlloc)(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:currentAvailBudget)(InfixExpression(SimpleName:budgetLeft)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:budgetAllocated))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:budgetAvailPerJob)(InfixExpression(SimpleName:currentAvailBudget)(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:totalStats))(SimpleName:getReadyJobs)))))(IfStatement(InfixExpression(SimpleName:budgetAvailPerJob)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getPricePerJob)))(Block(ContinueStatement)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:jobsToSubmit)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getAvgJobComputationTime))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:jobsToSubmit)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:timeLeft)(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getAvgJobComputationTime)))))))(ExpressionStatement(Assignment(SimpleName:jobsToSubmit)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:jobsToSubmit)(INFIX_EXPRESSION_OPERATOR:>=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getJobLimit))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getJobLimit))(SimpleName:jobsToSubmit)))))(Block(ExpressionStatement(Assignment(SimpleName:jobsToSubmit)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:jobsToSubmit)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(SimpleName:checkQos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:qos))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:submitSuccess)(MethodInvocation(SimpleName:saveJobMapping)(METHOD_INVOCATION_ARGUMENTS(SimpleName:jNext)(SimpleName:server)))))(IfStatement(SimpleName:submitSuccess)(Block(ExpressionStatement(Assignment(SimpleName:jNext)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNextReadyJob))))(SynchronizedStatement(SimpleName:oBudgetAlloc)(Block(ExpressionStatement(Assignment(SimpleName:budgetAllocated)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getPricePerJob))))))(ExpressionStatement(PostfixExpression(SimpleName:jobsToSubmit)(POSTFIX_EXPRESSION_OPERATOR:--))))(Block(BreakStatement)))))(IfStatement(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))))))(BreakStatement)(SwitchCase(QualifiedName:ScheduleOptimisationType.TIME))(ExpressionStatement(MethodInvocation(SimpleName:sortByTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:servers))))(IfStatement(InfixExpression(SimpleName:servers)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:servers))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ComputeServer))(VariableDeclarationFragment(SimpleName:server)(CastExpression(SimpleType(SimpleName:ComputeServer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:servers))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:jobsToSubmit)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getPricePerJob))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:jobsToSubmit)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:budgetLeft)(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getPricePerJob)))))))(ExpressionStatement(Assignment(SimpleName:jobsToSubmit)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:jobsToSubmit)(INFIX_EXPRESSION_OPERATOR:>=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getJobLimit))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getJobLimit))(SimpleName:jobsToSubmit)))))(Block(ExpressionStatement(Assignment(SimpleName:jobsToSubmit)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:totalStats))(SimpleName:getReadyJobs))))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:jobsToSubmit)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(SimpleName:checkQos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:qos))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:submitSuccess)(MethodInvocation(SimpleName:saveJobMapping)(METHOD_INVOCATION_ARGUMENTS(SimpleName:jNext)(SimpleName:server)))))(IfStatement(SimpleName:submitSuccess)(Block(ExpressionStatement(Assignment(SimpleName:jNext)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNextReadyJob))))(SynchronizedStatement(SimpleName:oBudgetAlloc)(Block(ExpressionStatement(Assignment(SimpleName:budgetAllocated)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:getPricePerJob))))))(ExpressionStatement(PostfixExpression(SimpleName:jobsToSubmit)(POSTFIX_EXPRESSION_OPERATOR:--))))(Block(BreakStatement)))))(IfStatement(InfixExpression(SimpleName:jNext)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))))))(BreakStatement))))(ExpressionStatement(MethodInvocation(SimpleName:updateStats)))(IfStatement(InfixExpression(SimpleName:budgetLeft)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:setFeasible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(BreakStatement)))(IfStatement(InfixExpression(SimpleName:timeLeft)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:setFeasible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(BreakStatement)))(ExpressionStatement(PostfixExpression(SimpleName:numPoll)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SleepUtil))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pollTime))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:budgetSpent)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:timeSpent))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setFailed)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setFailed))))))))))