(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:insertSortedElement)(SingleVariableDeclaration(SimpleType(SimpleName:Vector))(SimpleName:v))(SingleVariableDeclaration(SimpleType(SimpleName:Element))(SimpleName:elem))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:low)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:high)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:v))(SimpleName:size))))(WhileStatement(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:high))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:midle)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:high)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:midElem)(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:v))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:midle))))))(IfStatement(InfixExpression(QualifiedName:elem.startOffset)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:midElem.startOffset))(Block(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(SimpleName:midle))))(Block(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:midle)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:v))(SimpleName:insertElementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:elem)(SimpleName:low))))))))