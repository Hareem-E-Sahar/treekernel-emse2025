(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:responseAvailable)(SingleVariableDeclaration(SimpleType(SimpleName:ReusableBuffer))(SimpleName:buffer))(Block(SynchronizedStatement(SimpleName:openChunks)(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fChannel)(NullLiteral)))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:remaining))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileIO))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(StringLiteral:<STR>)(SimpleName:fileName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getPath)))))(AssertStatement(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:exists)))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:fChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:f)))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fChannel))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:getBuffer))(SimpleName:pos1)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>)(SimpleName:fileName)(SimpleName:pos1)(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:notify)))(ReturnStatement)))(Block(IfStatement(InfixExpression(SimpleName:fChannel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fChannel))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_ERROR)(ThisExpression)(SimpleName:e)))))))))(IfStatement(InfixExpression(SimpleName:buffer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BufferPool))(SimpleName:free)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:decrementAndGet))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:notify))))))))))