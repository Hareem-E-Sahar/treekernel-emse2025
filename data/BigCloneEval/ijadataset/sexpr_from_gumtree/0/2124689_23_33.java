(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(SimpleType(SimpleName:ICircle))(SimpleName:construct)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:x1))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:y1))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:x2))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:y2))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:y2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y1))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x1))))))(IfStatement(InfixExpression(SimpleName:r2)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:r1))(Block(ExpressionStatement(Assignment(SimpleName:r1)(ASSIGNMENT_OPERATOR:=)(SimpleName:r2)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ox)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:oy)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:TwoDCircle))(ClassInstanceCreation(SimpleType(SimpleName:TwoDPoint))(SimpleName:ox)(SimpleName:oy))(SimpleName:r1)))))))