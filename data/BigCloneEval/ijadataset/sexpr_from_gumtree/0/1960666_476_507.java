(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:ByteBuffer))(SimpleName:readFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleType(SimpleName:FileNotFoundException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IOException))(VariableDeclarationFragment(SimpleName:ex)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:contents)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:rfile)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:chan)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:rfile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:chan)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rfile))(SimpleName:getChannel))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chan))(SimpleName:size)))))(ExpressionStatement(Assignment(SimpleName:contents)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:size)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:contents))(SimpleName:hasRemaining))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chan))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:contents)))))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getPath))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:contents))(SimpleName:flip))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:fnfe))(Block(ExpressionStatement(Assignment(SimpleName:ex)(ASSIGNMENT_OPERATOR:=)(SimpleName:fnfe)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(Assignment(SimpleName:ex)(ASSIGNMENT_OPERATOR:=)(SimpleName:ioe)))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:chan)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chan))(SimpleName:close))))(IfStatement(InfixExpression(SimpleName:rfile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rfile))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(IfStatement(InfixExpression(SimpleName:ex)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:ex)(ASSIGNMENT_OPERATOR:=)(SimpleName:ioe)))))))(ExpressionStatement(Assignment(SimpleName:rfile)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:chan)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(SimpleName:ex)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ThrowStatement(SimpleName:ex)))(ReturnStatement(SimpleName:contents))))))