(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:private)(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:Loader)))(SimpleName:getLoaderClass)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:loaderClassName))(Block(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:Loader)))(VariableDeclarationFragment(SimpleName:loaderClass)(CastExpression(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:Loader)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getClassLoader)))(SimpleName:loadClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:loaderClassName))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Loader))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:loaderClass))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:loaderClassName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Loader))))(SimpleName:getName))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Modifier))(SimpleName:isAbstract)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loaderClass))(SimpleName:getModifiers))))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Modifier))(SimpleName:isPublic)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loaderClass))(SimpleName:getModifiers))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:loaderClassName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(SimpleType(SimpleName:Loader)))(VariableDeclarationFragment(SimpleName:constructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loaderClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension(NumberLiteral:0))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(NumberLiteral:0)))))))(ReturnStatement(SimpleName:loaderClass)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:loaderClassName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:loaderClassName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))))))