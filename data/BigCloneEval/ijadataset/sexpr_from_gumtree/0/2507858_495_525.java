(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:createSHA1String)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:file))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:InterruptedException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:md)(ClassInstanceCreation(SimpleType(SimpleName:SHA1)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:65536))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)))(VariableDeclarationStatement(SimpleType(SimpleName:IntWrapper))(VariableDeclarationFragment(SimpleName:progress)(ClassInstanceCreation(SimpleType(SimpleName:IntWrapper))(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progressMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:progress))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:read))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progress))(SimpleName:addInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:read))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SystemUtils))(SimpleName:getIdleTime))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:MIN_IDLE_TIME))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:end)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:interval)(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start))))(IfStatement(InfixExpression(SimpleName:interval)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:interval)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:3)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:yield)))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progressMap))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(IfStatement(InfixExpression(SimpleName:fis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignored))(Block)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:sha1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest))))(ReturnStatement(InfixExpression(QualifiedName:UrnType.URN_NAMESPACE_ID)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:UrnType.SHA1_STRING)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Base32))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sha1)))))))))