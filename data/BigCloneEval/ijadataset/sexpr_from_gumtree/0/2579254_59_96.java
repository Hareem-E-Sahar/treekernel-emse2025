(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Deprecated))(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:ObjectStreamException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ai)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:encoding)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lang)(NullLiteral)))(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:5))(Block(ExpressionStatement(MethodInvocation(SimpleName:usage)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(SimpleName:ai)))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(SimpleName:ai)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(PostfixExpression(SimpleName:ai)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(SimpleName:ai)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length))(Block(ExpressionStatement(Assignment(SimpleName:encoding)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(SimpleName:ai))))(ExpressionStatement(PostfixExpression(SimpleName:ai)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(MethodInvocation(SimpleName:usage))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(SimpleName:ai)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(PostfixExpression(SimpleName:ai)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(SimpleName:ai)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length))(Block(ExpressionStatement(Assignment(SimpleName:lang)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(SimpleName:ai))))(ExpressionStatement(PostfixExpression(SimpleName:ai)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(MethodInvocation(SimpleName:usage))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:usage))))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:trainingDataFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:args)(PostfixExpression(SimpleName:ai)(POSTFIX_EXPRESSION_OPERATOR:++))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:trainingDataIn)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:trainingDataFile))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ObjectStream))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:lineStream)(ClassInstanceCreation(SimpleType(SimpleName:PlainTextByLineStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trainingDataIn))(SimpleName:getChannel))(SimpleName:encoding))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ObjectStream))(SimpleType(SimpleName:TokenSample)))(VariableDeclarationFragment(SimpleName:sampleStream)(ClassInstanceCreation(SimpleType(SimpleName:TokenSampleStream))(SimpleName:lineStream))))(VariableDeclarationStatement(SimpleType(SimpleName:TokenizerCrossValidator))(VariableDeclarationFragment(SimpleName:validator)(ClassInstanceCreation(SimpleType(SimpleName:TokenizerCrossValidator))(SimpleName:lang)(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:validator))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sampleStream)(NumberLiteral:10))))(VariableDeclarationStatement(SimpleType(SimpleName:FMeasure))(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:validator))(SimpleName:getFMeasure))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:toString)))))))))