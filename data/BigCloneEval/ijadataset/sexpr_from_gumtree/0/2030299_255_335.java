(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:open)(SingleVariableDeclaration(SimpleType(SimpleName:SourceDataLine))(SimpleName:line))(SimpleType(SimpleName:LineUnavailableException))(Block(IfStatement(MethodInvocation(SimpleName:isOpen))(Block(ExpressionStatement(Assignment(SimpleName:implicitOpen)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ReturnStatement)))(SynchronizedStatement(SimpleName:control_mutex)(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:format)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getFormat)))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:ais)(MethodInvocation(SimpleName:openStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFormat))))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(SynchronizedStatement(QualifiedName:SoftMixingMixerProvider.mutex)(Block(ExpressionStatement(Assignment(QualifiedName:SoftMixingMixerProvider.lockthread)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Mixer))(VariableDeclarationFragment(SimpleName:defaultmixer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getMixer)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)))))(IfStatement(InfixExpression(SimpleName:defaultmixer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:idealinfo)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:idealformat)(NullLiteral)))(VariableDeclarationStatement(ArrayType(SimpleType(QualifiedName:Line.Info))(Dimension))(VariableDeclarationFragment(SimpleName:lineinfos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:defaultmixer))(SimpleName:getSourceLineInfo))))(LabeledStatement(SimpleName:idealFound)(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:lineinfos.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:lineinfos)(SimpleName:i)))(SimpleName:getLineClass))(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:SourceDataLine))))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:info)(CastExpression(SimpleType(QualifiedName:DataLine.Info))(ArrayAccess(SimpleName:lineinfos)(SimpleName:i)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:AudioFormat))(Dimension))(VariableDeclarationFragment(SimpleName:formats)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:info))(SimpleName:getFormats))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:formats.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:format)(ArrayAccess(SimpleName:formats)(SimpleName:j))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getEncoding)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Encoding.PCM_SIGNED)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getEncoding)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Encoding.PCM_UNSIGNED))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleRate))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleRate))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:48000.0)))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleSizeInBits))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleSizeInBits))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:16)))(Block(ExpressionStatement(Assignment(SimpleName:idealinfo)(ASSIGNMENT_OPERATOR:=)(SimpleName:info)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ideal_channels)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getChannels))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ideal_signed)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getEncoding)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Encoding.PCM_SIGNED)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:ideal_rate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleRate))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ideal_endian)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:isBigEndian))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ideal_bits)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleSizeInBits))))(IfStatement(InfixExpression(SimpleName:ideal_bits)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(ExpressionStatement(Assignment(SimpleName:ideal_bits)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:16))))(IfStatement(InfixExpression(SimpleName:ideal_channels)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(ExpressionStatement(Assignment(SimpleName:ideal_channels)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:ideal_rate)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(ExpressionStatement(Assignment(SimpleName:ideal_rate)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:48000))))(ExpressionStatement(Assignment(SimpleName:idealformat)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:AudioFormat))(SimpleName:ideal_rate)(SimpleName:ideal_bits)(SimpleName:ideal_channels)(SimpleName:ideal_signed)(SimpleName:ideal_endian))))(BreakStatement(SimpleName:idealFound))))))))))))))(IfStatement(InfixExpression(SimpleName:idealformat)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:format)(ASSIGNMENT_OPERATOR:=)(SimpleName:idealformat)))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SourceDataLine))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:defaultmixer))(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:idealinfo))))))))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getSourceDataLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:format)))))))(Block(SynchronizedStatement(QualifiedName:SoftMixingMixerProvider.mutex)(Block(ExpressionStatement(Assignment(QualifiedName:SoftMixingMixerProvider.lockthread)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:info))(SimpleName:toString))(StringLiteral:<STR>)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:latency)(FieldAccess(ThisExpression)(SimpleName:latency))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:isOpen)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bufferSize)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getFormat)))(SimpleName:getFrameSize))(INFIX_EXPRESSION_OPERATOR:*)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getFormat)))(SimpleName:getFrameRate))(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(SimpleName:latency)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:1000000f)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFormat))(SimpleName:bufferSize))))(ExpressionStatement(Assignment(SimpleName:sourceDataLine)(ASSIGNMENT_OPERATOR:=)(SimpleName:line)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:isActive)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:start))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:controlbuffersize)(NumberLiteral:512)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:controlbuffersize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ais))(SimpleName:available)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:buffersize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getBufferSize))))(ExpressionStatement(Assignment(SimpleName:buffersize)(ASSIGNMENT_OPERATOR:-=)(InfixExpression(SimpleName:buffersize)(INFIX_EXPRESSION_OPERATOR:%)(SimpleName:controlbuffersize))))(IfStatement(InfixExpression(SimpleName:buffersize)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(NumberLiteral:3)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:controlbuffersize)))(ExpressionStatement(Assignment(SimpleName:buffersize)(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:3)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:controlbuffersize)))))(IfStatement(SimpleName:jitter_correction)(Block(ExpressionStatement(Assignment(SimpleName:ais)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SoftJitterCorrector))(SimpleName:ais)(SimpleName:buffersize)(SimpleName:controlbuffersize))))))(ExpressionStatement(Assignment(SimpleName:pusher)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SoftAudioPusher))(SimpleName:line)(SimpleName:ais)(SimpleName:controlbuffersize))))(ExpressionStatement(Assignment(SimpleName:pusher_stream)(ASSIGNMENT_OPERATOR:=)(SimpleName:ais)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pusher))(SimpleName:start))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:LineUnavailableException))(SimpleName:e))(Block(IfStatement(MethodInvocation(SimpleName:isOpen))(ExpressionStatement(MethodInvocation(SimpleName:close))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:LineUnavailableException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString)))))))))))))