(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:FileCreationResult))(SimpleName:createOutputFiles)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:outputDir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:parseResult))(SimpleType(SimpleName:InterruptedException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newFileCounter)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:skippedFilesCounter)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:newline)(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parseResult))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parseResult))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:FILE_HEADER)))))(WhileStatement(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:skipFile)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nextPos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parseResult))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:FILE_HEADER)(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ExpressionStatement(Assignment(SimpleName:nextPos)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(InfixExpression(SimpleName:nextPos)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parseResult))(SimpleName:length))(SimpleName:nextPos))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileContent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parseResult))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pos)(SimpleName:nextPos)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:endHeaderPos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileContent))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newline)))))(IfStatement(InfixExpression(SimpleName:endHeaderPos)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCreationResult))(NumberLiteral:0)(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:header)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileContent))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:endHeaderPos))))(SimpleName:trim))))(ExpressionStatement(Assignment(SimpleName:fileContent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileContent))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:endHeaderPos))))(SimpleName:trim))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileContent)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:fileNamePos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:fileNamePos)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:fileNamePos)(INFIX_EXPRESSION_OPERATOR:==)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCreationResult))(NumberLiteral:0)(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(SimpleName:trim))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:origFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:outputDir)(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>)(SimpleName:fileName)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tempFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:outputDir)(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>)(SimpleName:fileName)(StringLiteral:<STR>)))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:newline)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:fileContent)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:fileContent)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:createFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempFile)(SimpleName:fileContent))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origFile))(SimpleName:exists))(Block(IfStatement(InfixExpression(SimpleName:overwrite)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:Boolean.FALSE))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:diff)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:diff)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Diff))(SimpleName:origFile)(SimpleName:tempFile)))(SimpleName:performDiff))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:choice)(NumberLiteral:999)))(IfStatement(InfixExpression(SimpleName:diff)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(SimpleName:overwrite)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(WhileStatement(InfixExpression(InfixExpression(SimpleName:choice)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:999))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(ArrayAccess(QualifiedName:JApplicationGen.DIALOGUE_OPTIONS)(SimpleName:choice))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JApplicationGen.OPTION_VIEW_DIFF)))(Block(ExpressionStatement(Assignment(SimpleName:choice)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showOptionDialog)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:origFile)(StringLiteral:<STR>)(StringLiteral:<STR>))(StringLiteral:<STR>)(QualifiedName:JOptionPane.YES_NO_CANCEL_OPTION)(QualifiedName:JOptionPane.QUESTION_MESSAGE)(NullLiteral)(QualifiedName:JApplicationGen.DIALOGUE_OPTIONS)(QualifiedName:JApplicationGen.OPTION_VIEW_DIFF)))))(IfStatement(InfixExpression(ArrayAccess(QualifiedName:JApplicationGen.DIALOGUE_OPTIONS)(SimpleName:choice))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JApplicationGen.OPTION_VIEW_DIFF))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:HtmlContentPopUp))(NullLiteral)(StringLiteral:<STR>)(BooleanLiteral:true)(SimpleName:diff)(BooleanLiteral:false)))(SimpleName:show)))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:choice)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JOptionPane.CLOSED_OPTION))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(ArrayAccess(QualifiedName:JApplicationGen.DIALOGUE_OPTIONS)(SimpleName:choice))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JApplicationGen.OPTION_NO)))(Block(ExpressionStatement(Assignment(SimpleName:skipFile)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(ArrayAccess(QualifiedName:JApplicationGen.DIALOGUE_OPTIONS)(SimpleName:choice))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JApplicationGen.OPTION_NO_ALL))(Block(ExpressionStatement(Assignment(SimpleName:overwrite)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Boolean.FALSE)))(ExpressionStatement(Assignment(SimpleName:skipFile)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(ArrayAccess(QualifiedName:JApplicationGen.DIALOGUE_OPTIONS)(SimpleName:choice))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JApplicationGen.OPTION_YES_ALL))(Block(ExpressionStatement(Assignment(SimpleName:overwrite)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Boolean.TRUE))))))))))(Block(ExpressionStatement(Assignment(SimpleName:skipFile)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origFile))(SimpleName:getPath))(StringLiteral:<STR>)(SimpleName:e)))))(ExpressionStatement(Assignment(SimpleName:skipFile)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(Block(ExpressionStatement(Assignment(SimpleName:skipFile)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempFile))(SimpleName:getPath))(StringLiteral:<STR>)(SimpleName:e)))))(ExpressionStatement(Assignment(SimpleName:tempFile)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(IfStatement(SimpleName:skipFile)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:origFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempFile))))(ExpressionStatement(PostfixExpression(SimpleName:skippedFilesCounter)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(InfixExpression(SimpleName:tempFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(PostfixExpression(SimpleName:newFileCounter)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:origFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:backup)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origFile))(SimpleName:getPath))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:backup))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origFile))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:backup))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origFile)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JApplicationGen))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:origFile)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempFile))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:origFile)))))))(ExpressionStatement(Assignment(SimpleName:parseResult)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parseResult))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextPos)))))(ExpressionStatement(Assignment(SimpleName:pos)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parseResult))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:FILE_HEADER)))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCreationResult))(SimpleName:newFileCounter)(SimpleName:skippedFilesCounter)))))))