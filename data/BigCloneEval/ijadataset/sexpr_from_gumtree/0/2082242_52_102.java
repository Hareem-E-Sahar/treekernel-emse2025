(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:boolean)(SimpleName:doExport)(SingleVariableDeclaration(SimpleType(SimpleName:Node))(SimpleName:data))(SingleVariableDeclaration(SimpleType(SimpleName:Map))(SimpleName:exportOut))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:exportName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XmlUtils))(SimpleName:getStringFromXPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:baseDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getRepositoryPath)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseDir))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseDir))(SimpleName:mkdirs))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(Assignment(SimpleName:lastError)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ReturnStatement(BooleanLiteral:false))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:zipFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:baseDir)(InfixExpression(SimpleName:exportName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:exists))(Block(ExpressionStatement(Assignment(SimpleName:lastError)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:zipFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:lastError)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ReturnStatement(BooleanLiteral:false)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zos)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(SimpleName:fos))))(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:projectNode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:getNodeFromXPath)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:projectXml)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:VictorAction.VICTOR_PUBLIC_ID)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XmlUtils))(SimpleName:serialize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectNode))))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayInputStream))(VariableDeclarationFragment(SimpleName:bais)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:bais)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectXml))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedEncodingException))(SimpleName:e))(Block(ReturnStatement(BooleanLiteral:false)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XmlUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:zos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bais))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:closeEntry)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:dataFiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:getBaseDirectory)))(SimpleName:listFiles))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:dataFiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:dataFiles)(SimpleName:i)))(SimpleName:getName))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:dataFiles)(SimpleName:i)))(SimpleName:getAbsolutePath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XmlUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis)(SimpleName:zos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:closeEntry)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:getActionLogger)))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(SimpleName:e)))))(ExpressionStatement(Assignment(SimpleName:lastError)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))