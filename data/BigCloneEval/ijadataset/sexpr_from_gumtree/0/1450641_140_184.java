(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:Xml)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:infId))(SingleVariableDeclaration(SimpleType(SimpleName:Properties))(SimpleName:props))(SingleVariableDeclaration(SimpleType(QualifiedName:org.smslib.smsserver.SMSServer))(SimpleName:server))(SingleVariableDeclaration(SimpleType(SimpleName:InterfaceTypes))(SimpleName:type))(Block(SuperConstructorInvocation(SimpleName:infId)(SimpleName:props)(SimpleName:server)(SimpleName:type))(ExpressionStatement(Assignment(SimpleName:description)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:processedFiles)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(ExpressionStatement(Assignment(SimpleName:inDirectory)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(ConditionalExpression(InfixExpression(MethodInvocation(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(StringLiteral:<STR>)(MethodInvocation(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:outDirectory)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(ConditionalExpression(InfixExpression(MethodInvocation(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(StringLiteral:<STR>)(MethodInvocation(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(MethodInvocation(SimpleName:isInbound))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inDirectory))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inDirectory))(SimpleName:canWrite))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:infId)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:writeInboundDTD)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inDirectory)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))))))))(IfStatement(MethodInvocation(SimpleName:isOutbound))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outDirectory))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outDirectory))(SimpleName:canRead)))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outDirectory))(SimpleName:canWrite))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(SimpleName:infId)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:outSentDirectory)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:outDirectory)(SimpleName:sOutSentDirectory))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outSentDirectory))(SimpleName:isDirectory)))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outSentDirectory))(SimpleName:mkdir)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outSentDirectory))))))))(ExpressionStatement(Assignment(SimpleName:outFailedDirectory)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:outDirectory)(SimpleName:sOutFailedDirectory))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outFailedDirectory))(SimpleName:isDirectory)))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outFailedDirectory))(SimpleName:mkdir)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outFailedDirectory))))))))(ExpressionStatement(Assignment(SimpleName:outBrokenDirectory)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:outDirectory)(SimpleName:sOutBrokenDirectory))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outBrokenDirectory))(SimpleName:isDirectory)))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outBrokenDirectory))(SimpleName:mkdir)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outBrokenDirectory))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:writeOutboundDTD)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outDirectory)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))))))))))))