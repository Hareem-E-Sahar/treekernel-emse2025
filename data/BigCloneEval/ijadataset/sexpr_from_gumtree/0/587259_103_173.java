(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:excuteBackup)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:backupOrginlDrctry))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:targetFileNm))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:archiveFormat))(SimpleType(SimpleName:JobExecutionException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetFileNm))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:srcFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:backupOrginlDrctry))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JobExecutionException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:isFile))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JobExecutionException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:result)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:finput)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fosOutput)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ArchiveOutputStream))(VariableDeclarationFragment(SimpleName:aosOutput)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ArchiveEntry))(VariableDeclarationFragment(SimpleName:entry)(NullLiteral)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:defaultCharset)))(SimpleName:name))))))(ExpressionStatement(Assignment(SimpleName:fosOutput)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:targetFile))))(ExpressionStatement(Assignment(SimpleName:aosOutput)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:ArchiveStreamFactory))))(SimpleName:createArchiveOutputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:archiveFormat)(SimpleName:fosOutput)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:ArchiveStreamFactory.TAR))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:archiveFormat)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:TarArchiveOutputStream))(SimpleName:aosOutput))))(SimpleName:setLongFileMode)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:TarArchiveOutputStream.LONGFILE_GNU))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:fileArr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:listFiles))))(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:list)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EgovFileTool))(SimpleName:getSubFilesByAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileArr)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sfile)(ClassInstanceCreation(SimpleType(SimpleName:File))(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))))(ExpressionStatement(Assignment(SimpleName:finput)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:sfile))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:ArchiveStreamFactory.TAR))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:archiveFormat)))(Block(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:TarArchiveEntry))(SimpleName:sfile)(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sfile))(SimpleName:getAbsolutePath)))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:defaultCharset)))(SimpleName:name))))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:TarArchiveEntry))(SimpleName:entry))))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sfile))(SimpleName:length))))))(Block(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipArchiveEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sfile))(SimpleName:getAbsolutePath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:ZipArchiveEntry))(SimpleName:entry))))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sfile))(SimpleName:length)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aosOutput))(SimpleName:putArchiveEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:finput)(SimpleName:aosOutput))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aosOutput))(SimpleName:closeArchiveEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:finput))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aosOutput))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JobExecutionException))(StringLiteral:<STR>)(SimpleName:e)))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:finput)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:finput))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e2)))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:aosOutput)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aosOutput))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e2)))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:fosOutput)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fosOutput))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e2)))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:result)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetFile))(SimpleName:delete)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e2)))))))))(ReturnStatement(SimpleName:result))))))