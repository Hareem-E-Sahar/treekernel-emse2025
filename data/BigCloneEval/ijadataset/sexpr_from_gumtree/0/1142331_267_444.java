(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Expression))(SimpleName:inline)(SingleVariableDeclaration(SimpleType(SimpleName:ApplyExp))(SimpleName:exp))(SingleVariableDeclaration(SimpleType(SimpleName:InlineCalls))(SimpleName:walker))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:argsInlined))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exp))(SimpleName:walkArgs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:walker)(SimpleName:argsInlined))))(VariableDeclarationStatement(SimpleType(SimpleName:Compilation))(VariableDeclarationFragment(SimpleName:comp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:walker))(SimpleName:getCompilation))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:args)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exp))(SimpleName:getArgs))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nargs)(QualifiedName:args.length)))(IfStatement(InfixExpression(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(QualifiedName:comp.mustCompile))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1)))))(ReturnStatement(SimpleName:exp)))(VariableDeclarationStatement(SimpleType(SimpleName:ObjectType))(VariableDeclarationFragment(SimpleName:type)))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:arg0)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:Type))(VariableDeclarationFragment(SimpleName:type0)(ParenthesizedExpression(ConditionalExpression(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg0))(SimpleName:getType))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:language))(SimpleName:getTypeFor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg0)))))))(IfStatement(InstanceofExpression(SimpleName:type0)(SimpleType(SimpleName:PairClassType)))(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(FieldAccess(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:PairClassType))(SimpleName:type0)))(SimpleName:instanceType))))(IfStatement(InstanceofExpression(SimpleName:type0)(SimpleType(SimpleName:ObjectType)))(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:ObjectType))(SimpleName:type0))))(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(SimpleName:getMethodName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:margsLength))(VariableDeclarationFragment(SimpleName:argsStartIndex))(VariableDeclarationFragment(SimpleName:objIndex)))(IfStatement(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:margsLength)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:argsStartIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:2)))(ExpressionStatement(Assignment(SimpleName:objIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))))(IfStatement(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:margsLength)(ASSIGNMENT_OPERATOR:=)(SimpleName:nargs)))(ExpressionStatement(Assignment(SimpleName:argsStartIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:objIndex)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:margsLength)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:argsStartIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:2)))(ExpressionStatement(Assignment(SimpleName:objIndex)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:margsLength)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:argsStartIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:3)))(ExpressionStatement(Assignment(SimpleName:objIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))))(ReturnStatement(SimpleName:exp))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:&&)(InstanceofExpression(SimpleName:type)(SimpleType(SimpleName:ArrayType))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ArrayType))(VariableDeclarationFragment(SimpleName:atype)(CastExpression(SimpleType(SimpleName:ArrayType))(SimpleName:type))))(VariableDeclarationStatement(SimpleType(SimpleName:Type))(VariableDeclarationFragment(SimpleName:elementType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atype))(SimpleName:getComponentType))))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:sizeArg)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:lengthSpecified)(BooleanLiteral:false)))(IfStatement(InfixExpression(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:&&)(InstanceofExpression(ArrayAccess(SimpleName:args)(NumberLiteral:1))(SimpleType(SimpleName:QuoteExp))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:arg1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:QuoteExp))(ArrayAccess(SimpleName:args)(NumberLiteral:1)))))(SimpleName:getValue))))(IfStatement(InfixExpression(InstanceofExpression(SimpleName:arg1)(SimpleType(SimpleName:Keyword)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Keyword))(SimpleName:arg1))))(SimpleName:getName)))))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))))(Block(ExpressionStatement(Assignment(SimpleName:sizeArg)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:lengthSpecified)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(IfStatement(InfixExpression(SimpleName:sizeArg)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:sizeArg)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:QuoteExp))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Integer))(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:alloc)(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(ClassInstanceCreation(SimpleType(SimpleName:ArrayNew))(SimpleName:elementType))(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(ArrayInitializer(SimpleName:sizeArg))))))(IfStatement(InfixExpression(SimpleName:lengthSpecified)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:3)))(ReturnStatement(SimpleName:alloc)))(VariableDeclarationStatement(SimpleType(SimpleName:LetExp))(VariableDeclarationFragment(SimpleName:let)(ClassInstanceCreation(SimpleType(SimpleName:LetExp))(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(ArrayInitializer(SimpleName:alloc))))))(VariableDeclarationStatement(SimpleType(SimpleName:Declaration))(VariableDeclarationFragment(SimpleName:adecl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:let))(SimpleName:addDeclaration)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(NullLiteral))(SimpleName:atype)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:adecl))(SimpleName:noteValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:alloc))))(VariableDeclarationStatement(SimpleType(SimpleName:BeginExp))(VariableDeclarationFragment(SimpleName:begin)(ClassInstanceCreation(SimpleType(SimpleName:BeginExp)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(ConditionalExpression(SimpleName:lengthSpecified)(NumberLiteral:3)(NumberLiteral:1))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:arg)(ArrayAccess(SimpleName:args)(SimpleName:i))))(IfStatement(InfixExpression(InfixExpression(SimpleName:lengthSpecified)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length)))(INFIX_EXPRESSION_OPERATOR:&&)(InstanceofExpression(SimpleName:arg)(SimpleType(SimpleName:QuoteExp))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:key)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:QuoteExp))(SimpleName:arg))))(SimpleName:getValue))))(IfStatement(InstanceofExpression(SimpleName:key)(SimpleType(SimpleName:Keyword)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:kname)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Keyword))(SimpleName:key))))(SimpleName:getName))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kname)))))(ExpressionStatement(Assignment(SimpleName:arg)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:kname)(StringLiteral:<STR>)))))(ReturnStatement(SimpleName:exp)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:begin))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(ClassInstanceCreation(SimpleType(SimpleName:ArraySet))(SimpleName:elementType))(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(ArrayInitializer(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:adecl))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:QuoteExp))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Integer))(SimpleName:index))))(SimpleName:arg)))))))(ExpressionStatement(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:begin))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:adecl)))))(ExpressionStatement(Assignment(QualifiedName:let.body)(ASSIGNMENT_OPERATOR:=)(SimpleName:begin)))(ReturnStatement(SimpleName:let)))(IfStatement(InfixExpression(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:name)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(IfStatement(InfixExpression(InstanceofExpression(SimpleName:type)(SimpleType(SimpleName:TypeValue)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Procedure))(VariableDeclarationFragment(SimpleName:constructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:TypeValue))(SimpleName:type))))(SimpleName:getConstructor))))(IfStatement(InfixExpression(SimpleName:constructor)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:xargs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)(NumberLiteral:1)(SimpleName:xargs)(NumberLiteral:0)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:InlineCalls))(SimpleName:walker))))(SimpleName:walkApplyOnly)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(SimpleName:constructor)(SimpleName:xargs)))))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:PrimProcedure))(Dimension))(VariableDeclarationFragment(SimpleName:methods)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:okCount))(VariableDeclarationFragment(SimpleName:maybeCount)))(VariableDeclarationStatement(SimpleType(SimpleName:ClassType))(VariableDeclarationFragment(SimpleName:caller)(ConditionalExpression(InfixExpression(SimpleName:comp)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(NullLiteral)(ConditionalExpression(InfixExpression(QualifiedName:comp.curClass)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(QualifiedName:comp.curClass)(QualifiedName:comp.mainClass)))))(VariableDeclarationStatement(SimpleType(SimpleName:ObjectType))(VariableDeclarationFragment(SimpleName:ctype)(CastExpression(SimpleType(SimpleName:ObjectType))(SimpleName:type))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:methods)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getMethods)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctype)(SimpleName:name)(SimpleName:caller)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:num)(MethodInvocation(SimpleName:selectApplicable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methods)(SimpleName:ctype)(SimpleName:args)(SimpleName:margsLength)(SimpleName:argsStartIndex)(SimpleName:objIndex)))))(ExpressionStatement(Assignment(SimpleName:okCount)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:32))))))(ExpressionStatement(Assignment(SimpleName:maybeCount)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(SimpleName:num)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName))))))(ReturnStatement(SimpleName:exp)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:slots)))(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:okCount)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maybeCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassMethods))(SimpleName:selectApplicable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methods)(ArrayCreation(ArrayType(SimpleType(SimpleName:Type))(Dimension))(ArrayInitializer(QualifiedName:Compilation.typeClassType)))))(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:32)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:slots)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:checkKeywords)(METHOD_INVOCATION_ARGUMENTS(SimpleName:type)(SimpleName:args)(NumberLiteral:1)(SimpleName:caller)))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:errbuf)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:slots.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InstanceofExpression(ArrayAccess(SimpleName:slots)(SimpleName:i))(SimpleType(SimpleName:String)))(Block(IfStatement(InfixExpression(SimpleName:errbuf)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:errbuf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:slots)(SimpleName:i)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))))))(IfStatement(InfixExpression(SimpleName:errbuf)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errbuf))(SimpleName:toString)))))(ReturnStatement(SimpleName:exp)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ApplyExp))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(ArrayAccess(SimpleName:methods)(NumberLiteral:0))(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(ArrayInitializer(SimpleName:arg0))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:slots.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:sargs)(ArrayInitializer(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:QuoteExp))(ArrayAccess(SimpleName:slots)(SimpleName:i)))(ArrayAccess(SimpleName:args)(InfixExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))))))(ExpressionStatement(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(QualifiedName:SlotSet.setFieldReturnObject)(SimpleName:sargs))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:setLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exp))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nmethods)(QualifiedName:methods.length)))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:okCount)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maybeCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:methods)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:invokeStatic))(SimpleName:getMethods)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctype)(StringLiteral:<STR>)(SimpleName:caller)))))(ExpressionStatement(Assignment(SimpleName:argsStartIndex)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:margsLength)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:num)(MethodInvocation(SimpleName:selectApplicable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methods)(SimpleName:ctype)(SimpleName:args)(SimpleName:margsLength)(SimpleName:argsStartIndex)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(ExpressionStatement(Assignment(SimpleName:okCount)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:32))))))(ExpressionStatement(Assignment(SimpleName:maybeCount)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(SimpleName:num))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:okCount)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maybeCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:getBooleanOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:true))))(Block(IfStatement(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:name)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:message)(ParenthesizedExpression(ConditionalExpression(InfixExpression(InfixExpression(SimpleName:nmethods)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:methods.length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName)))(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))(SimpleName:message)))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:okCount)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:okCount)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:maybeCount)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1)))))(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:okCount)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MethodProc))(SimpleName:mostSpecific)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methods)(SimpleName:okCount)))))(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:okCount))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:methods)(SimpleName:i)))(SimpleName:getStaticFlag))(Block(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(BreakStatement))(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(SimpleName:i))))))))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:getBooleanOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:true))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:sbuf)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methods)(SimpleName:okCount)(SimpleName:sbuf))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:toString))))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:getBooleanOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:sbuf)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methods)(SimpleName:maybeCount)(SimpleName:sbuf))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:kind)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbuf))(SimpleName:toString))))))))))(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:margs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(SimpleName:margsLength))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:dst)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:objIndex)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:margs)(PostfixExpression(SimpleName:dst)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(SimpleName:objIndex)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:src)(SimpleName:argsStartIndex)))(InfixExpression(InfixExpression(SimpleName:src)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:dst)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:margs.length)))(PostfixExpression(SimpleName:src)(POSTFIX_EXPRESSION_OPERATOR:++))(PostfixExpression(SimpleName:dst)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:margs)(SimpleName:dst))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(SimpleName:src)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(ArrayAccess(SimpleName:methods)(SimpleName:index))(SimpleName:margs)))(SimpleName:setLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exp)))))))))(ReturnStatement(SimpleName:exp))))))