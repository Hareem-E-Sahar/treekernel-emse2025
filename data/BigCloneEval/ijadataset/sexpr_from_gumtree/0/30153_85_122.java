(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:writeSlicesToStream)(SingleVariableDeclaration(SimpleType(SimpleName:OutputStream))(SimpleName:outputStream))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:chromosome))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:beginningBP))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:endingBP))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:closeStream))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:ZipEntry)))(VariableDeclarationFragment(SimpleName:entries)(MethodInvocation(SimpleName:fetchZipEntries)(METHOD_INVOCATION_ARGUMENTS(SimpleName:chromosome)(SimpleName:beginningBP)(SimpleName:endingBP)))))(IfStatement(InfixExpression(SimpleName:entries)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:archiveReadMeEntry))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(SimpleName:outputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:DataOutputStream))(VariableDeclarationFragment(SimpleName:dos)(ClassInstanceCreation(SimpleType(SimpleName:DataOutputStream))(SimpleName:out))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:bis)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:data)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:2048))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:numEntries)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:size))))(VariableDeclarationStatement(SimpleType(SimpleName:SliceInfo))(VariableDeclarationFragment(SimpleName:sliceInfo)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numEntries))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(ExpressionStatement(Assignment(SimpleName:bis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipArchive))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:sliceInfo)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SliceInfo))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sliceInfo))(SimpleName:isContainedBy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:beginningBP)(SimpleName:endingBP))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(NumberLiteral:2048)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:count)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry))))(ExpressionStatement(MethodInvocation(SimpleName:sliceAndWriteEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:beginningBP)(SimpleName:endingBP)(SimpleName:sliceInfo)(SimpleName:bis)(SimpleName:out)(SimpleName:dos)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bis))(SimpleName:close)))))(IfStatement(SimpleName:closeStream)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dos))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:USeqUtilities))(SimpleName:safeClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:USeqUtilities))(SimpleName:safeClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outputStream))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:USeqUtilities))(SimpleName:safeClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:USeqUtilities))(SimpleName:safeClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dos))))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))