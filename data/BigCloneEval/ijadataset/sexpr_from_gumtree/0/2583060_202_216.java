(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:double)(SimpleName:binRoot)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:eps)(NumberLiteral:0.0001)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:lower)(NumberLiteral:0.0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:upper)(SimpleName:x)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:mid)(NumberLiteral:0.0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:100))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:mid)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lower)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:upper)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:cur)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:mid))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:cur))))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:eps))(Block(ReturnStatement(SimpleName:mid))))(IfStatement(InfixExpression(SimpleName:cur)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:x))(ExpressionStatement(Assignment(SimpleName:lower)(ASSIGNMENT_OPERATOR:=)(SimpleName:mid)))(ExpressionStatement(Assignment(SimpleName:upper)(ASSIGNMENT_OPERATOR:=)(SimpleName:mid))))))(ReturnStatement(SimpleName:mid))))))