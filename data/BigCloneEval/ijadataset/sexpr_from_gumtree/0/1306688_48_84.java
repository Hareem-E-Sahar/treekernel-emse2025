(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:calculate)(SimpleType(SimpleName:FormatException))(SimpleType(QualifiedName:java.io.IOException))(Block(IfStatement(InfixExpression(SimpleName:input)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:contigHashes)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:ChecksumEntry))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:currentContig)(NullLiteral)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.security.MessageDigest))(VariableDeclarationFragment(SimpleName:hasher)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:hasher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:java.security.MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:checksumAlgorithm))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.security.NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:checksumAlgorithm)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:readLine))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FormatException))(StringLiteral:<STR>))))(TryStatement(Block(WhileStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:currentContig)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cs)(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Hex))(SimpleName:encodeHex)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hasher))(SimpleName:digest)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:contigHashes))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentContig)(ClassInstanceCreation(SimpleType(SimpleName:ChecksumEntry))(SimpleName:currentContig)(SimpleName:cs)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ContigNamePattern))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:matches))(Block(ExpressionStatement(Assignment(SimpleName:currentContig)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:group)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hasher))(SimpleName:reset))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FormatException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line))))))(Block(IfStatement(InfixExpression(SimpleName:currentContig)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FormatException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hasher))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:readLine))))))(IfStatement(InfixExpression(SimpleName:currentContig)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cs)(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Hex))(SimpleName:encodeHex)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hasher))(SimpleName:digest)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:contigHashes))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentContig)(ClassInstanceCreation(SimpleType(SimpleName:ChecksumEntry))(SimpleName:currentContig)(SimpleName:cs))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.UnsupportedEncodingException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line)))))))))))