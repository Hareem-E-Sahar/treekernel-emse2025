(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(SimpleType(SimpleName:Long))(SimpleName:doInBackground)(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:Object)))(SimpleName:params)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpClient))(VariableDeclarationFragment(SimpleName:client)(CastExpression(SimpleType(SimpleName:HttpClient))(ArrayAccess(SimpleName:params)(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpGet))(VariableDeclarationFragment(SimpleName:getLibs)(ClassInstanceCreation(SimpleType(SimpleName:HttpGet))(CastExpression(SimpleType(SimpleName:String))(ArrayAccess(SimpleName:params)(NumberLiteral:1))))))(VariableDeclarationStatement(SimpleType(SimpleName:Boolean))(VariableDeclarationFragment(SimpleName:reload)(ConditionalExpression(InfixExpression(QualifiedName:params.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(CastExpression(SimpleType(SimpleName:Boolean))(ArrayAccess(SimpleName:params)(NumberLiteral:2)))(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:storageDir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getExternalFilesDir)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:libXml)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:storageDir)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:InputSource))(VariableDeclarationFragment(SimpleName:inputSource)(NullLiteral)))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libXml))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:reload)))(Block(ExpressionStatement(Assignment(SimpleName:inputSource)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:libXml))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpResponse))(VariableDeclarationFragment(SimpleName:resp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:client))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:getLibs)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resp))(SimpleName:getEntity)))(SimpleName:getContent))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libXml))(SimpleName:delete)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libXml))(SimpleName:createNewFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:libXml))))(TryStatement(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:len)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close)))))(ExpressionStatement(Assignment(SimpleName:inputSource)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:libXml))))))(Block(ExpressionStatement(Assignment(SimpleName:inputSource)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(SimpleName:is))))))))(ExpressionStatement(Assignment(SimpleName:rootNode)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Node))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rootXpath))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputSource)(QualifiedName:XPathConstants.NODE))))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeList))(VariableDeclarationFragment(SimpleName:libraryNodes)(CastExpression(SimpleType(SimpleName:NodeList))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraries))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rootNode)(QualifiedName:XPathConstants.NODESET))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryNodes))(SimpleName:getLength)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:libNode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryNodes))(SimpleName:item)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:stateText)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:state))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:libNode)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:distinctStates))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stateText)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:e)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getClass)))(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:e))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputSource))(SimpleName:getByteStream)))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:e)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getClass)))(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:e)))))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libXml))(SimpleName:lastModified)))))))