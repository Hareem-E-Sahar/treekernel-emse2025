(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:InputStream))(SimpleName:openResource)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:URL))(SimpleName:url))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:url))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:EOFException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:URL))))(SimpleName:getSimpleName))(StringLiteral:<STR>)))))(TryStatement(Block(IfStatement(MethodInvocation(SimpleName:isFileResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(MethodInvocation(SimpleName:toFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)))))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:f))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileNotFoundException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:File))))(SimpleName:getSimpleName))(StringLiteral:<STR>)))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:f)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RuntimeException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamCorruptedException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getClass)))(SimpleName:getName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))))))