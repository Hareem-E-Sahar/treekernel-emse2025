(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Expression))(SimpleName:inline)(SingleVariableDeclaration(SimpleType(SimpleName:ApplyExp))(SimpleName:exp))(SingleVariableDeclaration(SimpleType(SimpleName:InlineCalls))(SimpleName:walker))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:argsInlined))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exp))(SimpleName:walkArgs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:walker)(SimpleName:argsInlined))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:args)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exp))(SimpleName:getArgs))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nargs)(QualifiedName:args.length)))(IfStatement(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(ReturnStatement(SimpleName:exp)))(ExpressionStatement(PostfixExpression(SimpleName:nargs)(POSTFIX_EXPRESSION_OPERATOR:--)))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:proc)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:procSafeForMultipleEvaluation)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:side_effects)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:inits1)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:inits1)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:proc)))(VariableDeclarationStatement(SimpleType(SimpleName:LetExp))(VariableDeclarationFragment(SimpleName:let1)(ClassInstanceCreation(SimpleType(SimpleName:LetExp))(SimpleName:inits1))))(VariableDeclarationStatement(SimpleType(SimpleName:Declaration))(VariableDeclarationFragment(SimpleName:procDecl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:let1))(SimpleName:addDeclaration)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Compilation.typeProcedure)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procDecl))(SimpleName:noteValue)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:0)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:inits2)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(NumberLiteral:1))))))(VariableDeclarationStatement(SimpleType(SimpleName:LetExp))(VariableDeclarationFragment(SimpleName:let2)(ClassInstanceCreation(SimpleType(SimpleName:LetExp))(SimpleName:inits2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:let1))(SimpleName:setBody)(METHOD_INVOCATION_ARGUMENTS(SimpleName:let2))))(VariableDeclarationStatement(SimpleType(SimpleName:LambdaExp))(VariableDeclarationFragment(SimpleName:lexp)(ClassInstanceCreation(SimpleType(SimpleName:LambdaExp))(ConditionalExpression(SimpleName:collect)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:nargs)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:inits2)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:lexp)))(VariableDeclarationStatement(SimpleType(SimpleName:Declaration))(VariableDeclarationFragment(SimpleName:loopDecl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:let2))(SimpleName:addDeclaration)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loopDecl))(SimpleName:noteValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexp))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:inits3)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(SimpleName:nargs))))))(VariableDeclarationStatement(SimpleType(SimpleName:LetExp))(VariableDeclarationFragment(SimpleName:let3)(ClassInstanceCreation(SimpleType(SimpleName:LetExp))(SimpleName:inits3))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Declaration))(Dimension))(VariableDeclarationFragment(SimpleName:largs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Declaration))(Dimension(SimpleName:nargs))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Declaration))(Dimension))(VariableDeclarationFragment(SimpleName:pargs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Declaration))(Dimension(SimpleName:nargs))))))(VariableDeclarationStatement(SimpleType(SimpleName:IsEq))(VariableDeclarationFragment(SimpleName:isEq)(QualifiedName:Scheme.isEq)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nargs))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:argName)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:largs)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexp))(SimpleName:addDeclaration)(METHOD_INVOCATION_ARGUMENTS(SimpleName:argName)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:pargs)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:let3))(SimpleName:addDeclaration)(METHOD_INVOCATION_ARGUMENTS(SimpleName:argName)(QualifiedName:Compilation.typePair)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:inits3)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(ArrayAccess(SimpleName:largs)(SimpleName:i)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:pargs)(SimpleName:i)))(SimpleName:noteValue)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:inits3)(SimpleName:i)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Declaration))(VariableDeclarationFragment(SimpleName:resultDecl)(ConditionalExpression(SimpleName:collect)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexp))(SimpleName:addDeclaration)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(NullLiteral))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:doArgs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nargs)))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:recArgs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(ConditionalExpression(SimpleName:collect)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:nargs)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nargs))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:doArgs)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:walker))(SimpleName:walkApplyOnly)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SlotGet))(SimpleName:makeGetField)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(ArrayAccess(SimpleName:pargs)(SimpleName:i)))(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:recArgs)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:walker))(SimpleName:walkApplyOnly)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SlotGet))(SimpleName:makeGetField)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(ArrayAccess(SimpleName:pargs)(SimpleName:i)))(StringLiteral:<STR>)))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:procSafeForMultipleEvaluation))(ExpressionStatement(Assignment(SimpleName:proc)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:procDecl)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:doArgs)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:proc)))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:doit)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:walker))(SimpleName:walkApplyOnly)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:applyFieldDecl))(SimpleName:doArgs))))))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:rec)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:walker))(SimpleName:walkApplyOnly)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:loopDecl))(SimpleName:recArgs))))))(IfStatement(SimpleName:collect)(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:consArgs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(NumberLiteral:2))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:consArgs)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:doit)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:consArgs)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:resultDecl))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:recArgs)(SimpleName:nargs))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Invoke))(SimpleName:makeInvokeStatic)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Compilation.typePair)(StringLiteral:<STR>)(SimpleName:consArgs)))))(ExpressionStatement(Assignment(QualifiedName:lexp.body)(ASSIGNMENT_OPERATOR:=)(SimpleName:rec))))(Block(ExpressionStatement(Assignment(QualifiedName:lexp.body)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BeginExp))(SimpleName:doit)(SimpleName:rec))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:let3))(SimpleName:setBody)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:lexp.body))))(ExpressionStatement(Assignment(QualifiedName:lexp.body)(ASSIGNMENT_OPERATOR:=)(SimpleName:let3)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:initArgs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(ConditionalExpression(SimpleName:collect)(InfixExpression(SimpleName:nargs)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:nargs)))))))(VariableDeclarationStatement(SimpleType(SimpleName:QuoteExp))(VariableDeclarationFragment(SimpleName:empty)(ClassInstanceCreation(SimpleType(SimpleName:QuoteExp))(QualifiedName:LList.Empty))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(SimpleName:nargs)))(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:--)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:compArgs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(NumberLiteral:2))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:compArgs)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(ArrayAccess(SimpleName:largs)(SimpleName:i)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:compArgs)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(SimpleName:empty)))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:result)(ConditionalExpression(SimpleName:collect)(CastExpression(SimpleType(SimpleName:Expression))(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:resultDecl)))(CastExpression(SimpleType(SimpleName:Expression))(QualifiedName:QuoteExp.voidExp)))))(ExpressionStatement(Assignment(QualifiedName:lexp.body)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:IfExp))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:walker))(SimpleName:walkApplyOnly)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(SimpleName:isEq)(SimpleName:compArgs))))(SimpleName:result)(QualifiedName:lexp.body))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:initArgs)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(IfStatement(SimpleName:collect)(ExpressionStatement(Assignment(ArrayAccess(SimpleName:initArgs)(SimpleName:nargs))(ASSIGNMENT_OPERATOR:=)(SimpleName:empty))))(VariableDeclarationStatement(SimpleType(SimpleName:Expression))(VariableDeclarationFragment(SimpleName:body)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:walker))(SimpleName:walkApplyOnly)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ApplyExp))(ClassInstanceCreation(SimpleType(SimpleName:ReferenceExp))(SimpleName:loopDecl))(SimpleName:initArgs))))))(IfStatement(SimpleName:collect)(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Expression))(Dimension))(VariableDeclarationFragment(SimpleName:reverseArgs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Expression))(Dimension(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:reverseArgs)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:body)))(ExpressionStatement(Assignment(SimpleName:body)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Invoke))(SimpleName:makeInvokeStatic)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Compilation.scmListType)(StringLiteral:<STR>)(SimpleName:reverseArgs)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:let2))(SimpleName:setBody)(METHOD_INVOCATION_ARGUMENTS(SimpleName:body))))(IfStatement(SimpleName:procSafeForMultipleEvaluation)(ReturnStatement(SimpleName:let2))(ReturnStatement(SimpleName:let1)))))))