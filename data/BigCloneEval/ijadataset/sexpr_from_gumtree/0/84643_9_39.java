(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:br)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:PrintWriter))(VariableDeclarationFragment(SimpleName:outfile)(ClassInstanceCreation(SimpleType(SimpleName:PrintWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:readLine))))(WhileStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:puzzleSize)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:boxSize)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strFEN)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:st)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:line))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:hasMoreTokens))(Block(ExpressionStatement(Assignment(SimpleName:puzzleSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))))(ExpressionStatement(Assignment(SimpleName:boxSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))))(ExpressionStatement(Assignment(SimpleName:strFEN)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))))(VariableDeclarationStatement(SimpleType(SimpleName:SoDoKuPuzzle))(VariableDeclarationFragment(SimpleName:puzzle)(ClassInstanceCreation(SimpleType(SimpleName:SoDoKuPuzzle))(SimpleName:puzzleSize)(SimpleName:boxSize))))(VariableDeclarationStatement(SimpleType(SimpleName:ConstraintSet))(VariableDeclarationFragment(SimpleName:cs)(ClassInstanceCreation(SimpleType(SimpleName:ConstraintSet))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:puzzle))(SimpleName:getNumSquares)))))(ExpressionStatement(MethodInvocation(SimpleName:GenerateConstraints)(METHOD_INVOCATION_ARGUMENTS(SimpleName:puzzle)(SimpleName:cs))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:doArc)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:SolvePuzzle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outfile)(SimpleName:puzzle)(SimpleName:cs)(SimpleName:doArc)(QualifiedName:Search.SearchAlg.cspBT)(SimpleName:strFEN))))(ExpressionStatement(Assignment(SimpleName:doArc)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:readLine))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outfile))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))))))))