(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:List))(SimpleName:createObject)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:moduleName))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Line)))(SimpleName:lines))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:CompileParserException)))(SimpleName:errors))(SimpleType(SimpleName:CompileParserException))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Line)))(VariableDeclarationFragment(SimpleName:funcs)(QualifiedName:Collections.EMPTY_LIST)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:extracting)(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:lines)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:ListIterator))(VariableDeclarationFragment(SimpleName:l)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lines))(SimpleName:listIterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Line))(VariableDeclarationFragment(SimpleName:myLine)(CastExpression(SimpleType(SimpleName:Line))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myLine))(SimpleName:getText))))(ExpressionStatement(Assignment(SimpleName:extracting)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:extracting)(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:Constants.VAR)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:DEF_FUNC)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(IfStatement(SimpleName:extracting)(Block(IfStatement(InfixExpression(SimpleName:funcs)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Collections.EMPTY_LIST))(ExpressionStatement(Assignment(SimpleName:funcs)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:Line)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:funcs))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myLine))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:remove)))))))))(ExpressionStatement(Assignment(SimpleName:obj)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Obj))(SimpleName:name)(SimpleName:superName)(BooleanLiteral:false)(NullLiteral)(NullLiteral)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:grammar))(SimpleName:getModulo))))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:moduleName)(SimpleName:funcs)(SimpleName:errors)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:obj))(SimpleName:setAction)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:grammar))(SimpleName:getModulo)))(SimpleName:addObject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:obj))))(ReturnStatement(SimpleName:lines))))))