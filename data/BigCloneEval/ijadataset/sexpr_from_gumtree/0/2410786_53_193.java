(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:StageCondition))(SimpleName:run)(SingleVariableDeclaration(SimpleType(SimpleName:StageCondition))(SimpleName:condition))(SimpleType(SimpleName:InterruptedException))(Block(AssertStatement(ParenthesizedExpression(InfixExpression(QualifiedName:condition.logicID)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:LogicID.LOAD)))(StringLiteral:<STR>))(VariableDeclarationStatement(SimpleType(SimpleName:LSN))(VariableDeclarationFragment(SimpleName:actual)(MethodInvocation(SimpleName:getState))))(VariableDeclarationStatement(SimpleType(SimpleName:LSN))(VariableDeclarationFragment(SimpleName:until)(ConditionalExpression(ParenthesizedExpression(InfixExpression(QualifiedName:condition.end)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(ClassInstanceCreation(SimpleType(SimpleName:LSN))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:actual))(SimpleName:getViewId))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(NumberLiteral:0L))(QualifiedName:condition.end))))(VariableDeclarationStatement(SimpleType(SimpleName:MasterClient))(VariableDeclarationFragment(SimpleName:master)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:slaveView))(SimpleName:getSynchronizationPartner)(METHOD_INVOCATION_ARGUMENTS(SimpleName:until)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_INFO)(ThisExpression)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:actual))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:master))(SimpleName:getDefaultServerAddress)))(SimpleName:toString)))))(VariableDeclarationStatement(SimpleType(SimpleName:DBFileMetaDataSet))(VariableDeclarationFragment(SimpleName:result)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:master))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:actual))))(SimpleName:get)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:master))(SimpleName:toString)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(SimpleName:e))))(ReturnStatement(SimpleName:condition)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:LSN))(VariableDeclarationFragment(SimpleName:lov)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:lov)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:babuDB))(SimpleName:checkpoint))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lastOnView))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lov))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lov))(SimpleName:toString)))))(ReturnStatement(MethodInvocation(SimpleName:finish)(METHOD_INVOCATION_ARGUMENTS(SimpleName:until)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:BabuDBException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(SimpleName:e))))(ReturnStatement(SimpleName:condition)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:babuDB))(SimpleName:stopBabuDB)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileIO))(SimpleName:backupFiles))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(SimpleName:e))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:interrupted))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:babuDB))(SimpleName:startBabuDB))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:BabuDBException))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_ERROR)(ThisExpression)(SimpleName:e1)))))))))(ReturnStatement(SimpleName:condition)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AtomicInteger))(VariableDeclarationFragment(SimpleName:openChunks)(ClassInstanceCreation(SimpleType(SimpleName:AtomicInteger))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:size)))))(VariableDeclarationStatement(SimpleType(SimpleName:LSN))(VariableDeclarationFragment(SimpleName:lsn)(NullLiteral)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:DBFileMetaData))(SimpleName:fileData))(SimpleName:result)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileName)(QualifiedName:fileData.file)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:parentName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fileName)))(SimpleName:getParentFile)))(SimpleName:getName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LSMDatabase))(SimpleName:isSnapshotFilename)(METHOD_INVOCATION_ARGUMENTS(SimpleName:parentName)))(Block(IfStatement(InfixExpression(SimpleName:lsn)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:lsn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LSMDatabase))(SimpleName:getSnapshotLSNbyFilename)(METHOD_INVOCATION_ARGUMENTS(SimpleName:parentName))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lsn))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LSMDatabase))(SimpleName:getSnapshotLSNbyFilename)(METHOD_INVOCATION_ARGUMENTS(SimpleName:parentName))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(StringLiteral:<STR>)(StringLiteral:<STR>))))(ReturnStatement(SimpleName:condition)))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:fileSize)(QualifiedName:fileData.size)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(SimpleName:fileSize)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0L))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(StringLiteral:<STR>))))(ReturnStatement(SimpleName:condition))))(AssertStatement(ParenthesizedExpression(InfixExpression(SimpleName:maxChunkSize)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0L)))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)))(SynchronizedStatement(SimpleName:openChunks)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:addAndGet)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:fileSize)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:maxChunkSize)))))))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:begin)(NumberLiteral:0L)))(ForStatement(VariableDeclarationExpression(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:end)(SimpleName:maxChunkSize)))(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:<)(ParenthesizedExpression(InfixExpression(SimpleName:fileSize)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maxChunkSize))))(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:+=)(SimpleName:maxChunkSize))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:pos1)(SimpleName:begin)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:size)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:fileSize)))(SimpleName:fileSize)(SimpleName:end))))(ExpressionStatement(Assignment(SimpleName:begin)(ASSIGNMENT_OPERATOR:=)(SimpleName:end)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:master))(SimpleName:chunk)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)(SimpleName:pos1)(SimpleName:size))))(SimpleName:registerListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ClientResponseAvailableListener))(SimpleType(SimpleName:ReusableBuffer)))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:responseAvailable)(SingleVariableDeclaration(SimpleType(SimpleName:ReusableBuffer))(SimpleName:buffer))(Block(SynchronizedStatement(SimpleName:openChunks)(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fChannel)(NullLiteral)))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:remaining))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileIO))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(StringLiteral:<STR>)(SimpleName:fileName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getPath)))))(AssertStatement(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:exists)))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:fChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:f)))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fChannel))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:getBuffer))(SimpleName:pos1)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>)(SimpleName:fileName)(SimpleName:pos1)(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:notify)))(ReturnStatement)))(Block(IfStatement(InfixExpression(SimpleName:fChannel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fChannel))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_ERROR)(ThisExpression)(SimpleName:e)))))))))(IfStatement(InfixExpression(SimpleName:buffer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BufferPool))(SimpleName:free)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:decrementAndGet))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:notify))))))))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:requestFailed)(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(IfStatement(InstanceofExpression(SimpleName:e)(SimpleType(SimpleName:ErrorCodeException)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ErrorCodeException))(VariableDeclarationFragment(SimpleName:err)(CastExpression(SimpleType(SimpleName:ErrorCodeException))(SimpleName:e))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>)(SimpleName:fileName)(SimpleName:pos1)(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:getCode))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(StringLiteral:<STR>)(SimpleName:fileName)(SimpleName:pos1)(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))(SynchronizedStatement(SimpleName:openChunks)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:notify))))))))))))))))(SynchronizedStatement(SimpleName:openChunks)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:wait))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:openChunks))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_DEBUG)(ThisExpression)(StringLiteral:<STR>))))(ReturnStatement(SimpleName:condition))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:babuDB))(SimpleName:startBabuDB)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileIO))(SimpleName:removeBackupFiles)))(AssertStatement(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:actual))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:babuDB))(SimpleName:getState))))))(StringLiteral:<STR>))(ReturnStatement(MethodInvocation(SimpleName:finish)(METHOD_INVOCATION_ARGUMENTS(SimpleName:until)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:BabuDBException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logging))(SimpleName:logMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logging.LEVEL_WARN)(ThisExpression)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(ReturnStatement(SimpleName:condition)))))))))