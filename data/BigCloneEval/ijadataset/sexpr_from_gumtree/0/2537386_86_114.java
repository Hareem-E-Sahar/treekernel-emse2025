(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:done)(SingleVariableDeclaration(SimpleType(SimpleName:Connection))(SimpleName:c))(Block(IfStatement(SimpleName:dgcAckNeeded)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Connection))(VariableDeclarationFragment(SimpleName:conn)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:ch)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:reuse)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:DGCImpl.dgcLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.VERBOSE)(StringLiteral:<STR>))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:ch)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:newConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:DataOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:DataOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:writeByte)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:TransportConstants.DGCAck))))(IfStatement(InfixExpression(SimpleName:ackID)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:ackID)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:UID)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ackID))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:DataOutput))(SimpleName:out)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:releaseOutputStream)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream)))(SimpleName:available)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:releaseInputStream))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RemoteException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:reuse)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:reuse)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:conn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:free)(METHOD_INVOCATION_ARGUMENTS(SimpleName:conn)(SimpleName:reuse))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RemoteException))(SimpleName:e))(Block)))))))))