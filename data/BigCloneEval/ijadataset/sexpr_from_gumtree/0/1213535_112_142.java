(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:isInterrupted)))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Character)))(VariableDeclarationFragment(SimpleName:resources)(MethodInvocation(SimpleName:getResources))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:shared)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RANDOM))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:FRACTION_EX)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:MultiReadWriteLock))(SimpleType(SimpleName:Character)))(VariableDeclarationFragment(SimpleName:rwLock)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PROVIDER))(SimpleName:newLock)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resources)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:MultiLock))(SimpleType(SimpleName:Character)))(VariableDeclarationFragment(SimpleName:lock)(ConditionalExpression(SimpleName:shared)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rwLock))(SimpleName:readLock))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rwLock))(SimpleName:writeLock)))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shared)(SimpleName:resources)(StringLiteral:<STR>))))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:time)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(IfStatement(MethodInvocation(SimpleName:doLock)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lock)))(Block(ExpressionStatement(Assignment(SimpleName:time)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:time))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shared)(SimpleName:resources)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:time)(StringLiteral:<STR>)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:WORK_TIME)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shared)(SimpleName:resources)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:unlock)))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shared)(SimpleName:resources)(StringLiteral:<STR>))))(BreakStatement))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:unlock)))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shared)(SimpleName:resources)(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shared)(SimpleName:resources)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shared)(SimpleName:resources)(StringLiteral:<STR>))))(BreakStatement))))))))))