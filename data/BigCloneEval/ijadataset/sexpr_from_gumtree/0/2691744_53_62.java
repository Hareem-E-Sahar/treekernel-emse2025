(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:actuate)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:leftPower))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:rightPower))(Block(ExpressionStatement(Assignment(SimpleName:lOutPow)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lOutPow)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:leftPower)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:rOutPow)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:rOutPow)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rightPower)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:distWalked)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lOutPow)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rOutPow)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:rotation)(ASSIGNMENT_OPERATOR:+=)(ParenthesizedExpression(InfixExpression(SimpleName:rOutPow)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lOutPow)))))(WhileStatement(InfixExpression(SimpleName:rotation)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:Math.PI))(ExpressionStatement(Assignment(SimpleName:rotation)(ASSIGNMENT_OPERATOR:-=)(InfixExpression(QualifiedName:Math.PI)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2)))))(WhileStatement(InfixExpression(SimpleName:rotation)(INFIX_EXPRESSION_OPERATOR:<)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(QualifiedName:Math.PI)))(ExpressionStatement(Assignment(SimpleName:rotation)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(QualifiedName:Math.PI)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2)))))(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:cos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rotation)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:distWalked))))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sin)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rotation)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:distWalked))))))))