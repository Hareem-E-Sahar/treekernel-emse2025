(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:upload)(SimpleType(SimpleName:UnknownHostException))(SimpleType(SimpleName:SocketException))(SimpleType(SimpleName:FTPConnectionClosedException))(SimpleType(SimpleName:LoginFailedException))(SimpleType(SimpleName:DirectoryChangeFailedException))(SimpleType(SimpleName:CopyStreamException))(SimpleType(SimpleName:RefusedConnectionException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:NUM_XML_FILES)(NumberLiteral:2)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:META_XML_SUFFIX)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:FILES_XML_SUFFIX)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:username)(MethodInvocation(SimpleName:getUsername))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:password)(MethodInvocation(SimpleName:getPassword))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:getFtpServer))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:getFtpPath))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:username)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:password)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:metaXmlString)(MethodInvocation(SimpleName:serializeDocument)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getMetaDocument))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filesXmlString)(MethodInvocation(SimpleName:serializeDocument)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFilesDocument))))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:metaXmlBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:metaXmlString))(SimpleName:getBytes))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:filesXmlBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesXmlString))(SimpleName:getBytes))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:metaXmlLength)(QualifiedName:metaXmlBytes.length)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:filesXmlLength)(QualifiedName:filesXmlBytes.length)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Collection))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(SimpleName:getFiles))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:totalFiles)(InfixExpression(SimpleName:NUM_XML_FILES)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:size)))))(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:fileNames)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension(SimpleName:totalFiles))))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:long)(Dimension))(VariableDeclarationFragment(SimpleName:fileSizes)(ArrayCreation(ArrayType(PrimitiveType:long)(Dimension(SimpleName:totalFiles))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:metaXmlName)(InfixExpression(MethodInvocation(SimpleName:getIdentifier))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:META_XML_SUFFIX))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:fileNames)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:metaXmlName)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:fileSizes)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:metaXmlLength)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filesXmlName)(InfixExpression(MethodInvocation(SimpleName:getIdentifier))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:FILES_XML_SUFFIX))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:fileNames)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(SimpleName:filesXmlName)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:fileSizes)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(SimpleName:filesXmlLength)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:2)))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ArchiveFile))(VariableDeclarationFragment(SimpleName:f)(CastExpression(SimpleType(SimpleName:ArchiveFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:fileNames)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getRemoteFileName))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:fileSizes)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getFileSize))))(ExpressionStatement(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:fileSizes.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_fileNames2Progress))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:fileNames)(SimpleName:i))(ClassInstanceCreation(SimpleType(SimpleName:UploadFileProgress))(ArrayAccess(SimpleName:fileSizes)(SimpleName:i))))))(ExpressionStatement(Assignment(SimpleName:_totalUploadSize)(ASSIGNMENT_OPERATOR:+=)(ArrayAccess(SimpleName:fileSizes)(SimpleName:i))))))(VariableDeclarationStatement(SimpleType(SimpleName:FTPClient))(VariableDeclarationFragment(SimpleName:ftp)(ClassInstanceCreation(SimpleType(SimpleName:FTPClient)))))(TryStatement(Block(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:enterLocalPassiveMode)))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFtpServer)))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:reply)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:getReplyCode))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FTPReply))(SimpleName:isPositiveCompletion)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reply))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RefusedConnectionException))(InfixExpression(MethodInvocation(SimpleName:getFtpServer))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(SimpleName:username)(SimpleName:password))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:LoginFailedException))))))(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:changeWorkingDirectory)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFtpPath)))))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isFtpDirPreMade)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:makeDirectory)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFtpPath))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DirectoryChangeFailedException))))))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:changeWorkingDirectory)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getFtpPath)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DirectoryChangeFailedException))))))))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:connected)))(ExpressionStatement(MethodInvocation(SimpleName:uploadFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:metaXmlName)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:metaXmlBytes))(SimpleName:ftp))))(ExpressionStatement(MethodInvocation(SimpleName:uploadFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filesXmlName)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:filesXmlBytes))(SimpleName:ftp))))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:setFileType)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FTP.BINARY_FILE_TYPE))))(ForStatement(VariableDeclarationExpression(Modifier:final)(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ArchiveFile))(VariableDeclarationFragment(SimpleName:f)(CastExpression(SimpleType(SimpleName:ArchiveFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(SimpleName:uploadFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getRemoteFileName))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getIOFile)))(SimpleName:ftp)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedIOException))(SimpleName:ioe))(Block(ReturnStatement)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:logout))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftp))(SimpleName:disconnect))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:checkinStarted)))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:checkin)))(IfStatement(MethodInvocation(SimpleName:isCancelled))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:checkinCompleted)))))))