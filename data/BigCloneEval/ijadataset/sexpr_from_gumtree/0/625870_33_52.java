(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:appendListenerInfo)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:a_methodName))(SingleVariableDeclaration(SimpleType(SimpleName:Element))(SimpleName:a_node))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:a_src))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:l_patternAddListener)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:a_methodName)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Pattern))(VariableDeclarationFragment(SimpleName:l_pattern)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l_patternAddListener)))))(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:l_matcher)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_pattern))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a_src)))))(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:l_node)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_matcher))(SimpleName:find))(Block(ExpressionStatement(Assignment(SimpleName:l_node)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GB_XmlTools))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a_node)(SimpleName:a_methodName)(NullLiteral)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l_start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_matcher))(SimpleName:start))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l_end)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_matcher))(SimpleName:end))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:l_start)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:l_end)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a_src))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l_start)(SimpleName:l_end))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l_line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GB_SourceTools))(SimpleName:lineNumberFromIndex)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a_src)(SimpleName:l_start)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:l_line)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:l_details)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GB_SourceTools))(SimpleName:lineFromIndex)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a_src)(SimpleName:l_start)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:l_details)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_node))(SimpleName:setAttribute)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:l_line)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GB_XmlTools))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l_node)(StringLiteral:<STR>)(SimpleName:l_details))))))))))