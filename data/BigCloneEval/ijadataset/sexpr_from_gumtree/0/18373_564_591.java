(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:copyDirectoryTree)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:srcPath))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dstPath))(Block(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcPath))(SimpleName:isDirectory))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dstPath))(SimpleName:exists)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dstPath))(SimpleName:mkdir))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:files)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcPath))(SimpleName:list))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(MethodInvocation(SimpleName:copyDirectoryTree)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:srcPath)(ArrayAccess(SimpleName:files)(SimpleName:i)))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dstPath)(ArrayAccess(SimpleName:files)(SimpleName:i))))))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcPath))(SimpleName:exists)))(Block(ExpressionStatement(Assignment(SimpleName:errMsgLog)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:srcPath)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:lastErrMsgLog)(ASSIGNMENT_OPERATOR:=)(SimpleName:errMsgLog)))(ReturnStatement(ParenthesizedExpression(BooleanLiteral:false))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:srcPath))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:dstPath))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:10240))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:len)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))))))(ReturnStatement(ParenthesizedExpression(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:errMsgLog)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcPath))(SimpleName:getName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dstPath))(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:e)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:lastErrMsgLog)(ASSIGNMENT_OPERATOR:=)(SimpleName:errMsgLog)))(ReturnStatement(ParenthesizedExpression(BooleanLiteral:false))))))))))