(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:generateKey)(Block(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:secretKeyFile))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ui))(SimpleName:confirm)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:secretKeyFile)(StringLiteral:<STR>))))))(Block(ReturnStatement(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:forceMkdir)(METHOD_INVOCATION_ARGUMENTS(SimpleName:keyStorageDir))))(VariableDeclarationStatement(ArrayType(PrimitiveType:char)(Dimension))(VariableDeclarationFragment(SimpleName:password)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ui))(SimpleName:createPassword))))(IfStatement(InfixExpression(SimpleName:password)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(BooleanLiteral:false))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:PBEKeySpec))(VariableDeclarationFragment(SimpleName:passwordKeySpec)(ClassInstanceCreation(SimpleType(SimpleName:PBEKeySpec))(SimpleName:password))))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKeyFactory))(VariableDeclarationFragment(SimpleName:factory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SecretKeyFactory))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:KEY_ENCRYPTION_ALGORITHM)))))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKey))(VariableDeclarationFragment(SimpleName:passwordKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:factory))(SimpleName:generateSecret)(METHOD_INVOCATION_ARGUMENTS(SimpleName:passwordKeySpec)))))(VariableDeclarationStatement(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cipher)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:KEY_ENCRYPTION_ALGORITHM)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.ENCRYPT_MODE)(SimpleName:passwordKey))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyGenerator))(VariableDeclarationFragment(SimpleName:generator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:KeyGenerator))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DATA_ENCRYPTION_ALGORITHM)))))(ExpressionStatement(Assignment(SimpleName:secretKey)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:generator))(SimpleName:generateKey))))(ExpressionStatement(MethodInvocation(SimpleName:writeSecretKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cipher)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:fill)(METHOD_INVOCATION_ARGUMENTS(SimpleName:password)(CharacterLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ui))(SimpleName:information)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Strings))(SimpleName:getSecretKeyGeneratedMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyStorageDir))(SimpleName:getAbsolutePath)))))))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getLocalizedMessage))(SimpleName:e))))))))))