(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(QualifiedName:net.fortuna.ical4j.model.Calendar))(SimpleName:getIcal4JCalendarFromRemoteCalendar)(SingleVariableDeclaration(SimpleType(SimpleName:Calendar))(SimpleName:calendar))(SimpleType(SimpleName:DaoException))(SimpleType(SimpleName:KeyManagementException))(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleType(SimpleName:UnknownHostException))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:ParserException))(SimpleType(SimpleName:IllegalBlockSizeException))(SimpleType(SimpleName:BadPaddingException))(SimpleType(SimpleName:DecoderException))(SimpleType(SimpleName:InvalidKeyException))(SimpleType(SimpleName:InvalidAlgorithmParameterException))(SimpleType(SimpleName:NoSuchPaddingException))(SimpleType(SimpleName:InvalidKeySpecException))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:calendar)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getUrl))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DaoException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getUsername))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getPassword))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConnectionUtil))(SimpleName:setAuthentication)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getUsername))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getPassword)))))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:connection)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendar))(SimpleName:getUrl)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol)))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ConnectionUtil.HTTPS_PROTOCOL)))(Block(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConnectionUtil))(SimpleName:getURLConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)(BooleanLiteral:true))))))(Block(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))))(VariableDeclarationStatement(SimpleType(SimpleName:CalendarBuilder))(VariableDeclarationFragment(SimpleName:calendarBuilder)(ClassInstanceCreation(SimpleType(SimpleName:CalendarBuilder)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:calendarBuilder))(SimpleName:build)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getInputStream)))))))))