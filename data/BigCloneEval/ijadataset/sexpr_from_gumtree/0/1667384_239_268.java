(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:readStreamTo)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:in))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:len))(SingleVariableDeclaration(SimpleType(SimpleName:OutputStream))(SimpleName:out))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DataInputStream))(VariableDeclarationFragment(SimpleName:din)(ClassInstanceCreation(SimpleType(SimpleName:DataInputStream))(SimpleName:in))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:rec)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:0))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:rtry)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:readCount)(NumberLiteral:0)))(InfixExpression(SimpleName:readCount)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:len))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:chunkSize)(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:readCount))))(IfStatement(InfixExpression(SimpleName:chunkSize)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:MaxCHUNK))(ExpressionStatement(Assignment(SimpleName:chunkSize)(ASSIGNMENT_OPERATOR:=)(SimpleName:MaxCHUNK))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:din))(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:chunkSize))(ExpressionStatement(Assignment(SimpleName:chunkSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:din))(SimpleName:available)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:readLen)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:rec)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:chunkSize))))))(ExpressionStatement(Assignment(SimpleName:readLen)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:din))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rec)(NumberLiteral:0)(SimpleName:chunkSize)))))(IfStatement(InfixExpression(SimpleName:readLen)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(PostfixExpression(SimpleName:rtry)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1000))))(IfStatement(InfixExpression(SimpleName:rtry)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:MAX_RETRY))(BreakStatement))(ContinueStatement))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rec)(NumberLiteral:0)(SimpleName:readLen))))(ExpressionStatement(Assignment(SimpleName:rtry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:readCount)(ASSIGNMENT_OPERATOR:+=)(SimpleName:readLen))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:tools.util.LogMgr))(SimpleName:err)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:len)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))