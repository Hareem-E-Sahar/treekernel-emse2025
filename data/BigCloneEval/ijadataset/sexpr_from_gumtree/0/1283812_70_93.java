(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:InputStream))(SimpleName:getInput)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_configFile))(SimpleName:canRead)))(Block(ReturnStatement(NullLiteral))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:_configFile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:inputDigest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:DigestInputStream))(SimpleName:in)(SimpleName:inputDigest)(AnonymousClassDeclaration(FieldDeclaration(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isClosed)(BooleanLiteral:false)))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:close)(SimpleType(SimpleName:IOException))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isClosed))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:_inputDigest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputDigest))(SimpleName:digest))))))(ExpressionStatement(Assignment(SimpleName:isClosed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ReturnStatement(NullLiteral)))))))))