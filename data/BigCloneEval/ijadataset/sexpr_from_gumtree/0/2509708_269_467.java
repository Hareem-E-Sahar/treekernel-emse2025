(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:setIOPortByte)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:portAddress))(SingleVariableDeclaration(PrimitiveType:byte)(SimpleName:value))(SimpleType(SimpleName:UnknownPortException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ModuleMotherboard))(VariableDeclarationFragment(SimpleName:motherboard)(CastExpression(SimpleType(SimpleName:ModuleMotherboard))(SuperMethodInvocation(SimpleName:getConnection)(QualifiedName:Module.Type.MOTHERBOARD)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.CONFIG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:portAddress))))(SimpleName:toUpperCase))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))))))(SwitchStatement(SimpleName:portAddress)(SwitchCase(NumberLiteral:0x60))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.expectingPort60h)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.commandData)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.inputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(SwitchStatement(QualifiedName:keyboard.controller.lastCommand)(SwitchCase(NumberLiteral:0x60))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:disableKeyboard))(VariableDeclarationFragment(SimpleName:disableAux)))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.translateScancode)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:6)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x01))))))(ExpressionStatement(Assignment(SimpleName:disableAux)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:5)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x01))))))(ExpressionStatement(Assignment(SimpleName:disableKeyboard)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x01))))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.systemFlag)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x01))))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.allowIRQ12)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x01))))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.allowIRQ1)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x01))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setKeyboardClock)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:disableKeyboard)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(BooleanLiteral:true)(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setAuxClock)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:disableAux)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(BooleanLiteral:true)(BooleanLiteral:false)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.allowIRQ12)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.auxBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))))(Block(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.irq12Requested)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(QualifiedName:keyboard.controller.allowIRQ12))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.allowIRQ1)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.outputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))))(Block(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.irq1Requested)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(QualifiedName:keyboard.controller.allowIRQ1))))))))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.translateScancode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:motherboard))(SimpleName:setA20)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x02)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(BooleanLiteral:true)(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x02)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2)))(StringLiteral:<STR>)(StringLiteral:<STR>)))(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x01)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD2)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value)(SimpleName:KEYBOARD))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD3)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value)(SimpleName:MOUSE))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD4)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:value)))))(VariableDeclarationStatement(SimpleType(SimpleName:ModuleMouse))(VariableDeclarationFragment(SimpleName:mouse)(CastExpression(SimpleType(SimpleName:ModuleMouse))(SuperMethodInvocation(SimpleName:getConnection)(QualifiedName:Module.Type.MOUSE)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mouse))(SimpleName:controlMouse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(ReturnStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:keyboard.controller.lastCommand))))(SimpleName:toUpperCase))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:portAddress))))(SimpleName:toUpperCase))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:UnknownPortException))(InfixExpression(SuperMethodInvocation(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:keyboard.controller.lastCommand)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:portAddress))))(SimpleName:toUpperCase)))))))(Block(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.commandData)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.kbdClockEnabled)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:setKeyboardClock)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:dataPortToInternalKB)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))))(ReturnStatement)(SwitchCase(NumberLiteral:0x64))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.commandData)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.lastCommand)(ASSIGNMENT_OPERATOR:=)(SimpleName:value)))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(SwitchStatement(SimpleName:value)(SwitchCase(NumberLiteral:0x20))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.outputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)))))(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:commandByte)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.translateScancode)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:6)))(INFIX_EXPRESSION_OPERATOR:|)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(ConditionalExpression(InfixExpression(QualifiedName:keyboard.controller.auxClockEnabled)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(NumberLiteral:1)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:5)))(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(ConditionalExpression(InfixExpression(QualifiedName:keyboard.controller.kbdClockEnabled)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(NumberLiteral:1)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:4)))(ParenthesizedExpression(InfixExpression(NumberLiteral:0)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:3)))(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.systemFlag)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:2)))(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.allowIRQ12)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:1)))(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.allowIRQ1)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:0))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:commandByte)(SimpleName:KEYBOARD))))(ReturnStatement)(SwitchCase(NumberLiteral:0x60))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xA0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xA1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xA7)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setAuxClock)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xA8)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setAuxClock)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xA9)))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.outputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(NumberLiteral:0xFF))(SimpleName:KEYBOARD))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xAA)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:kbdInitialised)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyboard))(SimpleName:getControllerQueue)))(SimpleName:clear)))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.outputBuffer)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(PostfixExpression(SimpleName:kbdInitialised)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.outputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)))))(ReturnStatement)))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.systemFlag)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(NumberLiteral:0x55))(SimpleName:KEYBOARD))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xAB)))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.outputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(NumberLiteral:0x00))(SimpleName:KEYBOARD))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xAD)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setKeyboardClock)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xAE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setKeyboardClock)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xAF)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xC0)))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.outputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(NumberLiteral:0x80))(SimpleName:KEYBOARD))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xC1)))(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xC2)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))))))(IfStatement(InfixExpression(QualifiedName:keyboard.controller.outputBuffer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(SimpleName:toUpperCase))(StringLiteral:<STR>)))))(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:p2)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.irq12Requested)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:5)))(INFIX_EXPRESSION_OPERATOR:|)(ParenthesizedExpression(InfixExpression(QualifiedName:keyboard.controller.irq1Requested)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:4)))(ParenthesizedExpression(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:motherboard))(SimpleName:getA20))(NumberLiteral:1)(InfixExpression(NumberLiteral:0)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:1))))(NumberLiteral:0x01))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:enqueueControllerBuffer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p2)(SimpleName:KEYBOARD))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD2)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD3)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xD4)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(QualifiedName:keyboard.controller.expectingPort60h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xDD)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:motherboard))(SimpleName:setA20)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xDF)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:motherboard))(SimpleName:setA20)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xE0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))))))(ReturnStatement)(SwitchCase(CastExpression(PrimitiveType:byte)(NumberLiteral:0xFE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ReturnStatement)(SwitchCase)(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0xF0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0xFD))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0xFF)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0x100)(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xFF))))))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:toUpperCase))))))(ReturnStatement))(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:UnknownPortException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SuperMethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:portAddress))))(SimpleName:toUpperCase))))))))))