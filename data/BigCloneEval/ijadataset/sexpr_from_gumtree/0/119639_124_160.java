(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:runTest)(SingleVariableDeclaration(SimpleType(SimpleName:TestFile))(SimpleName:tf))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:dryRunOnly))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cacheString)(StringLiteral:<STR>)))(IfStatement(InfixExpression(QualifiedName:tf.cache)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AbstractTest.PREDECODE))(ExpressionStatement(Assignment(SimpleName:cacheString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(IfStatement(InfixExpression(QualifiedName:tf.cache)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AbstractTest.PRELOAD))(ExpressionStatement(Assignment(SimpleName:cacheString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:dryRunOnly))(ExpressionStatement(MethodInvocation(SimpleName:msg)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:tf.testName)(StringLiteral:<STR>)(QualifiedName:tf.testFile)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:cacheString)(INFIX_EXPRESSION_OPERATOR:==)(StringLiteral:<STR>))(StringLiteral:<STR>)(SimpleName:cacheString)))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cmd)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:classpath)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:props)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:entrySet)))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:Map.Entry))(VariableDeclarationFragment(SimpleName:entry)(CastExpression(SimpleType(QualifiedName:Map.Entry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:n)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getKey)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:v)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getValue)))))(ExpressionStatement(Assignment(SimpleName:cmd)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:n)(StringLiteral:<STR>)(SimpleName:v))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:args)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:driver)(StringLiteral:<STR>)(QualifiedName:tf.testFile)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(SimpleName:dryRunOnly)(StringLiteral:<STR>)(QualifiedName:tf.iterations)))(StringLiteral:<STR>)(SimpleName:cacheString)(StringLiteral:<STR>)(SimpleName:options))))(ExpressionStatement(Assignment(SimpleName:cmd)(ASSIGNMENT_OPERATOR:+=)(SimpleName:args)))(IfStatement(SimpleName:dryRunOnly)(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(QualifiedName:tf.testName)))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(QualifiedName:tf.iterations)(StringLiteral:<STR>)(QualifiedName:tf.testName)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:args)))))(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:proc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cmd)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:stdout)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:getInputStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:stderr)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:getErrorStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:errors)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:newLine)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:newLine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stderr))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:newLine)))))(ExpressionStatement(Assignment(SimpleName:errors)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:newLine)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:dryRunOnly))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errors))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(SimpleName:msg)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:errors)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:waitFor)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:exitValue))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:dryRunOnly))(ExpressionStatement(MethodInvocation(SimpleName:msg)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:exitValue))(StringLiteral:<STR>)))))))(Block(WhileStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:dryRunOnly))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:newLine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stdout))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(MethodInvocation(SimpleName:msg)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:newLine))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:dryRunOnly))(ExpressionStatement(MethodInvocation(SimpleName:msg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))