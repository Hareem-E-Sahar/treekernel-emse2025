(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:getBinaryString)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:hexChars))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:binaryToken)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hexChars)(NumberLiteral:16)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:binaryValue)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toBinaryString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:binaryToken)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:leading0s)(InfixExpression(NumberLiteral:8)(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:binaryValue))(SimpleName:length)))))(WhileStatement(InfixExpression(SimpleName:leading0s)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:binaryValue)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:binaryValue))))(ExpressionStatement(Assignment(SimpleName:leading0s)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:leading0s)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:level3)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:binaryValue)))))(ReturnStatement(SimpleName:binaryValue))))))