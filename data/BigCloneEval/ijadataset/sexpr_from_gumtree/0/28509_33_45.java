(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:quarantine)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:quarantineDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:quarantineFolder))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:quarantineDir))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:quarantineDir))(SimpleName:mkdirs)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:attachFilePath))(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:quarantineFolder)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FilenameUtils))(SimpleName:getName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:attachFilePath))))))))(ExpressionStatement(Assignment(SimpleName:quarantined)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:attachFilePath)(StringLiteral:<STR>))(SimpleName:e)))))))))))