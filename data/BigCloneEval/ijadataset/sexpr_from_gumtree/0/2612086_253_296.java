(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:uploadFile)(SingleVariableDeclaration(SimpleType(SimpleName:HttpURL))(SimpleName:url))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:relative))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:putit)(BooleanLiteral:false)))(TryStatement(Block(IfStatement(FieldAccess(ThisExpression)(SimpleName:overwrite))(Block(ExpressionStatement(Assignment(SimpleName:putit)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:remoteLastMod)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getLastModified)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getHttpClient))(SimpleName:url)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:localLastMod)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:lastModified))))(ExpressionStatement(Assignment(SimpleName:putit)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:localLastMod)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:remoteLastMod)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:HttpException))(SimpleName:e))(Block(SwitchStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getReasonCode))(SwitchCase(QualifiedName:HttpStatus.SC_NOT_FOUND))(ExpressionStatement(Assignment(SimpleName:putit)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase)(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:makeBuildException)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))))(IfStatement(SimpleName:putit)(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:relative))(MethodInvocation(SimpleName:ifVerbose)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:contentType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Mimetypes))(SimpleName:getMimeType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:DEFAULT_CONTENT_TYPE)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:filterSets)))(SimpleName:hasFilters))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))(FieldAccess(ThisExpression)(SimpleName:encoding)))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:LineTokenizer))(VariableDeclarationFragment(SimpleName:tok)(ClassInstanceCreation(SimpleType(SimpleName:LineTokenizer)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tok))(SimpleName:setIncludeDelims)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:l)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tok))(SimpleName:getToken)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reader)))))(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Assignment(SimpleName:l)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tok))(SimpleName:getToken)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reader))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:filterSets)))(SimpleName:replaceTokens)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l))))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:encoding)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:putFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getHttpClient))(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toByteArray)))(SimpleName:contentType)(FieldAccess(ThisExpression)(SimpleName:locktoken))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:putFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getHttpClient))(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))(SimpleName:contentType)(FieldAccess(ThisExpression)(SimpleName:locktoken)))))))(ExpressionStatement(PostfixExpression(FieldAccess(ThisExpression)(SimpleName:countWrittenFiles))(POSTFIX_EXPRESSION_OPERATOR:++))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:HttpException))(SimpleName:e))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:makeBuildException)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))(SimpleName:e))))))))(Block(ExpressionStatement(PostfixExpression(SimpleName:countOmittedFiles)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:relative)(StringLiteral:<STR>))(MethodInvocation(SimpleName:ifVerbose)))))))))))