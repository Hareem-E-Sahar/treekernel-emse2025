(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:neighbor)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:PermutationGenotype))(WildcardType))(SimpleName:genotype))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:genotype))(SimpleName:size))))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:a)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)))(DoStatement(Block(ExpressionStatement(Assignment(SimpleName:b)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:a)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:a))))))))(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:a)))(WhileStatement(InfixExpression(SimpleName:a)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:b))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:swap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:genotype)(SimpleName:a)(SimpleName:b))))(ExpressionStatement(PostfixExpression(SimpleName:a)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(PostfixExpression(SimpleName:b)(POSTFIX_EXPRESSION_OPERATOR:--)))))))))))