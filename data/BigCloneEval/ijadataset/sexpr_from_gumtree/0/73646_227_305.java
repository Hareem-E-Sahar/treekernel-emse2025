(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:loadServiceNames)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.InputStream))(VariableDeclarationFragment(SimpleName:inStr)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ClassLoader))(VariableDeclarationFragment(SimpleName:cl)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:cl)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassLoader))(SimpleName:getSystemClassLoader)))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.NoClassDefFoundError))(SimpleName:e))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.NoSuchMethodError))(SimpleName:e))(Block)))(IfStatement(InfixExpression(SimpleName:cl)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:inStr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cl))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(SimpleName:inStr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:classpath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:classpath)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:classpath)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:String))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.StringTokenizer))(VariableDeclarationFragment(SimpleName:st)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.StringTokenizer))(SimpleName:classpath)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.File))(VariableDeclarationFragment(SimpleName:file)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:hasMoreTokens))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.File))(SimpleName:path)(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(ExpressionStatement(Assignment(SimpleName:inStr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileInputStream))(SimpleName:file))))(BreakStatement)))))(IfStatement(InfixExpression(SimpleName:inStr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.File))(StringLiteral:<STR>)(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(ExpressionStatement(Assignment(SimpleName:inStr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileInputStream))(SimpleName:file))))))))))(IfStatement(InfixExpression(SimpleName:inStr)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.InputStreamReader))(VariableDeclarationFragment(SimpleName:inStrReader)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.InputStreamReader))(SimpleName:inStr))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.BufferedReader))(VariableDeclarationFragment(SimpleName:bRead)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.BufferedReader))(SimpleName:inStrReader))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bRead))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:trim))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))))(Block(ContinueStatement)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:toks)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(QualifiedName:toks.length)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(Block(ContinueStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:serviceName)(ArrayAccess(SimpleName:toks)(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:port)(ClassInstanceCreation(SimpleType(SimpleName:Integer))(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:protocol)(StringLiteral:<STR>)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:portAndProtocol)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:toks)(NumberLiteral:1)))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(QualifiedName:portAndProtocol.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:2))(Block(ContinueStatement)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:port)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:decode)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:portAndProtocol)(NumberLiteral:0)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:nfe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:portAndProtocol)(NumberLiteral:0))))))(ContinueStatement))))(ExpressionStatement(Assignment(SimpleName:protocol)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:portAndProtocol)(NumberLiteral:1)))(SimpleName:trim))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:protocol))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tcpServices))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:port)(SimpleName:serviceName)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:protocol))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:udpServices))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:port)(SimpleName:serviceName)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line)(StringLiteral:<STR>))))))))))(IfStatement(InstanceofExpression(SimpleName:inStr)(SimpleType(QualifiedName:java.io.FileInputStream)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inStr))(SimpleName:close))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.Exception))(SimpleName:e))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.Error))(SimpleName:e))(Block)))))))