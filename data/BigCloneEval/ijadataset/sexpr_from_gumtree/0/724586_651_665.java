(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:processExecAttrs)(SimpleType(SimpleName:BuildException))(Block(TryStatement(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:execIter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mExecAttrs))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:execIter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:src)(CastExpression(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:execIter))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dest)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:mMacOsDir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getName)))))(IfStatement(SimpleName:mVerbose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src)(StringLiteral:<STR>)(SimpleName:dest)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mFileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:dest))))(ExpressionStatement(MethodInvocation(SimpleName:setExecutable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dest)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex)))))))))))