(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Stream))(SimpleName:getStreamValue)(SingleVariableDeclaration(SimpleType(SimpleName:StreamContext))(SimpleName:context))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Stream))(VariableDeclarationFragment(SimpleName:candidate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getStreamIfPresent)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)))))(IfStatement(InfixExpression(SimpleName:candidate)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(SimpleName:candidate))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)))(IfStatement(InfixExpression(SimpleName:nameExpr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:nanoTime))))))(Block(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nameExpr))(SimpleName:getStringValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:className)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classExpr))(SimpleName:getStringValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:streamClass)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:className)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:streamClass)(ASSIGNMENT_OPERATOR:=)(TypeLiteral(SimpleType(SimpleName:EventStream))))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:className))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:prefixIndex)(NumberLiteral:0)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:streamClass)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:prefixIndex)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:STREAM_CLASS_PREFIXES.length)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fullClassName)(InfixExpression(ArrayAccess(SimpleName:STREAM_CLASS_PREFIXES)(PostfixExpression(SimpleName:prefixIndex)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:streamClass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fullClassName))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block))))))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:streamClass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:className))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block)))))(IfStatement(InfixExpression(SimpleName:streamClass)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className)(StringLiteral:<STR>))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Stream))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:streamClass))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:streamClass))(SimpleName:getName))(StringLiteral:<STR>))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType))(VariableDeclarationFragment(SimpleName:cons)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:cons)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:streamClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String)))(TypeLiteral(SimpleType(SimpleName:StreamContext)))(TypeLiteral(SimpleType(SimpleName:TupleExpression)))(TypeLiteral(SimpleType(SimpleName:Unit))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SecurityException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:cons)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:cons)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(IfStatement(InfixExpression(SimpleName:cons)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:streamClass))(SimpleName:getName))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:Throwable))(VariableDeclarationFragment(SimpleName:exception)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Stream))(VariableDeclarationFragment(SimpleName:ans)(CastExpression(SimpleType(SimpleName:Stream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cons))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tupleExpr))(SimpleName:getStreamContext))(SimpleName:tupleExpr)(MethodInvocation(SimpleName:getUnitFrom)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tupleExpr))(SimpleName:getType)))))))))(IfStatement(InfixExpression(SimpleName:nameExpr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ans))(SimpleName:setInvisible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ReturnStatement(SimpleName:ans)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:exception)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getCause))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:streamClass))(SimpleName:getName))(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:streamClass))(SimpleName:getName))(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:exception)(ASSIGNMENT_OPERATOR:=)(SimpleName:e))))))(IfStatement(InstanceofExpression(SimpleName:exception)(SimpleType(SimpleName:RuntimeException)))(Block(ThrowStatement(CastExpression(SimpleType(SimpleName:RuntimeException))(SimpleName:exception))))(IfStatement(InstanceofExpression(SimpleName:exception)(SimpleType(SimpleName:Error)))(Block(ThrowStatement(CastExpression(SimpleType(SimpleName:Error))(SimpleName:exception))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exception))(SimpleName:getMessage))(SimpleName:exception))))))))))