(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:CodeBlock))(SimpleName:instantiateClass)(SingleVariableDeclaration(SimpleType(SimpleName:ClassFile))(SimpleName:cf))(SimpleType(SimpleName:InstantiationException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:bos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bos)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGING))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(StringLiteral:<STR>)(SimpleName:e)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:classBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bos))(SimpleName:toByteArray))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:codeBlockClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentClassLoader))(SimpleName:createClass)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:getClassName))(SimpleName:classBytes)))))(IfStatement(SimpleName:saveClasses)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:getClassName)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classBytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:closeEntry))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:ClassFileBuilder))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(NullLiteral)(SimpleName:ex)))))))))(TryStatement(Block(ReturnStatement(CastExpression(SimpleType(SimpleName:CodeBlock))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:codeBlockClass))(SimpleName:newInstance)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGING))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(CastExpression(SimpleType(SimpleName:InstantiationException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:InstantiationException))))(SimpleName:initCause)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))))))))