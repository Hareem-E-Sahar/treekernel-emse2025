(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:m2package)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:buildRepo))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:File))(SimpleType(SimpleName:Model)))(SimpleName:modules))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:targetRepo))(SimpleType(SimpleName:IOException))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Model))(SimpleName:model))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modules))(SimpleName:values))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:suffix)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:getGroupId)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(QualifiedName:File.separatorChar)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:getArtifactId))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:getVersion))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:buildDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:buildRepo)(SimpleName:suffix))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetRepo)(SimpleName:suffix))))(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buildDir))(SimpleName:listFiles)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileFilter))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory))(ReturnStatement(BooleanLiteral:false)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(BooleanLiteral:false)))(ReturnStatement(BooleanLiteral:true))))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleName:files)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetDir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:file)(SimpleName:targetFile))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:targetFile)(BooleanLiteral:true))))))))))))