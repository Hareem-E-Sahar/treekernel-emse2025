(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(IfStatement(InfixExpression(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:benchmarkName)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(Block(ExpressionStatement(Assignment(SimpleName:iterations)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:1))))))))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:ImplementsMyInterface))))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:Child1))))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:Child2))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Method))(Dimension))(VariableDeclarationFragment(SimpleName:methods)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:benchmarkName))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:methods)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(SimpleType(SimpleName:Method))(Dimension(NumberLiteral:1))))))(TryStatement(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:methods)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:MicroBench))))(SimpleName:getDeclaredMethod)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:benchmarkName))(NullLiteral))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:methods)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:methods)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:benchmarkName)(StringLiteral:<STR>)))))(ReturnStatement))))(Block(ExpressionStatement(Assignment(SimpleName:methods)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:MicroBench))))(SimpleName:getDeclaredMethods))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:methods.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:m)(ArrayAccess(SimpleName:methods)(SimpleName:i))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:getName)))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NumberLiteral:0))))(Block(ContinueStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:sun.misc.JIT))(SimpleName:compileMethod)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m)(BooleanLiteral:false))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:getName))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:starttime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:iterations))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(NullLiteral))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:totaltime)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:starttime))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:totaltime)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ReturnStatement))))))))))