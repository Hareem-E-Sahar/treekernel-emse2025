(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:synchronized)(PrimitiveType:void)(SimpleName:addFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(Block(TryStatement(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:file)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory)))(Block(ReturnStatement)))(ExpressionStatement(PostfixExpression(SimpleName:filesAdded)(POSTFIX_EXPRESSION_OPERATOR:++)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:s)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:baseDirLength)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:File.separatorChar)(CharacterLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:zipentry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:s))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipentry))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:lastModified)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipentry)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exception1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exception1)))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fileinputstream)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(DoStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileinputstream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(QualifiedName:buffer.length)))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:i)))))(BooleanLiteral:true))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileinputstream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(SimpleName:exception))))))))))))