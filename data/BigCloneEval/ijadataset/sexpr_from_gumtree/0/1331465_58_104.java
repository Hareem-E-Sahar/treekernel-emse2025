(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(SimpleType(SimpleName:PacketFilter))(VariableDeclarationFragment(SimpleName:filter)))(VariableDeclarationStatement(SimpleType(SimpleName:PacketCollector))(VariableDeclarationFragment(SimpleName:collector)))(VariableDeclarationStatement(SimpleType(SimpleName:Packet))(VariableDeclarationFragment(SimpleName:packet)))(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:message)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sender))(VariableDeclarationFragment(SimpleName:text)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:XMPPConnection))(SimpleName:server))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:connect)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(SimpleName:username)(SimpleName:password)(SimpleName:RESOURCE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ConnectEvent))(QualifiedName:ConnectEvent.JABBER)))))(ExpressionStatement(Assignment(SimpleName:filter)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PacketFilter))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:Packet))(SimpleName:packet))(Block(ReturnStatement(BooleanLiteral:true))))))))(ExpressionStatement(Assignment(SimpleName:collector)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:createPacketCollector)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filter)))))(WhileStatement(BooleanLiteral:true)(Block(ExpressionStatement(Assignment(SimpleName:packet)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collector))(SimpleName:nextResult))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:packet)(SimpleType(SimpleName:Message)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:packet)))))(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:message)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Message))(SimpleName:packet))))(ExpressionStatement(Assignment(SimpleName:sender)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:message))(SimpleName:getFrom))))(IfStatement(InfixExpression(SimpleName:sender)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:packet)))))(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:text)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:message))(SimpleName:getBody))))(IfStatement(InfixExpression(SimpleName:text)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ContinueStatement))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:opponent)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sender))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:opponent)))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:text))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CONNECT_MESSAGE)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:text))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:GOODBYE_MESSAGE))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sender)(StringLiteral:<STR>)(SimpleName:text)))))(ContinueStatement)))))(VariableDeclarationStatement(SimpleType(SimpleName:MessageEvent))(VariableDeclarationFragment(SimpleName:event)(ClassInstanceCreation(SimpleType(SimpleName:MessageEvent))(SimpleName:sender)(SimpleName:text))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:event)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:exception)))))(ExpressionStatement(MethodInvocation(SimpleName:disconnect)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exception)))))))(ExpressionStatement(MethodInvocation(SimpleName:disconnect)))))))