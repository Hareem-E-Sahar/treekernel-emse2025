(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:handleUpstream)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelHandlerContext))(SimpleName:ctx))(SingleVariableDeclaration(SimpleType(SimpleName:ChannelEvent))(SimpleName:evt))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:handleUpstream)(SimpleName:ctx)(SimpleName:evt)))(IfStatement(InstanceofExpression(SimpleName:evt)(SimpleType(SimpleName:ChannelStateEvent)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ChannelStateEvent))(VariableDeclarationFragment(SimpleName:event)(CastExpression(SimpleType(SimpleName:ChannelStateEvent))(SimpleName:evt))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getState))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:ChannelState.CONNECTED))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getValue))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:resetDelay)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Timer))))(SimpleName:schedule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:GenericProtocolDecoder.DisconnectTask))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:evt))(SimpleName:getChannel)))(SimpleName:resetDelay))))))))))))