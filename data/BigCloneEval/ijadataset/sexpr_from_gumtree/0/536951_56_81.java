(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:renamePromptFile)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:promptId))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:projectName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:extension))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Prompt))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DBManager))(SimpleName:getInstance)))(SimpleName:getPromptByID)(METHOD_INVOCATION_ARGUMENTS(SimpleName:promptId)))))(IfStatement(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DBManagerException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:promptId)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:oldName)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(ParenthesizedExpression(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getProject))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getExtension)))(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getProject)))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getExtension)))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:newName)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:projectName)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:name)(StringLiteral:<STR>)(SimpleName:extension))(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(ParenthesizedExpression(InfixExpression(SimpleName:projectName)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:name)(StringLiteral:<STR>)(SimpleName:extension))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:oldNameFull)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SafletEngine))(SimpleName:getInstance)))(SimpleName:getAudioDirectoryRoot))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:oldName))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:newNameFull)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SafletEngine))(SimpleName:getInstance)))(SimpleName:getAudioDirectoryRoot))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:newName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldNameFull)(SimpleName:newNameFull)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:oldNameFull)))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:newFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:newNameFull))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newFile))(SimpleName:getParentFile))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:mkdirs))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:parent)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:oldFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:oldNameFull))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newFile))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldFile)))(ReturnStatement))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newFile))(SimpleName:getParent))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oldFile))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newFile))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:oldFile)(StringLiteral:<STR>)(SimpleName:newFile)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldFile)(SimpleName:newFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteFileAndEmptyParents)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldFile))))))))))