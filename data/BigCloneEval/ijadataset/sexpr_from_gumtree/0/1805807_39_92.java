(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:messageReceived)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelHandlerContext))(SimpleName:ctx))(SingleVariableDeclaration(SimpleType(SimpleName:MessageEvent))(SimpleName:e))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpRequest))(VariableDeclarationFragment(SimpleName:request)(CastExpression(SimpleType(SimpleName:HttpRequest))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getMethod))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:GET))(Block(ExpressionStatement(MethodInvocation(SimpleName:sendError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctx)(SimpleName:METHOD_NOT_ALLOWED))))(ReturnStatement)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(SimpleName:sanitizeUri)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getUri))))))(IfStatement(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:sendError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctx)(SimpleName:FORBIDDEN))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isHidden))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))))(Block(ExpressionStatement(MethodInvocation(SimpleName:sendError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctx)(SimpleName:NOT_FOUND))))(ReturnStatement)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile)))(Block(ExpressionStatement(MethodInvocation(SimpleName:sendError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctx)(SimpleName:FORBIDDEN))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:raf)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:raf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:fnfe))(Block(ExpressionStatement(MethodInvocation(SimpleName:sendError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctx)(SimpleName:NOT_FOUND))))(ReturnStatement))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:fileLength)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:length))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpResponse))(VariableDeclarationFragment(SimpleName:response)(ClassInstanceCreation(SimpleType(SimpleName:DefaultHttpResponse))(SimpleName:HTTP_1_1)(SimpleName:OK))))(ExpressionStatement(MethodInvocation(SimpleName:setContentLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:response)(SimpleName:fileLength))))(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:ch)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:response))))(VariableDeclarationStatement(SimpleType(SimpleName:ChannelFuture))(VariableDeclarationFragment(SimpleName:writeFuture)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:getPipeline)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:SslHandler)))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:writeFuture)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ChunkedFile))(SimpleName:raf)(NumberLiteral:0)(SimpleName:fileLength)(NumberLiteral:8192)))))))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileRegion))(VariableDeclarationFragment(SimpleName:region)(ClassInstanceCreation(SimpleType(SimpleName:DefaultFileRegion))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:getChannel))(NumberLiteral:0)(SimpleName:fileLength))))(ExpressionStatement(Assignment(SimpleName:writeFuture)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:region)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writeFuture))(SimpleName:addListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ChannelFutureProgressListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:operationComplete)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelFuture))(SimpleName:future))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:region))(SimpleName:releaseExternalResources)))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:operationProgressed)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelFuture))(SimpleName:future))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:amount))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:current))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:total))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:printf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:path)(SimpleName:current)(SimpleName:total)(SimpleName:amount)))))))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isKeepAlive)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writeFuture))(SimpleName:addListener)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ChannelFutureListener.CLOSE))))))))))