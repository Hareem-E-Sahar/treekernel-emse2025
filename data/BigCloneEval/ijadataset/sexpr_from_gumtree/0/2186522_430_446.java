(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:getFeedLock)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lockName)(InfixExpression(SimpleName:indexPath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:FS)(SimpleName:LOCKFILENAME)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:binder))(SimpleName:getId)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:lf)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:lockName))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lf))(SimpleName:exists)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lf))(SimpleName:createNewFile))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fileChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:lf)(StringLiteral:<STR>)))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:fileLock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChannel))(SimpleName:lock))))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(ReturnStatement(BooleanLiteral:false))))))