(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:performRegisterHandlerTasks)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:handledTasks)(NumberLiteral:0)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(SimpleType(SimpleName:AbstractChannelBasedEndpoint))(VariableDeclarationFragment(SimpleName:handler)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:registerQueue))(SimpleName:poll))))(IfStatement(InfixExpression(SimpleName:handler)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(SimpleName:handledTasks))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:handler)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:getChannel)))(SimpleName:isOpen))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:getChannel)))(SimpleName:register)(METHOD_INVOCATION_ARGUMENTS(SimpleName:selector)(QualifiedName:SelectionKey.OP_READ)(SimpleName:handler))))(ExpressionStatement(PostfixExpression(SimpleName:handledRegistractions)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(PostfixExpression(SimpleName:handledTasks)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handler))(SimpleName:getId))(StringLiteral:<STR>)))))))))))))))