(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:setCommandInput)(Block(ExpressionStatement(Assignment(SimpleName:mCommandInput)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:consoleReaderClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:consoleReaderClass)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:consoleInputClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:consoleInputClass)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:jline)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:consoleReaderClass))(SimpleName:newInstance))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType))(VariableDeclarationFragment(SimpleName:constructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:consoleInputClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:consoleReaderClass)))))(IfStatement(InfixExpression(SimpleName:constructor)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:mCommandInput)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:InputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:jline)))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mLogger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(SimpleName:mCommandInput)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:mCommandInput)(ASSIGNMENT_OPERATOR:=)(QualifiedName:System.in))))))))