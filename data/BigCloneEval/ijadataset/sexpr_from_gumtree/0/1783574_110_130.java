(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Link)))(VariableDeclarationFragment(SimpleName:links)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:router))(SimpleName:getLinks))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Link))(SimpleName:link))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:links))(SimpleName:values))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:ping)(ClassInstanceCreation(SimpleType(SimpleName:DefaultMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ping))(SimpleName:setHeader)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Message.TYPE)(QualifiedName:Message.TYPE_ANALYZE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ping))(SimpleName:setHeader)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Message.MESSAGE_NAME)(SimpleName:MESSAGE_NAME_PING))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ping))(SimpleName:setHeader)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Message.TIME_STAMP)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))))))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:link))(SimpleName:getChannel))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:link))(SimpleName:processMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ping)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ProcessorException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:schedule)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:LatencyAnalyzerTask)))(SimpleName:measureInterval)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalStateException))(SimpleName:e))(Block)))))))