(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:synchronized)(SimpleType(SimpleName:RemoteFileState))(SimpleName:storeFetched)(SingleVariableDeclaration(SimpleType(SimpleName:RemoteFileState))(SimpleName:in))(SingleVariableDeclaration(SimpleType(SimpleName:MirrorReturn))(SimpleName:fetched))(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exOrNull))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:in.filename)(StringLiteral:<STR>)))))(IfStatement(SimpleName:trialRun)(ReturnStatement(SimpleName:in)))(VariableDeclarationStatement(SimpleType(SimpleName:Db))(VariableDeclarationFragment(SimpleName:db)(MethodInvocation(SimpleName:getDb))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:begin)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:success)(ParenthesizedExpression(InfixExpression(SimpleName:fetched)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:localFileStateId)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:fetched)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:localFileStateId)(ASSIGNMENT_OPERATOR:=)(QualifiedName:fetched.local.local_file_state_id)))))(IfStatement(SimpleName:success)(Block(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.SUCCESS))))(Block(IfStatement(InfixExpression(SimpleName:exOrNull)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.FAILURE))))(Block(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.ERROR_RETRY)))(ExpressionStatement(PostfixExpression(QualifiedName:in.retry_count)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update))(SimpleName:setInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:in.state))(SimpleName:getId)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update))(SimpleName:setInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)(QualifiedName:in.retry_count))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update))(SimpleName:setLong)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3)(QualifiedName:in.last_modified))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:m)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:exOrNull)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:m)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exOrNull))(SimpleName:getMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update))(SimpleName:setString)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:4)(SimpleName:m))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update))(SimpleName:setObject)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:5)(SimpleName:localFileStateId))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update))(SimpleName:setInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:6)(QualifiedName:in.remote_file_state_id))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:executeUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ps_update))))(ExpressionStatement(MethodInvocation(SimpleName:updateMetadataInTx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))(ReturnStatement(SimpleName:in)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:rollback)))(ThrowStatement(SimpleName:e))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:commitUnless)))))))))