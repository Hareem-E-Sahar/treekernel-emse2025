(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:TrieNode))(SimpleName:binarySearch)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:TrieNode)))(SimpleName:subNodes))(SingleVariableDeclaration(PrimitiveType:char)(SimpleName:c))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:end)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:subNodes))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:end))(Block(ExpressionStatement(Assignment(SimpleName:mid)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:end)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:TrieNode))(VariableDeclarationFragment(SimpleName:tn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:subNodes))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cmpValue)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tn))(SimpleName:getCh))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:c))))(IfStatement(InfixExpression(SimpleName:cmpValue)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement(SimpleName:tn)))(IfStatement(InfixExpression(SimpleName:cmpValue)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(IfStatement(InfixExpression(SimpleName:cmpValue)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))))(ReturnStatement(NullLiteral))))))