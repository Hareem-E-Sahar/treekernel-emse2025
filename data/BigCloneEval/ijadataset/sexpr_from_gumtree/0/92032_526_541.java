(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:open)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:in_list)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:getSelectedValue)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in_list))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:JFileChooser))(VariableDeclarationFragment(SimpleName:projectloader)(ClassInstanceCreation(SimpleType(SimpleName:JFileChooser)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectloader))(SimpleName:showOpenDialog)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JFileChooser.APPROVE_OPTION))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:selected)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectloader))(SimpleName:getSelectedFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Workbench))(SimpleName:loadProject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:selected))(SimpleName:getPath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setVisible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(SimpleName:dispose))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Workbench))(SimpleName:loadProject)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:picdev_projectdir)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:getSelectedValue)))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setVisible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(SimpleName:dispose)))))))))