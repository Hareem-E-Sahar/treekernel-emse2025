(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:cloneMap)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IProject))(SimpleName:project))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:MyBasePool))(SimpleName:pool))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Feature))(SimpleName:f))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:objMap)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IMap.QN_FILE_NAME)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:objMap)(SimpleType(SimpleName:String)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sMap)(CastExpression(SimpleType(SimpleName:String))(SimpleName:objMap))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IFolder))(VariableDeclarationFragment(SimpleName:folder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getFolder)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IMaps.FOLDER)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IFile))(VariableDeclarationFragment(SimpleName:iFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:folder))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sMap)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iFile))(SimpleName:exists)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sDestName)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BaseGeoUtils))(SimpleName:getFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:folder)(ArrayAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sMap))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(NumberLiteral:0))))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(ArrayAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sMap))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(NumberLiteral:1)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fSrc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iFile))(SimpleName:getLocation)))(SimpleName:toFile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fDest)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:folder))(SimpleName:getLocation)))(SimpleName:toFile))(SimpleName:sDestName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fSrc)(SimpleName:fDest))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FeatureUtils))(SimpleName:updateProperty)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pool))(SimpleName:getWorkspace))(SimpleName:f)(QualifiedName:IMap.QN_FILE_NAME)(SimpleName:sDestName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:WorkspaceSync))(SimpleName:sync)(METHOD_INVOCATION_ARGUMENTS(SimpleName:project)(QualifiedName:IResource.DEPTH_INFINITE))))))))