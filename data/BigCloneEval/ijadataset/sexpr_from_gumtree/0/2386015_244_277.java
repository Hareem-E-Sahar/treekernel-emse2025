(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:writeHistLogFile)(SingleVariableDeclaration(SimpleType(SimpleName:ZipInputStream))(SimpleName:oldBackupIn))(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:newBackupOut))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dataDir))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:currentLog)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dataDir)(SimpleName:LOG_FILE_NAME))))(IfStatement(InfixExpression(InfixExpression(SimpleName:oldBackupIn)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentLog))(SimpleName:exists))))(ReturnStatement))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:HIST_LOG_FILE_NAME))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newBackupOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:histLog)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:oldBackupIn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:histLog)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:slurpContents)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oldBackupIn)(BooleanLiteral:false)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:totalSize)(InfixExpression(QualifiedName:histLog.length)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentLog))(SimpleName:length)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:skip)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(SimpleName:totalSize)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:maxHistLogSize)))))))(IfStatement(InfixExpression(SimpleName:skip)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:histLog.length))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newBackupOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:histLog)(SimpleName:skip)(InfixExpression(QualifiedName:histLog.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:skip)))))(ExpressionStatement(Assignment(SimpleName:histLog)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentLog))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentLog))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:currentLogIn)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:currentLog)))))(TryStatement(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:currLogStart)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:100))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:matchLen)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentLogIn))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currLogStart)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lastLogEntryPos)(MethodInvocation(SimpleName:findLastLogEntryStart)(METHOD_INVOCATION_ARGUMENTS(SimpleName:histLog)))))(IfStatement(MethodInvocation(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(SimpleName:histLog)(SimpleName:lastLogEntryPos)(SimpleName:currLogStart)(NumberLiteral:0)(SimpleName:matchLen)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:duplicateLen)(InfixExpression(QualifiedName:histLog.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lastLogEntryPos))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:skip)(InfixExpression(SimpleName:duplicateLen)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:matchLen))))(IfStatement(InfixExpression(SimpleName:skip)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentLogIn))(SimpleName:skip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:skip))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newBackupOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HIST_SEPARATOR))(SimpleName:getBytes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newBackupOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currLogStart)(NumberLiteral:0)(SimpleName:matchLen))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentLogIn)(SimpleName:newBackupOut)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentLogIn))(SimpleName:close)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newBackupOut))(SimpleName:closeEntry)))))))