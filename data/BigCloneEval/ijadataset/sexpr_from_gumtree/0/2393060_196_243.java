(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:writeTo)(SingleVariableDeclaration(SimpleType(SimpleName:OutputStream))(SimpleName:os))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(SimpleName:m_head)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:EOFException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:interrupt)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:interrupted))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Trace))(SimpleName:isGIOPHeaderOK)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:m_head.m_fBuffer)(NumberLiteral:0))))(IfStatement(SimpleName:m_read_write_mode)(Block(WhileStatement(InfixExpression(SimpleName:m_head)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:m_tail))(Block(IfStatement(InfixExpression(QualifiedName:m_head.m_fMode)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Scrap.SCRAP_MODE_READONLY))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:tmp)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(QualifiedName:m_head.m_fLength))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:m_head.m_fBuffer)(QualifiedName:m_head.m_fOffset)(SimpleName:tmp)(NumberLiteral:0)(QualifiedName:m_head.m_fLength))))(ExpressionStatement(Assignment(QualifiedName:m_head.m_fBuffer)(ASSIGNMENT_OPERATOR:=)(SimpleName:tmp)))(ExpressionStatement(Assignment(QualifiedName:m_head.m_fOffset)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(QualifiedName:m_head.m_fMode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Scrap.SCRAP_MODE_NORMAL)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:d)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:m_head.m_fLength))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:m_head.m_fBuffer)(InfixExpression(QualifiedName:m_head.m_fOffset)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:d))(InfixExpression(QualifiedName:m_head.m_fLength)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:d)))))(BreakStatement))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedIOException))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:interrupt)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:ex.bytesTransferred))))))))(ExpressionStatement(Assignment(SimpleName:m_head)(ASSIGNMENT_OPERATOR:=)(QualifiedName:m_head.m_fNext))))))(Block(WhileStatement(InfixExpression(SimpleName:m_head)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:m_tail))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:d)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:m_head.m_fLength))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:m_head.m_fBuffer)(InfixExpression(QualifiedName:m_head.m_fOffset)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:d))(InfixExpression(QualifiedName:m_head.m_fLength)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:d)))))(BreakStatement))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedIOException))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:interrupt)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:ex.bytesTransferred))))))))(ExpressionStatement(Assignment(SimpleName:m_head)(ASSIGNMENT_OPERATOR:=)(QualifiedName:m_head.m_fNext)))))))(ExpressionStatement(Assignment(SimpleName:m_head)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:m_avail)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(SimpleName:interrupt)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:interrupt)))))))))