(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:double)(SimpleName:bisection)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Function))(SimpleName:f))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x1))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x2))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:tol))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxCount)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x1))))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:tol))))(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2))))))))(ExpressionStatement(Assignment(SimpleName:maxCount)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(SimpleName:MAX_ITERATIONS)(SimpleName:maxCount)))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x1))))(VariableDeclarationFragment(SimpleName:y2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x2)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:y2))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NumericsLog))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:count)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement(QualifiedName:Double.NaN))))(WhileStatement(InfixExpression(SimpleName:count)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:maxCount))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:relativePrecision)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x2))))(SimpleName:x)))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:tol))(Block(ReturnStatement(SimpleName:x))))(IfStatement(InfixExpression(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:y1))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(SimpleName:y))))(Block(ExpressionStatement(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))(ExpressionStatement(Assignment(SimpleName:y2)(ASSIGNMENT_OPERATOR:=)(SimpleName:y)))))(ExpressionStatement(PostfixExpression(SimpleName:count)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NumericsLog))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:count)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement(QualifiedName:Double.NaN))))))