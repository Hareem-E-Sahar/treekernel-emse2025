(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:createInputStream)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:projectFile))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:hasXmlTag)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:projectFile)))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:readLine))))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:line))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:projectFile)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:hasXmlTag)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:close)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:buffer)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hasXmlTag))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:getBytes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:EdaVersionedProjectHandler.Version.VERSION0))(SimpleName:getDtd))(StringLiteral:<STR>))))(SimpleName:getBytes)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fileInput)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:projectFile))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:tmp)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:4096))))))(DoStatement(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytesRead)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileInput))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmp)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:bytesRead))(Block(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmp)(NumberLiteral:0)(SimpleName:bytesRead)))))(BooleanLiteral:true)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileInput))(SimpleName:close)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteArrayInputStream))(VariableDeclarationFragment(SimpleName:inputStream)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:toByteArray)))))(ReturnStatement(SimpleName:inputStream))))))