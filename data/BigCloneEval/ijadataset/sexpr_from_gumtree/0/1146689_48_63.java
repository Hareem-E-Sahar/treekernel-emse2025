(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:open)(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.File))(SimpleName:file))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:isDesktopSupported)))(Block(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:Desktop))(VariableDeclarationFragment(SimpleName:desktop)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:getDesktop))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:desktop))(SimpleName:isSupported)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Action.OPEN))))(Block(ReturnStatement(BooleanLiteral:false))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:desktop))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exp))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logs))(SimpleName:exception)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exp))))(ReturnStatement(BooleanLiteral:false)))))))))