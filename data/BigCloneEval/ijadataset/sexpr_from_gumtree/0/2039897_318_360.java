(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:urlToFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:urlAsString))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:localPath))(SingleVariableDeclaration(SimpleType(SimpleName:ProgressBar))(SimpleName:progress))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:f)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:con)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedOutputStream))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:progress)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progress))(SimpleName:publish)(METHOD_INVOCATION_ARGUMENTS(SimpleName:localPath))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlAsString))))(ExpressionStatement(Assignment(SimpleName:con)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:con))))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:appProps.app)(StringLiteral:<STR>)(QualifiedName:appProps.version)))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:is))))(ExpressionStatement(Assignment(SimpleName:f)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:localPath))))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(SimpleName:f))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(IfStatement(InfixExpression(SimpleName:progress)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(PostfixExpression(QualifiedName:progress.totalDone)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progress))(SimpleName:progress)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:localPath))(SimpleName:e)))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block)))))))))