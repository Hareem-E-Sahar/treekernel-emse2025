(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:final)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:retries)(NumberLiteral:0)))(IfStatement(InfixExpression(InfixExpression(SimpleName:tester)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:encrypt)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:end)(BooleanLiteral:false)))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:end))(Block(ExpressionStatement(Assignment(SimpleName:lastUpdate)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Date))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))))(IfStatement(InfixExpression(SimpleName:retries)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:br.nic.connector.general.Constants.DEFAULT_MAXTESTTRIES))(Block(ExpressionStatement(Assignment(SimpleName:retries)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:currTestElement)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tester))(SimpleName:finishTestElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currTestElement)(NullLiteral)))))))(ExpressionStatement(Assignment(SimpleName:retries)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:1)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:currTestElement)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(SimpleName:testThisElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currTestElement)))))(ExpressionStatement(Assignment(SimpleName:currTestElement)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tester))(SimpleName:finishTestElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currTestElement)(SimpleName:result)))))(ExpressionStatement(Assignment(SimpleName:retries)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SimpleLog))(SimpleName:getInstance)))(SimpleName:writeException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)(NumberLiteral:3))))(IfStatement(InfixExpression(SimpleName:currTestElement)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SimpleLog))(SimpleName:getInstance)))(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SimpleLog))(SimpleName:getInstance)))(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(InstanceofExpression(SimpleName:currTestElement)(ArrayType(SimpleType(SimpleName:Object))(Dimension)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(ParenthesizedExpression(CastExpression(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:currTestElement)))(NumberLiteral:0)))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currTestElement))(SimpleName:toString)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:StackOverflowError))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SimpleLog))(SimpleName:getInstance)))(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:tester.type)(StringLiteral:<STR>)(MethodInvocation(SimpleName:testElementString))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ThreadDeath))(SimpleName:err))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tester))(SimpleName:writeTestData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currTestElement)(NullLiteral))))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:testElementString)))))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:cleanup))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tester))(SimpleName:finishThread)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)(BooleanLiteral:true))))))))