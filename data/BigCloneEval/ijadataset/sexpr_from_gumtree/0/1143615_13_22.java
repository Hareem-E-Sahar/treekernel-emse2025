(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(ArrayType(PrimitiveType:short)(Dimension))(SimpleName:createSamples)(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:samples))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:short)(Dimension))(VariableDeclarationFragment(SimpleName:sampleShort)(ArrayCreation(ArrayType(PrimitiveType:short)(Dimension(InfixExpression(QualifiedName:samples.length)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:temp)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:2))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:samples.length))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:2))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:temp)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:samples)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:temp)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:samples)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:sampleShort)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TypeConverter))(SimpleName:byteArrayToShort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:temp)))))))(ReturnStatement(SimpleName:sampleShort))))))