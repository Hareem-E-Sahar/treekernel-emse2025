(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:copyAllTo)(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.File))(SimpleName:origin))(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.File))(SimpleName:destiny))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:copied)(BooleanLiteral:true)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origin))(SimpleName:exists)))(Block(ReturnStatement(BooleanLiteral:false))))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origin))(SimpleName:isDirectory))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.File))(SimpleName:childOrigin))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:origin))(SimpleName:listFiles))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:childOrigin))(SimpleName:isDirectory))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:childDestiny)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destiny))(SimpleName:getAbsolutePath))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:childOrigin))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:copied)(ASSIGNMENT_OPERATOR:&=)(MethodInvocation(SimpleName:copyAllTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:childOrigin)(SimpleName:childDestiny))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:childDestiny)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destiny))(SimpleName:getAbsolutePath))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:childOrigin))(SimpleName:getName)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:copiedAux)(MethodInvocation(SimpleName:copyTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:childOrigin)(SimpleName:childDestiny)))))(ExpressionStatement(Assignment(SimpleName:copied)(ASSIGNMENT_OPERATOR:&=)(SimpleName:copiedAux)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:copiedAux))(Block)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:copied)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(ReturnStatement(SimpleName:copied))))))