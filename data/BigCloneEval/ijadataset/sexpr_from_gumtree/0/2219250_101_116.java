(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:binsearch)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:num))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:left)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:right)(InfixExpression(QualifiedName:dividers.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:-)(InfixExpression(SimpleName:left)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(WhileStatement(InfixExpression(SimpleName:left)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:right))(Block(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:left)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:dividers)(SimpleName:index)))(Block(ReturnStatement(SimpleName:num)))(IfStatement(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:>)(ArrayAccess(SimpleName:dividers)(SimpleName:index)))(Block(ExpressionStatement(Assignment(SimpleName:left)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(IfStatement(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:dividers)(SimpleName:index)))(Block(ExpressionStatement(Assignment(SimpleName:right)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))))(ReturnStatement(ArrayAccess(SimpleName:dividers)(SimpleName:left)))))))