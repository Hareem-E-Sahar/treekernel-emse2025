(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:loadDemo)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:classname))(Block(ExpressionStatement(MethodInvocation(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:classname)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:DemoModule))(VariableDeclarationFragment(SimpleName:demo)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:demoClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classname)))))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:demoConstructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:demoClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension))(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:SwingSet2)))))))))(ExpressionStatement(Assignment(SimpleName:demo)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:DemoModule))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:demoConstructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(ThisExpression))))))))(ExpressionStatement(MethodInvocation(SimpleName:addDemo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:demo)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:classname))))))))))))