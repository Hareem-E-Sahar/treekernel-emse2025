(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:copy)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:from))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:to))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:isDirectory))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:mkdirs)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:name))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:list))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:from)(SimpleName:to)(SimpleName:name))))(Block(IfStatement(SimpleName:COPY_DEBUG)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(SimpleName:from)(StringLiteral:<STR>)(SimpleName:to)))))))(ReturnStatement(BooleanLiteral:false)))))))(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:is)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:from))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:ifc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:getChannel))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:os)(MethodInvocation(SimpleName:makeFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:to)))))(IfStatement(SimpleName:USE_NIO)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:ofc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ofc))(SimpleName:transferFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ifc)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:length))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:pipe)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)(SimpleName:os)(BooleanLiteral:false))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(IfStatement(SimpleName:COPY_DEBUG)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:from)(StringLiteral:<STR>)(SimpleName:to)(StringLiteral:<STR>)(SimpleName:ex)))))))(ReturnStatement(BooleanLiteral:false)))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:time)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:lastModified))))(ExpressionStatement(MethodInvocation(SimpleName:setLastModified)(METHOD_INVOCATION_ARGUMENTS(SimpleName:to)(SimpleName:time))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:newtime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:lastModified))))(IfStatement(SimpleName:COPY_DEBUG)(Block(IfStatement(InfixExpression(SimpleName:newtime)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:time))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:to)(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Date))(SimpleName:time))(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Date))(SimpleName:newtime))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:setLastModified)(METHOD_INVOCATION_ARGUMENTS(SimpleName:time))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:morenewtime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:lastModified))))(ReturnStatement(BooleanLiteral:false)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:to)(StringLiteral:<STR>)))))))))(ReturnStatement(InfixExpression(SimpleName:time)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:newtime)))))))