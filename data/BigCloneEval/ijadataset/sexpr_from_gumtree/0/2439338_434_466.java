(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:Object))(SimpleName:readResolve)(Block(IfStatement(InfixExpression(SimpleName:words)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:words)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Double)))))))(IfStatement(InfixExpression(SimpleName:multipliers)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:multipliers)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Multiplier)))))))(IfStatement(InfixExpression(SimpleName:conjunctions)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:conjunctions)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Boolean)))))))(IfStatement(InfixExpression(SimpleName:decimalSymbol)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:decimalSymbol)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:digitGroupingSymbol)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:digitGroupingSymbol)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:imports)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:imports)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:URL))(SimpleType(SimpleName:String)))))))(Block(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(QualifiedName:Map.Entry))(SimpleType(SimpleName:URL))(SimpleType(SimpleName:String)))(SimpleName:entry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:imports))(SimpleName:entrySet))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getKey))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:encoding)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getValue))))(VariableDeclarationStatement(SimpleType(SimpleName:XStream))(VariableDeclarationFragment(SimpleName:xstream)(MethodInvocation(SimpleName:getXStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getClassLoader))))))(VariableDeclarationStatement(SimpleType(SimpleName:BomStrippingInputStreamReader))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BomStrippingInputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))(SimpleName:encoding))))(VariableDeclarationStatement(SimpleType(SimpleName:Config))(VariableDeclarationFragment(SimpleName:c)(CastExpression(SimpleType(SimpleName:Config))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xstream))(SimpleName:fromXML)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:words))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:c.words))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:multipliers))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:c.multipliers))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conjunctions))(SimpleName:putAll)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:c.conjunctions)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block))(Block(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))))))))(ReturnStatement(ThisExpression))))))