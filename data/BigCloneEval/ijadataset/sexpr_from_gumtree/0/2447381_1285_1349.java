(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:setupHiddenLayer)(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:tok)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:m_hiddenLayers)(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:val)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:prev)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:num)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tok))(SimpleName:countTokens))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:c)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:noa)(NumberLiteral:0)))(InfixExpression(SimpleName:noa)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:num))(PostfixExpression(SimpleName:noa)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tok))(SimpleName:nextToken)))(SimpleName:trim))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:m_numAttributes)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:m_numClasses)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(SimpleName:m_numAttributes))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(SimpleName:m_numClasses))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:m_numAttributes)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:m_numClasses)))))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))(SimpleName:intValue)))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nob)(NumberLiteral:0)))(InfixExpression(SimpleName:nob)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:val))(PostfixExpression(SimpleName:nob)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NeuralNode))(VariableDeclarationFragment(SimpleName:temp)(ClassInstanceCreation(SimpleType(SimpleName:NeuralNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m_nextId)))(SimpleName:m_random)(SimpleName:m_sigmoidUnit))))(ExpressionStatement(PostfixExpression(SimpleName:m_nextId)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:setX)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(InfixExpression(NumberLiteral:.5)(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(SimpleName:num)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:noa))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:.25)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:setY)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:nob)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1.0)))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(SimpleName:addNode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:temp))))(IfStatement(InfixExpression(SimpleName:noa)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:noc)(InfixExpression(QualifiedName:m_neuralNodes.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:nob)(NumberLiteral:1)(SimpleName:prev))))(InfixExpression(SimpleName:noc)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:m_neuralNodes.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:nob)(NumberLiteral:1)))(PostfixExpression(SimpleName:noc)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NeuralConnection))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:m_neuralNodes)(SimpleName:noc))(SimpleName:temp))))))))))(ExpressionStatement(Assignment(SimpleName:prev)(ASSIGNMENT_OPERATOR:=)(SimpleName:val)))))(ExpressionStatement(Assignment(SimpleName:tok)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:m_hiddenLayers)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tok))(SimpleName:nextToken))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:m_numAttributes)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:m_numClasses)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(SimpleName:m_numAttributes))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(SimpleName:m_numClasses))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:m_numAttributes)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:m_numClasses)))))(Block(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))(SimpleName:intValue)))))))))(IfStatement(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:noa)(NumberLiteral:0)))(InfixExpression(SimpleName:noa)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:m_numAttributes))(PostfixExpression(SimpleName:noa)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nob)(NumberLiteral:0)))(InfixExpression(SimpleName:nob)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:m_numClasses))(PostfixExpression(SimpleName:nob)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NeuralConnection))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:m_inputs)(SimpleName:noa))(ArrayAccess(SimpleName:m_neuralNodes)(SimpleName:nob))))))))))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:noa)(NumberLiteral:0)))(InfixExpression(SimpleName:noa)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:m_numAttributes))(PostfixExpression(SimpleName:noa)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nob)(SimpleName:m_numClasses)))(InfixExpression(SimpleName:nob)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:m_numClasses)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:val)))(PostfixExpression(SimpleName:nob)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NeuralConnection))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:m_inputs)(SimpleName:noa))(ArrayAccess(SimpleName:m_neuralNodes)(SimpleName:nob)))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:noa)(InfixExpression(QualifiedName:m_neuralNodes.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:prev))))(InfixExpression(SimpleName:noa)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:m_neuralNodes.length))(PostfixExpression(SimpleName:noa)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nob)(NumberLiteral:0)))(InfixExpression(SimpleName:nob)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:m_numClasses))(PostfixExpression(SimpleName:nob)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NeuralConnection))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:m_neuralNodes)(SimpleName:noa))(ArrayAccess(SimpleName:m_neuralNodes)(SimpleName:nob)))))))))))))))