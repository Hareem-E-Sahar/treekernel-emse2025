(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:public)(PrimitiveType:void)(SimpleName:launch)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ILaunchConfiguration))(SimpleName:configuration))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:mode))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ILaunch))(SimpleName:launch))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IProgressMonitor))(SimpleName:monitor))(SimpleType(SimpleName:CoreException))(Block(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:notNull)(METHOD_INVOCATION_ARGUMENTS(SimpleName:configuration))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:notNull)(METHOD_INVOCATION_ARGUMENTS(SimpleName:monitor)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:projectName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.NEXOPEN_PROJECT_NAME)(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IProject))(VariableDeclarationFragment(SimpleName:prj)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JavaCore))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourcesPlugin))(SimpleName:getWorkspace)))(SimpleName:getRoot)))))(SimpleName:getJavaProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectName))))(SimpleName:getProject))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NexOpenProjectUtils))(SimpleName:isNexOpenProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:prj)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IFile))(VariableDeclarationFragment(SimpleName:pom)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pom))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ContentHandlerTemplate))(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pom)(ClassInstanceCreation(SimpleType(SimpleName:ContentHandlerCallback))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:processHandle)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Document))(SimpleName:doc))(Block(ExpressionStatement(MethodInvocation(SimpleName:handleRootProfile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:doc)))))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IFile))(VariableDeclarationFragment(SimpleName:bpom)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bpom))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ContentHandlerTemplate))(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bpom)(ClassInstanceCreation(SimpleType(SimpleName:ContentHandlerCallback))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:processHandle)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Document))(SimpleName:doc))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:handleBusinessProfile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:doc)(SimpleName:configuration)(SimpleName:prj)))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CoreException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:isInfoEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e)))))))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:output)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:props)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dialectName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.HIBERNATE_DIALECT)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:support))(SimpleName:getDialectClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dialectName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.JDBC_DRIVER)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.JDBC_URL)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.JDBC_USERNAME)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.JDBC_PASSWORD)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:store)(METHOD_INVOCATION_ARGUMENTS(SimpleName:output)(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IFile))(VariableDeclarationFragment(SimpleName:props_file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props_file))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props_file))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:toByteArray)))(BooleanLiteral:true)(SimpleName:monitor)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props_file))(SimpleName:setContents)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:toByteArray)))(BooleanLiteral:true)(BooleanLiteral:false)(SimpleName:monitor)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e)))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NexOpenProjectUtils))(SimpleName:is04xProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:prj)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IFile))(VariableDeclarationFragment(SimpleName:appContext)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appContext))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ContentHandlerTemplate))(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:appContext)(ClassInstanceCreation(SimpleType(SimpleName:ContentHandlerCallback))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:processHandle)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Document))(SimpleName:doc))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:root)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:doc))(SimpleName:getDocumentElement))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Element)))(VariableDeclarationFragment(SimpleName:beans)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLUtils))(SimpleName:getChildElementsByTagName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:root)(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Element))(SimpleName:bean))(SimpleName:beans)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:id)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bean))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id)))(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pkgName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.NEXOPEN_PACKAGE)(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:className)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder))(SimpleName:pkgName)))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:toString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bean))(SimpleName:setAttribute)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:className))))(BreakStatement))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CoreException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:isInfoEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e)))))))))))))))))))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dialectName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.HIBERNATE_DIALECT)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:support))(SimpleName:isReverseEngineeringFileNeeded)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dialectName)))(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IFile))(VariableDeclarationFragment(SimpleName:revengFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:support))(SimpleName:getReversEngineeringFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dialectName))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:revengFile))(SimpleName:exists)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Bundle))(VariableDeclarationFragment(SimpleName:bundle)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HibernateActivator))(SimpleName:getDefault)))(SimpleName:getBundle))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Path))(VariableDeclarationFragment(SimpleName:src)(ClassInstanceCreation(SimpleType(SimpleName:Path))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:support))(SimpleName:getReversEngineeringFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dialectName)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileLocator))(SimpleName:openStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bundle)(SimpleName:src)(BooleanLiteral:false)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:baos))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:str)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toString))))(ExpressionStatement(Assignment(SimpleName:str)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:str))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:INexOpenLaunchConfigurationConstants.JDBC_USERNAME)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:revengFile))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:str))(SimpleName:getBytes)))(BooleanLiteral:true)(NullLiteral)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:isInfoEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e)))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IResource))(VariableDeclarationFragment(SimpleName:resource)(CastExpression(SimpleType(SimpleName:IResource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:getAdapter)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:IResource))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:QualifiedName))(VariableDeclarationFragment(SimpleName:qn)(ClassInstanceCreation(SimpleType(SimpleName:QualifiedName))(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:profile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resource))(SimpleName:getPersistentProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:qn)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resource))(SimpleName:setPersistentProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:qn)(StringLiteral:<STR>))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InstallProjectAction))(VariableDeclarationFragment(SimpleName:action)(ClassInstanceCreation(SimpleType(SimpleName:InstallProjectAction)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:scheduleJob)(METHOD_INVOCATION_ARGUMENTS(SimpleName:prj)(SimpleName:monitor))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:refreshLocal)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)(SimpleName:monitor)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prj))(SimpleName:setPersistentProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:qn)(SimpleName:profile)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:prj)))))))))))