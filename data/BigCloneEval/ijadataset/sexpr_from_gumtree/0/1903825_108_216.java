(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:PostConstruct))(Modifier:public)(PrimitiveType:void)(SimpleName:initialize)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(InfixExpression(SimpleName:auSummaryList)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummaryList))(SimpleName:isEmpty)))(Block(ExpressionStatement(Assignment(SimpleName:auSummaryList)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auOverviewTableFacade))(SimpleName:getNewerVerifiedAus)(METHOD_INVOCATION_ARGUMENTS(SimpleName:N_AUS_FOR_CHART)))))(IfStatement(InfixExpression(SimpleName:auSummaryList)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MySQLDAOFactory))(VariableDeclarationFragment(SimpleName:daof)(CastExpression(SimpleType(SimpleName:MySQLDAOFactory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DAOFactory))(SimpleName:getDAOFactory)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:DAOFactory.DBvendor.MySQL))))))(VariableDeclarationStatement(SimpleType(SimpleName:MySQLAuOverviewDAO))(VariableDeclarationFragment(SimpleName:maodao)(CastExpression(SimpleType(SimpleName:MySQLAuOverviewDAO))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:daof))(SimpleName:getAuOverviewDAO)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:maodao))(SimpleName:createTable)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auOverviewTableFacade))(SimpleName:isTableExistent)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:auSummaryList)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auOverviewTableFacade))(SimpleName:getNewerVerifiedAus)(METHOD_INVOCATION_ARGUMENTS(SimpleName:N_AUS_FOR_CHART)))))))))))(ExpressionStatement(Assignment(SimpleName:geounitcodeToRegionCodeTable)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:geographicDataServiceBean))(SimpleName:getGeounitcodeToRegionCodeTable))))(ExpressionStatement(Assignment(SimpleName:regionCodeToLabeTable)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:geographicDataServiceBean))(SimpleName:getRegionCodeToLabeTable))))(ExpressionStatement(Assignment(SimpleName:auNameToAuShortNameTable)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auAttributesFacade))(SimpleName:getAuNameToAuShortNameTable))))(ExpressionStatement(Assignment(SimpleName:ipAddressToRegionCodeTable)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hostAttributesFacade))(SimpleName:getIpAddressToRegionCodeTable))))(ExpressionStatement(Assignment(SimpleName:lockssBoxList)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockssBoxTableFacade))(SimpleName:findAll))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:regionCodeToLabeTableNew)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:TreeMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:String))))))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(QualifiedName:Map.Entry))(SimpleType(SimpleName:String))(SimpleType(SimpleName:String)))(SimpleName:entry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:regionCodeToLabeTable))(SimpleName:entrySet))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getKey))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:90))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:regionCodeToLabeTableNew))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getKey))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getValue)))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:regionCodeSet)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:TreeSet))(SimpleType(SimpleName:String)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:regionCodeToLabeTableNew))(SimpleName:values)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:regionCodeSet)))))(IfStatement(InfixExpression(SimpleName:auSummaryList)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:AuOverviewTable))(SimpleName:auSummary))(SimpleName:auSummaryList)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getPollId))))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:verifiedReplicas)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuNVerifiedReplicas))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuNVerifiedReplicas))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:verifiedReplicas)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummaryDataList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AUSummaryDataForChart))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuNReplicas))(SimpleName:verifiedReplicas)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auNameToAuShortNameTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getPollId))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:replicaData))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AUReplicaData))(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auNameToAuShortNameTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))))))))(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:pollList)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:successfulPollReplicaIpFacade))(SimpleName:findPollByPollId)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getPollId))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:pollList)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:pollList)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pollList))(SimpleName:isEmpty)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:replicaData))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AUReplicaData))(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auNameToAuShortNameTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))))))))(ContinueStatement)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:ipList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:SuccessfulPollReplicaIp))(SimpleName:row))(SimpleName:pollList)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:row))(SimpleName:getIpAddress))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:regionCode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ipAddressToRegionCodeTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:row))(SimpleName:getIpAddress))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:regionCode)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:regionLabel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:regionCodeToLabeTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:regionCode)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:regionLabel)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isBlank)(METHOD_INVOCATION_ARGUMENTS(SimpleName:regionLabel)))(Block(ExpressionStatement(Assignment(SimpleName:regionLabel)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ipList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:regionLabel))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ipList)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:ipList)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ipList))(SimpleName:isEmpty)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:replicaData))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AUReplicaData))(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auNameToAuShortNameTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))))))))(ContinueStatement)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nonUS)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:label))(SimpleName:regionCodeSet)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:frequency)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ipList)(SimpleName:label)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:label))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:+=)(SimpleName:nonUS)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:label)(SimpleName:count)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:label)(SimpleName:count))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:freqTable)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auNameToLocationListTable))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))(SimpleName:ipList))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName)))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:northeast)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:northeast)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:midwest)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:midwest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:south)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:south)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:west)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:west)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:others)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:others)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:freqTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:replicaData))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AUReplicaData))(SimpleName:northeast)(SimpleName:midwest)(SimpleName:south)(SimpleName:west)(SimpleName:others)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auNameToAuShortNameTable))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auSummary))(SimpleName:getAuName))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:replicaData)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:DashboardManagedBean))))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:safePLNMemberMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DefaultStreamedContent))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:ex)))))))))))