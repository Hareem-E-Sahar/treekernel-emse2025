(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:exportSolvers)(SingleVariableDeclaration(SimpleType(SimpleName:Tasks))(SimpleName:task))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ZipOutputStream))(SimpleName:stream))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Solver)))(SimpleName:solvers))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:SQLException))(SimpleType(SimpleName:JAXBException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:setOperationName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:current)(NumberLiteral:1)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Solver))(SimpleName:s))(SimpleName:solvers)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:current)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:solvers))(SimpleName:size))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:setTaskProgress)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:current)(INFIX_EXPRESSION_OPERATOR:/)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:solvers))(SimpleName:size)))))))(ExpressionStatement(Assignment(QualifiedName:s.parameters)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ParameterDAO))(SimpleName:getParameterFromSolverId)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:getId))))))(ExpressionStatement(Assignment(QualifiedName:s.graph)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ParameterGraphDAO))(SimpleName:loadParameterGraph)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:getId))(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SolverBinariesDAO))(SimpleName:writeSolverBinariesToStream)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ObjectOutputStream))(SimpleName:stream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:getSolverBinaries)))))(ExpressionStatement(PostfixExpression(SimpleName:current)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:setTaskProgress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0.f))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:writeSolversToStream)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ObjectOutputStream))(SimpleName:stream))(SimpleName:solvers))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Solver))(SimpleName:s))(SimpleName:solvers)(Block(ExpressionStatement(Assignment(QualifiedName:s.parameters)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(QualifiedName:s.graph)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))