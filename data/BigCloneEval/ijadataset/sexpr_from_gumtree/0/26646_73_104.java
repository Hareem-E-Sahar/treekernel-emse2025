(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:convertInternal)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:inputStream))(SingleVariableDeclaration(SimpleType(SimpleName:DocumentFormat))(SimpleName:inputFormat))(SingleVariableDeclaration(SimpleType(SimpleName:OutputStream))(SimpleName:outputStream))(SingleVariableDeclaration(SimpleType(SimpleName:DocumentFormat))(SimpleName:outputFormat))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:inputFile)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outputFile)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inputFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputFormat))(SimpleName:getFileExtension)))))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:inputFileStream)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inputFileStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:inputFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream)(SimpleName:inputFileStream)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:closeQuietly)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputFileStream))))))(ExpressionStatement(Assignment(SimpleName:outputFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFormat))(SimpleName:getFileExtension)))))))(ExpressionStatement(MethodInvocation(SimpleName:convert)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputFile)(SimpleName:inputFormat)(SimpleName:outputFile)(SimpleName:outputFormat))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:outputFileStream)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:outputFileStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:outputFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outputFileStream)(SimpleName:outputStream)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:closeQuietly)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outputFileStream)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioException))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenOfficeException))(StringLiteral:<STR>)(SimpleName:ioException)))))(Block(IfStatement(InfixExpression(SimpleName:inputFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputFile))(SimpleName:delete)))))(IfStatement(InfixExpression(SimpleName:outputFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:delete)))))))))))