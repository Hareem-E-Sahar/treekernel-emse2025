(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testGetWeekOfYear01012010)(SimpleType(SimpleName:ParseException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:SimpleDateFormat))(VariableDeclarationFragment(SimpleName:formatter)(ClassInstanceCreation(SimpleType(SimpleName:SimpleDateFormat))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dateString)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:date)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:formatter))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dateString)))))(VariableDeclarationStatement(SimpleType(SimpleName:GregorianCalendar))(VariableDeclarationFragment(SimpleName:weekTest)(ClassInstanceCreation(SimpleType(SimpleName:GregorianCalendar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:weekTest))(SimpleName:setFirstDayOfWeek)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MONDAY))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:weekTest))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:date))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:weekTest))(SimpleName:setMinimalDaysInFirstWeek)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:4))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:week)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:WeekCounter))(SimpleName:getWeekOfYear)(METHOD_INVOCATION_ARGUMENTS(SimpleName:date)(QualifiedName:Calendar.MONDAY)(NumberLiteral:4)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:real)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:weekTest))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.WEEK_OF_YEAR)))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:formatter))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:date))))(SimpleName:real)(SimpleName:week))))(VariableDeclarationStatement(SimpleType(QualifiedName:eu.future.earth.gwt.emul.java.util.GregorianCalendar))(VariableDeclarationFragment(SimpleName:emul)(ClassInstanceCreation(SimpleType(QualifiedName:eu.future.earth.gwt.emul.java.util.GregorianCalendar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:emul))(SimpleName:setFirstDayOfWeek)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MONDAY))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:emul))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:date))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:emul))(SimpleName:setMinimalDaysInFirstWeek)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:4))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:emulTest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:emul))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.WEEK_OF_YEAR)))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:formatter))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:date))))(SimpleName:real)(SimpleName:emulTest))))))))