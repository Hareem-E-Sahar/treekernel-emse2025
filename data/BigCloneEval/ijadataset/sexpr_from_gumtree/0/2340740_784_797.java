(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:dumpFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:repository))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:copy))(Block(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:copy))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:copy))(SimpleName:delete))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:copy))))))(ExpressionStatement(MethodInvocation(SimpleName:printFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:repository))))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:ZipArchive))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repository))(SimpleName:getPath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copyFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:repository)(SimpleName:copy))))(ExpressionStatement(MethodInvocation(SimpleName:printFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:copy))))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:ZipArchive))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:copy))(SimpleName:getPath)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))