(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:engineDoFinal)(Block(IfStatement(SimpleName:initOnly)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:java.lang.IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(SimpleName:firstPass)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inner))))))(ExpressionStatement(Assignment(SimpleName:firstPass)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:firstPass))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:digest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:digest))))(IfStatement(SimpleName:preInit)(Block(ExpressionStatement(Assignment(SimpleName:preInit)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:macSupport))(SimpleName:secondaryInit)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outer)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outer))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digest))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digest)(NumberLiteral:0)(QualifiedName:digest.length)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:DigestException))(SimpleName:ex))(Block)))(ReturnStatement(ConditionalExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:truncated))(SimpleName:digest)(MethodInvocation(SimpleName:getTruncatedDigest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digest)))))))))