(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ArrayType(PrimitiveType:int)(Dimension))(SimpleName:decaleMiniListe)(SingleVariableDeclaration(ArrayType(PrimitiveType:int)(Dimension))(SimpleName:liste))(Block(IfStatement(InfixExpression(QualifiedName:liste.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:9))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:45)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:temp)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:8))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:temp)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:liste)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:liste)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:liste)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:liste)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(SimpleName:temp)))))(ReturnStatement(SimpleName:liste))))))