(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:String))(SimpleName:processScriptReferences)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:body))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SCRIPT_REFERENCE))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:body)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:find))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:scriptBody)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:src)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:group)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CLASSPTAH_PREFIX)))(Block(ExpressionStatement(Assignment(SimpleName:src)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CLASSPTAH_PREFIX))(SimpleName:length))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getClassLoader)))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)))))(IfStatement(InfixExpression(SimpleName:is)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src))))))(Block(ExpressionStatement(Assignment(SimpleName:scriptBody)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:INLINE_PREFIX)))(Block(ExpressionStatement(Assignment(SimpleName:src)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:INLINE_PREFIX))(SimpleName:length))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:src))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:scriptBody)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:getClass)))(SimpleName:getName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:getMessage))(StringLiteral:<STR>)))))))(Block(IfStatement(InfixExpression(SimpleName:is)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:scontrolsDirectory)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:src)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:exists))(Block(ExpressionStatement(Assignment(SimpleName:scriptBody)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:readFileToString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f))))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getCanonicalPath))))))))))))(IfStatement(InfixExpression(SimpleName:scriptBody)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:appendReplacement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:escapeReplacement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:scriptBody)))(StringLiteral:<STR>)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:appendTail)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toString)))))))