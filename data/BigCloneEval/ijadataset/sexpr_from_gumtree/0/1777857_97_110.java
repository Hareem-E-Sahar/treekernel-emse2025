(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:getMessageDigest)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:text))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:algorithm))(Block(TryStatement(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:digesta)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:algorithm))))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:text))(SimpleName:getBytes))))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:sb)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:str)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:digesta.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:str)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:0xFF)(INFIX_EXPRESSION_OPERATOR:&)(ArrayAccess(SimpleName:digesta)(SimpleName:i)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:str))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1)))(InfixExpression(QualifiedName:StringConstants.ZERO)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:str))(SimpleName:str)))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:toString))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CustomRuntimeException))(SimpleName:e))))))))))