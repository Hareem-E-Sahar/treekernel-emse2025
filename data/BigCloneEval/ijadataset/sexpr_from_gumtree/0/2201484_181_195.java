(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:selfTest)(Block(VariableDeclarationStatement(SimpleType(SimpleName:OMAC))(VariableDeclarationFragment(SimpleName:mac)(ClassInstanceCreation(SimpleType(SimpleName:OMAC))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CipherFactory))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Registry.AES_CIPHER))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mac))(SimpleName:reset)))(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:attr)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attr))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:MAC_KEY_MATERIAL)(SimpleName:KEY0))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:digest)(NullLiteral)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mac))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(SimpleName:attr))))(ExpressionStatement(Assignment(SimpleName:digest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mac))(SimpleName:digest)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:x))(Block(ReturnStatement(BooleanLiteral:false)))))(IfStatement(InfixExpression(SimpleName:digest)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(BooleanLiteral:false)))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DIGEST0)(SimpleName:digest))))))))