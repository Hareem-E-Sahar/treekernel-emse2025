(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:WaitingThread)))(SimpleName:checkForDeadlock)(SingleVariableDeclaration(SimpleType(SimpleName:Thread))(SimpleName:waiter))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:WaitingThread)))(VariableDeclarationFragment(SimpleName:waiters)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:WaitingThread)))(NumberLiteral:10))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DeadlockDetection))(SimpleName:wouldDeadlock)(METHOD_INVOCATION_ARGUMENTS(SimpleName:waiter)(SimpleName:writeLockedThread)(SimpleName:waiters)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getId))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:waiters))(SimpleName:size))))))(ReturnStatement(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:waiters))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(SimpleName:waiters)(NullLiteral)))))(ReturnStatement(NullLiteral))))))