(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:findCriticalPoint)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:lower))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:upper))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:testPoint)(NumberLiteral:0)))(WhileStatement(BooleanLiteral:true)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:check)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testPoint)))(Block(ExpressionStatement(Assignment(SimpleName:lower)(ASSIGNMENT_OPERATOR:=)(SimpleName:testPoint))))(Block(ExpressionStatement(Assignment(SimpleName:upper)(ASSIGNMENT_OPERATOR:=)(SimpleName:testPoint)))))(IfStatement(InfixExpression(SimpleName:upper)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:testPoint)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lower)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2)))))(IfStatement(InfixExpression(SimpleName:lower)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(BreakStatement))(IfStatement(InfixExpression(InfixExpression(SimpleName:upper)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lower))(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:1))(Block(BreakStatement))(Block(ExpressionStatement(Assignment(SimpleName:testPoint)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:upper)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lower)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))))))))(ReturnStatement(SimpleName:upper))))))