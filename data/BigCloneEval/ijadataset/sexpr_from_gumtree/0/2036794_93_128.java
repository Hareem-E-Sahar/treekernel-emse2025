(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:T))(SimpleName:put)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:key))(SingleVariableDeclaration(SimpleType(SimpleName:T))(SimpleName:value))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(InfixExpression(SimpleName:key)(INFIX_EXPRESSION_OPERATOR:&)(SimpleName:mask))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Entry))(VariableDeclarationFragment(SimpleName:e)(ArrayAccess(SimpleName:table)(SimpleName:index))))(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(QualifiedName:e.next))(Block(IfStatement(InfixExpression(QualifiedName:e.key)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:key))(Block(ContinueStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:oldValue)(QualifiedName:e.value)))(ExpressionStatement(Assignment(QualifiedName:e.value)(ASSIGNMENT_OPERATOR:=)(SimpleName:value)))(ReturnStatement(CastExpression(SimpleType(SimpleName:T))(SimpleName:oldValue)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:table)(SimpleName:index))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Entry))(SimpleName:key)(SimpleName:value)(ArrayAccess(SimpleName:table)(SimpleName:index)))))(IfStatement(InfixExpression(PostfixExpression(SimpleName:size)(POSTFIX_EXPRESSION_OPERATOR:++))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:threshold))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newCapacity)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:capacity))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Entry))(Dimension))(VariableDeclarationFragment(SimpleName:newTable)(ArrayCreation(ArrayType(SimpleType(SimpleName:Entry))(Dimension(SimpleName:newCapacity))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Entry))(Dimension))(VariableDeclarationFragment(SimpleName:src)(SimpleName:table)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bucketmask)(InfixExpression(SimpleName:newCapacity)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:src.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Entry))(VariableDeclarationFragment(SimpleName:e)(ArrayAccess(SimpleName:src)(SimpleName:j))))(IfStatement(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:src)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(DoStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Entry))(VariableDeclarationFragment(SimpleName:next)(QualifiedName:e.next)))(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:e.key)(INFIX_EXPRESSION_OPERATOR:&)(SimpleName:bucketmask))))(ExpressionStatement(Assignment(QualifiedName:e.next)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newTable)(SimpleName:index))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:newTable)(SimpleName:index))(ASSIGNMENT_OPERATOR:=)(SimpleName:e)))(ExpressionStatement(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(SimpleName:next))))(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))))))(ExpressionStatement(Assignment(SimpleName:table)(ASSIGNMENT_OPERATOR:=)(SimpleName:newTable)))(ExpressionStatement(Assignment(SimpleName:capacity)(ASSIGNMENT_OPERATOR:=)(SimpleName:newCapacity)))(ExpressionStatement(Assignment(SimpleName:threshold)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:newCapacity)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:loadFactor))))))(ExpressionStatement(Assignment(SimpleName:mask)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:capacity)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(ReturnStatement(NullLiteral))))))