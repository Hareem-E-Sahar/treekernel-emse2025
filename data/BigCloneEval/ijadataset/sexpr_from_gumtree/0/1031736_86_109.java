(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:packFile)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:file))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ZipOutputStream))(SimpleName:out))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:FileFilter))(SimpleName:filter))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:filter)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filter))(SimpleName:accept)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))(ReturnStatement))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory))(Block(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:list)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:listFiles))))(IfStatement(InfixExpression(SimpleName:list)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:element))(SimpleName:list)(IfStatement(InfixExpression(SimpleName:name)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(SimpleName:packFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:element)(SimpleName:out)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))(SimpleName:filter))))(ExpressionStatement(MethodInvocation(SimpleName:packFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:element)(SimpleName:out)(InfixExpression(SimpleName:name)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))(SimpleName:filter)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:name)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))))(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:name)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ZipException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:C4JRuntimeException))(MethodInvocation(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getPath))))(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:fileIn)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fileIn)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:use_filetools)))(SimpleName:copyStream2Stream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileIn)(SimpleName:out)))))(Block(IfStatement(InfixExpression(SimpleName:fileIn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileIn))(SimpleName:close))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry)))))))))