(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:readLargeFile)(SingleVariableDeclaration(SimpleType(SimpleName:PrintWriter))(SimpleName:writer))(SimpleType(SimpleName:FileNotFoundException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:random)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:hasStarted)(BooleanLiteral:false)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:random)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:logFile)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFile))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:LogReader.MAX_FILE_LENGTH)))))(ForStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:readLine))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:trim))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ContinueStatement))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hasStarted))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:hasStarted)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(SimpleName:hasStarted)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))(ContinueStatement))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:random)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block)))))))))