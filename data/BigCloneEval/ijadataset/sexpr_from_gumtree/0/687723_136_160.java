(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:String))(SimpleName:decrypt)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:data))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:key))(SimpleType(SimpleName:CryptographicFailureException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Validate))(SimpleName:notNull)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Validate))(SimpleName:notNull)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:PrivateKey))(VariableDeclarationFragment(SimpleName:pk)(MethodInvocation(SimpleName:getPrivateKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)))))(IfStatement(InfixExpression(SimpleName:pk)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CryptographicFailureException))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:key)))))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cipher)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pk))(SimpleName:getAlgorithm))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.DECRYPT_MODE)(SimpleName:pk))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteArrayInputStream))(VariableDeclarationFragment(SimpleName:bin)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Base64))(SimpleName:decodeBase64)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:getBytes)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:CipherInputStream))(VariableDeclarationFragment(SimpleName:cin)(ClassInstanceCreation(SimpleType(SimpleName:CipherInputStream))(SimpleName:bin)(SimpleName:cipher))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:bout)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cin)(SimpleName:bout))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bout))(SimpleName:toByteArray)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pk))(SimpleName:getAlgorithm))))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchPaddingException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pk))(SimpleName:getAlgorithm))))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidKeyException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pk))(SimpleName:getAlgorithm))))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)(SimpleName:e))))))))))