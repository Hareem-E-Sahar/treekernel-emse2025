(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:batchTransactionUpdate)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(SimpleName:queryStrLisyt))(SingleVariableDeclaration(SimpleType(SimpleName:Connection))(SimpleName:con))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ret)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Statement))(VariableDeclarationFragment(SimpleName:stmt)))(IfStatement(InfixExpression(SimpleName:con)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:setAutoCommit)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:stmt)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:createStatement))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stmt))(SimpleName:executeUpdate)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryStrLisyt))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stmt))(SimpleName:addBatch)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queryStrLisyt))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:updateCounts)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stmt))(SimpleName:executeBatch))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:updateCounts.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileLogger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:updateCounts)(SimpleName:i))(StringLiteral:<STR>)(QualifiedName:Statement.SUCCESS_NO_INFO)))))(IfStatement(InfixExpression(InfixExpression(ArrayAccess(SimpleName:updateCounts)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Statement.SUCCESS_NO_INFO))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(ArrayAccess(SimpleName:updateCounts)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(PostfixExpression(SimpleName:ret)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:updateCounts)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Statement.EXECUTE_FAILED))(EmptyStatement)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:commit))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:ret)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileLogger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:rollback)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:setAutoCommit)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stmt))(SimpleName:close)))))))(ReturnStatement(SimpleName:ret))))))