(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:final)(PrimitiveType:int)(SimpleName:deleteAll)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:attributes))(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:Integer)))(SimpleName:ids)))(SimpleType(SimpleName:RecordException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Connection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConnectionManager))(SimpleName:getConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:LoggableStatement))(VariableDeclarationFragment(SimpleName:pStat)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType(SimpleType(SimpleName:Record))))(VariableDeclarationFragment(SimpleName:actualClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getClass))))(VariableDeclarationStatement(SimpleType(SimpleName:StatementBuilder))(VariableDeclarationFragment(SimpleName:builder)(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attributes))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:attributes)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:attributes))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attributes))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:attributes)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:JSONObject))(VariableDeclarationFragment(SimpleName:parsed)(ClassInstanceCreation(SimpleType(SimpleName:JSONObject))(SimpleName:attributes))))(IfStatement(InfixExpression(QualifiedName:ids.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:builder)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StatementBuilder))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TableNameResolver))(SimpleName:getTableName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:actualClass))))))))(Block(ExpressionStatement(Assignment(SimpleName:builder)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StatementBuilder))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TableNameResolver))(SimpleName:getTableName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:actualClass)))(StringLiteral:<STR>)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:ids.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i)))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:!=)(InfixExpression(QualifiedName:ids.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))(ArrayAccess(SimpleName:ids)(SimpleName:i)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:addConditions)(METHOD_INVOCATION_ARGUMENTS(SimpleName:builder)(SimpleName:parsed)(InfixExpression(QualifiedName:ids.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))))(ExpressionStatement(Assignment(SimpleName:pStat)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:getPreparedStatement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:conn)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pStat))(SimpleName:getQueryString)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pStat))(SimpleName:executeUpdate))))(ReturnStatement(SimpleName:i)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:rollback))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SQLException))(SimpleName:e1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(StringLiteral:<STR>))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(SimpleName:e)))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:pStat)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pStat))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:commit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SQLException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(StringLiteral:<STR>))))))))))))