(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:synchronized)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:encrypt)(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:what))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:publicKey))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:aesKeyBytes)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cipherAES)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cipherRSA)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cipherRSAinSize)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cipherRSAoutSize)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:aesKeyBytes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:generateAESSessionKey))))(IfStatement(InfixExpression(SimpleName:aesKeyBytes)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(NullLiteral))))(ExpressionStatement(Assignment(SimpleName:cipherAES)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:buildCipherAES)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.ENCRYPT_MODE)(SimpleName:aesKeyBytes)))))(EmptyStatement)(IfStatement(InfixExpression(SimpleName:cipherAES)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(NullLiteral))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:keycutter)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:publicKey)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:BigInteger))(VariableDeclarationFragment(SimpleName:Exponent)(ClassInstanceCreation(SimpleType(SimpleName:BigInteger))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Base64))(SimpleName:decode)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keycutter))(SimpleName:nextToken)))))))(VariableDeclarationStatement(SimpleType(SimpleName:BigInteger))(VariableDeclarationFragment(SimpleName:Modulus)(ClassInstanceCreation(SimpleType(SimpleName:BigInteger))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Base64))(SimpleName:decode)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keycutter))(SimpleName:nextToken)))))))(VariableDeclarationStatement(SimpleType(SimpleName:RSAPublicKeySpec))(VariableDeclarationFragment(SimpleName:pubKeySpec)(ClassInstanceCreation(SimpleType(SimpleName:RSAPublicKeySpec))(SimpleName:Modulus)(SimpleName:Exponent))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyFactory))(VariableDeclarationFragment(SimpleName:fact)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:KeyFactory))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:PublicKey))(VariableDeclarationFragment(SimpleName:pubKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fact))(SimpleName:generatePublic)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pubKeySpec)))))(ExpressionStatement(Assignment(SimpleName:cipherRSA)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipherRSA))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.ENCRYPT_MODE)(SimpleName:pubKey))))(ExpressionStatement(Assignment(SimpleName:cipherRSAinSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipherRSA))(SimpleName:getBlockSize))))(ExpressionStatement(Assignment(SimpleName:cipherRSAoutSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipherRSA))(SimpleName:getOutputSize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cipherRSAinSize)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:cipherRSAinSize)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:117))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:cipherRSAoutSize)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:128)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cipherRSAinSize)(StringLiteral:<STR>)(SimpleName:cipherRSAoutSize)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:t))))(ReturnStatement(NullLiteral)))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:rsaEncData)(Dimension)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:rsaInpData)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:cipherRSAinSize))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:randomBytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(SimpleName:cipherRSAinSize)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:aesKeyBytes.length)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getSecureRandom)))(SimpleName:nextBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:randomBytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:aesKeyBytes)(NumberLiteral:0)(SimpleName:rsaInpData)(NumberLiteral:0)(QualifiedName:aesKeyBytes.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:randomBytes)(NumberLiteral:0)(SimpleName:rsaInpData)(QualifiedName:aesKeyBytes.length)(QualifiedName:randomBytes.length))))(ExpressionStatement(Assignment(SimpleName:rsaEncData)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipherRSA))(SimpleName:doFinal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rsaInpData)(NumberLiteral:0)(QualifiedName:rsaInpData.length)))))(IfStatement(InfixExpression(QualifiedName:rsaEncData.length)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:cipherRSAoutSize))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:rsaEncData.length)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:t))))(ReturnStatement(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:plainOut)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(InfixExpression(QualifiedName:what.length)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(QualifiedName:what.length)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:10)))(QualifiedName:rsaEncData.length)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:plainOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rsaEncData))))(VariableDeclarationStatement(SimpleType(SimpleName:CipherOutputStream))(VariableDeclarationFragment(SimpleName:cOut)(ClassInstanceCreation(SimpleType(SimpleName:CipherOutputStream))(SimpleName:plainOut)(SimpleName:cipherAES))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:what))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cOut))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:e))))(ReturnStatement(NullLiteral)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:plainOut))(SimpleName:toByteArray)))))))