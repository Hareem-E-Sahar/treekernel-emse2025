(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:buildprops)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClassLoader))(VariableDeclarationFragment(SimpleName:cl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getClass)))(SimpleName:getClassLoader))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cl))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(EmptyStatement)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buildprops))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:ex)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buildprops))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buildprops))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(SimpleName:validate)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isInfoEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buildprops))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buildprops))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:MainConfig))(VariableDeclarationFragment(SimpleName:config)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MainConfig))(SimpleName:newInstance))))(ExpressionStatement(Assignment(SimpleName:basedir)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getBaseDirectory))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isInfoEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:basedir)))))))(VariableDeclarationStatement(SimpleType(SimpleName:SchedulerFactory))(VariableDeclarationFragment(SimpleName:schedFact)(ClassInstanceCreation(SimpleType(SimpleName:StdSchedulerFactory)))))(ExpressionStatement(Assignment(SimpleName:sched)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schedFact))(SimpleName:getScheduler))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeList))(VariableDeclarationFragment(SimpleName:reports)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getReports))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reports))(SimpleName:getLength)))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isInfoEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:report)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reports))(SimpleName:item)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))(ExpressionStatement(MethodInvocation(SimpleName:runReport)(METHOD_INVOCATION_ARGUMENTS(SimpleName:report)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isErrorEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x))(SimpleName:ex)))))))))))(ExpressionStatement(MethodInvocation(SimpleName:addStatsJob)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sched))(SimpleName:start)))(VariableDeclarationStatement(SimpleType(SimpleName:WebServer))(VariableDeclarationFragment(SimpleName:webserver)(ClassInstanceCreation(SimpleType(SimpleName:WebServer))(NumberLiteral:8080))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:webserver))(SimpleName:setParanoid)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:webserver))(SimpleName:start)))))))