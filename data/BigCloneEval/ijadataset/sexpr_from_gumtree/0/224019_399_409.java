(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:flush)(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:_wrCache))(ReturnStatement))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:writeLen)(QualifiedName:_wrCache.curLen)))(IfStatement(InfixExpression(SimpleName:writeLen)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(ReturnStatement))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:bb)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:wrap)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:_wrCache.buf)(NumberLiteral:0)(SimpleName:writeLen)))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:writtenLen)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getChannel)))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bb)))))(IfStatement(InfixExpression(SimpleName:writtenLen)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:writeLen))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:writeLen)(StringLiteral:<STR>)(SimpleName:writtenLen)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_wrCache))(SimpleName:reset)))(ExpressionStatement(SuperMethodInvocation(SimpleName:flush)))))))