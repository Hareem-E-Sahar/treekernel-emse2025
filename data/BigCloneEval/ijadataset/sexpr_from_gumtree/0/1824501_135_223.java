(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:isCodebaseDownloadable)(SingleVariableDeclaration(SimpleType(SimpleName:Properties))(SimpleName:p))(Block(TypeDeclarationStatement(TypeDeclaration(TYPE_DECLARATION_KIND:class)(SimpleName:CodebaseData)(FieldDeclaration(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:file)))(FieldDeclaration(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:success)(BooleanLiteral:true)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:codebase)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NullLiteral)))))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:codebase))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ReturnStatement(BooleanLiteral:false))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:cbUrl)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:codebase))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:protocol)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cbUrl))(SimpleName:getProtocol))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cbUrl))(SimpleName:getFile))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cbUrl))(SimpleName:toString))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:protocol))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cbUrl))(SimpleName:openConnection)))(SimpleName:getContentLength))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cbUrl)(StringLiteral:<STR>))))))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cbUrl)(StringLiteral:<STR>))))))(ReturnStatement(BooleanLiteral:false))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:files)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:st)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:codebase))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:part)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:CodebaseData))(VariableDeclarationFragment(SimpleName:data)(NullLiteral)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:hasMoreTokens))(Block(ExpressionStatement(Assignment(SimpleName:part)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:nextToken))))(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:part))))(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CodebaseData)))))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))(SimpleName:getContentLength))))(IfStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(QualifiedName:data.success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(QualifiedName:data.file)(ASSIGNMENT_OPERATOR:=)(SimpleName:part))))(Block(ExpressionStatement(Assignment(QualifiedName:data.file)(ASSIGNMENT_OPERATOR:=)(SimpleName:part))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(QualifiedName:data.success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:wrong)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:CodebaseData))(VariableDeclarationFragment(SimpleName:codebaseData)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:allOK)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:errorFiles)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:codebaseData)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:CodebaseData))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(QualifiedName:codebaseData.success))(Block(ExpressionStatement(Assignment(SimpleName:wrong)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:codebaseData.file))))(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:errorFiles)))(ExpressionStatement(Assignment(SimpleName:allOK)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:codebaseData.file)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(QualifiedName:codebaseData.success)(StringLiteral:<STR>)(StringLiteral:<STR>))))))))))(IfStatement(InfixExpression(SimpleName:errorFiles)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:errorFiles)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:size))(StringLiteral:<STR>)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(SimpleName:allOK)(Block(ReturnStatement(BooleanLiteral:true)))(Block(ReturnStatement(BooleanLiteral:false)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:protocol))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:false))))))