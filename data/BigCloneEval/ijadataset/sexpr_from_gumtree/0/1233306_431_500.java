(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:final)(PrimitiveType:boolean)(SimpleName:validateFileSets)(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:afterI))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:beforeI))(SingleVariableDeclaration(SimpleType(QualifiedName:java.util.Vector))(SimpleName:validSealsO))(SingleVariableDeclaration(SimpleType(QualifiedName:java.util.Vector))(SimpleName:invalidSealsO))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:validR)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:after)(SimpleName:afterI))(VariableDeclarationFragment(SimpleName:before)(SimpleName:beforeI)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:directory)(MethodInvocation(SimpleName:getArchiveDirectory))))(VariableDeclarationStatement(SimpleType(QualifiedName:com.rbnb.compat.File))(VariableDeclarationFragment(SimpleName:archive)(ClassInstanceCreation(SimpleType(QualifiedName:com.rbnb.compat.File))(SimpleName:directory))))(VariableDeclarationStatement(SimpleType(SimpleName:Directory))(VariableDeclarationFragment(SimpleName:asDirectory)(ClassInstanceCreation(SimpleType(SimpleName:Directory))(SimpleName:archive))))(VariableDeclarationStatement(ArrayType(SimpleType(QualifiedName:com.rbnb.compat.File))(Dimension))(VariableDeclarationFragment(SimpleName:files)))(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archive))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:java.lang.IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:directory)))))(IfStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:files)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:asDirectory))(SimpleName:listFiles))))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:java.lang.IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:directory)(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:java.lang.IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:directory)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:summary)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.Vector))(VariableDeclarationFragment(SimpleName:fileSets)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.Vector)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(NumberLiteral:0)))(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:idx))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:files)(SimpleName:idx)))(SimpleName:getName))))(VariableDeclarationStatement(SimpleType(SimpleName:Directory))(VariableDeclarationFragment(SimpleName:fAsDirectory)(ClassInstanceCreation(SimpleType(SimpleName:Directory))(ArrayAccess(SimpleName:files)(SimpleName:idx)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:summary)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(NumberLiteral:2))))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fAsDirectory))(SimpleName:listFiles))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:fsIndex)(NumberLiteral:0)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fsIndex)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:parseLong)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.NumberFormatException))(SimpleName:e))(Block(ContinueStatement))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo))(VariableDeclarationFragment(SimpleName:hi))(VariableDeclarationFragment(SimpleName:idx1)))(ForStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSets))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Assignment(SimpleName:idx1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hi)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))(ParenthesizedExpression(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:hi)))(Assignment(SimpleName:idx1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hi)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:com.rbnb.compat.File))(VariableDeclarationFragment(SimpleName:other)(CastExpression(SimpleType(QualifiedName:com.rbnb.compat.File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSets))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:idx1))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:oIndex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:parseLong)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:other))(SimpleName:getName)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)))))))(IfStatement(InfixExpression(SimpleName:fsIndex)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:oIndex))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:idx1)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(InfixExpression(SimpleName:fsIndex)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:oIndex))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:idx1)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(BreakStatement))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSets))(SimpleName:insertElementAt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:files)(SimpleName:idx))(SimpleName:lo))))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:e))(Block)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:endIdx)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSets))(SimpleName:size))))(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:endIdx))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:idx))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:com.rbnb.compat.File))(VariableDeclarationFragment(SimpleName:fileSetFile)(CastExpression(SimpleType(QualifiedName:com.rbnb.compat.File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSets))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:idx))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Seal))(VariableDeclarationFragment(SimpleName:theSeal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Seal))(SimpleName:validate)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSetFile))(SimpleName:getAbsolutePath))(SimpleName:after)(SimpleName:before)))))(IfStatement(InfixExpression(SimpleName:theSeal)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:com.rbnb.api.InvalidSealException))(SimpleName:theSeal)(SimpleName:after)(SimpleName:before))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:validSealsO))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileSetFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:validSealsO))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:theSeal))))(ExpressionStatement(Assignment(SimpleName:after)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:theSeal))(SimpleName:getAsOf)))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:com.rbnb.api.InvalidSealException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:invalidSealsO))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileSetFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:invalidSealsO))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ExpressionStatement(Assignment(SimpleName:validR)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:summary))(Block(ExpressionStatement(Assignment(SimpleName:validR)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(ReturnStatement(ParenthesizedExpression(SimpleName:validR)))))))