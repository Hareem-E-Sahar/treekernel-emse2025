(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(SimpleName:saveWLHome)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:TabControl))(SimpleName:control))(SimpleName:tabControls)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:control))(SimpleName:performOk)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression(SimpleName:WLPropertyPage)))(SimpleName:getProject))(ThisExpression(SimpleName:WLPropertyPage)))))))(IfStatement(MethodInvocation(SimpleName:isEnabledJCLCopy))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:WLPropertyPage))(SimpleName:domainDirectory)))(SimpleName:getText)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:lib)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:url)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:log4jLibrary)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:lib)(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log4jLibrary))(SimpleName:exists)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:srcFile)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:srcFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:toInputStream)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Path))(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:log4jLibrary))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:fos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:srcFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:toInputStream)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Path))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:jcl)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:lib)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:jcl))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:fos)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.ERROR)(StringLiteral:<STR>)(SimpleName:e))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:srcFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:srcFile)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(SimpleName:fos)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))))))(IfStatement(MethodInvocation(SimpleName:isEnabledJSTLCopy))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:WLPropertyPage))(SimpleName:domainDirectory)))(SimpleName:getText)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:lib)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:url)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:jstlLibrary)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:lib)(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jstlLibrary))(SimpleName:exists)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:srcFile)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:srcFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:toInputStream)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Path))(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:jstlLibrary))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:fos)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Logger.ERROR)(StringLiteral:<STR>)(SimpleName:e))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:srcFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:srcFile)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(SimpleName:fos)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLog)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))))))))))))