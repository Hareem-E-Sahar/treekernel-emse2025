(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:execute)(SimpleType(SimpleName:MojoExecutionException))(SimpleType(SimpleName:MojoFailureException))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:execute)))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:unpackTypesList)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(IfStatement(InfixExpression(SimpleName:unpackTypes)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:unpackTypesList)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:unpackTypes))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:unpackTypesList))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:type)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:EarModuleFactory.standardArtifactTypes))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:type))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:type)(StringLiteral:<STR>)(QualifiedName:EarModuleFactory.standardArtifactTypes))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:unpackTypesList)))))))(TryStatement(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getModules)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:EarModule))(VariableDeclarationFragment(SimpleName:module)(CastExpression(SimpleType(SimpleName:EarModule))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(IfStatement(InstanceofExpression(SimpleName:module)(SimpleType(SimpleName:JavaModule)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:module)(StringLiteral:<STR>)))))))(IfStatement(InstanceofExpression(SimpleName:module)(SimpleType(SimpleName:Ejb3Module)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:module)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sourceFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getArtifact)))(SimpleName:getFile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destinationFile)(MethodInvocation(SimpleName:buildDestinationFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getWorkDirectory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getUri))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFile))(SimpleName:isFile)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getArtifact))(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destinationFile))(SimpleName:getCanonicalPath)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFile))(SimpleName:getCanonicalPath))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:module)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getUri))(StringLiteral:<STR>)))))(ContinueStatement)))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:unpackTypesList))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getType))))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:shouldUnpack))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:shouldUnpack)))(SimpleName:booleanValue))))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:shouldUnpack))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:shouldUnpack)))(SimpleName:booleanValue)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:module)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getUri))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destinationFile))(SimpleName:mkdirs)))(ExpressionStatement(MethodInvocation(SimpleName:unpack)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceFile)(SimpleName:destinationFile)))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFile))(SimpleName:lastModified))(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destinationFile))(SimpleName:lastModified)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:module)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getUri))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceFile)(SimpleName:destinationFile)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:module)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getUri))(StringLiteral:<STR>))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ArchiverException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchArchiverException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:earSourceDir)(SimpleName:earSourceDirectory)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:earSourceDir))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getWorkDirectory)))(SimpleName:getAbsolutePath))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:fileNames)(MethodInvocation(SimpleName:getEarFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:earSourceDir)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:fileNames.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:earSourceDir)(ArrayAccess(SimpleName:fileNames)(SimpleName:i)))(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getWorkDirectory))(ArrayAccess(SimpleName:fileNames)(SimpleName:i))))))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:applicationXml)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:applicationXml)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:applicationXml)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:metaInfDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getWorkDirectory))(SimpleName:META_INF))))(ExpressionStatement(MethodInvocation(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:applicationXml))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:metaInfDir)(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MavenFilteringException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e))))))(TryStatement(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:resourcesDir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesDir))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLog)))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getWorkDirectory)))(SimpleName:getAbsolutePath))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:fileNames)(MethodInvocation(SimpleName:getEarFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resourcesDir)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:fileNames.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:resourcesDir)(ArrayAccess(SimpleName:fileNames)(SimpleName:i)))(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getWorkDirectory))(ArrayAccess(SimpleName:fileNames)(SimpleName:i)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:ddFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getWorkDirectory))(SimpleName:APPLICATION_XML_URI))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ddFile))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:version))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:VERSION_5)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ddFile))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:performPackaging)))))))