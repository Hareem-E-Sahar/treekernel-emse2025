(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:proceed)(BooleanLiteral:true)))(WhileStatement(InfixExpression(SimpleName:proceed)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workflow))(SimpleName:hasNext)))(Block(ExpressionStatement(Assignment(SimpleName:api)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:ArrayList))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workflow))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workflow))(SimpleName:remove)))(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:meth)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:capiClass))(SimpleName:getMethod)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:api))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))(SimpleName:apiClass)))))(ExpressionStatement(Assignment(SimpleName:proceed)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:boolean)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:meth))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:capi)(SimpleName:api))))))))))))