(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:final)(SimpleType(SimpleName:TreeLogger))(SimpleName:getAnalyzer)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:TreeLogger))(VariableDeclarationFragment(SimpleName:log)(ClassInstanceCreation(SimpleType(SimpleName:TreeLogger)))))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:raf)))(ExpressionStatement(Assignment(SimpleName:raf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:filename)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(QualifiedName:log.fc)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:getChannel))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:length))))(ExpressionStatement(Assignment(QualifiedName:log.numEntries)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:128)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:16))))))(ExpressionStatement(Assignment(QualifiedName:log.mapBuf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:log.fc))(SimpleName:map)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:MapMode.READ_WRITE)(NumberLiteral:0)(SimpleName:len)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:computeForwardPointers)))(ReturnStatement(SimpleName:log)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException)))))))))))