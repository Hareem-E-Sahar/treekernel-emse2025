(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:BigInteger))(SimpleName:generateHashing)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:value))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:lengthBits))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:algorithm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:algorithm))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithm))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:value))(SimpleName:getBytes)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:digest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithm))(SimpleName:digest))))(VariableDeclarationStatement(SimpleType(SimpleName:BigInteger))(VariableDeclarationFragment(SimpleName:hashing)(ClassInstanceCreation(SimpleType(SimpleName:BigInteger))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:digest))))(IfStatement(InfixExpression(SimpleName:lengthBits)(INFIX_EXPRESSION_OPERATOR:!=)(InfixExpression(QualifiedName:digest.length)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:8)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BigInteger))(VariableDeclarationFragment(SimpleName:length)(ClassInstanceCreation(SimpleType(SimpleName:BigInteger))(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:length))(SimpleName:pow)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lengthBits)))))(ExpressionStatement(Assignment(SimpleName:hashing)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hashing))(SimpleName:mod)(METHOD_INVOCATION_ARGUMENTS(SimpleName:length)))))))(ReturnStatement(SimpleName:hashing)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)(SimpleName:e))))))))))