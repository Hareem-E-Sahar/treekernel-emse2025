(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:sawsStart)(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:debugLevel)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:SAWSConstant.VerboseInfo))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFileList))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFileList))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:--)(SimpleName:i))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:logFilename)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logFileList))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sawsDebugLog))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:logFilename)))))))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:closed))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:showMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:SAWSTextOutputCallback.WARNING))))(IfStatement(InfixExpression(SimpleName:debugLevel)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:SAWSConstant.NoInfo))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sawsDebugLog))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:options)(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:selection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:createConfirmCallback)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:options)(QualifiedName:SAWSChoiceCallback.WARNING)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:selection)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(SimpleName:closeLog)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(SimpleName:thread)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:WritingThread)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thread))(SimpleName:start)))(ExpressionStatement(Assignment(SimpleName:currentTime)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(IfStatement(InfixExpression(SimpleName:heartbeatInterval)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:setHeartbeatWriter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:heartbeatInterval))))))))))