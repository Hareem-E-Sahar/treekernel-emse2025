(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:handshake)(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:read))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:write))(SimpleType(SimpleName:IOException))(Block(IfStatement(SimpleName:initHandshakeComplete)(ReturnStatement(NumberLiteral:0)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:flush)(METHOD_INVOCATION_ARGUMENTS(SimpleName:netOutBuffer))))(ReturnStatement(QualifiedName:SelectionKey.OP_WRITE)))(VariableDeclarationStatement(SimpleType(SimpleName:SSLEngineResult))(VariableDeclarationFragment(SimpleName:handshake)(NullLiteral)))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:initHandshakeComplete))(Block(SwitchStatement(SimpleName:initHandshakeStatus)(SwitchCase(SimpleName:NOT_HANDSHAKING))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(SwitchCase(SimpleName:FINISHED))(Block(ExpressionStatement(Assignment(SimpleName:initHandshakeComplete)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:netOutBuffer))(SimpleName:hasRemaining)))))(ReturnStatement(ConditionalExpression(SimpleName:initHandshakeComplete)(NumberLiteral:0)(QualifiedName:SelectionKey.OP_WRITE))))(SwitchCase(SimpleName:NEED_WRAP))(Block(ExpressionStatement(Assignment(SimpleName:handshake)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:handshakeWrap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:write)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handshake))(SimpleName:getStatus))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Status.OK))(Block(IfStatement(InfixExpression(SimpleName:initHandshakeStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:HandshakeStatus.NEED_TASK))(ExpressionStatement(Assignment(SimpleName:initHandshakeStatus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:tasks))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handshake))(SimpleName:getStatus))(StringLiteral:<STR>))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:initHandshakeStatus)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:HandshakeStatus.NEED_UNWRAP))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:flush)(METHOD_INVOCATION_ARGUMENTS(SimpleName:netOutBuffer))))))(Block(ReturnStatement(QualifiedName:SelectionKey.OP_WRITE)))))(SwitchCase(SimpleName:NEED_UNWRAP))(Block(ExpressionStatement(Assignment(SimpleName:handshake)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:handshakeUnwrap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:read)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handshake))(SimpleName:getStatus))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Status.OK))(Block(IfStatement(InfixExpression(SimpleName:initHandshakeStatus)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:HandshakeStatus.NEED_TASK))(ExpressionStatement(Assignment(SimpleName:initHandshakeStatus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:tasks))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:handshake))(SimpleName:getStatus))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Status.BUFFER_UNDERFLOW))(Block(ReturnStatement(QualifiedName:SelectionKey.OP_READ)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:initHandshakeStatus)(StringLiteral:<STR>)))))))(BreakStatement))(SwitchCase(SimpleName:NEED_TASK))(Block(ExpressionStatement(Assignment(SimpleName:initHandshakeStatus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:tasks))))(BreakStatement))(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:initHandshakeStatus)))))))(ReturnStatement(ConditionalExpression(SimpleName:initHandshakeComplete)(NumberLiteral:0)(ParenthesizedExpression(InfixExpression(QualifiedName:SelectionKey.OP_WRITE)(INFIX_EXPRESSION_OPERATOR:|)(QualifiedName:SelectionKey.OP_READ)))))))))