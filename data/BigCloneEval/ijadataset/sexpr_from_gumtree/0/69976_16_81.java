(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:run)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Context))(VariableDeclarationFragment(SimpleName:context)(ClassInstanceCreation(SimpleType(SimpleName:Context)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JavacFileManager))(SimpleName:preRegister)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context))))(ExpressionStatement(Assignment(SimpleName:names)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Names))(SimpleName:instance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)))))(ExpressionStatement(Assignment(SimpleName:symtab)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Symtab))(SimpleName:instance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)))))(VariableDeclarationStatement(SimpleType(SimpleName:Scope))(VariableDeclarationFragment(SimpleName:emptyScope)(ClassInstanceCreation(SimpleType(SimpleName:Scope))(QualifiedName:symtab.unnamedPackage))))(VariableDeclarationStatement(SimpleType(SimpleName:Field))(VariableDeclarationFragment(SimpleName:sHashMask)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Scope))))(SimpleName:getDeclaredField)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sHashMask))(SimpleName:setAccessible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:scopeHashMask)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sHashMask))(SimpleName:getInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:emptyScope)))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:scopeHashMask)))))(VariableDeclarationStatement(SimpleType(SimpleName:Name))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:names))(SimpleName:fromString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Name))(VariableDeclarationFragment(SimpleName:outerName)))(VariableDeclarationStatement(SimpleType(SimpleName:Name))(VariableDeclarationFragment(SimpleName:innerName)))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:sb)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder))(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(DoStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:10)))))))(ExpressionStatement(Assignment(SimpleName:innerName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:names))(SimpleName:fromString)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:sb)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:clash)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)(SimpleName:innerName))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i)))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:MAX_TRIES))))(IfStatement(MethodInvocation(SimpleName:clash)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)(SimpleName:innerName)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:entry)(StringLiteral:<STR>)(SimpleName:innerName)(StringLiteral:<STR>)(SimpleName:i)(StringLiteral:<STR>))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:outerName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:names))(SimpleName:fromString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:toString))))))(VariableDeclarationStatement(SimpleType(SimpleName:ClassSymbol))(VariableDeclarationFragment(SimpleName:cc)(MethodInvocation(SimpleName:createClass)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:names))(SimpleName:fromString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:symtab.unnamedPackage)))))(VariableDeclarationStatement(SimpleType(SimpleName:ClassSymbol))(VariableDeclarationFragment(SimpleName:ce)(MethodInvocation(SimpleName:createClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)(SimpleName:cc)))))(VariableDeclarationStatement(SimpleType(SimpleName:PackageSymbol))(VariableDeclarationFragment(SimpleName:p)(ClassInstanceCreation(SimpleType(SimpleName:PackageSymbol))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:names))(SimpleName:fromString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:symtab.rootPackage))))(ExpressionStatement(Assignment(QualifiedName:p.members_field)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Scope))(SimpleName:p))))(VariableDeclarationStatement(SimpleType(SimpleName:ClassSymbol))(VariableDeclarationFragment(SimpleName:inner)(MethodInvocation(SimpleName:createClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:innerName)(SimpleName:p)))))(VariableDeclarationStatement(SimpleType(SimpleName:ClassSymbol))(VariableDeclarationFragment(SimpleName:outer)(MethodInvocation(SimpleName:createClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outerName)(SimpleName:p)))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Scope))(VariableDeclarationFragment(SimpleName:starImportScope)))(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:importAll)))(VariableDeclarationStatement(SimpleType(SimpleName:PackageSymbol))(VariableDeclarationFragment(SimpleName:pkg)(ClassInstanceCreation(SimpleType(SimpleName:PackageSymbol))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:names))(SimpleName:fromString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:symtab.rootPackage))))(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:ctor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getDeclaredConstructor)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension))(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:Symbol)))))))))(ExpressionStatement(Assignment(SimpleName:importAll)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getDeclaredMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension))(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:Scope)))))))))(ExpressionStatement(Assignment(SimpleName:starImportScope)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Scope))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:pkg)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:starImportScope)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ImportScope))(SimpleName:pkg))))(ExpressionStatement(Assignment(SimpleName:importAll)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(ExpressionStatement(MethodInvocation(SimpleName:dump)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:starImportScope))))(VariableDeclarationStatement(SimpleType(SimpleName:Scope))(VariableDeclarationFragment(SimpleName:p_members)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:members))))(IfStatement(InfixExpression(SimpleName:importAll)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:importAll))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:starImportScope)(SimpleName:p_members)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Scope))(VariableDeclarationFragment(SimpleName:fromScope)(SimpleName:p_members)))(VariableDeclarationStatement(SimpleType(SimpleName:Scope))(VariableDeclarationFragment(SimpleName:toScope)(SimpleName:starImportScope)))(ForStatement(VariableDeclarationExpression(SimpleType(QualifiedName:Scope.Entry))(VariableDeclarationFragment(SimpleName:e)(QualifiedName:fromScope.elems)))(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(QualifiedName:e.sibling))(Block(IfStatement(InfixExpression(InfixExpression(QualifiedName:e.sym.kind)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:TYP))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toScope))(SimpleName:includes)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:e.sym)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toScope))(SimpleName:enter)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:e.sym)(SimpleName:fromScope)))))))))(ExpressionStatement(MethodInvocation(SimpleName:dump)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:starImportScope))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:starImportScope))(SimpleName:enter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ce)(QualifiedName:cc.members_field))))(ExpressionStatement(MethodInvocation(SimpleName:dump)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:starImportScope))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:p.members_field))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inner))))(ExpressionStatement(Assignment(QualifiedName:inner.name)(ASSIGNMENT_OPERATOR:=)(SimpleName:entry)))(ExpressionStatement(Assignment(QualifiedName:inner.owner)(ASSIGNMENT_OPERATOR:=)(SimpleName:outer)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:outer.members_field))(SimpleName:enter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inner))))(VariableDeclarationStatement(SimpleType(QualifiedName:Scope.Entry))(VariableDeclarationFragment(SimpleName:e)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:starImportScope))(SimpleName:lookup)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))))(ExpressionStatement(MethodInvocation(SimpleName:dump)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:starImportScope))))(IfStatement(InfixExpression(QualifiedName:e.sym)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:entry)))))))))