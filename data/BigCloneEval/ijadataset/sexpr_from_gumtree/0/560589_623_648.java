(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:final)(PrimitiveType:void)(SimpleName:checkPLTE)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:DataInputStream))(SimpleName:inputStream))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:RepInfo))(SimpleName:repInfo))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:int)(SimpleName:declChunkLen))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:declChunkLen)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:3)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repInfo))(SimpleName:setValid)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:RepInfo.FALSE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repInfo))(SimpleName:setMessage)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ErrorMessage))(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:paletteSize)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:declChunkLen))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:tmp)(MethodInvocation(SimpleName:readUnsignedByte)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream)(ThisExpression)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chcks))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(SimpleName:tmp)))))(ExpressionStatement(Assignment(SimpleName:tmp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:readUnsignedByte)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream)(ThisExpression)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chcks))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(SimpleName:tmp)))))(ExpressionStatement(Assignment(SimpleName:tmp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:readUnsignedByte)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream)(ThisExpression)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chcks))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(SimpleName:tmp)))))(ExpressionStatement(PostfixExpression(SimpleName:paletteSize)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(SimpleName:paletteSize)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:maxPaletteSize))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repInfo))(SimpleName:setValid)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:RepInfo.FALSE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repInfo))(SimpleName:setMessage)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ErrorMessage))(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:shortPalette)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(InfixExpression(SimpleName:paletteSize)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:maxPaletteSize)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:crc32)(MethodInvocation(SimpleName:readUnsignedInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream)(SimpleName:PNG_ENDIANITY)(ThisExpression)))))(IfStatement(InfixExpression(SimpleName:crc32)(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chcks))(SimpleName:getValue)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repInfo))(SimpleName:setValid)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:RepInfo.FALSE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repInfo))(SimpleName:setMessage)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ErrorMessage))(StringLiteral:<STR>)))))))))))