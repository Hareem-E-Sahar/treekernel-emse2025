(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:compress)(SingleVariableDeclaration(SimpleType(SimpleName:ArrayList))(SimpleName:sources))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:target))(SingleVariableDeclaration(SimpleType(SimpleName:Manifest))(SimpleName:manifest))(Block(TryStatement(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:sources)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sources))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ReturnStatement(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:exists))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:delete))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:output)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isJar)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getName)))(SimpleName:toLowerCase)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(SimpleName:isJar)(Block(IfStatement(InfixExpression(SimpleName:manifest)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JarOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:target))(SimpleName:manifest))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JarOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:target)))))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:target))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:baseDir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))(SimpleName:getParentFile)))(SimpleName:getAbsolutePath)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseDir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:baseDir)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:baseDir)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:baseDirLength)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseDir))(SimpleName:length))))(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:list)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sources))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fileOrDir)(CastExpression(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next)))))(IfStatement(InfixExpression(SimpleName:isJar)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:manifest)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOrDir))(SimpleName:getName)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ContinueStatement))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOrDir))(SimpleName:isDirectory))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getContents)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileOrDir))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileOrDir)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytesRead)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:size))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(CastExpression(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:f_in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:baseDir)))(ExpressionStatement(Assignment(SimpleName:filename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:baseDirLength))))))(IfStatement(SimpleName:isJar)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:JarEntry))(SimpleName:filename)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:filename))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:bytesRead)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f_in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:bytesRead)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f_in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:closeEntry)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exc))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exc))(SimpleName:printStackTrace)))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))