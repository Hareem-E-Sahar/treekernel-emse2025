(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:public)(PrimitiveType:void)(SimpleName:start)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:BundleContext))(SimpleName:bundleContext))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceClass))(SimpleName:getName))))))(VariableDeclarationStatement(SimpleType(SimpleName:BundleURLScanner))(VariableDeclarationFragment(SimpleName:scanner)(ClassInstanceCreation(SimpleType(SimpleName:BundleURLScanner))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceClass))(SimpleName:getName))(BooleanLiteral:false))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:BundleObserver))(SimpleType(SimpleName:URL)))(VariableDeclarationFragment(SimpleName:observer)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:BundleObserver))(SimpleType(SimpleName:URL)))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:addingEntries)(SingleVariableDeclaration(SimpleType(SimpleName:Bundle))(SimpleName:bundle))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:URL)))(SimpleName:urls))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:getSymbolicName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urls))(SimpleName:size)))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SimpleName:urls)(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inStream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:serviceImplementationClassName)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:serviceImplementationClassName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:inStream))))(SimpleName:readLine))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inStream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:serviceImplementationClassName))))))(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:T)))(VariableDeclarationFragment(SimpleName:serviceImplementationClass)(CastExpression(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:T)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:loadClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:serviceImplementationClassName))))))(VariableDeclarationStatement(SimpleType(SimpleName:T))(VariableDeclarationFragment(SimpleName:serviceImplementation)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceImplementationClass))(SimpleName:newInstance))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Dictionary))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Object)))(VariableDeclarationFragment(SimpleName:properties)(MethodInvocation(SimpleName:createProperties)(METHOD_INVOCATION_ARGUMENTS(SimpleName:serviceImplementation)))))(VariableDeclarationStatement(SimpleType(SimpleName:BundleContext))(VariableDeclarationFragment(SimpleName:extendedContext)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:getBundleContext))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extendedContext))(SimpleName:registerService)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceClass))(SimpleName:getName))(SimpleName:serviceImplementation)(SimpleName:properties))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:serviceImplementationClassName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceClass))(SimpleName:getName))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))))))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:removingEntries)(SingleVariableDeclaration(SimpleType(SimpleName:Bundle))(SimpleName:bundle))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:URL)))(SimpleName:urls))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bundle))(SimpleName:getSymbolicName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urls))(SimpleName:size)))))))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:BundleWatcher))(SimpleType(SimpleName:URL)))(VariableDeclarationFragment(SimpleName:servicesWatcher)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:BundleWatcher))(SimpleType(SimpleName:URL)))(SimpleName:bundleContext)(SimpleName:scanner)(SimpleName:observer))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:servicesWatcher))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceClass))(SimpleName:getName)))))))))))