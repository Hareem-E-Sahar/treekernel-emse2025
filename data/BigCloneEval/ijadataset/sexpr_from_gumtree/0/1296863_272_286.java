(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(ParameterizedType(SimpleType(SimpleName:Tree))(SimpleType(SimpleName:DataRecord)))(SimpleName:getTree)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:treeName))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlRefs))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:treeName)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Tree))(SimpleType(SimpleName:DataRecord)))(VariableDeclarationFragment(SimpleName:tree)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inStream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(MethodInvocation(SimpleName:parseTreeML)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inStream))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inStream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exc))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:treeName)(StringLiteral:<STR>)(SimpleName:url))(SimpleName:exc)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SAXException))(SimpleName:exc))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:treeName)(StringLiteral:<STR>)(SimpleName:url))(SimpleName:exc))))))(ReturnStatement(SimpleName:tree))))))