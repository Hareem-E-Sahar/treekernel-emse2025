(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:copier)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:source))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:nomFichierSource))(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.File))(SimpleName:destination))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:resultat)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:tmpOut)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:tmpOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(InfixExpression(SimpleName:nomFichierSource)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:source)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nomFichierSource))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpOut))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:nomFichierSource)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destination)))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:size))(SimpleName:out))))(ExpressionStatement(Assignment(SimpleName:resultat)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.FileNotFoundException))(SimpleName:f))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:e))(Block))(Block(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))(IfStatement(InfixExpression(SimpleName:out)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:nomFichierSource)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:delete)))(ReturnStatement(ParenthesizedExpression(SimpleName:resultat)))))))