(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:assertComparatorYieldsOrder)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:orderedObjects))(SingleVariableDeclaration(SimpleType(SimpleName:Comparator))(SimpleName:comparator))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:keys)(CastExpression(ArrayType(SimpleType(SimpleName:Object))(Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:orderedObjects))(SimpleName:clone)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isInNewOrder)(BooleanLiteral:false)))(WhileStatement(InfixExpression(InfixExpression(QualifiedName:keys.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:isInNewOrder)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false)))(Block(LabeledStatement(SimpleName:shuffle)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Random))(VariableDeclarationFragment(SimpleName:rand)(ClassInstanceCreation(SimpleType(SimpleName:Random)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(QualifiedName:keys.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:swap)(ArrayAccess(SimpleName:keys)(SimpleName:i))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rand))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:keys)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:keys)(SimpleName:j))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:keys)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(SimpleName:swap)))))))(LabeledStatement(SimpleName:testShuffle)(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:keys.length))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isInNewOrder)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:orderedObjects)(SimpleName:i)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:keys)(SimpleName:i)))))(Block(ExpressionStatement(Assignment(SimpleName:isInNewOrder)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:keys)(SimpleName:comparator))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:orderedObjects.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:orderedObjects)(SimpleName:i))(ArrayAccess(SimpleName:keys)(SimpleName:i)))))))))))