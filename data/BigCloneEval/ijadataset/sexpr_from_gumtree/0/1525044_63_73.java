(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:init)(SingleVariableDeclaration(SimpleType(SimpleName:Context))(SimpleName:cx))(Block(ExpressionStatement(MethodInvocation(SimpleName:initStandardObjects)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cx)(SimpleName:sealedStdLib))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:names)(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:defineFunctionProperties)(METHOD_INVOCATION_ARGUMENTS(SimpleName:names)(TypeLiteral(SimpleType(SimpleName:Global)))(QualifiedName:ScriptableObject.DONTENUM))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Environment))(SimpleName:defineClass)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))(VariableDeclarationStatement(SimpleType(SimpleName:Environment))(VariableDeclarationFragment(SimpleName:environment)(ClassInstanceCreation(SimpleType(SimpleName:Environment))(ThisExpression))))(ExpressionStatement(MethodInvocation(SimpleName:defineProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:environment)(QualifiedName:ScriptableObject.DONTENUM))))(ExpressionStatement(Assignment(SimpleName:history)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:NativeArray))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cx))(SimpleName:newArray)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)(NumberLiteral:0))))))(ExpressionStatement(MethodInvocation(SimpleName:defineProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:history)(QualifiedName:ScriptableObject.DONTENUM))))(ExpressionStatement(Assignment(SimpleName:initialized)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))