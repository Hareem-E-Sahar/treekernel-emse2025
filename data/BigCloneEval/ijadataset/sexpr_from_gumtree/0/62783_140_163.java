(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testDouble)(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:C))(SimpleName:coding))(MethodInvocation(SimpleName:getCodings))(Block(IfStatement(MethodInvocation(SimpleName:isEncodableValueLimited)(METHOD_INVOCATION_ARGUMENTS(SimpleName:coding)))(ReturnStatement))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytes)(NumberLiteral:16)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:memory)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(SimpleName:bytes))))))(VariableDeclarationStatement(SimpleType(SimpleName:IntArrayBitWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:IntArrayBitWriter))(SimpleName:memory)(InfixExpression(SimpleName:bytes)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:8)))))(VariableDeclarationStatement(SimpleType(SimpleName:IntArrayBitReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:IntArrayBitReader))(SimpleName:memory)(InfixExpression(SimpleName:bytes)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:8)))))(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(NumberLiteral:0.0))))(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:0.0)))))(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(NumberLiteral:1.0))))(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(NumberLiteral:2.0))))(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(NumberLiteral:3.0))))(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(NumberLiteral:4.0))))(ForStatement(VariableDeclarationExpression(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:100.0))))(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:100.0))(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:0.1))(Block(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(SimpleName:d))))))(VariableDeclarationStatement(SimpleType(SimpleName:Random))(VariableDeclarationFragment(SimpleName:r)(ClassInstanceCreation(SimpleType(SimpleName:Random))(NumberLiteral:0L))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:10000))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:longBitsToDouble)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:nextLong))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:isNaN)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:isInfinite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d))))(ContinueStatement))(ExpressionStatement(MethodInvocation(SimpleName:checkDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(SimpleName:d))))))))))))