(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:getReturnType)(SimpleType(SimpleName:ParseException))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName)))))(Block(ReturnStatement(TypeLiteral(PrimitiveType:boolean)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:leftType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:leftParameter))(SimpleName:getReturnType))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isFunction)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getName)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))(INFIX_EXPRESSION_OPERATOR:&&)(InstanceofExpression(SimpleName:rightParameter)(SimpleType(SimpleName:Constant)))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightParameter))(SimpleName:getReturnType))(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:String)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rightCode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightParameter))(SimpleName:getCode))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightCode))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightCode))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightCode))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassUtils))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getPackages))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightCode))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightCode))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))(Block(ReturnStatement(TypeLiteral(SimpleType(SimpleName:Class)))))))(VariableDeclarationStatement(ArrayType(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(Dimension))(VariableDeclarationFragment(SimpleName:rightTypes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightParameter))(SimpleName:getReturnTypes))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Collection))(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType)))(VariableDeclarationFragment(SimpleName:functions)(MethodInvocation(SimpleName:getFunctions))))(IfStatement(InfixExpression(InfixExpression(SimpleName:functions)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:functions))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(VariableDeclarationStatement(ArrayType(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(Dimension))(VariableDeclarationFragment(SimpleName:allTypes)))(IfStatement(InfixExpression(InfixExpression(SimpleName:rightTypes)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:rightTypes.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(IfStatement(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:allTypes)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(Dimension(NumberLiteral:0)))))))(Block(ExpressionStatement(Assignment(SimpleName:allTypes)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(Dimension))(ArrayInitializer(SimpleName:leftType))))))))(Block(ExpressionStatement(Assignment(SimpleName:allTypes)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(Dimension(InfixExpression(QualifiedName:rightTypes.length)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:allTypes)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:leftType)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rightTypes)(NumberLiteral:0)(SimpleName:allTypes)(NumberLiteral:1)(QualifiedName:rightTypes.length))))))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:function))(SimpleName:functions)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:method)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassUtils))(SimpleName:searchMethod)(METHOD_INVOCATION_ARGUMENTS(SimpleName:function)(SimpleName:name)(SimpleName:allTypes)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Object))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:method))(SimpleName:getDeclaringClass))))(Block(BreakStatement)))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:method))(SimpleName:getReturnType))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block)))))))(ReturnStatement(MethodInvocation(SimpleName:getReturnType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:leftType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getName)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))(SimpleName:rightTypes)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getName)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(PrimitiveType:int)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:Integer)))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(PrimitiveType:short))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:Short)))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(PrimitiveType:long))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:Long)))))(Block(ReturnStatement(TypeLiteral(SimpleType(SimpleName:IntegerSequence)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(PrimitiveType:char)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:Character)))))(Block(ReturnStatement(TypeLiteral(SimpleType(SimpleName:CharacterSequence)))))(IfStatement(InfixExpression(SimpleName:leftType)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:String))))(Block(ReturnStatement(TypeLiteral(SimpleType(SimpleName:StringSequence)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:leftType))(MethodInvocation(SimpleName:getOffset)))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType)))(VariableDeclarationFragment(SimpleName:types)(MethodInvocation(SimpleName:getParameterTypes))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Map))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:leftType)))(Block(IfStatement(InstanceofExpression(SimpleName:leftParameter)(SimpleType(SimpleName:Variable)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:var)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Variable))(SimpleName:leftParameter))))(SimpleName:getName))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:t)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:types))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:var)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(SimpleName:t))))))(ReturnStatement(TypeLiteral(SimpleType(SimpleName:Object))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:rightType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightParameter))(SimpleName:getReturnType))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:List))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:leftType)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:IntegerSequence))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rightType)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(TypeLiteral(ArrayType(PrimitiveType:int)(Dimension)))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:rightType)))(Block(ReturnStatement(TypeLiteral(SimpleType(SimpleName:List)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(PrimitiveType:int)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rightType)))(Block(IfStatement(InstanceofExpression(SimpleName:leftParameter)(SimpleType(SimpleName:Variable)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:var)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Variable))(SimpleName:leftParameter))))(SimpleName:getName))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:t)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:types))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:var)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(SimpleName:t))))))(ReturnStatement(TypeLiteral(SimpleType(SimpleName:Object)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightType))(SimpleName:getName))(StringLiteral:<STR>))(MethodInvocation(SimpleName:getOffset))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:leftType))(SimpleName:isArray))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:IntegerSequence))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rightType)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(TypeLiteral(ArrayType(PrimitiveType:int)(Dimension)))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:rightType)))(Block(ReturnStatement(SimpleName:leftType)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(PrimitiveType:int)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rightType)))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:leftType))(SimpleName:getComponentType))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightType))(SimpleName:getName))(StringLiteral:<STR>))(MethodInvocation(SimpleName:getOffset))))))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:leftType))(SimpleName:getName)))(MethodInvocation(SimpleName:getOffset)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rightParameter))(SimpleName:getReturnType))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(InstanceofExpression(SimpleName:leftParameter)(SimpleType(SimpleName:BinaryOperator)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:BinaryOperator))(SimpleName:leftParameter))))(SimpleName:getName))))))))(Block(ReturnStatement(TypeLiteral(SimpleType(QualifiedName:Map.Entry)))))(Block(ReturnStatement(SimpleName:leftType))))))))))))