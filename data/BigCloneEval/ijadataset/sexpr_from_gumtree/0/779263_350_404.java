(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:boolean)(SimpleName:differs)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:fileName))(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:SortedMap))(SimpleType(SimpleName:Integer))(SimpleType(SimpleName:Integer)))(SimpleName:diffMap))(SimpleType(SimpleName:FileIOException))(Block(TryStatement(Block(IfStatement(SimpleName:opened)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChannel))(SimpleName:position)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(Block(ExpressionStatement(Assignment(SimpleName:fileChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file)))(SimpleName:getChannel)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exception))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HELPER_FILE_UTIL))(SimpleName:fileIOException)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(SimpleName:fileName))(SimpleName:file)(SimpleName:exception)))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:differs)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:referenceChannel)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:referenceChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:fileName)))(SimpleName:getChannel))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChannel))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceChannel))(SimpleName:size)))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:length)(NumberLiteral:1024)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:byteBuffer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:length)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:referenceByteBuffer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:length)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:data)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:referenceData)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:readPosition)(NumberLiteral:0)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:DiffBuffer))(VariableDeclarationFragment(SimpleName:diffBuffer)(ClassInstanceCreation(SimpleType(SimpleName:DiffBuffer))(SimpleName:diffMap))))(ExpressionStatement(Assignment(SimpleName:differs)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(DoStatement(Block(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:byteBuffer)(SimpleName:fileChannel)))))(ExpressionStatement(Assignment(SimpleName:referenceData)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:referenceByteBuffer)(SimpleName:referenceChannel)))))(ExpressionStatement(Assignment(SimpleName:differs)(ASSIGNMENT_OPERATOR:|=)(MethodInvocation(SimpleName:differs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(SimpleName:referenceData)(SimpleName:readPosition)(SimpleName:diffBuffer)))))(ExpressionStatement(Assignment(SimpleName:readPosition)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:data.length))))(InfixExpression(QualifiedName:data.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diffBuffer))(SimpleName:close))))(Block(ExpressionStatement(Assignment(SimpleName:differs)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exception))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HELPER_FILE_UTIL))(SimpleName:fileIOException)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(SimpleName:fileName))(SimpleName:file)(SimpleName:exception))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:referenceChannel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceChannel))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exception))(Block)))))(TryStatement(Block(IfStatement(SimpleName:opened)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChannel))(SimpleName:position)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentPositionInFile)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChannel))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exception))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HELPER_FILE_UTIL))(SimpleName:fileIOException)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(SimpleName:fileName))(SimpleName:file)(SimpleName:exception)))))))(ReturnStatement(SimpleName:differs))))))