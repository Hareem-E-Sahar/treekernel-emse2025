(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:binarySearch)(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:list))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:key))(SingleVariableDeclaration(SimpleType(SimpleName:Comparator))(SimpleName:c))(Block(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(MethodInvocation(SimpleName:binarySearch)(METHOD_INVOCATION_ARGUMENTS(SimpleName:list)(SimpleName:key)))))(IfStatement(InstanceofExpression(SimpleName:list)(SimpleType(SimpleName:AbstractSequentialList)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ListIterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:listIterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cmp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next))(SimpleName:key)))))(IfStatement(InfixExpression(SimpleName:cmp)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:previousIndex)))(IfStatement(InfixExpression(SimpleName:cmp)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:nextIndex))))))))(ReturnStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:nextIndex)))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:low)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:high)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:high))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:high)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:midVal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cmp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:midVal)(SimpleName:key)))))(IfStatement(InfixExpression(SimpleName:cmp)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(IfStatement(InfixExpression(SimpleName:cmp)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ReturnStatement(SimpleName:mid))))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))))