(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:startElement)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:namespaceURI))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:localName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:qName))(SingleVariableDeclaration(SimpleType(SimpleName:Attributes))(SimpleName:atts))(SimpleType(SimpleName:SAXException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qName))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:ArchiveNormaliser.ARCHIVE_PREFIX)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:ArchiveNormaliser.ENTRY_TAG))))(Block(ExpressionStatement(PostfixExpression(SimpleName:entryCounter)(POSTFIX_EXPRESSION_OPERATOR:++)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:xenaFilename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atts))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:ArchiveNormaliser.ARCHIVE_PREFIX)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:ArchiveNormaliser.ENTRY_OUTPUT_FILENAME))))))(IfStatement(InfixExpression(SimpleName:xenaFilename)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:xenaFilename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atts))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ArchiveNormaliser.ENTRY_OUTPUT_FILENAME)))))))(IfStatement(InfixExpression(SimpleName:xenaFilename)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SAXException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:entryFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:sourceDirectory)(SimpleName:xenaFilename))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryFile))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryFile))(SimpleName:isFile)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:entryExportFile)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ExportResult))(VariableDeclarationFragment(SimpleName:exportResult)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:normaliserManager))(SimpleName:export)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:XenaInputSource))(SimpleName:entryFile))(SimpleName:outputDirectory)(BooleanLiteral:true)))))(ExpressionStatement(Assignment(SimpleName:entryExportFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exportResult))(SimpleName:getOutputFile))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:originalPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atts))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:ArchiveNormaliser.ARCHIVE_PREFIX)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:ArchiveNormaliser.ENTRY_ORIGINAL_PATH_ATTRIBUTE))))))(IfStatement(InfixExpression(SimpleName:originalPath)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:originalPath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atts))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ArchiveNormaliser.ENTRY_ORIGINAL_PATH_ATTRIBUTE)))))))(IfStatement(InfixExpression(SimpleName:originalPath)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SAXException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:extensionIndex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryExportFile))(SimpleName:getName)))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:entryExportFileExtension)(ConditionalExpression(InfixExpression(SimpleName:extensionIndex)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryExportFile))(SimpleName:getName)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:extensionIndex)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:entryName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:normaliserManager))(SimpleName:adjustOutputFileExtension)(METHOD_INVOCATION_ARGUMENTS(SimpleName:originalPath)(SimpleName:entryExportFileExtension)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:currentEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:entryName))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:originalDate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atts))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:ArchiveNormaliser.ARCHIVE_PREFIX)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:ArchiveNormaliser.ENTRY_ORIGINAL_FILE_DATE_ATTRIBUTE))))))(IfStatement(InfixExpression(SimpleName:originalDate)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:originalDate)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atts))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ArchiveNormaliser.ENTRY_ORIGINAL_FILE_DATE_ATTRIBUTE)))))))(IfStatement(InfixExpression(SimpleName:originalDate)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SAXException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:SimpleDateFormat))(VariableDeclarationFragment(SimpleName:formatter)(ClassInstanceCreation(SimpleType(SimpleName:SimpleDateFormat))(QualifiedName:ArchiveNormaliser.DATE_FORMAT_STRING))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentEntry))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:formatter))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:originalDate))))(SimpleName:getTime)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOS))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentEntry))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:entryExportIS)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:entryExportFile))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(NumberLiteral:10)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1024)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytesRead)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryExportIS))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(WhileStatement(InfixExpression(SimpleName:bytesRead)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOS))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:bytesRead))))(ExpressionStatement(Assignment(SimpleName:bytesRead)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryExportIS))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryExportIS))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOS))(SimpleName:closeEntry))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SAXException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atts))(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:ArchiveNormaliser.ARCHIVE_PREFIX)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:ArchiveNormaliser.ENTRY_ORIGINAL_PATH_ATTRIBUTE)))))(SimpleName:ex)))))(Block(IfStatement(InfixExpression(SimpleName:entryExportFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryExportFile))(SimpleName:delete)))))))))))))))