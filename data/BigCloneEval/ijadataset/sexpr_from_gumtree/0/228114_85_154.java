(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:invoke)(SingleVariableDeclaration(SimpleType(SimpleName:Remote))(SimpleName:obj))(SingleVariableDeclaration(SimpleType(SimpleName:Method))(SimpleName:method))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:params))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:opnum))(SimpleType(SimpleName:Exception))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.VERBOSE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.VERBOSE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:method)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientCallLog))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.VERBOSE)))(Block(ExpressionStatement(MethodInvocation(SimpleName:logClientCall)(METHOD_INVOCATION_ARGUMENTS(SimpleName:obj)(SimpleName:method))))))(VariableDeclarationStatement(SimpleType(SimpleName:Connection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ref))(SimpleName:getChannel)))(SimpleName:newConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:RemoteCall))(VariableDeclarationFragment(SimpleName:call)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:reuse)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:alreadyFreed)(BooleanLiteral:false)))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.VERBOSE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.VERBOSE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:opnum)))))))(ExpressionStatement(Assignment(SimpleName:call)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StreamRemoteCall))(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ref))(SimpleName:getObjID))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(SimpleName:opnum))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ObjectOutput))(VariableDeclarationFragment(SimpleName:out)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:call))(SimpleName:getOutputStream))))(ExpressionStatement(MethodInvocation(SimpleName:marshalCustomCallData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(VariableDeclarationStatement(ArrayType(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(Dimension))(VariableDeclarationFragment(SimpleName:types)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:method))(SimpleName:getParameterTypes))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:types.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:marshalValue)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:types)(SimpleName:i))(ArrayAccess(SimpleName:params)(SimpleName:i))(SimpleName:out)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.BRIEF)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MarshalException))(StringLiteral:<STR>)(SimpleName:e))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:call))(SimpleName:executeCall)))(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:rtype)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:method))(SimpleName:getReturnType))))(IfStatement(InfixExpression(SimpleName:rtype)(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(PrimitiveType:void)))(ReturnStatement(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ObjectInput))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:call))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:returnValue)(MethodInvocation(SimpleName:unmarshalValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rtype)(SimpleName:in)))))(ExpressionStatement(Assignment(SimpleName:alreadyFreed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.BRIEF)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ref))(SimpleName:getChannel)))(SimpleName:free)(METHOD_INVOCATION_ARGUMENTS(SimpleName:conn)(BooleanLiteral:true))))(ReturnStatement(SimpleName:returnValue)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.BRIEF)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:UnmarshalException))(StringLiteral:<STR>)(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.BRIEF)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:UnmarshalException))(StringLiteral:<STR>)(SimpleName:e)))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:call))(SimpleName:done))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:reuse)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RuntimeException))(SimpleName:e))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:call)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:StreamRemoteCall))(SimpleName:call))))(SimpleName:getServerException))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:e))))(Block(ExpressionStatement(Assignment(SimpleName:reuse)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(ThrowStatement(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RemoteException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:reuse)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ThrowStatement(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Error))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:reuse)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ThrowStatement(SimpleName:e))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:alreadyFreed))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.BRIEF)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientRefLog))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.BRIEF)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:reuse)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ref))(SimpleName:getChannel)))(SimpleName:free)(METHOD_INVOCATION_ARGUMENTS(SimpleName:conn)(SimpleName:reuse))))))))))))