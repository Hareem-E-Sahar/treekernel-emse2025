(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:newResult)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ShadowFile))(SimpleName:result))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:onDisk)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Semaphore))(VariableDeclarationFragment(SimpleName:sem)(ClassInstanceCreation(SimpleType(SimpleName:Semaphore))(NumberLiteral:0))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:filename))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getFilenames))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fullFilename)(InfixExpression(SimpleName:basePath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fullFilename))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getSize))))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getKey)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:shadowFileService))(SimpleName:createShadowKey)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file)))))))(Block(IfStatement(InfixExpression(SimpleName:onDisk)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:onDisk)(ASSIGNMENT_OPERATOR:=)(SimpleName:file)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sem))(SimpleName:release)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Integer.MAX_VALUE))))(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LOG)(StringLiteral:<STR>)(SimpleName:fullFilename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getSize))))))(IfStatement(InfixExpression(SimpleName:onDisk)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:srcFile)(SimpleName:onDisk)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workQueue1))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:WorkItem))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sem))(SimpleName:acquire)))(SynchronizedStatement(StringLiteral:<STR>)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:forceMkdir)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getParentFile)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteQuietly)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:file))))(ExpressionStatement(MethodInvocation(SimpleName:logInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LOG)(StringLiteral:<STR>)(SimpleName:fullFilename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:getName)))))(IfStatement(InfixExpression(SimpleName:consumer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:consumer))(SimpleName:newResult)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fullFilename))))))))))))))(Block(SynchronizedStatement(StringLiteral:<STR>)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:forceMkdir)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getParentFile)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteQuietly)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:onDisk)(ASSIGNMENT_OPERATOR:=)(SimpleName:file)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getSize))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:touch)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sem))(SimpleName:release)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Integer.MAX_VALUE))))(ExpressionStatement(MethodInvocation(SimpleName:logInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LOG)(StringLiteral:<STR>)(SimpleName:fullFilename))))(IfStatement(InfixExpression(SimpleName:consumer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:consumer))(SimpleName:newResult)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fullFilename)))))))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:QuillenOutputFile))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:QuillenOutputFile))(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getSize))(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sem))(SimpleName:release)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Integer.MAX_VALUE))))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getKey)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:shadowFileService))(SimpleName:createShadowKey)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:logInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LOG)(StringLiteral:<STR>)(SimpleName:fullFilename))))(IfStatement(InfixExpression(SimpleName:consumer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:consumer))(SimpleName:newResult)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fullFilename)))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:logWarning)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LOG)(StringLiteral:<STR>)(SimpleName:fullFilename)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LOG)(SimpleName:e)(SimpleName:consumer)(StringLiteral:<STR>)(SimpleName:fullFilename))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workQueue1))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:WorkItem))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:currPos)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:ck))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:shadowFileService))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getKey)))))(SimpleName:getChunkKeys))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:chunkKey)(SimpleName:ck)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:pos)(SimpleName:currPos)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workQueue2))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:WorkItem))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleType(SimpleName:ObjectStorageException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chunkService))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:chunkKey))))(SimpleName:getData))))))))))))(ExpressionStatement(Assignment(SimpleName:currPos)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Chunk))(SimpleName:getSizeFromKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:chunkKey)))))))))))))))))))))))))