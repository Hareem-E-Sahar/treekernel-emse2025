(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:copyFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:source_name))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:dest_name))(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(Assignment(SimpleName:source_name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Shell))(SimpleName:getUtils)))(SimpleName:constructPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:source_name)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:source_file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:source_name))))(ExpressionStatement(Assignment(SimpleName:dest_name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Shell))(SimpleName:getUtils)))(SimpleName:constructPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dest_name)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destination_file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dest_name))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:source)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:destination)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytes_read)))(TryStatement(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:isFile))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source_name)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:canRead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:source_name)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:exists))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:isFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(QualifiedName:System.in)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:response)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:canWrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:dest_name)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dest_name)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:flush)))(ExpressionStatement(Assignment(SimpleName:response)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readLine))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(StringLiteral:<STR>)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:dest_name))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parentdir)(MethodInvocation(SimpleName:parent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destination_file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentdir))(SimpleName:exists)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:dest_name)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentdir))(SimpleName:canWrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:dest_name)))))))(ExpressionStatement(Assignment(SimpleName:source)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:source_file))))(ExpressionStatement(Assignment(SimpleName:destination)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destination_file))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:Long))(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:1024)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:50)))))(SimpleName:intValue))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:written)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(WhileStatement(BooleanLiteral:true)(Block(IfStatement(InfixExpression(SimpleName:written)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:50))(Block(IfStatement(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(PostfixExpression(SimpleName:written)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:1)))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(ExpressionStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(NumberLiteral:50)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:c)))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:50))))(ExpressionStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:50)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:c)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:j))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:written)(ASSIGNMENT_OPERATOR:+=)(SimpleName:j))))))))(ExpressionStatement(Assignment(SimpleName:bytes_read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(IfStatement(InfixExpression(SimpleName:bytes_read)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:bytes_read))))(ExpressionStatement(PostfixExpression(SimpleName:c)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println))))(Block(IfStatement(InfixExpression(SimpleName:source)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))(IfStatement(InfixExpression(SimpleName:destination)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))))))))