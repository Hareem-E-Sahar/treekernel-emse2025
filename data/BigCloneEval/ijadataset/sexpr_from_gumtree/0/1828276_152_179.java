(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:generateInstruments)(SingleVariableDeclaration(SimpleType(SimpleName:Arrangement))(SimpleName:arr))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lines))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Line))(VariableDeclarationFragment(SimpleName:line)(CastExpression(SimpleType(SimpleName:Line))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lineName)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:isZak))(Block(ExpressionStatement(Assignment(SimpleName:lineName)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getChannel))))))(Block(ExpressionStatement(Assignment(SimpleName:lineName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getVarName))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lineId)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getUniqueID))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:key)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lineName))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:val)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arr))(SimpleName:getCompilationVariable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:instrNum)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:lineNum)(CastExpression(SimpleType(SimpleName:Integer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ftableNumMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lineId))))))(IfStatement(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:instrText)(MethodInvocation(SimpleName:generateLineInstrument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))(VariableDeclarationStatement(SimpleType(SimpleName:GenericInstrument))(VariableDeclarationFragment(SimpleName:instr)(ClassInstanceCreation(SimpleType(SimpleName:GenericInstrument)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:instr))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(SimpleName:instrText))))(ExpressionStatement(Assignment(SimpleName:instrNum)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arr))(SimpleName:addInstrument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:instr)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arr))(SimpleName:setCompilationVariable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(ClassInstanceCreation(SimpleType(SimpleName:Integer))(SimpleName:instrNum))))))(Block(ExpressionStatement(Assignment(SimpleName:instrNum)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Integer))(SimpleName:val))))(SimpleName:intValue))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:instrLineArray)(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Integer))(SimpleName:instrNum))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:instrLineArray)(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(SimpleName:lineNum)))))))))