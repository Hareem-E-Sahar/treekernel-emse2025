(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:write)(SingleVariableDeclaration(ArrayType(PrimitiveType:char)(Dimension))(SimpleName:cbuf))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:off))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:len))(SimpleType(SimpleName:IOException))(Block(WhileStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(SynchronizedStatement(ThisExpression(SimpleName:CircularCharBuffer))(Block(IfStatement(SimpleName:writerClosed)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(IfStatement(SimpleName:readerClosed)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:spaceLeft)(MethodInvocation(SimpleName:spaceLeft))))(WhileStatement(InfixExpression(SimpleName:infinite)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:spaceLeft)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:len)))(Block(ExpressionStatement(MethodInvocation(SimpleName:resize)))(ExpressionStatement(Assignment(SimpleName:spaceLeft)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:spaceLeft))))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:blockingWrite))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:spaceLeft)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:len)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BufferOverflowException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:len)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:realLen)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:len)(SimpleName:spaceLeft)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:firstLen)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:realLen)(InfixExpression(QualifiedName:buffer.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:writePosition))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:secondLen)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:realLen)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:firstLen))(InfixExpression(QualifiedName:buffer.length)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:markPosition)(NumberLiteral:1))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:written)(InfixExpression(SimpleName:firstLen)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:secondLen))))(IfStatement(InfixExpression(SimpleName:firstLen)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cbuf)(SimpleName:off)(SimpleName:buffer)(SimpleName:writePosition)(SimpleName:firstLen))))))(IfStatement(InfixExpression(SimpleName:secondLen)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cbuf)(InfixExpression(SimpleName:off)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:firstLen))(SimpleName:buffer)(NumberLiteral:0)(SimpleName:secondLen))))(ExpressionStatement(Assignment(SimpleName:writePosition)(ASSIGNMENT_OPERATOR:=)(SimpleName:secondLen))))(Block(ExpressionStatement(Assignment(SimpleName:writePosition)(ASSIGNMENT_OPERATOR:+=)(SimpleName:written)))))(IfStatement(InfixExpression(SimpleName:writePosition)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:buffer.length))(Block(ExpressionStatement(Assignment(SimpleName:writePosition)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(ExpressionStatement(Assignment(SimpleName:off)(ASSIGNMENT_OPERATOR:+=)(SimpleName:written)))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:-=)(SimpleName:written)))))(IfStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:100)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:x))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))))))))))))