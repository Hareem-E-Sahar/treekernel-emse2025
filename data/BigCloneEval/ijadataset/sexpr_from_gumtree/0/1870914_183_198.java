(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:copyStateTo)(SingleVariableDeclaration(SimpleType(SimpleName:RrdUpdater))(SimpleName:other))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:RrdException))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:other)(SimpleType(SimpleName:Robin)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RrdException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:other))(SimpleName:getClass)))(SimpleName:getName)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Robin))(VariableDeclarationFragment(SimpleName:robin)(CastExpression(SimpleType(SimpleName:Robin))(SimpleName:other))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:rowsDiff)(InfixExpression(SimpleName:rows)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:robin.rows))))(IfStatement(InfixExpression(SimpleName:rowsDiff)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:robin.pointer))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pointer))(SimpleName:get)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:robin.values))(SimpleName:writeBytes)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:values))(SimpleName:readBytes))))))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:robin.rows))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rowsDiff))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:robin))(SimpleName:store)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(MethodInvocation(SimpleName:getValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)))(QualifiedName:Double.NaN)))))))))))))