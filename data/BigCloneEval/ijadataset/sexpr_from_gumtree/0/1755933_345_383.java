(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:synchronized)(SimpleType(SimpleName:KeyPair))(SimpleName:doCA)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:keyId))(SingleVariableDeclaration(SimpleType(SimpleName:PublicKey))(SimpleName:key))(SimpleType(SimpleName:CardServiceException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:algName)(ConditionalExpression(ParenthesizedExpression(InstanceofExpression(SimpleName:key)(SimpleType(SimpleName:ECPublicKey))))(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPairGenerator))(VariableDeclarationFragment(SimpleName:genKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:KeyPairGenerator))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:algName)))))(VariableDeclarationStatement(SimpleType(SimpleName:AlgorithmParameterSpec))(VariableDeclarationFragment(SimpleName:spec)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:algName)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DHPublicKey))(VariableDeclarationFragment(SimpleName:k)(CastExpression(SimpleType(SimpleName:DHPublicKey))(SimpleName:key))))(ExpressionStatement(Assignment(SimpleName:spec)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:k))(SimpleName:getParams)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ECPublicKey))(VariableDeclarationFragment(SimpleName:k)(CastExpression(SimpleType(SimpleName:ECPublicKey))(SimpleName:key))))(ExpressionStatement(Assignment(SimpleName:spec)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:k))(SimpleName:getParams))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:genKey))(SimpleName:initialize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:spec))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPair))(VariableDeclarationFragment(SimpleName:keyPair)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:genKey))(SimpleName:generateKeyPair))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyAgreement))(VariableDeclarationFragment(SimpleName:agreement)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:KeyAgreement))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agreement))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPair))(SimpleName:getPrivate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agreement))(SimpleName:doPhase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:md)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:secret)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:agreement))(SimpleName:generateSecret))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:keyData)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:algName)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DHPublicKey))(VariableDeclarationFragment(SimpleName:k)(CastExpression(SimpleType(SimpleName:DHPublicKey))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPair))(SimpleName:getPublic)))))(ExpressionStatement(Assignment(SimpleName:keyData)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:k))(SimpleName:getY)))(SimpleName:toByteArray)))))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:org.bouncycastle.jce.interfaces.ECPublicKey))(VariableDeclarationFragment(SimpleName:k)(CastExpression(SimpleType(QualifiedName:org.bouncycastle.jce.interfaces.ECPublicKey))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPair))(SimpleName:getPublic)))))(ExpressionStatement(Assignment(SimpleName:keyData)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:k))(SimpleName:getQ)))(SimpleName:getEncoded))))))(ExpressionStatement(Assignment(SimpleName:keyData)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:tagData)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(NumberLiteral:0x91))(SimpleName:keyData)))))(ExpressionStatement(MethodInvocation(SimpleName:sendMSE)(METHOD_INVOCATION_ARGUMENTS(SimpleName:wrapper)(NumberLiteral:0x41)(NumberLiteral:0xA6)(SimpleName:keyData))))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKey))(VariableDeclarationFragment(SimpleName:ksEnc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:deriveKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:secret)(QualifiedName:Util.ENC_MODE)))))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKey))(VariableDeclarationFragment(SimpleName:ksMac)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:deriveKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:secret)(QualifiedName:Util.MAC_MODE)))))(ExpressionStatement(Assignment(SimpleName:wrapper)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SecureMessagingWrapper))(SimpleName:ksEnc)(SimpleName:ksMac)(NumberLiteral:0L))))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:CA_AUTHENTICATED_STATE)))(ReturnStatement(SimpleName:keyPair)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CardServiceException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))))))))))))