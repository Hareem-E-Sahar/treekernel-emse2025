(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:synchronized)(PrimitiveType:void)(SimpleName:track)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:EventPacket))(WildcardType(SimpleType(SimpleName:BasicEvent))))(SimpleName:ae))(Block(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:State.INITIAL))(Block(IfStatement(InfixExpression(SimpleName:initMask)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:initMask)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:boolean)(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chip))(SimpleName:getSizeX)))(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chip))(SimpleName:getSizeY)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chip))(SimpleName:getSizeX)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chip))(SimpleName:getSizeY)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:initMask)(SimpleName:i))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))))(IfStatement(InfixExpression(SimpleName:eventCounter)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:eventsToInit))(Block(ExpressionStatement(MethodInvocation(SimpleName:kMeans)))(ExpressionStatement(MethodInvocation(SimpleName:findFly)))(ExpressionStatement(MethodInvocation(SimpleName:initWingEdges)))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:nextState)))(ExpressionStatement(Assignment(SimpleName:eventCounter)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(NumberLiteral:0)))(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ae))(SimpleName:getSize)))(PostfixExpression(SimpleName:n)(POSTFIX_EXPRESSION_OPERATOR:++))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ArrayAccess(ArrayAccess(SimpleName:initMask)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ae))(SimpleName:getEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)))(SimpleName:x)))(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ae))(SimpleName:getEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)))(SimpleName:y))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:initPoints))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:EventWingPair))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ae))(SimpleName:getEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)))(QualifiedName:WingType.Unknown)))))(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:initMask)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ae))(SimpleName:getEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)))(SimpleName:x)))(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ae))(SimpleName:getEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)))(SimpleName:y)))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))(ExpressionStatement(Assignment(SimpleName:eventCounter)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ae))(SimpleName:getSize))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:logLine)(ClassInstanceCreation(SimpleType(SimpleName:String)))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:State.TRACKING))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:Point2D.Float))(VariableDeclarationFragment(SimpleName:eventPoint)(ClassInstanceCreation(SimpleType(QualifiedName:Point2D.Float)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:m1)(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:mixingFactor))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:rads)(NumberLiteral:0f)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:BasicEvent))(SimpleName:o))(SimpleName:ae)(Block(VariableDeclarationStatement(SimpleType(SimpleName:PolarityEvent))(VariableDeclarationFragment(SimpleName:ev)(CastExpression(SimpleType(SimpleName:PolarityEvent))(SimpleName:o))))(ExpressionStatement(Assignment(QualifiedName:eventPoint.x)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ev.x)))(ExpressionStatement(Assignment(QualifiedName:eventPoint.y)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ev.y)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:body))(SimpleName:distance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.x)(QualifiedName:ev.y)))(INFIX_EXPRESSION_OPERATOR:>)(InfixExpression(SimpleName:searchRange)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:searchRangeOffset)))(ContinueStatement))(ExpressionStatement(Assignment(SimpleName:rads)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:radiansInHeadingCircle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:eventPoint)))))(IfStatement(InfixExpression(SimpleName:rads)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:Math.PI))(Block(ExpressionStatement(Assignment(QualifiedName:leftBuffer.x)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getX))))(ExpressionStatement(Assignment(QualifiedName:leftBuffer.y)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getY))))(ExpressionStatement(PostfixExpression(SimpleName:leftBufferCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(QualifiedName:ev.polarity)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:Off))(Block(ExpressionStatement(Assignment(SimpleName:leftLeadingEdge)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:m1)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:leftLeadingEdge))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:mixingFactor)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rads)))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(SimpleName:leftLeadingEdge)(StringLiteral:<STR>)(SimpleName:frequenceLeft)(StringLiteral:<STR>)(SimpleName:amplitudeLeft)))))))(Block(ExpressionStatement(Assignment(SimpleName:leftTrailingEdge)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:m1)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:leftTrailingEdge))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:mixingFactor)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rads)))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(SimpleName:leftTrailingEdge)(StringLiteral:<STR>)(SimpleName:frequenceLeft)(StringLiteral:<STR>)(SimpleName:amplitudeLeft))))(EmptyStatement)))))(ExpressionStatement(Assignment(SimpleName:positionLeft)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:leftLeadingEdge)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:leftTrailingEdge)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(Block(ExpressionStatement(Assignment(QualifiedName:rightBuffer.x)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getX))))(ExpressionStatement(Assignment(QualifiedName:rightBuffer.y)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getY))))(ExpressionStatement(PostfixExpression(SimpleName:rightBufferCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(QualifiedName:ev.polarity)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:Off))(Block(ExpressionStatement(Assignment(SimpleName:rightLeadingEdge)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:m1)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rightLeadingEdge))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:mixingFactor)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rads)))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(SimpleName:rightLeadingEdge)(StringLiteral:<STR>)(SimpleName:frequenceRight)(StringLiteral:<STR>)(SimpleName:amplitudeRight))))(EmptyStatement))))(Block(ExpressionStatement(Assignment(SimpleName:rightTrailingEdge)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:m1)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rightTrailingEdge))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:mixingFactor)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rads)))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(SimpleName:rightTrailingEdge))))))))(ExpressionStatement(Assignment(SimpleName:positionRight)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:rightLeadingEdge)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rightTrailingEdge)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))))(IfStatement(SimpleName:doLog)(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:logLine)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:rads)))))(ExpressionStatement(MethodInvocation(SimpleName:updateParams)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.timestamp))))))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:State.KALMAN))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:Point2D.Float))(VariableDeclarationFragment(SimpleName:eventPoint)(ClassInstanceCreation(SimpleType(QualifiedName:Point2D.Float)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:rads)(NumberLiteral:0f)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:BasicEvent))(SimpleName:o))(SimpleName:ae)(Block(VariableDeclarationStatement(SimpleType(SimpleName:PolarityEvent))(VariableDeclarationFragment(SimpleName:ev)(CastExpression(SimpleType(SimpleName:PolarityEvent))(SimpleName:o))))(ExpressionStatement(Assignment(QualifiedName:eventPoint.x)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ev.x)))(ExpressionStatement(Assignment(QualifiedName:eventPoint.y)(ASSIGNMENT_OPERATOR:=)(QualifiedName:ev.y)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:body))(SimpleName:distance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.x)(QualifiedName:ev.y)))(INFIX_EXPRESSION_OPERATOR:>)(InfixExpression(SimpleName:searchRange)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:searchRangeOffset)))(ContinueStatement))(ExpressionStatement(Assignment(SimpleName:rads)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:radiansInHeadingCircle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:eventPoint)))))(IfStatement(InfixExpression(SimpleName:rads)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:Math.PI))(Block(IfStatement(InfixExpression(QualifiedName:ev.polarity)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:Off))(Block(IfStatement(InfixExpression(SimpleName:LLE)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:LLE)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:EKF))(StringLiteral:<STR>)(QualifiedName:ev.timestamp)(SimpleName:centroidLeft)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LLE))(SimpleName:getUseEdge)))(ContinueStatement))(ExpressionStatement(PostfixExpression(SimpleName:lleEventCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:lleBuffer)(ASSIGNMENT_OPERATOR:+=)(SimpleName:rads)))(IfStatement(InfixExpression(SimpleName:lleEventCount)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nbEventsToCollectPerEdge))(Block(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:rads)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:lleBuffer)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:nbEventsToCollectPerEdge))))(ExpressionStatement(Assignment(SimpleName:lleBuffer)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0f)))(ExpressionStatement(Assignment(SimpleName:lleEventCount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LLE))(SimpleName:predict)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.timestamp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LLE))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rads))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LLE))(SimpleName:getEdgeInRads))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LLE.x)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LLE.x)(NumberLiteral:1))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LLE.x)(NumberLiteral:2))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LLE.x)(NumberLiteral:3))(StringLiteral:<STR>)(SimpleName:rads)))))))(Block(IfStatement(InfixExpression(SimpleName:LTE)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:LTE)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:EKF))(StringLiteral:<STR>)(QualifiedName:ev.timestamp)(SimpleName:centroidLeft)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LTE))(SimpleName:getUseEdge)))(ContinueStatement))(ExpressionStatement(PostfixExpression(SimpleName:lteEventCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:lteBuffer)(ASSIGNMENT_OPERATOR:+=)(SimpleName:rads)))(IfStatement(InfixExpression(SimpleName:lteEventCount)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nbEventsToCollectPerEdge))(Block(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:rads)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:lteBuffer)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:nbEventsToCollectPerEdge))))(ExpressionStatement(Assignment(SimpleName:lteBuffer)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0f)))(ExpressionStatement(Assignment(SimpleName:lteEventCount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:leftTrailingEdge)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:mixingFactor)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:leftTrailingEdge))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:mixingFactor)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rads)))))(ExpressionStatement(Assignment(SimpleName:positionLeft)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:leftLeadingEdge)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:leftTrailingEdge)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(MethodInvocation(SimpleName:updateParams)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.timestamp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LTE))(SimpleName:predict)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.timestamp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LTE))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rads))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LTE))(SimpleName:getEdgeInRads))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LTE.x)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LTE.x)(NumberLiteral:1))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LTE.x)(NumberLiteral:2))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:LTE.x)(NumberLiteral:3))(StringLiteral:<STR>)(SimpleName:rads)))))))))(Block(IfStatement(InfixExpression(QualifiedName:ev.polarity)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:Off))(Block(IfStatement(InfixExpression(SimpleName:RLE)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:RLE)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:EKF))(StringLiteral:<STR>)(QualifiedName:ev.timestamp)(SimpleName:centroidRight)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RLE))(SimpleName:getUseEdge)))(ContinueStatement))(ExpressionStatement(PostfixExpression(SimpleName:rleEventCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:rleBuffer)(ASSIGNMENT_OPERATOR:+=)(SimpleName:rads)))(IfStatement(InfixExpression(SimpleName:rleEventCount)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nbEventsToCollectPerEdge))(Block(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:rads)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:rleBuffer)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:nbEventsToCollectPerEdge))))(ExpressionStatement(Assignment(SimpleName:rleBuffer)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0f)))(ExpressionStatement(Assignment(SimpleName:rleEventCount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RLE))(SimpleName:predict)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.timestamp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RLE))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rads))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RLE))(SimpleName:getEdgeInRads))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RLE.x)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RLE.x)(NumberLiteral:1))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RLE.x)(NumberLiteral:2))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RLE.x)(NumberLiteral:3))(StringLiteral:<STR>)(SimpleName:rads)))))))(Block(IfStatement(InfixExpression(SimpleName:RTE)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:RTE)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:EKF))(StringLiteral:<STR>)(QualifiedName:ev.timestamp)(SimpleName:centroidRight)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RTE))(SimpleName:getUseEdge)))(ContinueStatement))(ExpressionStatement(PostfixExpression(SimpleName:rteEventCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:rteBuffer)(ASSIGNMENT_OPERATOR:+=)(SimpleName:rads)))(IfStatement(InfixExpression(SimpleName:rteEventCount)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nbEventsToCollectPerEdge))(Block(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:rads)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:rteBuffer)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:nbEventsToCollectPerEdge))))(ExpressionStatement(Assignment(SimpleName:rteBuffer)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0f)))(ExpressionStatement(Assignment(SimpleName:rteEventCount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RTE))(SimpleName:predict)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ev.timestamp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RTE))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rads))))(IfStatement(SimpleName:doLog)(Block(ExpressionStatement(Assignment(SimpleName:logLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ev))(SimpleName:getTimestamp))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RTE))(SimpleName:getEdgeInRads))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RTE.x)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RTE.x)(NumberLiteral:1))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RTE.x)(NumberLiteral:2))(StringLiteral:<STR>)(ArrayAccess(QualifiedName:RTE.x)(NumberLiteral:3))(StringLiteral:<STR>)(SimpleName:rads))))))))))))))(IfStatement(SimpleName:doLog)(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:logWriter)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logWriter))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:logLine)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nl))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:toString))))))))))))))