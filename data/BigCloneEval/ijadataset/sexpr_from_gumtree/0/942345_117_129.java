(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:addNote)(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:noteStart_ppq))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:bufferEnd_ppq))(SingleVariableDeclaration(SimpleType(SimpleName:Track))(SimpleName:midiTrack))(SimpleType(SimpleName:InvalidMidiDataException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ShortMessage))(VariableDeclarationFragment(SimpleName:on)(ClassInstanceCreation(SimpleType(SimpleName:ShortMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:on))(SimpleName:setMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ShortMessage.NOTE_ON)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:midiTrack))(SimpleName:getChannel))(SimpleName:notePitch)(SimpleName:noteVelocity))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:midiTrack))(SimpleName:addMidiMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:noteStart_ppq)(SimpleName:on))))(ExpressionStatement(Assignment(SimpleName:lastNote_ppq)(ASSIGNMENT_OPERATOR:=)(SimpleName:noteStart_ppq)))(VariableDeclarationStatement(SimpleType(SimpleName:ShortMessage))(VariableDeclarationFragment(SimpleName:off)(ClassInstanceCreation(SimpleType(SimpleName:ShortMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:off))(SimpleName:setMessage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ShortMessage.NOTE_OFF)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:midiTrack))(SimpleName:getChannel))(SimpleName:notePitch)(SimpleName:noteVelocity))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:noteStart_ppq)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noteLength_ppq)))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:bufferEnd_ppq))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:midiEventArrayList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:MIDIEvent))(SimpleName:off)(InfixExpression(SimpleName:noteStart_ppq)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noteLength_ppq)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:midiTrack))(SimpleName:addMidiMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:noteStart_ppq)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noteLength_ppq))(SimpleName:off))))))))))