(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:refineTforY)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:t0))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:yt0))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:y0))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:t1)(NumberLiteral:1)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:th)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:t0)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:t1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(InfixExpression(SimpleName:th)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:t0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:th)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:t1)))(Block(ReturnStatement(SimpleName:t1))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y)(MethodInvocation(SimpleName:YforT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:th)))))(IfStatement(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:y0))(Block(ExpressionStatement(Assignment(SimpleName:t0)(ASSIGNMENT_OPERATOR:=)(SimpleName:th)))(ExpressionStatement(Assignment(SimpleName:yt0)(ASSIGNMENT_OPERATOR:=)(SimpleName:y))))(IfStatement(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:y0))(Block(ExpressionStatement(Assignment(SimpleName:t1)(ASSIGNMENT_OPERATOR:=)(SimpleName:th))))(Block(ReturnStatement(SimpleName:t1)))))))))))