(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:showDefaultPanel)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:devName))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:atkpanelCl)))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:atkpanelClNew)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Class))(Dimension))(VariableDeclarationFragment(SimpleName:atkpanelParamCls)(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension(NumberLiteral:5))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:params)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(NumberLiteral:5))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:atkpanelCl)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:clex))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement))))(TryStatement(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:devName))(SimpleName:getClass))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:1))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:3))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:1))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:4))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:atkpanelParamCls)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:atkpanelClNew)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atkpanelCl))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:atkpanelParamCls))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:clex))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:params)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:devName)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:params)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(QualifiedName:Boolean.FALSE)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:params)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(QualifiedName:Boolean.TRUE)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:params)(NumberLiteral:3))(ASSIGNMENT_OPERATOR:=)(QualifiedName:Boolean.FALSE)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:params)(NumberLiteral:4))(ASSIGNMENT_OPERATOR:=)(QualifiedName:Boolean.TRUE)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:obj)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:atkpanelClNew))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:params)))))(VariableDeclarationStatement(SimpleType(SimpleName:PanelItem))(VariableDeclarationFragment(SimpleName:newPanel)(MethodInvocation(SimpleName:addNewPanel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:obj)(StringLiteral:<STR>)(SimpleName:devName)))))(IfStatement(InfixExpression(SimpleName:newPanel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(SimpleName:showPanelWindow)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:newPanel.parent))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:instex))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:accesex))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:argex))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:invoqex))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:invoqex))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:invoqex))(SimpleName:getMessage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:invoqex))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:showErrorMsg)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))))