(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:synchronized)(ArrayType(SimpleType(SimpleName:MightyStaticBin1D))(Dimension))(SimpleName:splitApproximately)(SingleVariableDeclaration(SimpleType(SimpleName:DoubleArrayList))(SimpleName:percentages))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:k))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:percentSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:percentages))(SimpleName:size))))(IfStatement(InfixExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:percentSize)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:percent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:percentages))(SimpleName:elements))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:noOfBins)(InfixExpression(SimpleName:percentSize)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:subBins)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(SimpleName:percentSize)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:subBins)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:percent)(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)(NumberLiteral:1)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:noOfBins))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:step)(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:percent)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:percent)(SimpleName:i))))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:k))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:1)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:k))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:subBins)(PostfixExpression(SimpleName:c)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:percent)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:step)))))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:quantiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:quantiles)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:DoubleArrayList))(SimpleName:subBins)))))(SimpleName:elements))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:MightyStaticBin1D))(Dimension))(VariableDeclarationFragment(SimpleName:splitBins)(ArrayCreation(ArrayType(SimpleType(SimpleName:MightyStaticBin1D))(Dimension(SimpleName:noOfBins))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxOrderForSumOfPowers)(MethodInvocation(SimpleName:getMaxOrderForSumOfPowers))))(ExpressionStatement(Assignment(SimpleName:maxOrderForSumOfPowers)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:10)(SimpleName:maxOrderForSumOfPowers)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:dataSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:size))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:noOfBins))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:step)(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:percent)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:percent)(SimpleName:i))))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:k))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binSum)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binSumOfSquares)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binSumOfLogarithms)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binSumOfInversions)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:binSumOfPowers)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:maxOrderForSumOfPowers)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(Block(ExpressionStatement(Assignment(SimpleName:binSumOfPowers)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(InfixExpression(SimpleName:maxOrderForSumOfPowers)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2)))))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binMin)(ArrayAccess(SimpleName:quantiles)(PostfixExpression(SimpleName:c)(POSTFIX_EXPRESSION_OPERATOR:++)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:safe_min)(SimpleName:binMin)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:subIntervalSize)(InfixExpression(SimpleName:dataSize)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:step))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:1)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:k))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binMax)(ArrayAccess(SimpleName:quantiles)(PostfixExpression(SimpleName:c)(POSTFIX_EXPRESSION_OPERATOR:++)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binMean)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:binMin)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:binMax)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:binSum)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:binMean)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:subIntervalSize))))(ExpressionStatement(Assignment(SimpleName:binSumOfSquares)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:binMean)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:binMean)(SimpleName:subIntervalSize))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:hasSumOfLogarithms))(Block(ExpressionStatement(Assignment(SimpleName:binSumOfLogarithms)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:binMean))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:subIntervalSize))))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:hasSumOfInversions))(Block(ExpressionStatement(Assignment(SimpleName:binSumOfInversions)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ParenthesizedExpression(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:binMean)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:subIntervalSize))))))(IfStatement(InfixExpression(SimpleName:maxOrderForSumOfPowers)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:3))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:binSumOfPowers)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:binMean)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:binMean)(SimpleName:binMean)(SimpleName:subIntervalSize)))))(IfStatement(InfixExpression(SimpleName:maxOrderForSumOfPowers)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:4))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:binSumOfPowers)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:binMean)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:binMean)(SimpleName:binMean)(SimpleName:binMean)(SimpleName:subIntervalSize)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:p)(NumberLiteral:5)))(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:maxOrderForSumOfPowers))(PostfixExpression(SimpleName:p)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:binSumOfPowers)(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:3)))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:pow)(METHOD_INVOCATION_ARGUMENTS(SimpleName:binMean)(SimpleName:p)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:subIntervalSize))))))(ExpressionStatement(Assignment(SimpleName:binMin)(ASSIGNMENT_OPERATOR:=)(SimpleName:binMax)))))(ExpressionStatement(PostfixExpression(SimpleName:c)(POSTFIX_EXPRESSION_OPERATOR:--)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:binSize)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:percent)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:percent)(SimpleName:i))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dataSize)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:binMax)(SimpleName:binMin)))(ExpressionStatement(Assignment(SimpleName:binMin)(ASSIGNMENT_OPERATOR:=)(SimpleName:safe_min)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MightyStaticBin1D))(FieldAccess(ThisExpression)(SimpleName:hasSumOfLogarithms))(FieldAccess(ThisExpression)(SimpleName:hasSumOfInversions))(SimpleName:maxOrderForSumOfPowers))))(IfStatement(InfixExpression(SimpleName:binSize)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:size))(ASSIGNMENT_OPERATOR:=)(SimpleName:binSize)))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:min))(ASSIGNMENT_OPERATOR:=)(SimpleName:binMin)))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:max))(ASSIGNMENT_OPERATOR:=)(SimpleName:binMax)))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:sum))(ASSIGNMENT_OPERATOR:=)(SimpleName:binSum)))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:sum_xx))(ASSIGNMENT_OPERATOR:=)(SimpleName:binSumOfSquares)))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:sumOfLogarithms))(ASSIGNMENT_OPERATOR:=)(SimpleName:binSumOfLogarithms)))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:sumOfInversions))(ASSIGNMENT_OPERATOR:=)(SimpleName:binSumOfInversions)))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:splitBins)(SimpleName:i))(SimpleName:sumOfPowers))(ASSIGNMENT_OPERATOR:=)(SimpleName:binSumOfPowers)))))))(ReturnStatement(SimpleName:splitBins))))))