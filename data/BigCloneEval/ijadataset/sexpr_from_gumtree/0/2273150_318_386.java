(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:refine)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:a))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:b))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:c))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:target))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:t))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:<)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:0.1)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.1)))(Block(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y)(MethodInvocation(SimpleName:YforT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:t0))(VariableDeclarationFragment(SimpleName:t1)))(IfStatement(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:target))(Block(ExpressionStatement(Assignment(SimpleName:t0)(ASSIGNMENT_OPERATOR:=)(SimpleName:t)))(ExpressionStatement(Assignment(SimpleName:t1)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))))(Block(ExpressionStatement(Assignment(SimpleName:t0)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:t1)(ASSIGNMENT_OPERATOR:=)(SimpleName:t)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:origt)(SimpleName:t)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:origy)(SimpleName:y)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:useslope)(BooleanLiteral:true)))(WhileStatement(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:target))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:useslope))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:t2)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:t0)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:t1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(InfixExpression(SimpleName:t2)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:t0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:t2)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:t1)))(Block(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:t)(ASSIGNMENT_OPERATOR:=)(SimpleName:t2))))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:slope)(MethodInvocation(SimpleName:dYforT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)(NumberLiteral:1)))))(IfStatement(InfixExpression(SimpleName:slope)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:useslope)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ContinueStatement)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:t2)(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y)))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:slope))))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:t2)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:t))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:t2)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:t0)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:t2)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:t1)))(Block(ExpressionStatement(Assignment(SimpleName:useslope)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ContinueStatement)))(ExpressionStatement(Assignment(SimpleName:t)(ASSIGNMENT_OPERATOR:=)(SimpleName:t2)))))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:YforT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)))))(IfStatement(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:target))(Block(ExpressionStatement(Assignment(SimpleName:t0)(ASSIGNMENT_OPERATOR:=)(SimpleName:t))))(IfStatement(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:target))(Block(ExpressionStatement(Assignment(SimpleName:t1)(ASSIGNMENT_OPERATOR:=)(SimpleName:t))))(Block(BreakStatement))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:verbose)(BooleanLiteral:false)))(IfStatement(InfixExpression(InfixExpression(BooleanLiteral:false)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:YforT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:tdiff)(MethodInvocation(SimpleName:diffbits)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)(SimpleName:origt)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:ydiff)(MethodInvocation(SimpleName:diffbits)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:origy)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:yerr)(MethodInvocation(SimpleName:diffbits)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:target)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:yerr)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(SimpleName:verbose)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:tdiff)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:target)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:origy)(StringLiteral:<STR>)(SimpleName:origt)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y)(StringLiteral:<STR>)(SimpleName:t)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tdiff)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ydiff)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:yerr)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:tlow)(MethodInvocation(SimpleName:prev)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:ylow)(MethodInvocation(SimpleName:YforT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tlow)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:thi)(MethodInvocation(SimpleName:next)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:yhi)(MethodInvocation(SimpleName:YforT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:thi)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:ylow))))(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y)))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:yhi))))(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ylow)(StringLiteral:<STR>)(SimpleName:yhi)(StringLiteral:<STR>)))))))))))(ReturnStatement(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:t)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1)))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(SimpleName:t)))))))