(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:MyFileLock))(SimpleName:tryLockFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:lockFile))(SimpleType(SimpleName:IOException))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockFile))(SimpleName:isFile)))(ReturnStatement(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:raf)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:lockFile)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:fl)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fl)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:getChannel)))(SimpleName:tryLock)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(IfStatement(InfixExpression(SimpleName:fl)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:MyFileLock))(SimpleName:raf)(SimpleName:fl)(SimpleName:lockFile)))))(ReturnStatement(NullLiteral))))))