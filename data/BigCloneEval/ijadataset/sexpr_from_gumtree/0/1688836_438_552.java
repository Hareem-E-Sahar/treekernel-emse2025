(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:solve_l2r_l1l2_svc)(SingleVariableDeclaration(SimpleType(SimpleName:Problem))(SimpleName:prob))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:w))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:eps))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:Cp))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:Cn))(SingleVariableDeclaration(SimpleType(SimpleName:SolverType))(SimpleName:solver_type))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(QualifiedName:prob.l)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:w_size)(QualifiedName:prob.n)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i))(VariableDeclarationFragment(SimpleName:s))(VariableDeclarationFragment(SimpleName:iter)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:C))(VariableDeclarationFragment(SimpleName:d))(VariableDeclarationFragment(SimpleName:G)))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:QD)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:l))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max_iter)(NumberLiteral:1000)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:index)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(SimpleName:l))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:alpha)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:l))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:y)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:l))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:active_size)(SimpleName:l)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:PG)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:PGmax_old)(QualifiedName:Double.POSITIVE_INFINITY)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:PGmin_old)(QualifiedName:Double.NEGATIVE_INFINITY)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:PGmax_new))(VariableDeclarationFragment(SimpleName:PGmin_new)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:diag)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension))(ArrayInitializer(InfixExpression(NumberLiteral:0.5)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:Cn))(NumberLiteral:0)(InfixExpression(NumberLiteral:0.5)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:Cp))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:upper_bound)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension))(ArrayInitializer(QualifiedName:Double.POSITIVE_INFINITY)(NumberLiteral:0)(QualifiedName:Double.POSITIVE_INFINITY)))))(IfStatement(InfixExpression(SimpleName:solver_type)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:SolverType.L2R_L1LOSS_SVC_DUAL))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:diag)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:diag)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:upper_bound)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:Cn)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:upper_bound)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(SimpleName:Cp)))))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:w_size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:w)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:alpha)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(ArrayAccess(QualifiedName:prob.y)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:QD)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:diag)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:i))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:xi))(ArrayAccess(QualifiedName:prob.x)(SimpleName:i))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:QD)(SimpleName:i))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(QualifiedName:xi.value)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:xi.value))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:index)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))))(WhileStatement(InfixExpression(SimpleName:iter)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:max_iter))(Block(ExpressionStatement(Assignment(SimpleName:PGmax_new)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.NEGATIVE_INFINITY)))(ExpressionStatement(Assignment(SimpleName:PGmin_new)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.POSITIVE_INFINITY)))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:active_size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:random))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:active_size)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:i)))))))(ExpressionStatement(MethodInvocation(SimpleName:swap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index)(SimpleName:i)(SimpleName:j))))))(ForStatement(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:active_size))(PostfixExpression(SimpleName:s)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:index)(SimpleName:s))))(ExpressionStatement(Assignment(SimpleName:G)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:yi)(ArrayAccess(SimpleName:y)(SimpleName:i))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:xi))(ArrayAccess(QualifiedName:prob.x)(SimpleName:i))(Block(ExpressionStatement(Assignment(SimpleName:G)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:w)(InfixExpression(QualifiedName:xi.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:xi.value))))))(ExpressionStatement(Assignment(SimpleName:G)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:yi))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:C)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:upper_bound)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:i))))))(ExpressionStatement(Assignment(SimpleName:G)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:diag)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:i)))))))(ExpressionStatement(Assignment(SimpleName:PG)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:PGmax_old))(Block(ExpressionStatement(PostfixExpression(SimpleName:active_size)(POSTFIX_EXPRESSION_OPERATOR:--)))(ExpressionStatement(MethodInvocation(SimpleName:swap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index)(SimpleName:s)(SimpleName:active_size))))(ExpressionStatement(PostfixExpression(SimpleName:s)(POSTFIX_EXPRESSION_OPERATOR:--)))(ContinueStatement))(IfStatement(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:PG)(ASSIGNMENT_OPERATOR:=)(SimpleName:G)))))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:C))(Block(IfStatement(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:PGmin_old))(Block(ExpressionStatement(PostfixExpression(SimpleName:active_size)(POSTFIX_EXPRESSION_OPERATOR:--)))(ExpressionStatement(MethodInvocation(SimpleName:swap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index)(SimpleName:s)(SimpleName:active_size))))(ExpressionStatement(PostfixExpression(SimpleName:s)(POSTFIX_EXPRESSION_OPERATOR:--)))(ContinueStatement))(IfStatement(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:PG)(ASSIGNMENT_OPERATOR:=)(SimpleName:G)))))))(Block(ExpressionStatement(Assignment(SimpleName:PG)(ASSIGNMENT_OPERATOR:=)(SimpleName:G))))))(ExpressionStatement(Assignment(SimpleName:PGmax_new)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PGmax_new)(SimpleName:PG)))))(ExpressionStatement(Assignment(SimpleName:PGmin_new)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PGmin_new)(SimpleName:PG)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PG)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.0e-12))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:alpha_old)(ArrayAccess(SimpleName:alpha)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:alpha)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:-)(InfixExpression(SimpleName:G)(INFIX_EXPRESSION_OPERATOR:/)(ArrayAccess(SimpleName:QD)(SimpleName:i))))(NumberLiteral:0.0)))(SimpleName:C)))))(ExpressionStatement(Assignment(SimpleName:d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:alpha_old)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:yi))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FeatureNode))(SimpleName:xi))(ArrayAccess(QualifiedName:prob.x)(SimpleName:i))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:w)(InfixExpression(QualifiedName:xi.index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:xi.value))))))))))(ExpressionStatement(PostfixExpression(SimpleName:iter)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(InfixExpression(SimpleName:iter)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:10))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:PGmax_new)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:PGmin_new))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:eps))(Block(IfStatement(InfixExpression(SimpleName:active_size)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:l))(BreakStatement)(Block(ExpressionStatement(Assignment(SimpleName:active_size)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:PGmax_old)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.POSITIVE_INFINITY)))(ExpressionStatement(Assignment(SimpleName:PGmin_old)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.NEGATIVE_INFINITY)))(ContinueStatement)))))(ExpressionStatement(Assignment(SimpleName:PGmax_old)(ASSIGNMENT_OPERATOR:=)(SimpleName:PGmax_new)))(ExpressionStatement(Assignment(SimpleName:PGmin_old)(ASSIGNMENT_OPERATOR:=)(SimpleName:PGmin_new)))(IfStatement(InfixExpression(SimpleName:PGmax_old)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:PGmax_old)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.POSITIVE_INFINITY))))(IfStatement(InfixExpression(SimpleName:PGmin_old)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:PGmin_old)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.NEGATIVE_INFINITY))))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:NL)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:NL))(SimpleName:iter))))(IfStatement(InfixExpression(SimpleName:iter)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:max_iter))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:v)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nSV)(NumberLiteral:0)))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:w_size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(SimpleName:v)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:w)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:w)(SimpleName:i))))))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:v)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:diag)(MethodInvocation(SimpleName:GETI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y)(SimpleName:i)))))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:alpha)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:nSV))))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:NL))(InfixExpression(SimpleName:v)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(ExpressionStatement(MethodInvocation(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:NL))(SimpleName:nSV))))))))