(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:FileChannel))(SimpleName:getChannel)(SimpleType(SimpleName:Exception))(Block(IfStatement(SimpleName:channelInitialized)(Block(IfStatement(MethodInvocation(SimpleName:isClosed))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isLoop))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>))))))(Block(ReturnStatement(SimpleName:fileChannel))))))(SynchronizedStatement(SimpleName:closeLock)(Block(IfStatement(SimpleName:channelInitialized)(Block(IfStatement(MethodInvocation(SimpleName:isClosed))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>)))))(ReturnStatement(SimpleName:fileChannel))))(IfStatement(MethodInvocation(SimpleName:isClosed))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fileChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:fileChannelProvider)))(SimpleName:getFileChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpCopyFile)(SimpleName:openMode)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:noLock))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isNull)))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fLock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChannel))(SimpleName:lock))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(IfStatement(InfixExpression(SimpleName:fLock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tmpCopyFile)(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tmpCopyFile)(StringLiteral:<STR>))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(Assignment(SimpleName:fLock)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tmpCopyFile)(StringLiteral:<STR>))(SimpleName:t))))))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tmpCopyFile)))))))))(ExpressionStatement(Assignment(SimpleName:channelInitialized)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(SimpleName:ex))))(ThrowStatement(SimpleName:ex)))))))(ReturnStatement(SimpleName:fileChannel))))))