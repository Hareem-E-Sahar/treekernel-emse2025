(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(SimpleName:updateResetRecommendation)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:myRange)))(SimpleName:setMaximum)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(FieldAccess(FieldAccess(ThisExpression)(SimpleName:myFilesPicked))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(VariableDeclarationStatement(SimpleType(SimpleName:UndoableMovingFiles))(VariableDeclarationFragment(SimpleName:undo)(NullLiteral)))(TryStatement(Block(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:myToNode))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:undo)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:UndoableMovingFiles))(FieldAccess(ThisExpression)(SimpleName:myToNode))(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myRDPmanager))(FieldAccess(ThisExpression)(SimpleName:iSetRepeatButtonToThisDirectory)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:undo))(SimpleName:setMoveNotCopy)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:iMoveNotCopy)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:undo))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:myFilesPicked))(FieldAccess(ThisExpression)(SimpleName:myRange))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:org.gerhardb.lib.io.TargetFileExistsException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))))))(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:myToDir))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:undo)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:UndoableMovingFiles))(ClassInstanceCreation(SimpleType(SimpleName:File))(FieldAccess(ThisExpression)(SimpleName:myToDir)))(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myRDPmanager)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:undo))(SimpleName:setMoveNotCopy)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:iMoveNotCopy)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:undo))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:myFilesPicked))(FieldAccess(ThisExpression)(SimpleName:myRange))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:org.gerhardb.lib.io.TargetFileExistsException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:potentialFailedFiles)(ArrayCreation(ArrayType(SimpleType(SimpleName:File))(Dimension(NumberLiteral:0))))))(IfStatement(InfixExpression(SimpleName:undo)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:potentialFailedFiles)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:undo))(SimpleName:getFailedFilesShowingMessage)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:myTopFrame))))))(IfStatement(InfixExpression(QualifiedName:potentialFailedFiles.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:potentialFailedFiles.length))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myRDPmanager))(SimpleName:myPlugins)))(SimpleName:clearListSelections)))))))(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:failedFiles)(SimpleName:potentialFailedFiles)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:myDialog)))(SimpleName:done)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SwingUtilities))(SimpleName:invokeLater)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(IfStatement(FieldAccess(ThisExpression(SimpleName:MoveOrCopyIt))(SimpleName:iMoveNotCopy))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:MoveOrCopyIt))(SimpleName:myTopFrame)))(SimpleName:setCursor)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cursor))(SimpleName:getPredefinedCursor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cursor.WAIT_CURSOR))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(FieldAccess(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myRDPmanager))(SimpleName:myTreeManager))(SimpleName:myCoordinator)))(SimpleName:getFileList)))(SimpleName:clearSelection)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myRDPmanager))(SimpleName:myPlugins)))(SimpleName:reloadScroller)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myResetRecommendationFile))(QualifiedName:IScroll.KEEP_CACHE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myRDPmanager)))(SimpleName:getIScrollDirTree)))(SimpleName:selectFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:failedFiles))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:MoveOrCopyIt))(SimpleName:myTopFrame)))(SimpleName:setCursor)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cursor))(SimpleName:getPredefinedCursor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cursor.DEFAULT_CURSOR))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(FieldAccess(FieldAccess(ThisExpression(SimpleName:MoveManager))(SimpleName:myRDPmanager))(SimpleName:myTreeManager))(SimpleName:myCoordinator)))(SimpleName:getScroller)))(SimpleName:requestFocus))))))))))))))