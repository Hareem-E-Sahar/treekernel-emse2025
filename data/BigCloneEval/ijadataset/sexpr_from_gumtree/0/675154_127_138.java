(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:isLeftRotated)(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:angle)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:startAngle)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:endAngle)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:rotations)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:angle)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotations)(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:angle)))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI))))))))))(Block(ExpressionStatement(Assignment(SimpleName:rotations)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(ParenthesizedExpression(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:angle)(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI))))))))))))(ExpressionStatement(Assignment(SimpleName:angle)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ParenthesizedExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:rotations))))(ExpressionStatement(Assignment(SimpleName:isLeft)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:angle)(INFIX_EXPRESSION_OPERATOR:>=)(ParenthesizedExpression(InfixExpression(NumberLiteral:0.5)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI)))))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:angle)(INFIX_EXPRESSION_OPERATOR:<=)(ParenthesizedExpression(InfixExpression(NumberLiteral:1.5)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI)))))))))(ReturnStatement(SimpleName:isLeft))))))