(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:TDTree))(SimpleName:buildTDTree)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:first))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:last))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:TwoOrderObject))(Dimension))(SimpleName:elements))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:comparison))(Block(IfStatement(InfixExpression(SimpleName:first)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:last))(Block(ReturnStatement(NullLiteral)))(IfStatement(InfixExpression(SimpleName:first)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:last))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:TDTree))(ArrayAccess(SimpleName:elements)(SimpleName:first))(SimpleName:comparison))))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:half)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:first)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:last)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:TDTree))(VariableDeclarationFragment(SimpleName:t)(ClassInstanceCreation(SimpleType(SimpleName:TDTree))(ArrayAccess(SimpleName:elements)(SimpleName:half))(SimpleName:comparison))))(ExpressionStatement(Assignment(QualifiedName:t.left)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:buildTDTree)(METHOD_INVOCATION_ARGUMENTS(SimpleName:first)(InfixExpression(SimpleName:half)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(SimpleName:elements)(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:comparison))))))(IfStatement(InfixExpression(QualifiedName:t.left)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(QualifiedName:t.left.father)(ASSIGNMENT_OPERATOR:=)(SimpleName:t))))(ExpressionStatement(Assignment(QualifiedName:t.right)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:buildTDTree)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:half)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:last)(SimpleName:elements)(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:comparison))))))(IfStatement(InfixExpression(QualifiedName:t.right)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(QualifiedName:t.right.father)(ASSIGNMENT_OPERATOR:=)(SimpleName:t))))(ReturnStatement(SimpleName:t)))))))))