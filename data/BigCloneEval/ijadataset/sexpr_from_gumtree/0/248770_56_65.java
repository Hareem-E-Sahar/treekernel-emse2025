(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:Cipher))(SimpleName:createCipher)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:passphrase))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:encMode))(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleType(SimpleName:InvalidKeyException))(SimpleType(SimpleName:IllegalBlockSizeException))(SimpleType(SimpleName:BadPaddingException))(SimpleType(SimpleName:InvalidAlgorithmParameterException))(SimpleType(SimpleName:NoSuchPaddingException))(SimpleType(SimpleName:UnsupportedEncodingException))(SimpleType(SimpleName:NoSuchProviderException))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:hashedPass)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:hashedPass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sha384))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:passphrase))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKeySpec))(VariableDeclarationFragment(SimpleName:key)(ClassInstanceCreation(SimpleType(SimpleName:SecretKeySpec))(SimpleName:hashedPass)(NumberLiteral:0)(NumberLiteral:32)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:IvParameterSpec))(VariableDeclarationFragment(SimpleName:Iv)(ClassInstanceCreation(SimpleType(SimpleName:IvParameterSpec))(SimpleName:hashedPass)(NumberLiteral:32)(NumberLiteral:16))))(VariableDeclarationStatement(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cipher)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:cryptoProvider)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:cipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:cryptoProvider)))))(ExpressionStatement(Assignment(SimpleName:cipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encMode)(SimpleName:key)(SimpleName:Iv))))(ReturnStatement(SimpleName:cipher))))))