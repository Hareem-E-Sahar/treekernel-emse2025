(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:writeWrapperCommand)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:command))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:IllegalStateException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:commandFilename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:WrapperPropertyUtil))(SimpleName:getStringProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NullLiteral)))))(IfStatement(InfixExpression(SimpleName:commandFilename)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:commandFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:commandFilename))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commandFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Main))(SimpleName:getRes)))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:commandFile))(SimpleName:toString)))))))))(ExpressionStatement(MethodInvocation(SimpleName:writeTextFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:commandFile)(SimpleName:command))))))))