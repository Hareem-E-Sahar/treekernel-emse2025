(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:compileQueries)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:DataServiceDispatcher))(VariableDeclarationFragment(SimpleName:d)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DataServiceDispatcher))(SimpleName:getInstance))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ThreadGroup))(VariableDeclarationFragment(SimpleName:queryCompile)(ClassInstanceCreation(SimpleType(SimpleName:ThreadGroup))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:uncaughtException)(SingleVariableDeclaration(SimpleType(SimpleName:Thread))(SimpleName:t))(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:QueryCompileWorker))(VariableDeclarationFragment(SimpleName:w)(CastExpression(SimpleType(SimpleName:QueryCompileWorker))(SimpleName:t))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:w))(SimpleName:setErrorStatus)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:QueryCompileWorker)))(VariableDeclarationFragment(SimpleName:threads)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:QueryCompileWorker)))(QualifiedName:swatchQueryFilenames.length))))(EnhancedForStatement(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:pair))(SimpleName:swatchQueryFilenames)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:channelname)(ArrayAccess(SimpleName:pair)(NumberLiteral:0))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(ArrayAccess(SimpleName:pair)(NumberLiteral:1))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fullpath)(InfixExpression(QualifiedName:DataServiceDispatcher.DAYTONASERVICEPATH)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputChannelInterface))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(SimpleName:getChannelFromListByName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:getInputChannels))(SimpleName:channelname)))))(VariableDeclarationStatement(SimpleType(SimpleName:DaytonaSwatchQuery))(VariableDeclarationFragment(SimpleName:dsq)(NullLiteral)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:DaytonaSwatchQuery))(SimpleName:q))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:daytonaSwatchQueries))(SimpleName:values))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:q))(SimpleName:getQueryFilePath)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fullpath)))(ExpressionStatement(Assignment(SimpleName:dsq)(ASSIGNMENT_OPERATOR:=)(SimpleName:q))))))(IfStatement(InfixExpression(SimpleName:dsq)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:dsq)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DaytonaSwatchQuery))(SimpleName:filename)(SimpleName:fullpath)(SimpleName:c))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:QueryCompileWorker))(VariableDeclarationFragment(SimpleName:w)(ClassInstanceCreation(SimpleType(SimpleName:QueryCompileWorker))(SimpleName:queryCompile)(SimpleName:filename)(SimpleName:dsq))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threads))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:w))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:w))(SimpleName:start))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dsq))(SimpleName:addChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:daytonaSwatchQueries))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c)(SimpleName:dsq))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:swatchError)(BooleanLiteral:false)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:working)(BooleanLiteral:false)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:QueryCompileWorker))(SimpleName:t))(SimpleName:threads)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:isErrorStatus))(Block(ExpressionStatement(Assignment(SimpleName:swatchError)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:isAlive))(ExpressionStatement(Assignment(SimpleName:working)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:working))(BreakStatement))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:SPINSLEEP)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))))(IfStatement(SimpleName:swatchError)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threads))(SimpleName:clear)))(EnhancedForStatement(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:pair))(SimpleName:detailQueryFilenames)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:channelname)(ArrayAccess(SimpleName:pair)(NumberLiteral:0))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(ArrayAccess(SimpleName:pair)(NumberLiteral:1))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fullpath)(InfixExpression(QualifiedName:DataServiceDispatcher.DAYTONASERVICEPATH)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputChannelInterface))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(SimpleName:getChannelFromListByName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:getInputChannels))(SimpleName:channelname)))))(VariableDeclarationStatement(SimpleType(SimpleName:DaytonaDetailQuery))(VariableDeclarationFragment(SimpleName:dsq)(NullLiteral)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:DaytonaDetailQuery))(SimpleName:q))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:daytonaDetailQueries))(SimpleName:values))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:q))(SimpleName:getQueryFilePath)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fullpath)))(ExpressionStatement(Assignment(SimpleName:dsq)(ASSIGNMENT_OPERATOR:=)(SimpleName:q))))))(IfStatement(InfixExpression(SimpleName:dsq)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:dsq)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DaytonaDetailQuery))(SimpleName:filename)(SimpleName:fullpath)(SimpleName:c))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:QueryCompileWorker))(VariableDeclarationFragment(SimpleName:w)(ClassInstanceCreation(SimpleType(SimpleName:QueryCompileWorker))(SimpleName:queryCompile)(SimpleName:filename)(SimpleName:dsq))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threads))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:w))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:w))(SimpleName:start))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dsq))(SimpleName:addChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:daytonaDetailQueries))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c)(SimpleName:dsq))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:detailError)(BooleanLiteral:false)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:working)(BooleanLiteral:false)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:QueryCompileWorker))(SimpleName:t))(SimpleName:threads)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:isErrorStatus))(ExpressionStatement(Assignment(SimpleName:detailError)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:isAlive))(ExpressionStatement(Assignment(SimpleName:working)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:working))(BreakStatement))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:SPINSLEEP)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))))(IfStatement(SimpleName:detailError)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))