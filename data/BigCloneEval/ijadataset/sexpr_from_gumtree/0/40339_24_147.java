(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:UnsupportedAudioFileException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nDesiredChannels)(QualifiedName:AudioSystem.NOT_SPECIFIED)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nDesiredSampleSizeInBits)(QualifiedName:AudioSystem.NOT_SPECIFIED)))(VariableDeclarationStatement(SimpleType(QualifiedName:AudioFormat.Encoding))(VariableDeclarationFragment(SimpleName:desiredEncoding)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:fDesiredSampleRate)(QualifiedName:AudioSystem.NOT_SPECIFIED)))(VariableDeclarationStatement(SimpleType(QualifiedName:AudioFileFormat.Type))(VariableDeclarationFragment(SimpleName:desiredFileType)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bDesiredBigEndian)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bIsEndianessDesired)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:Getopt))(VariableDeclarationFragment(SimpleName:g)(ClassInstanceCreation(SimpleType(SimpleName:Getopt))(StringLiteral:<STR>)(SimpleName:args)(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getopt))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(SwitchStatement(SimpleName:c)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioCommon))(SimpleName:listSupportedTargetTypes)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:nDesiredChannels)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:nDesiredSampleSizeInBits)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strEncodingName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))(ExpressionStatement(Assignment(SimpleName:desiredEncoding)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:AudioFormat.Encoding))(SimpleName:strEncodingName))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:fDesiredSampleRate)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Float))(SimpleName:parseFloat)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strExtension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))(ExpressionStatement(Assignment(SimpleName:desiredFileType)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioCommon))(SimpleName:findTargetType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:strExtension)))))(IfStatement(InfixExpression(SimpleName:desiredFileType)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:bDesiredBigEndian)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:bIsEndianessDesired)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:bDesiredBigEndian)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:bIsEndianessDesired)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:DEBUG)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))(SwitchCase)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:c)))))(BreakStatement))))(IfStatement(InfixExpression(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptind)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(Block(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:inputFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:args)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptind))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outputFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:args)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptind))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFileFormat))(VariableDeclarationFragment(SimpleName:inputFileFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioFileFormat)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputFile)))))(VariableDeclarationStatement(SimpleType(QualifiedName:AudioFileFormat.Type))(VariableDeclarationFragment(SimpleName:defaultFileType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputFileFormat))(SimpleName:getType))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:stream)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:format)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:format))))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:targetFormat)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:desiredEncoding)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:desiredEncoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getEncoding))))))(IfStatement(InfixExpression(SimpleName:fDesiredSampleRate)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(Block(ExpressionStatement(Assignment(SimpleName:fDesiredSampleRate)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleRate))))))(IfStatement(InfixExpression(SimpleName:nDesiredSampleSizeInBits)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(Block(ExpressionStatement(Assignment(SimpleName:nDesiredSampleSizeInBits)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleSizeInBits))))))(IfStatement(InfixExpression(SimpleName:nDesiredChannels)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(Block(ExpressionStatement(Assignment(SimpleName:nDesiredChannels)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getChannels))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:bIsEndianessDesired))(Block(ExpressionStatement(Assignment(SimpleName:bDesiredBigEndian)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:isBigEndian))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioCommon))(SimpleName:isPcm)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getEncoding)))))(Block(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(QualifiedName:AudioFormat.Encoding))(VariableDeclarationFragment(SimpleName:targetEncoding)(ConditionalExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleSizeInBits))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:8)))(QualifiedName:AudioFormat.Encoding.PCM_UNSIGNED)(QualifiedName:AudioFormat.Encoding.PCM_SIGNED))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:convertEncoding)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetEncoding)(SimpleName:stream)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:stream))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))))))(IfStatement(InfixExpression(SimpleName:nDesiredSampleSizeInBits)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioSystem.NOT_SPECIFIED))(Block(ExpressionStatement(Assignment(SimpleName:nDesiredSampleSizeInBits)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleSizeInBits))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:nDesiredChannels))(Block(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:convertChannels)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nDesiredChannels)(SimpleName:stream)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:stream))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bDoConvertSampleSize)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))(SimpleName:getSampleSizeInBits))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:nDesiredSampleSizeInBits)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bDoConvertEndianess)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))(SimpleName:isBigEndian))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:bDesiredBigEndian)))))(IfStatement(InfixExpression(SimpleName:bDoConvertSampleSize)(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:bDoConvertEndianess))(Block(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:convertSampleSizeAndEndianess)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nDesiredSampleSizeInBits)(SimpleName:bDesiredBigEndian)(SimpleName:stream)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:stream))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))(SimpleName:getSampleRate))(SimpleName:fDesiredSampleRate))))(Block(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:convertSampleRate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fDesiredSampleRate)(SimpleName:stream)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:stream))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))(SimpleName:getEncoding)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:desiredEncoding))))(Block(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:desiredEncoding)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:convertEncoding)(METHOD_INVOCATION_ARGUMENTS(SimpleName:desiredEncoding)(SimpleName:stream)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:stream))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat)))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nWrittenBytes)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(QualifiedName:AudioFileFormat.Type))(VariableDeclarationFragment(SimpleName:targetFileType)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:desiredFileType)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(SimpleName:desiredFileType)(SimpleName:defaultFileType))))(ExpressionStatement(Assignment(SimpleName:nWrittenBytes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stream)(SimpleName:targetFileType)(SimpleName:outputFile)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nWrittenBytes))))))))))