(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getNetwork)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:spieler))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:command)(StringLiteral:<STR>)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:server)(ClassInstanceCreation(SimpleType(SimpleName:URL))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:GetServer.serverName)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GetServer.serverPort)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)))(IfStatement(InfixExpression(SimpleName:spieler)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:DiceField.RED))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:GetNetworkGame.gameName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:GetNetworkGame.gameName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:server)(SimpleName:path))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:GetServer.serverName)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GetServer.serverPort)))(StringLiteral:<STR>)(SimpleName:path)))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:command)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Scanner))(SimpleName:is)))(SimpleName:useDelimiter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:next))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:command))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:PopUpWindow))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:PopUpWindow))(StringLiteral:<STR>)(StringLiteral:<STR>)))))(Block(IfStatement(InfixExpression(SimpleName:is)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))))(ReturnStatement(SimpleName:command))))))