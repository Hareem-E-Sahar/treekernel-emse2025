(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:FileType))(SimpleName:doGetType)(SimpleType(SimpleName:Exception))(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream))))(TryStatement(Block(IfStatement(InstanceofExpression(SimpleName:conn)(SimpleType(SimpleName:HttpURLConnection)))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:status)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:conn))))(SimpleName:getResponseCode))))(IfStatement(InfixExpression(QualifiedName:HttpURLConnection.HTTP_OK)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:status))(Block(ReturnStatement(QualifiedName:FileType.IMAGINARY))))))(ReturnStatement(QualifiedName:FileType.FILE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ReturnStatement(QualifiedName:FileType.IMAGINARY)))))))))