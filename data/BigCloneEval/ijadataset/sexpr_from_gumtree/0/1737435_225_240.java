(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:checkPiece)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:piece))(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:bs))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:off))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:length))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:sha1)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:sha1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:nsae))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InternalError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nsae)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sha1))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bs)(SimpleName:off)(SimpleName:length))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:hash)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sha1))(SimpleName:digest))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:20))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:hash)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:!=)(ArrayAccess(SimpleName:piece_hashes)(InfixExpression(InfixExpression(NumberLiteral:20)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:piece))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))))(Block(ReturnStatement(BooleanLiteral:false))))))(ReturnStatement(BooleanLiteral:true))))))