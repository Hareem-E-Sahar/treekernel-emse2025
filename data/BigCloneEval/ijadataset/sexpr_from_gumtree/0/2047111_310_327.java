(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:sceKernelCancelFpl)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:uid))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:numWaitThreadAddr))(Block(VariableDeclarationStatement(SimpleType(SimpleName:CpuState))(VariableDeclarationFragment(SimpleName:cpu)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Emulator))(SimpleName:getProcessor))(SimpleName:cpu))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uid)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:numWaitThreadAddr)))(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:SceKernelFplInfo))(VariableDeclarationFragment(SimpleName:info)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fplMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uid)))))(IfStatement(InfixExpression(SimpleName:info)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uid)))))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:cpu.gpr)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(SimpleName:ERROR_KERNEL_NOT_FOUND_FPOOL))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Memory))(VariableDeclarationFragment(SimpleName:mem)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Memory))(SimpleName:getInstance))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Memory))(SimpleName:isAddressGood)(METHOD_INVOCATION_ARGUMENTS(SimpleName:numWaitThreadAddr)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mem))(SimpleName:write32)(METHOD_INVOCATION_ARGUMENTS(SimpleName:numWaitThreadAddr)(QualifiedName:info.numWaitThreads))))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:cpu.gpr)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(SimpleName:onFplCancelled)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uid))))))))))