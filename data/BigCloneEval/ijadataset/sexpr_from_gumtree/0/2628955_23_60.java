(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:cmdProc)(SingleVariableDeclaration(SimpleType(SimpleName:Interp))(SimpleName:interp))(SingleVariableDeclaration(SimpleType(SimpleName:TclObject))(SimpleName:argv)(Dimension))(SimpleType(SimpleName:TclException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:chan)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mode)))(IfStatement(InfixExpression(InfixExpression(QualifiedName:argv.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(QualifiedName:argv.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:4)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TclNumArgsException))(SimpleName:interp)(NumberLiteral:1)(SimpleName:argv)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:TclIO.SEEK_SET)))(IfStatement(InfixExpression(QualifiedName:argv.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:4))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TclIndex))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:interp)(ArrayAccess(SimpleName:argv)(NumberLiteral:3))(SimpleName:validOrigins)(StringLiteral:<STR>)(NumberLiteral:0)))))(SwitchStatement(SimpleName:index)(SwitchCase(SimpleName:OPT_START))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:TclIO.SEEK_SET)))(BreakStatement))(SwitchCase(SimpleName:OPT_CURRENT))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:TclIO.SEEK_CUR)))(BreakStatement))(SwitchCase(SimpleName:OPT_END))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:TclIO.SEEK_END)))(BreakStatement)))))(ExpressionStatement(Assignment(SimpleName:chan)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TclIO))(SimpleName:getChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:interp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:argv)(NumberLiteral:1)))(SimpleName:toString))))))(IfStatement(InfixExpression(SimpleName:chan)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TclException))(SimpleName:interp)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:argv)(NumberLiteral:1)))(SimpleName:toString))(StringLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:offset)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TclInteger))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:interp)(ArrayAccess(SimpleName:argv)(NumberLiteral:2))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chan))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(SimpleName:interp)(SimpleName:offset)(SimpleName:mode)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TclRuntimeError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chan))(SimpleName:getChanName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))))))))))))