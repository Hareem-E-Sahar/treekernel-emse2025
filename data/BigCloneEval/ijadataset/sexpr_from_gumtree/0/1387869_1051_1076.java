(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:open_command_file)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cn)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:blue.check_external_commands)))))(IfStatement(InfixExpression(QualifiedName:blue.check_external_commands)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:common_h.FALSE))(ReturnStatement(QualifiedName:common_h.OK)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:blue.command_file_created)))))(IfStatement(InfixExpression(QualifiedName:blue.command_file_created)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:common_h.TRUE))(ReturnStatement(QualifiedName:common_h.OK)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:blue.command_file)))))(ExpressionStatement(Assignment(QualifiedName:blue.command_file_channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(QualifiedName:blue.command_file)(StringLiteral:<STR>)))(SimpleName:getChannel)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioE))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fatal)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:blue.command_file)(StringLiteral:<STR>))(SimpleName:ioE))))(ReturnStatement(QualifiedName:common_h.ERROR)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:command_file_worker_thread))(SimpleName:init_command_file_worker_thread))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:common_h.ERROR))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fatal)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:blue.command_file_channel))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioE))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(QualifiedName:blue.command_file)))(SimpleName:delete)))(ReturnStatement(QualifiedName:common_h.ERROR))))(ExpressionStatement(Assignment(QualifiedName:blue.command_file_created)(ASSIGNMENT_OPERATOR:=)(QualifiedName:common_h.TRUE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cn)(StringLiteral:<STR>)))))(ReturnStatement(QualifiedName:common_h.OK))))))