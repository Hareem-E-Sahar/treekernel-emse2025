(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:putNextEntry)(SingleVariableDeclaration(SimpleType(SimpleName:ZipEntry))(SimpleName:entry))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:TaskTimeoutException))(Block(ExpressionStatement(Assignment(SimpleName:currentFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isSkip)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:checkTimeout)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getOutStream)))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(ExpressionStatement(Assignment(SimpleName:entryOpen)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))