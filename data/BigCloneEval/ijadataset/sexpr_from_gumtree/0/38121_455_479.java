(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(NormalAnnotation(SimpleName:JRubyMethod)(MemberValuePair(SimpleName:name)(StringLiteral:<STR>))(MemberValuePair(SimpleName:required)(NumberLiteral:6)))(Modifier:public)(SimpleType(SimpleName:IRubyObject))(SimpleName:write_large_object)(SingleVariableDeclaration(SimpleType(SimpleName:ThreadContext))(SimpleName:context))(SingleVariableDeclaration(Modifier:final)(ArrayType(SimpleType(SimpleName:IRubyObject))(Dimension))(SimpleName:args))(SimpleType(SimpleName:SQLException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Ruby))(VariableDeclarationFragment(SimpleName:runtime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getRuntime))))(ReturnStatement(CastExpression(SimpleType(SimpleName:IRubyObject))(MethodInvocation(SimpleName:withConnectionAndRetry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)(ClassInstanceCreation(SimpleType(SimpleName:SQLBlock))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:call)(SingleVariableDeclaration(SimpleType(SimpleName:Connection))(SimpleName:c))(SimpleType(SimpleName:SQLException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sql)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rubyApi))(SimpleName:convertToRubyString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:2))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rubyApi))(SimpleName:convertToRubyString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:1))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rubyApi))(SimpleName:convertToRubyString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:3))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rubyApi))(SimpleName:convertToRubyString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:4)))))))(VariableDeclarationStatement(SimpleType(SimpleName:PreparedStatement))(VariableDeclarationFragment(SimpleName:ps)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:ps)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:prepareStatement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sql)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:0)))(SimpleName:isTrue))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteList))(VariableDeclarationFragment(SimpleName:outp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rubyApi))(SimpleName:convertToRubyString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:5)))))(SimpleName:getByteList))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps))(SimpleName:setBinaryStream)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(QualifiedName:outp.bytes)(QualifiedName:outp.begin)(QualifiedName:outp.realSize))(QualifiedName:outp.realSize)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ss)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rubyApi))(SimpleName:convertToRubyString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:5)))))(SimpleName:getUnicodeValue))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps))(SimpleName:setCharacterStream)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(ClassInstanceCreation(SimpleType(SimpleName:StringReader))(SimpleName:ss))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ss))(SimpleName:length)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps))(SimpleName:executeUpdate))))(Block(ExpressionStatement(MethodInvocation(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ps))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:runtime))(SimpleName:getNil)))))))))))))))