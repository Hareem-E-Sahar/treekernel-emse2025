(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:turns)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:n))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:low))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:high))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:turns)(NumberLiteral:0)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:low))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:2))(Block(ExpressionStatement(PostfixExpression(SimpleName:turns)(POSTFIX_EXPRESSION_OPERATOR:++)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:high)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:n))(Block(ReturnStatement(SimpleName:turns)))(IfStatement(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(Block(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))(AssertStatement(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:low))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:high)))))(ReturnStatement(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:turns)))))))