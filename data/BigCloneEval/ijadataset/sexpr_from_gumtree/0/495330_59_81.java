(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:Response))(SimpleName:executeGet)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:url))(SimpleType(SimpleName:IOException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:INFO)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:httpUrlConnection)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inputStream)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:httpUrlConnection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:openConnection)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:url))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:setReadTimeout)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DEFAULT_READ_TIMEOUT_IN_MS))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:setUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(SimpleName:customizeConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpUrlConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:connect)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:FINER)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:finer)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:getHeaderFields)))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inputStream)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:getResponseCode))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:HTTP_OK))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:getErrorStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:getInputStream))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:WARNING)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warning)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)(StringLiteral:<STR>)(SimpleName:e)))))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:Response))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpUrlConnection))(SimpleName:getResponseCode))(MethodInvocation(SimpleName:fromInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:closeQuietly)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpUrlConnection))))))))))