(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:Messaging)(SingleVariableDeclaration(SimpleType(SimpleName:Settings))(SimpleName:settings))(SimpleType(SimpleName:MessagingException))(Block(SuperConstructorInvocation(SimpleName:settings))(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:XMPPConnection))(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(MethodInvocation(SimpleName:getSetting)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Setting.xmpp_host)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getSetting)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Setting.xmpp_port)))))(MethodInvocation(SimpleName:getSetting)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Setting.xmpp_service)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:connect))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:XMPPException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MessagingException))(SimpleName:e))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getSetting)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Setting.xmpp_username)))(MethodInvocation(SimpleName:getSetting)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Setting.xmpp_password)))(MethodInvocation(SimpleName:getSetting)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Setting.xmpp_resource)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:XMPPException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MessagingException))(SimpleName:e))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:addPacketListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:PacketListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:processPacket)(SingleVariableDeclaration(SimpleType(SimpleName:Packet))(SimpleName:packet))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:org.jivesoftware.smack.packet.Message))(VariableDeclarationFragment(SimpleName:rawMessage)(CastExpression(SimpleType(QualifiedName:org.jivesoftware.smack.packet.Message))(SimpleName:packet))))(VariableDeclarationStatement(SimpleType(SimpleName:Message))(VariableDeclarationFragment(SimpleName:message)(ClassInstanceCreation(SimpleType(SimpleName:Message)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:message))(SimpleName:setFrom)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rawMessage))(SimpleName:getFrom)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:message))(SimpleName:setPayload)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rawMessage))(SimpleName:getBody)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:message))(SimpleName:setTo)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rawMessage))(SimpleName:getTo)))))(VariableDeclarationStatement(SimpleType(SimpleName:MessageEvent))(VariableDeclarationFragment(SimpleName:messageEvent)(ClassInstanceCreation(SimpleType(SimpleName:MessageEvent))(ThisExpression)(SimpleName:message))))(ExpressionStatement(MethodInvocation(SimpleName:fireMessageEvent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:messageEvent))))))))(ClassInstanceCreation(SimpleType(SimpleName:PacketTypeFilter))(TypeLiteral(SimpleType(QualifiedName:org.jivesoftware.smack.packet.Message)))))))))))