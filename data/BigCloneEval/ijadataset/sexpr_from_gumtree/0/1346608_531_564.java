(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:writeLibrary)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:path))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:libraryStream))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:externalLibaryPath)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:path)(QualifiedName:File.separatorChar)(SimpleName:name))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fileOut)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:externalLibaryPath))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:alreadyExists)(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOut))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOut))(SimpleName:getAbsolutePath)))))(ExpressionStatement(Assignment(SimpleName:alreadyExists)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOut))(SimpleName:getAbsolutePath)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOut))(SimpleName:createNewFile)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:libraryFileChannel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:fileOut)))(SimpleName:getChannel))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryFileChannel))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:wrap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:len))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryFileChannel))(SimpleName:force)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryFileChannel))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:any))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:any))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryStream))(SimpleName:close)))(IfStatement(SimpleName:alreadyExists)(ReturnStatement(BooleanLiteral:true)))(ReturnStatement(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryStream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name))(SimpleName:e))))(ReturnStatement(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(BooleanLiteral:true))))))