(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:RequirementTool)(Block(SuperConstructorInvocation)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ToolTipManager))(SimpleName:sharedInstance)))(SimpleName:registerComponent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requirementTree))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:requirementTree))(SimpleName:addTreeExpansionListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:TreeExpansionListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:treeCollapsed)(SingleVariableDeclaration(SimpleType(SimpleName:TreeExpansionEvent))(SimpleName:event))(Block))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:treeExpanded)(SingleVariableDeclaration(SimpleType(SimpleName:TreeExpansionEvent))(SimpleName:event))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:TreeNode))(VariableDeclarationFragment(SimpleName:node)(CastExpression(SimpleType(SimpleName:TreeNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getPath)))(SimpleName:getLastPathComponent)))))(ExpressionStatement(MethodInvocation(SimpleName:resetExpansionHandles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:node)))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:UnloadedFileDisposer))(VariableDeclarationFragment(SimpleName:unloadedFileDisposer)(ClassInstanceCreation(SimpleType(SimpleName:UnloadedFileDisposer)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repositoryManager))(SimpleName:addChangeListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:unloadedFileDisposer))))(ExpressionStatement(MethodInvocation(SimpleName:addChainedFrameClosingListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:unloadedFileDisposer))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:editingStateManager))(SimpleName:addAction)(METHOD_INVOCATION_ARGUMENTS(SimpleName:runTestAction))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:editingStateManager))(SimpleName:addAction)(METHOD_INVOCATION_ARGUMENTS(SimpleName:openTestSessionAction))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:UserRoster.instance))(SimpleName:setAvailableRoles)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Roles))(SimpleName:values)))))(ExpressionStatement(Assignment(QualifiedName:UserRoster.OWNER)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Roles.OWNER)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:requirementTreeModel))(SimpleName:setUserMonitor)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:UserMonitor))(ThisExpression)))))(ExpressionStatement(Assignment(SimpleName:testsTable)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createTestTable))))(ExpressionStatement(Assignment(SimpleName:allTestsExecutionAction)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:AllTestsExecutionAction))(SimpleName:testRunner)(MethodInvocation(SimpleName:getCurrentTestListModel)))))(ExpressionStatement(Assignment(SimpleName:testExportToPdfAction)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ExportTestToPdfAction))(SimpleName:repositoryManager))))(ExpressionStatement(Assignment(SimpleName:testExportToDocAction)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ExportTestToDocAction))(SimpleName:repositoryManager))))(ExpressionStatement(MethodInvocation(SimpleName:setJMenuBar)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:createJMenuBar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getContentPane)))(SimpleName:setLayout)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BorderLayout))(NumberLiteral:5)(NumberLiteral:5)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getContentPane)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:createToolBar))(QualifiedName:BorderLayout.NORTH))))(ExpressionStatement(Assignment(SimpleName:versionPanel)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:VersionPanel))(SimpleName:allRequirementsModel)(SimpleName:requirementFactory)(ThisExpression)(SimpleName:editingStateManager)(SimpleName:mementos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:requirementTreeModel))(SimpleName:addTreeModelListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:versionPanel))))(ExpressionStatement(Assignment(SimpleName:tabbedPane)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createContentPane))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:allTestsExecutionAction))(SimpleName:setTabToShow)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tabbedPane)(SimpleName:TAB_TESTS))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getContentPane)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tabbedPane)(QualifiedName:BorderLayout.CENTER))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getContentPane)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:statusPane)(QualifiedName:BorderLayout.SOUTH))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Dimension))(VariableDeclarationFragment(SimpleName:screenSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Toolkit))(SimpleName:getDefaultToolkit)))(SimpleName:getScreenSize))))(ExpressionStatement(MethodInvocation(SimpleName:centerOnScreen)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:screenSize.width)(NumberLiteral:1000)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:screenSize.height)(NumberLiteral:830)))))))(ExpressionStatement(MethodInvocation(SimpleName:addChainedFrameClosingListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requirementTreeModel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:domainPanel))(SimpleName:linkToFrame)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:requirementPanel))(SimpleName:linkToFrame)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EventQueue))(SimpleName:invokeLater)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(SimpleName:setStatusMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(BooleanLiteral:false)))))))))))(ExpressionStatement(MethodInvocation(SimpleName:buildTestMenu)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:requirementTreeModel))(SimpleName:reset)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IssueListModel))(SimpleName:hasIssueTrackerServices))(Block(ExpressionStatement(MethodInvocation(SimpleName:connectToJira)))))(ExpressionStatement(MethodInvocation(SimpleName:setCloseOperator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:EXIT_CLOSE_OPERATOR))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repositoryManager))(SimpleName:addChangeListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:statusPane))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:repositoryManager))(SimpleName:addChangeListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:editingStateManager))))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:FileDropAdapter))(ThisExpression)(ThisExpression)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Autosaver))(VariableDeclarationFragment(SimpleName:autosaver)(ClassInstanceCreation(SimpleType(SimpleName:Autosaver))(ThisExpression)(InfixExpression(NumberLiteral:60)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Preferences.instance))(SimpleName:getAutosaveDelay)))(QualifiedName:TimeUnit.SECONDS))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mementos))(SimpleName:addMementoEventListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:autosaver))))(ExpressionStatement(MethodInvocation(SimpleName:addChainedFrameClosingListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:IChainedFrameClosingListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:askPermissionToClose)(SingleVariableDeclaration(SimpleType(SimpleName:WindowEvent))(SimpleName:_event))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:autosaver))(SimpleName:terminate)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:OpenOfficeManager))(SimpleName:dispose))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:OpenOfficeException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:OpenOfficeManager))))(SimpleName:getSimpleName)))(SimpleName:e))))))))))))))(ExpressionStatement(MethodInvocation(SimpleName:checkOOoVersion)))))))