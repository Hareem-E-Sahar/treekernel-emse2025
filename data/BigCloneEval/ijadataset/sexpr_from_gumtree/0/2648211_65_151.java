(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(Block(ExpressionStatement(MethodInvocation(SimpleName:outputHelp)))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:version)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:baseSrcDir)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dstDir)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:verbose)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:arg)(ArrayAccess(SimpleName:args)(SimpleName:i))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(BreakStatement)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg)))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:baseSrcDir)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length)))(Block(ExpressionStatement(Assignment(SimpleName:baseSrcDir)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:args)(SimpleName:i)))))(ContinueStatement))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg)))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:dstDir)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length)))(Block(ExpressionStatement(Assignment(SimpleName:dstDir)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:args)(SimpleName:i)))))(ContinueStatement))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg)))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:version)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length)))(Block(ExpressionStatement(Assignment(SimpleName:version)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(SimpleName:i))))(ContinueStatement))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg)))(Block(IfStatement(InfixExpression(SimpleName:verbose)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(Assignment(SimpleName:verbose)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ContinueStatement))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg)))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:arg)))))))))))(ExpressionStatement(MethodInvocation(SimpleName:outputHelp)))(ReturnStatement)))(IfStatement(InfixExpression(SimpleName:baseSrcDir)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:baseSrcDir)))))(ReturnStatement)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseSrcDir))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:baseSrcDir)))))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:dstDir)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:dstDir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(SimpleName:dstDir)(SimpleName:baseSrcDir)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:srcFileNames)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:copyOfRange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)(SimpleName:i)(QualifiedName:args.length)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFileNames))(SimpleName:isEmpty))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:srcFileNames)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:srcDirs)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:File))))))(IfStatement(InfixExpression(SimpleName:version)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:srcDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:baseSrcDir)(SimpleName:version))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcDir))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:srcDir)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcDirs))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcDir)))))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:dirs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseSrcDir))(SimpleName:listFiles))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dir))(SimpleName:dirs)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:getName)))(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcDirs))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcDirs))(SimpleName:isEmpty))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:baseSrcDir)))))(ReturnStatement)))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dstDir))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dstDir))(SimpleName:mkdirs))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dstDir)))))(ReturnStatement)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dstDir))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dstDir)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:process)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcDirs)(SimpleName:srcFileNames)(SimpleName:dstDir)(SimpleName:verbose))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))))