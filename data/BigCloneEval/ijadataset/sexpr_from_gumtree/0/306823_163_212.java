(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(ParameterizedType(SimpleType(SimpleName:MapEntry))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Properties)))(SimpleName:loadFpmConf)(SimpleType(SimpleName:ConfigurationReadException))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:MapEntry))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Properties)))(VariableDeclarationFragment(SimpleName:ret)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Scanner))(VariableDeclarationFragment(SimpleName:sc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Scanner))(SimpleName:CONF_PATHS)))(SimpleName:useDelimiter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:SEP_P)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:prev)(StringLiteral:<STR>)))(WhileStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sc))(SimpleName:hasNext))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hasLoaded)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:fpmConf)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:relative)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sc))(SimpleName:next))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PREV_P)))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PREV_P)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prev))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prev))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:REL_P)))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:REL_P)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:FS))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:relative)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:HOME_P)))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:HOME_P)(SimpleName:USER_HOME)))))))))(ExpressionStatement(Assignment(SimpleName:prev)(ASSIGNMENT_OPERATOR:=)(SimpleName:path)))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(SimpleName:MAIN_CONF_FILE)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(IfStatement(SimpleName:relative)(Block(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassLoader))(SimpleName:getSystemResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getSystemConfDir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Strings))(SimpleName:getOne)))(SimpleName:createPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:+=)(SimpleName:MAIN_CONF_FILE)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:os)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:path))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)(SimpleName:os))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:os)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(Block(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:path))))))(ExpressionStatement(Assignment(SimpleName:fpmConf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fpmConf))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fpmConf))(SimpleName:isEmpty))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ConfigurationReadException))))))(ExpressionStatement(Assignment(SimpleName:ret)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:MapEntry))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Properties)))(SimpleName:path)(SimpleName:fpmConf))))(ExpressionStatement(Assignment(SimpleName:hasLoaded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:fpmConf)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:singleton)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:hasLoaded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ConfigurationReadException)))))))))(ReturnStatement(SimpleName:ret))))))