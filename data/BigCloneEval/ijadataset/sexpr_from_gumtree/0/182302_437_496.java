(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(Modifier:final)(PrimitiveType:void)(SimpleName:insert)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:tableName))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:columns))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:values))(SimpleType(SimpleName:RecordException))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:columns)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:columns.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:values)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:values.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(QualifiedName:columns.length)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:values.length))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sql)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TableNameResolver))(SimpleName:getTableName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tableName)(MethodInvocation(SimpleName:isItalian))))(StringLiteral:<STR>))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:columns.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(Block(ExpressionStatement(Assignment(SimpleName:sql)(ASSIGNMENT_OPERATOR:+=)(ArrayAccess(SimpleName:columns)(SimpleName:i))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:!=)(InfixExpression(QualifiedName:columns.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:sql)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:sql)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:values.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(Block(ExpressionStatement(Assignment(SimpleName:sql)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:!=)(InfixExpression(QualifiedName:values.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:sql)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:sql)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:LoggableStatement))(VariableDeclarationFragment(SimpleName:st)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Connection))(VariableDeclarationFragment(SimpleName:conn)(NullLiteral)))(IfStatement(SimpleName:autoCommit)(Block(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConnectionManager))(SimpleName:getConnection)))))(Block(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(FieldAccess(ThisExpression)(SimpleName:conn))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:st)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:LoggableStatement))(SimpleName:conn)(SimpleName:sql))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:values.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:setObject)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(ArrayAccess(SimpleName:values)(SimpleName:i)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:getQueryString)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:executeUpdate))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SQLException))(SimpleName:e))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:rollback))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SQLException))(SimpleName:e1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(StringLiteral:<STR>)(SimpleName:e1))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TableNameResolver))(SimpleName:getTableName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tableName)(MethodInvocation(SimpleName:isItalian))))(StringLiteral:<STR>))(SimpleName:e)))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:st)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:close)))))(IfStatement(SimpleName:autoCommit)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:commit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SQLException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RecordException))(StringLiteral:<STR>)(SimpleName:e))))))))))))