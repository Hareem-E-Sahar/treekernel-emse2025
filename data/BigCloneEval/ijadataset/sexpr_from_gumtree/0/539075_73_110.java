(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(Modifier:final)(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(VariableDeclarationStatement(SimpleType(SimpleName:JTVGuide))(VariableDeclarationFragment(SimpleName:jtv)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:jtv)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JTVGuide))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ParseException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PublicLogger))(SimpleName:getLogger)))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Schedule))(VariableDeclarationFragment(SimpleName:s)(QualifiedName:jtv.schedule)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PublicLogger))(SimpleName:getLogger)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.HOUR_OF_DAY)(NumberLiteral:21))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(NumberLiteral:30))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Program))(SimpleName:p))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:getPrograms)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getTime))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:format)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInfo))(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PublicLogger))(SimpleName:getLogger)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Program))(SimpleName:p))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:getProgramsByName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:format)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInfo))(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PublicLogger))(SimpleName:getLogger)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:ScheduleByChannel)))(VariableDeclarationFragment(SimpleName:lsc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:getSchedulesByChannel))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:ScheduleByChannel)))(VariableDeclarationFragment(SimpleName:iterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lsc))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ScheduleByChannel))(VariableDeclarationFragment(SimpleName:scheduleByChannel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PublicLogger))(SimpleName:getLogger)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scheduleByChannel))(SimpleName:getChannelName)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Program)))(VariableDeclarationFragment(SimpleName:lspbc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scheduleByChannel))(SimpleName:getProgramsFromNowOn))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:Program)))(VariableDeclarationFragment(SimpleName:iterator2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lspbc))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator2))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Program))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator2))(SimpleName:next))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:format)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInfo))(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:d)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(NumberLiteral:30))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PublicLogger))(SimpleName:getLogger)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:d)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getTime))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Program))(SimpleName:p))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:getProgramsFromDateToDate)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getTime))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:format)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInfo))(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getDesc))))))))))))