(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:generateTimestampToken)(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:toBeTimestamped))(SimpleType(SimpleName:CertificateException))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(SimpleName:messageDigest)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:messageDigest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:digest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:toBeTimestamped)))))(VariableDeclarationStatement(SimpleType(SimpleName:TSRequest))(VariableDeclarationFragment(SimpleName:tsQuery)(ClassInstanceCreation(SimpleType(SimpleName:TSRequest))(SimpleName:digest)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:BigInteger))(VariableDeclarationFragment(SimpleName:nonce)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:RANDOM)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:nonce)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BigInteger))(NumberLiteral:64)(SimpleName:RANDOM))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsQuery))(SimpleName:setNonce)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nonce))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsQuery))(SimpleName:requestCertificate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tsRequestCertificate))))(VariableDeclarationStatement(SimpleType(SimpleName:Timestamper))(VariableDeclarationFragment(SimpleName:tsa)(ClassInstanceCreation(SimpleType(SimpleName:HttpTimestamper))(SimpleName:tsaUrl))))(VariableDeclarationStatement(SimpleType(SimpleName:TSResponse))(VariableDeclarationFragment(SimpleName:tsReply)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsa))(SimpleName:generateTimestamp)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tsQuery)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:status)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsReply))(SimpleName:getStatusCode))))(IfStatement(InfixExpression(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:1)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:failureCode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsReply))(SimpleName:getFailureCode))))(IfStatement(InfixExpression(SimpleName:failureCode)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsReply))(SimpleName:getStatusCodeAsText))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsReply))(SimpleName:getStatusCodeAsText))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsReply))(SimpleName:getFailureCodeAsText)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:PKCS7))(VariableDeclarationFragment(SimpleName:tsToken)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsReply))(SimpleName:getToken))))(VariableDeclarationStatement(SimpleType(SimpleName:TimestampToken))(VariableDeclarationFragment(SimpleName:tst)(ClassInstanceCreation(SimpleType(SimpleName:TimestampToken))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsToken))(SimpleName:getContentInfo)))(SimpleName:getData)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:keyPurposes)(NullLiteral)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:X509Certificate))(Dimension))(VariableDeclarationFragment(SimpleName:certs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsToken))(SimpleName:getCertificates))))(IfStatement(InfixExpression(InfixExpression(SimpleName:certs)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(QualifiedName:certs.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:X509Certificate))(SimpleName:cert))(SimpleName:certs)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isSigner)(BooleanLiteral:false)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:X509Certificate))(SimpleName:cert2))(SimpleName:certs)(Block(IfStatement(InfixExpression(SimpleName:cert)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:cert2))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cert))(SimpleName:getSubjectDN)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cert2))(SimpleName:getIssuerDN))))(Block(ExpressionStatement(Assignment(SimpleName:isSigner)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isSigner))(Block(ExpressionStatement(Assignment(SimpleName:keyPurposes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cert))(SimpleName:getExtendedKeyUsage))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPurposes))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:KP_TIMESTAMPING_OID))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CertificateException))(StringLiteral:<STR>)))))(BreakStatement)))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tsReply))(SimpleName:getEncodedToken)))))))