(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:isPalindrome)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:string))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:string))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:limit)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:string))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:forward)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:backward)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:string))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(InfixExpression(SimpleName:forward)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:limit))(PostfixExpression(SimpleName:forward)(POSTFIX_EXPRESSION_OPERATOR:++))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:string))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:forward)))(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:string))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:backward))))(ReturnStatement(BooleanLiteral:false))))(ReturnStatement(BooleanLiteral:true))))))