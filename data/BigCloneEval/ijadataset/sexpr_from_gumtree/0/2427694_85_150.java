(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:spliceMethod)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:modelFileNameIn))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:methodOwnerPath))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:methodName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:methodText))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:modelFileNameOut))(SimpleType(SimpleName:SpliceException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:xmiIn)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:xmiOut)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:modelOut)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayInputStream))(VariableDeclarationFragment(SimpleName:splicedXmiIn)(NullLiteral)))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelFileNameIn))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelFileNameIn))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:xmiIn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtil))(SimpleName:extractFromZipFile)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:modelFileNameIn))(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelFileNameIn))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:xmiIn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtil))(SimpleName:extractFromZipFile)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:modelFileNameIn))(StringLiteral:<STR>))))))(Block(ExpressionStatement(Assignment(SimpleName:xmiIn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getFileInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modelFileNameIn))))))))(ExpressionStatement(Assignment(SimpleName:xmiOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(SimpleName:spliceMethod)(METHOD_INVOCATION_ARGUMENTS(SimpleName:methodOwnerPath)(SimpleName:methodName)(SimpleName:methodText)(SimpleName:xmiIn)(SimpleName:xmiOut))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmiIn))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmiOut))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:splicedXmiIn)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmiOut))(SimpleName:toByteArray)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelFileNameOut))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelFileNameOut))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(SimpleName:replaceXmiInPoseidonFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modelFileNameOut)(SimpleName:splicedXmiIn)))))(Block(ExpressionStatement(Assignment(SimpleName:modelOut)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getFileOutputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modelFileNameOut)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:splicedXmiIn))(SimpleName:read))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelOut))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:splicedXmiIn))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SpliceException))(StringLiteral:<STR>)(SimpleName:e)))))(Block(IfStatement(InfixExpression(SimpleName:xmiIn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmiIn))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(EmptyStatement)))(IfStatement(InfixExpression(SimpleName:xmiOut)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmiOut))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(EmptyStatement)))(IfStatement(InfixExpression(SimpleName:modelOut)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmiOut))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(EmptyStatement)))(IfStatement(InfixExpression(SimpleName:splicedXmiIn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:splicedXmiIn))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(EmptyStatement)))))))))