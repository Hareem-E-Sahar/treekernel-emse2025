(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:retrieveLayoutInformation)(SingleVariableDeclaration(SimpleType(QualifiedName:org.eclipse.emf.ecore.EObject))(SimpleName:element))(SingleVariableDeclaration(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclSyntaxElement))(SimpleName:syntaxElement))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:object))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:ignoreTokensAfterLastVisibleToken))(Block(IfStatement(InfixExpression(SimpleName:element)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isElementToStore)(InfixExpression(SimpleName:syntaxElement)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))))(ExpressionStatement(Assignment(SimpleName:isElementToStore)(ASSIGNMENT_OPERATOR:|=)(InstanceofExpression(SimpleName:syntaxElement)(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclPlaceholder)))))(ExpressionStatement(Assignment(SimpleName:isElementToStore)(ASSIGNMENT_OPERATOR:|=)(InstanceofExpression(SimpleName:syntaxElement)(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclKeyword)))))(ExpressionStatement(Assignment(SimpleName:isElementToStore)(ASSIGNMENT_OPERATOR:|=)(InstanceofExpression(SimpleName:syntaxElement)(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclEnumerationTerminal)))))(ExpressionStatement(Assignment(SimpleName:isElementToStore)(ASSIGNMENT_OPERATOR:|=)(InstanceofExpression(SimpleName:syntaxElement)(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclBooleanTerminal)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isElementToStore))(Block(ReturnStatement)))(VariableDeclarationStatement(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclLayoutInformationAdapter))(VariableDeclarationFragment(SimpleName:layoutInformationAdapter)(MethodInvocation(SimpleName:getLayoutInformationAdapter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:element)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(QualifiedName:org.antlr.runtime3_2_0.CommonToken))(SimpleName:anonymousToken))(SimpleName:anonymousTokens)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:layoutInformationAdapter))(SimpleName:addLayoutInformation)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclLayoutInformation))(SimpleName:syntaxElement)(SimpleName:object)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:anonymousToken))(SimpleName:getStartIndex))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:anonymousToken))(SimpleName:getText))(NullLiteral)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:anonymousTokens))(SimpleName:clear)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:currentPos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getTokenStream)))(SimpleName:index))))(IfStatement(InfixExpression(SimpleName:currentPos)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:endPos)(InfixExpression(SimpleName:currentPos)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(SimpleName:ignoreTokensAfterLastVisibleToken)(Block(ForStatement(InfixExpression(SimpleName:endPos)(INFIX_EXPRESSION_OPERATOR:>=)(FieldAccess(ThisExpression)(SimpleName:lastPosition2)))(PostfixExpression(SimpleName:endPos)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:org.antlr.runtime3_2_0.Token))(VariableDeclarationFragment(SimpleName:token)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getTokenStream)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:endPos)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:_channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getChannel))))(IfStatement(InfixExpression(SimpleName:_channel)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:99))(Block(BreakStatement)))))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:hiddenTokenText)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:visibleTokenText)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(VariableDeclarationStatement(SimpleType(QualifiedName:org.antlr.runtime3_2_0.CommonToken))(VariableDeclarationFragment(SimpleName:firstToken)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pos)(FieldAccess(ThisExpression)(SimpleName:lastPosition2))))(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:endPos))(PostfixExpression(SimpleName:pos)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:org.antlr.runtime3_2_0.Token))(VariableDeclarationFragment(SimpleName:token)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getTokenStream)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pos)))))(IfStatement(InfixExpression(SimpleName:firstToken)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:firstToken)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(QualifiedName:org.antlr.runtime3_2_0.CommonToken))(SimpleName:token))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:_channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getChannel))))(IfStatement(InfixExpression(SimpleName:_channel)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:99))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hiddenTokenText))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getText))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:visibleTokenText))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:getText)))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:offset)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(SimpleName:firstToken)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:offset)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:firstToken))(SimpleName:getStartIndex))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:layoutInformationAdapter))(SimpleName:addLayoutInformation)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclLayoutInformation))(SimpleName:syntaxElement)(SimpleName:object)(SimpleName:offset)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hiddenTokenText))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:visibleTokenText))(SimpleName:toString))))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:lastPosition2))(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:endPos)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(NumberLiteral:0)(InfixExpression(SimpleName:endPos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))))