(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:createZipArchive)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:archiveFile))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:File))(Dimension))(SimpleName:tobeZippedFiles))(SimpleType(SimpleName:Exception))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:buffer)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER_SIZE))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:archiveFile))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(SimpleName:stream))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tobeZippedFiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(ArrayAccess(SimpleName:tobeZippedFiles)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:tobeZippedFiles)(SimpleName:i)))(SimpleName:exists))))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:tobeZippedFiles)(SimpleName:i)))(SimpleName:isDirectory)))(ContinueStatement))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:zipAdd)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:tobeZippedFiles)(SimpleName:i)))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipAdd))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:tobeZippedFiles)(SimpleName:i)))(SimpleName:lastModified)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipAdd))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ArrayAccess(SimpleName:tobeZippedFiles)(SimpleName:i)))))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nRead)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(QualifiedName:buffer.length)))))(IfStatement(InfixExpression(SimpleName:nRead)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:nRead))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(SimpleName:e)))))))))