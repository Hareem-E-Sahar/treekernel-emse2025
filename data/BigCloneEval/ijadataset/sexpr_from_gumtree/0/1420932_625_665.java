(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:comprimirFicheros_x_algoritmo)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:archivoZipear))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:rutaArchivoComprimido))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:nombreAlgoritmo))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:estado)(BooleanLiteral:false)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Checksum))(VariableDeclarationFragment(SimpleName:algoritmoCompresor)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nombreAlgoritmo))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:algoritmoCompresor)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Adler32))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nombreAlgoritmo))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:algoritmoCompresor)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CRC32))))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:entradaFile)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:entradaBuffer)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:salidaFile)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:rutaArchivoComprimido))))(VariableDeclarationStatement(SimpleType(SimpleName:CheckedOutputStream))(VariableDeclarationFragment(SimpleName:comprobacion)(ClassInstanceCreation(SimpleType(SimpleName:CheckedOutputStream))(SimpleName:salidaFile)(SimpleName:algoritmoCompresor))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:ZIP)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(SimpleName:comprobacion)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nombreAlgoritmo)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:datos)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:TAMANO_BUFFER))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:archivoZipear.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:nombreArchivo)(ArrayAccess(SimpleName:archivoZipear)(SimpleName:i))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nombreArchivo)))))(ExpressionStatement(Assignment(SimpleName:entradaFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:nombreArchivo))))(ExpressionStatement(Assignment(SimpleName:entradaBuffer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:entradaFile)(SimpleName:TAMANO_BUFFER))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entradaZip)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:nombreArchivo))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ZIP))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entradaZip))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytes)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:bytes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entradaBuffer))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:datos)(NumberLiteral:0)(SimpleName:TAMANO_BUFFER)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ZIP))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:datos)(NumberLiteral:0)(SimpleName:bytes))))(ExpressionStatement(Assignment(SimpleName:estado)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entradaBuffer))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ZIP))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(Assignment(SimpleName:estado)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(Assignment(SimpleName:estado)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(ReturnStatement(SimpleName:estado))))))