(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:VocabularyLocation))(SimpleName:next)(Block(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urls))(SimpleName:isEmpty)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urls))(SimpleName:poll))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:VocabularyLocation))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:toExternalForm))(QualifiedName:VocabularyFormat.RDFXML)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:isEmpty)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:files))(SimpleName:poll))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:VocabularyLocation))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath))(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:VocabularyFormat.NTRIPLES)(QualifiedName:VocabularyFormat.RDFXML))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:lastModified))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))))(IfStatement(InfixExpression(SimpleName:nextZipEntry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:zipEntryAsString)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:CloseShieldInputStream))(SimpleName:in))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:VocabularyLocation))(VariableDeclarationFragment(SimpleName:location)(ClassInstanceCreation(SimpleType(SimpleName:VocabularyLocation))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nextZipEntry))(SimpleName:getName))(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nextZipEntry))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:VocabularyFormat.RDFXML)(NullLiteral))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nextZipEntry))(SimpleName:getTime))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:toInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipEntryAsString)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:findNextZipEntry)))(ReturnStatement(SimpleName:location)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NoSuchElementException))))))))