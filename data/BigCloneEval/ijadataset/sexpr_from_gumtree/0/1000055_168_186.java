(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:File))(SimpleName:writeInternalFile)(SingleVariableDeclaration(SimpleType(SimpleName:Context))(SimpleName:cx))(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:dir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fi)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fi)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:newInternalFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cx)(SimpleName:dir)(SimpleName:filename)))))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:openOutputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fi)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:length)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))(SimpleName:fos)))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:length)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AIOUtils))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AIOUtils))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))))(ReturnStatement(SimpleName:fi))))))