(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:generatePrivacyKeyPair)(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:clientMode))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:UnsupportedEncodingException))(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleType(SimpleName:SaslException))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:ccmagic)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CLIENT_CONF_MAGIC))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encoding)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:scmagic)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SVR_CONF_MAGIC))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encoding)))))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:md5)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negotiatedCipher))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CIPHER_TOKENS)(SimpleName:RC4_40))))(Block(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:5))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negotiatedCipher))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CIPHER_TOKENS)(SimpleName:RC4_56))))(Block(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:7))))(Block(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:16))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:keyBuffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ccmagic.length)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:H_A1)(NumberLiteral:0)(SimpleName:keyBuffer)(NumberLiteral:0)(SimpleName:n))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ccmagic)(NumberLiteral:0)(SimpleName:keyBuffer)(SimpleName:n)(QualifiedName:ccmagic.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md5))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:keyBuffer))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:Kcc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md5))(SimpleName:digest))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:scmagic)(NumberLiteral:0)(SimpleName:keyBuffer)(SimpleName:n)(QualifiedName:scmagic.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md5))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:keyBuffer))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:Kcs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md5))(SimpleName:digest))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)))(Block(ExpressionStatement(MethodInvocation(SimpleName:traceOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DP_CLASS_NAME)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:Kcc))))(ExpressionStatement(MethodInvocation(SimpleName:traceOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DP_CLASS_NAME)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:Kcs))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:myKc)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:peerKc)))(IfStatement(SimpleName:clientMode)(Block(ExpressionStatement(Assignment(SimpleName:myKc)(ASSIGNMENT_OPERATOR:=)(SimpleName:Kcc)))(ExpressionStatement(Assignment(SimpleName:peerKc)(ASSIGNMENT_OPERATOR:=)(SimpleName:Kcs))))(Block(ExpressionStatement(Assignment(SimpleName:myKc)(ASSIGNMENT_OPERATOR:=)(SimpleName:Kcs)))(ExpressionStatement(Assignment(SimpleName:peerKc)(ASSIGNMENT_OPERATOR:=)(SimpleName:Kcc)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:SecretKey))(VariableDeclarationFragment(SimpleName:encKey)))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKey))(VariableDeclarationFragment(SimpleName:decKey)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negotiatedCipher))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CIPHER_TOKENS)(SimpleName:RC4))))(INFIX_EXPRESSION_OPERATOR:>)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:encCipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:decCipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:encKey)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SecretKeySpec))(SimpleName:myKc)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:decKey)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SecretKeySpec))(SimpleName:peerKc)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encCipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.ENCRYPT_MODE)(SimpleName:encKey))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decCipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.DECRYPT_MODE)(SimpleName:decKey)))))(IfStatement(InfixExpression(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negotiatedCipher))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CIPHER_TOKENS)(SimpleName:DES)))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negotiatedCipher))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CIPHER_TOKENS)(SimpleName:DES3))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cipherFullname))(VariableDeclarationFragment(SimpleName:cipherShortname)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negotiatedCipher))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CIPHER_TOKENS)(SimpleName:DES))))(Block(ExpressionStatement(Assignment(SimpleName:cipherFullname)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:cipherShortname)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:cipherFullname)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:cipherShortname)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:encCipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cipherFullname)))))(ExpressionStatement(Assignment(SimpleName:decCipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cipherFullname)))))(ExpressionStatement(Assignment(SimpleName:encKey)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:makeDesKeys)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myKc)(SimpleName:cipherShortname)))))(ExpressionStatement(Assignment(SimpleName:decKey)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:makeDesKeys)(METHOD_INVOCATION_ARGUMENTS(SimpleName:peerKc)(SimpleName:cipherShortname)))))(VariableDeclarationStatement(SimpleType(SimpleName:IvParameterSpec))(VariableDeclarationFragment(SimpleName:encIv)(ClassInstanceCreation(SimpleType(SimpleName:IvParameterSpec))(SimpleName:myKc)(NumberLiteral:8)(NumberLiteral:8))))(VariableDeclarationStatement(SimpleType(SimpleName:IvParameterSpec))(VariableDeclarationFragment(SimpleName:decIv)(ClassInstanceCreation(SimpleType(SimpleName:IvParameterSpec))(SimpleName:peerKc)(NumberLiteral:8)(NumberLiteral:8))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encCipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.ENCRYPT_MODE)(SimpleName:encKey)(SimpleName:encIv))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decCipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.DECRYPT_MODE)(SimpleName:decKey)(SimpleName:decIv))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)))(Block(ExpressionStatement(MethodInvocation(SimpleName:traceOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DP_CLASS_NAME)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:negotiatedCipher)(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encIv))(SimpleName:getIV)))))(ExpressionStatement(MethodInvocation(SimpleName:traceOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DP_CLASS_NAME)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:negotiatedCipher)(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decIv))(SimpleName:getIV)))))(ExpressionStatement(MethodInvocation(SimpleName:traceOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DP_CLASS_NAME)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:negotiatedCipher)(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encKey))(SimpleName:getEncoded)))))(ExpressionStatement(MethodInvocation(SimpleName:traceOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DP_CLASS_NAME)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:negotiatedCipher)(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decKey))(SimpleName:getEncoded)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidKeySpecException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SaslException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidAlgorithmParameterException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SaslException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchPaddingException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SaslException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidKeyException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SaslException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e))))))))))