(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:recover)(SingleVariableDeclaration(SimpleType(SimpleName:Map))(SimpleName:heuristicallyCompletedTransactions))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:logFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:LogRecord.FULL_HEADER_LEN))(ReturnStatement))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:buf)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogRecord.FULL_HEADER_LEN)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getNextRecordLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(QualifiedName:LogRecord.HeurData))(VariableDeclarationFragment(SimpleName:data)(ClassInstanceCreation(SimpleType(QualifiedName:LogRecord.HeurData)))))(WhileStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:LogRecord.FULL_HEADER_LEN))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:len))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buf))(SimpleName:flip)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getHeurData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:len)(SimpleName:data))))(SwitchStatement(QualifiedName:data.recordType)(SwitchCase(QualifiedName:LogRecord.HEUR_STATUS))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:heuristicallyCompletedTransactions))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Long))(QualifiedName:data.localTransactionId))(SimpleName:data))))(BreakStatement)(SwitchCase(QualifiedName:LogRecord.HEUR_FORGOTTEN))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:heuristicallyCompletedTransactions))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Long))(QualifiedName:data.localTransactionId)))))(BreakStatement)(SwitchCase)(BreakStatement))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogRecord))(SimpleName:getNextRecordLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:len))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignore))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))))))