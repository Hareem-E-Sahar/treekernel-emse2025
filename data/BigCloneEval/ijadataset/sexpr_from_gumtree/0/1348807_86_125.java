(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:calculateMovement)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:timestepS))(Block(ExpressionStatement(Assignment(SimpleName:weightOnFrontWheelsN)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getEmptyMassKg))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:9.81))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:weightOnRearWheelsN)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getEmptyMassKg))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:9.81))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:maxForceToGroundN)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:weightOnRearWheelsN)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1.1))))(ExpressionStatement(Assignment(SimpleName:engineTorqueNm)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getEngineMaxTorqueNm))(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(SimpleName:getThrottle)))))(ExpressionStatement(Assignment(SimpleName:wheelTorqueNm)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:engineTorqueNm)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getGearRatio)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getGear))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getDifferentialRatio)))))(ExpressionStatement(Assignment(SimpleName:wheelForceN)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:wheelTorqueNm)(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getDiameterRearWheelM))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))))(ExpressionStatement(Assignment(SimpleName:freeRollingWheelAngularVelocity_s)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:velocityM_s)(INFIX_EXPRESSION_OPERATOR:/)(QualifiedName:carDefinition.diameterRearWheelM))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:wheelAngularVelocity_s)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:freeRollingWheelAngularVelocity_s)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:0.5))))(ExpressionStatement(Assignment(SimpleName:engineRPM_s)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:wheelAngularVelocity_s)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getGearRatio)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getGear))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getDifferentialRatio)))))(IfStatement(InfixExpression(SimpleName:wheelForceN)(INFIX_EXPRESSION_OPERATOR:>)(InfixExpression(SimpleName:maxForceToGroundN)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:longitudinalSlip)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:8))))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:abweichung)(NumberLiteral:2)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:left)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:right)(NumberLiteral:100)))(ExpressionStatement(Assignment(SimpleName:longitudinalSlip)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0.4)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:turns)(NumberLiteral:0)))(DoStatement(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:gripForceX)(MethodInvocation(SimpleName:calcGripForceN)(METHOD_INVOCATION_ARGUMENTS(SimpleName:longitudinalSlip)(SimpleName:maxForceToGroundN)))))(ExpressionStatement(Assignment(SimpleName:abweichung)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:gripForceX)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:wheelForceN))))(IfStatement(InfixExpression(SimpleName:abweichung)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:left)(ASSIGNMENT_OPERATOR:=)(SimpleName:longitudinalSlip)))(ExpressionStatement(Assignment(SimpleName:longitudinalSlip)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:longitudinalSlip)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:right)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(IfStatement(InfixExpression(SimpleName:abweichung)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:right)(ASSIGNMENT_OPERATOR:=)(SimpleName:longitudinalSlip)))(ExpressionStatement(Assignment(SimpleName:longitudinalSlip)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:longitudinalSlip)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:left)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))))(ExpressionStatement(PostfixExpression(SimpleName:turns)(POSTFIX_EXPRESSION_OPERATOR:++))))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:abweichung)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0.01)))))(ExpressionStatement(Assignment(SimpleName:gripForceN)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:calcGripForceN)(METHOD_INVOCATION_ARGUMENTS(SimpleName:longitudinalSlip)(SimpleName:maxForceToGroundN)))))(ExpressionStatement(Assignment(SimpleName:rollingResistanceN)(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:0.7)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:velocityM_s))))(ExpressionStatement(Assignment(SimpleName:airDragN)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getCoefficientOfDrag))(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:carDefinition))(SimpleName:getFrontalAreaMm))(SimpleName:AIRDENSITYG_L)(SimpleName:velocityM_s)(SimpleName:velocityM_s)))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:0.5))))(ExpressionStatement(Assignment(SimpleName:nettoForceN)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:gripForceN)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:rollingResistanceN)(SimpleName:airDragN))))(ExpressionStatement(Assignment(SimpleName:accelerationM_ss)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:nettoForceN)(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(SimpleName:getMass)))))(ExpressionStatement(Assignment(SimpleName:velocityM_s)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:velocityM_s)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:timestepS)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:accelerationM_ss)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:position))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:direction)(InfixExpression(SimpleName:velocityM_s)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:timestepS)))))(IfStatement(InfixExpression(SimpleName:dataServer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dataServer))(SimpleName:dataUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataTypeVelocityId)(ClassInstanceCreation(SimpleType(SimpleName:Double))(SimpleName:velocityM_s))))))))))