(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:operate)(SingleVariableDeclaration(SimpleType(SimpleName:AChannelSelection))(SimpleName:ch1))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MMArray))(VariableDeclarationFragment(SimpleName:s1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch1))(SimpleName:getChannel)))(SimpleName:getSamples))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:o1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch1))(SimpleName:getOffset))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch1))(SimpleName:getLength))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:p)(SimpleName:startPeriod)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:rad)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:exp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:pow)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(CastExpression(PrimitiveType:double)(SimpleName:endPeriod))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:startPeriod))(InfixExpression(NumberLiteral:1.)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:l1))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch1))(SimpleName:getChannel)))(SimpleName:markChange)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l1))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:p)(ASSIGNMENT_OPERATOR:*=)(SimpleName:exp)))(ExpressionStatement(Assignment(SimpleName:rad)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(InfixExpression(InfixExpression(NumberLiteral:1.)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:p))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:s)(NumberLiteral:0)))(IfStatement(SimpleName:add)(Block(ExpressionStatement(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s1))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:o1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))))))))(ExpressionStatement(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:offset)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:amplitude)(INFIX_EXPRESSION_OPERATOR:*)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sin)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rad))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s1))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:o1))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch1))(SimpleName:mixIntensity)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:o1))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s1))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:o1))))(SimpleName:s))))))))))))