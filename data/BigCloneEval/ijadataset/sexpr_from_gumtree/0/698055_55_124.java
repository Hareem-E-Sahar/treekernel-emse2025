(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:PathNode))(SimpleName:buildPath)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:orig))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:rev))(SimpleType(SimpleName:DifferentiationFailedException))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:N)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:M)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:MAX)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:middle)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:Integer))(SimpleType(SimpleName:PathNode)))(VariableDeclarationFragment(SimpleName:diagonal)))(VariableDeclarationStatement(SimpleType(SimpleName:PathNode))(VariableDeclarationFragment(SimpleName:d_kminus)))(VariableDeclarationStatement(SimpleType(SimpleName:PathNode))(VariableDeclarationFragment(SimpleName:d_kplus)))(VariableDeclarationStatement(SimpleType(SimpleName:PathNode))(VariableDeclarationFragment(SimpleName:path)))(VariableDeclarationStatement(SimpleType(SimpleName:PathNode))(VariableDeclarationFragment(SimpleName:node)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:kmiddle)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:kplus)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:kminus)))(VariableDeclarationStatement(SimpleType(SimpleName:PathNode))(VariableDeclarationFragment(SimpleName:prev)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:startTime)))(IfStatement(InfixExpression(SimpleName:orig)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:rev)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:N)(ASSIGNMENT_OPERATOR:=)(QualifiedName:orig.length)))(ExpressionStatement(Assignment(SimpleName:M)(ASSIGNMENT_OPERATOR:=)(QualifiedName:rev.length)))(ExpressionStatement(Assignment(SimpleName:MAX)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:N)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:M)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:MAX)))))(ExpressionStatement(Assignment(SimpleName:middle)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:diagonal)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:Integer))(SimpleType(SimpleName:PathNode))))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:startTime)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diagonal))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(ClassInstanceCreation(SimpleType(SimpleName:Snake))(NumberLiteral:0)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(NullLiteral)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:d)(NumberLiteral:0)))(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:MAX))(PostfixExpression(SimpleName:d)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:checkMaxTime)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:startTime))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:MAXTIME)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:org.jmeld.diff.MaxTimeExceededException))(StringLiteral:<STR>)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:d))))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:d))(Assignment(SimpleName:k)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:2))(Block(ExpressionStatement(Assignment(SimpleName:kmiddle)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:k))))(ExpressionStatement(Assignment(SimpleName:kplus)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:kmiddle)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:kminus)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:kmiddle)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:prev)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:d_kminus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diagonal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kminus)))))(ExpressionStatement(Assignment(SimpleName:d_kplus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diagonal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kplus)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:d))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:d))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(QualifiedName:d_kminus.i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:d_kplus.i)))))(Block(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(QualifiedName:d_kplus.i)))(ExpressionStatement(Assignment(SimpleName:prev)(ASSIGNMENT_OPERATOR:=)(SimpleName:d_kplus))))(Block(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:d_kminus.i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:prev)(ASSIGNMENT_OPERATOR:=)(SimpleName:d_kminus)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diagonal))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kminus))))(ExpressionStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:k))))(ExpressionStatement(Assignment(SimpleName:node)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DiffNode))(SimpleName:i)(SimpleName:j)(SimpleName:prev))))(WhileStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:N))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:M)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:orig)(SimpleName:i)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:rev)(SimpleName:j)))))(Block(ExpressionStatement(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:node.i))(Block(ExpressionStatement(Assignment(SimpleName:node)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Snake))(SimpleName:i)(SimpleName:j)(SimpleName:node))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diagonal))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kmiddle)(SimpleName:node))))(IfStatement(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:N))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:M)))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diagonal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kmiddle))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diagonal))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(SimpleName:middle)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:d))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(NullLiteral))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DifferentiationFailedException))(StringLiteral:<STR>)))))))