(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Key))(SimpleName:createGroupPublicKey)(SingleVariableDeclaration(SimpleType(SimpleName:MembershipListObject))(SimpleName:ml))(SimpleType(SimpleName:ContentEncodingException))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:InvalidKeyException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:KeyPairGenerator))(VariableDeclarationFragment(SimpleName:kpg)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:kpg)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:KeyPairGenerator))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_groupManager))(SimpleName:getGroupKeyAlgorithm)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_groupManager))(SimpleName:getGroupKeyAlgorithm)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GroupAccessControlManager.DEFAULT_GROUP_KEY_ALGORITHM)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.FAC_ACCESSCONTROL)(QualifiedName:Level.SEVERE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:severe)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.FAC_ACCESSCONTROL)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:GroupAccessControlManager.DEFAULT_GROUP_KEY_ALGORITHM)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:GroupAccessControlManager.DEFAULT_GROUP_KEY_ALGORITHM)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InvalidKeyException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_groupManager))(SimpleName:getGroupKeyAlgorithm))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:kpg))(SimpleName:initialize)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GroupAccessControlManager.DEFAULT_GROUP_KEY_LENGTH))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPair))(VariableDeclarationFragment(SimpleName:pair)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:kpg))(SimpleName:generateKeyPair))))(ExpressionStatement(Assignment(SimpleName:_groupPublicKey)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PublicKeyObject))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GroupAccessControlProfile))(SimpleName:groupPublicKeyName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:_groupNamespace)(SimpleName:_groupFriendlyName)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pair))(SimpleName:getPublic))(QualifiedName:SaveType.REPOSITORY)(SimpleName:_handle))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_groupPublicKey))(SimpleName:save)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_groupPublicKey))(SimpleName:updateInBackground)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(SimpleName:stopPrivateKeyDirectoryEnumeration)))(ExpressionStatement(Assignment(SimpleName:_privKeyDirectory)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:PrincipalKeyDirectory))(VariableDeclarationFragment(SimpleName:newPrivateKeyDirectory)(MethodInvocation(SimpleName:privateKeyDirectory)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_groupManager))(SimpleName:getAccessManager))))))(VariableDeclarationStatement(SimpleType(SimpleName:Key))(VariableDeclarationFragment(SimpleName:privateKeyWrappingKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:WrappedKey))(SimpleName:generateNonceKey))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newPrivateKeyDirectory))(SimpleName:addPrivateKeyBlock)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pair))(SimpleName:getPrivate))(SimpleName:privateKeyWrappingKey)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidKeyException))(SimpleName:e))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.FAC_ACCESSCONTROL)(QualifiedName:Level.WARNING)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:warning)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Log.FAC_ACCESSCONTROL)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))(ThrowStatement(SimpleName:e)))))(ExpressionStatement(MethodInvocation(SimpleName:updateGroupPublicKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:privateKeyWrappingKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ml))(SimpleName:membershipList)))(SimpleName:contents)))))(ReturnStatement(SimpleName:privateKeyWrappingKey))))))