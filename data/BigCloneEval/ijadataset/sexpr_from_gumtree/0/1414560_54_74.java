(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:SoundMp3)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(Block(SuperConstructorInvocation)(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:filename))(ASSIGNMENT_OPERATOR:=)(SimpleName:filename)))(ExpressionStatement(Assignment(SimpleName:stop)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AssetsController))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename)))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:ais)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:baseFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ais))(SimpleName:getFormat))))(ExpressionStatement(Assignment(SimpleName:decodedFormat)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:AudioFormat))(QualifiedName:AudioFormat.Encoding.PCM_SIGNED)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getSampleRate))(NumberLiteral:16)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getChannels))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getSampleRate))(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:audioInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:decodedFormat)(SimpleName:ais)))))(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:info)(ClassInstanceCreation(SimpleType(QualifiedName:DataLine.Info))(TypeLiteral(SimpleType(SimpleName:SourceDataLine)))(SimpleName:decodedFormat))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SourceDataLine))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:info))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:decodedFormat)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedAudioFileException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:LineUnavailableException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename)(StringLiteral:<STR>))))))))))))