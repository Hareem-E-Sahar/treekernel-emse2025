(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:List))(SimpleName:equivalenceClasses)(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:weight)(MethodInvocation(SimpleName:weightVector))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:cyclesArray)(CastExpression(ArrayType(SimpleType(SimpleName:Object))(Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cycles))(SimpleName:toArray)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cyclesArray)(ClassInstanceCreation(SimpleType(SimpleName:Comparator))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:compare)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o1))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o2))(Block(ReturnStatement(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:SimpleCycle))(SimpleName:o1))))(SimpleName:weight))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:SimpleCycle))(SimpleName:o2))))(SimpleName:weight)))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Collection))(VariableDeclarationFragment(SimpleName:essentialCycles)(MethodInvocation(SimpleName:essentialCycles))))(VariableDeclarationStatement(ArrayType(PrimitiveType:boolean)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:u)(ArrayCreation(ArrayType(PrimitiveType:boolean)(Dimension(QualifiedName:cyclesArray.length))(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeList))(SimpleName:size)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:boolean)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:a)(MethodInvocation(SimpleName:getCycleEdgeIncidenceMatrix)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cyclesArray)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:boolean)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:ai)(MethodInvocation(SimpleName:inverseBinaryMatrix)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)(QualifiedName:cyclesArray.length)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:cyclesArray.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:cyclesArray.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:u)(SimpleName:i))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:ai)(SimpleName:j))(SimpleName:i))))))))(VariableDeclarationStatement(SimpleType(SimpleName:UndirectedGraph))(VariableDeclarationFragment(SimpleName:h)(ClassInstanceCreation(SimpleType(SimpleName:SimpleGraph)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:h))(SimpleName:addAllVertices)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cycles))))(VariableDeclarationStatement(SimpleType(SimpleName:ConnectivityInspector))(VariableDeclarationFragment(SimpleName:connectivityInspector)(ClassInstanceCreation(SimpleType(SimpleName:ConnectivityInspector))(SimpleName:h))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:left)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:right)(NumberLiteral:0)))(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:weight.length))(PostfixExpression(SimpleName:right)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:weight.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:weight)(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:weight)(SimpleName:right)))))(ContinueStatement))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(SimpleName:left)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:right))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:essentialCycles))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:SimpleCycle))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:i)))))(ContinueStatement))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:right))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:essentialCycles))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:SimpleCycle))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:j)))))(ContinueStatement))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connectivityInspector))(SimpleName:pathExists)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:cyclesArray)(SimpleName:i))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:j))))(ContinueStatement))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:sameClass)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:AuxiliaryGraph2))(VariableDeclarationFragment(SimpleName:auxGraph)(ClassInstanceCreation(SimpleType(SimpleName:AuxiliaryGraph2))(SimpleName:graph)(SimpleName:edgeList)(ArrayAccess(SimpleName:u)(SimpleName:i))(ArrayAccess(SimpleName:u)(SimpleName:j)))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:vertexSet)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:vertex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:shouldSearchCycle)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:Collection))(VariableDeclarationFragment(SimpleName:incidentEdges)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:edgesOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vertex)))))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:edgeIterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:incidentEdges))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeIterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Edge))(VariableDeclarationFragment(SimpleName:edge)(CastExpression(SimpleType(SimpleName:Edge))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:edgeIterator))(SimpleName:next)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(SimpleName:getEdgeIndex)(METHOD_INVOCATION_ARGUMENTS(SimpleName:edge)))))(IfStatement(InfixExpression(ArrayAccess(ArrayAccess(SimpleName:u)(SimpleName:i))(SimpleName:index))(INFIX_EXPRESSION_OPERATOR:||)(ArrayAccess(ArrayAccess(SimpleName:u)(SimpleName:j))(SimpleName:index)))(Block(ExpressionStatement(Assignment(SimpleName:shouldSearchCycle)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))(IfStatement(SimpleName:shouldSearchCycle)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:auxVertex00)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxGraph))(SimpleName:auxVertex00)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vertex)))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:auxVertex11)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxGraph))(SimpleName:auxVertex11)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vertex)))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:auxPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BFSShortestPath))(SimpleName:findPathBetween)(METHOD_INVOCATION_ARGUMENTS(SimpleName:auxGraph)(SimpleName:auxVertex00)(SimpleName:auxVertex11)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:pathWeight)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxPath))(SimpleName:size))))(IfStatement(InfixExpression(SimpleName:pathWeight)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:weight)(SimpleName:left)))(Block(ExpressionStatement(Assignment(SimpleName:sameClass)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))))(IfStatement(SimpleName:sameClass)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:h))(SimpleName:addEdge)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:cyclesArray)(SimpleName:i))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:j)))))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(SimpleName:left)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:right))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:essentialCycles))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:SimpleCycle))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:i)))))(ContinueStatement))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:right))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:essentialCycles))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:SimpleCycle))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:j)))))(ContinueStatement))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connectivityInspector))(SimpleName:pathExists)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:cyclesArray)(SimpleName:i))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:j))))(ContinueStatement))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:sameClass)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:SimpleCycle))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:k)))))(SimpleName:weight))(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:weight)(SimpleName:left)))(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AuxiliaryGraph2))(VariableDeclarationFragment(SimpleName:auxGraph)(ClassInstanceCreation(SimpleType(SimpleName:AuxiliaryGraph2))(SimpleName:graph)(SimpleName:edgeList)(ArrayAccess(SimpleName:u)(SimpleName:i))(ArrayAccess(SimpleName:u)(SimpleName:k)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:shortestPathFound)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:vertexSet)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:vertex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:auxVertex00)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxGraph))(SimpleName:auxVertex00)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vertex)))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:auxVertex11)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxGraph))(SimpleName:auxVertex11)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vertex)))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:auxPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BFSShortestPath))(SimpleName:findPathBetween)(METHOD_INVOCATION_ARGUMENTS(SimpleName:auxGraph)(SimpleName:auxVertex00)(SimpleName:auxVertex11)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:pathWeight)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxPath))(SimpleName:size))))(IfStatement(InfixExpression(SimpleName:pathWeight)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:weight)(SimpleName:left)))(Block(ExpressionStatement(Assignment(SimpleName:shortestPathFound)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:shortestPathFound))(ContinueStatement))(ExpressionStatement(Assignment(SimpleName:auxGraph)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:AuxiliaryGraph2))(SimpleName:graph)(SimpleName:edgeList)(ArrayAccess(SimpleName:u)(SimpleName:j))(ArrayAccess(SimpleName:u)(SimpleName:k)))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:vertexSet)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:vertex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:auxVertex00)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxGraph))(SimpleName:auxVertex00)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vertex)))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:auxVertex11)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxGraph))(SimpleName:auxVertex11)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vertex)))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:auxPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BFSShortestPath))(SimpleName:findPathBetween)(METHOD_INVOCATION_ARGUMENTS(SimpleName:auxGraph)(SimpleName:auxVertex00)(SimpleName:auxVertex11)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:pathWeight)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:auxPath))(SimpleName:size))))(IfStatement(InfixExpression(SimpleName:pathWeight)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:weight)(SimpleName:left)))(Block(ExpressionStatement(Assignment(SimpleName:sameClass)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))(IfStatement(SimpleName:sameClass)(BreakStatement))))(IfStatement(SimpleName:sameClass)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:h))(SimpleName:addEdge)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:cyclesArray)(SimpleName:i))(ArrayAccess(SimpleName:cyclesArray)(SimpleName:j)))))))))))(ExpressionStatement(Assignment(SimpleName:left)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:right)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connectivityInspector))(SimpleName:connectedSets)))))))