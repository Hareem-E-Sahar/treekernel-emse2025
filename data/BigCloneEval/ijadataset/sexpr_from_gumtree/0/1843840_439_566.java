(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:applyTo)(SingleVariableDeclaration(SimpleType(SimpleName:MapleCharacter))(SimpleName:applyfrom))(SingleVariableDeclaration(SimpleType(SimpleName:MapleCharacter))(SimpleName:applyto))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:primary))(SingleVariableDeclaration(SimpleType(SimpleName:Point))(SimpleName:pos))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hpchange)(MethodInvocation(SimpleName:calcHPChange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:applyfrom)(SimpleName:primary)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mpchange)(MethodInvocation(SimpleName:calcMPChange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:applyfrom)(SimpleName:primary)))))(IfStatement(SimpleName:primary)(Block(IfStatement(InfixExpression(SimpleName:itemConNo)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MapleInventoryType))(VariableDeclarationFragment(SimpleName:type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MapleItemInformationProvider))(SimpleName:getInstance)))(SimpleName:getInventoryType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:itemCon)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MapleInventoryManipulator))(SimpleName:removeById)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getClient))(SimpleName:type)(SimpleName:itemCon)(SimpleName:itemConNo)(BooleanLiteral:false)(BooleanLiteral:true))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(ParameterizedType(SimpleType(SimpleName:Pair))(SimpleType(SimpleName:MapleStat))(SimpleType(SimpleName:Integer))))(VariableDeclarationFragment(SimpleName:hpmpupdate)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(ParameterizedType(SimpleType(SimpleName:Pair))(SimpleType(SimpleName:MapleStat))(SimpleType(SimpleName:Integer))))(NumberLiteral:2))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:primary))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isResurrection)))(Block(ExpressionStatement(Assignment(SimpleName:hpchange)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMaxHp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:setStance)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:isDispel))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:makeChanceResult)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:dispelDebuffs)))))(IfStatement(MethodInvocation(SimpleName:isHeroWill))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:dispelSeduce)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:isPvPMap)))(Block(IfStatement(InfixExpression(SimpleName:hpchange)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:hpchange)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:hpchange)))(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getHp))))(Block(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newHp)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getHp))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hpchange))))(IfStatement(InfixExpression(SimpleName:newHp)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:newHp)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:setHp)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newHp))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hpmpupdate))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Pair))(SimpleType(SimpleName:MapleStat))(SimpleType(SimpleName:Integer)))(QualifiedName:MapleStat.HP)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getHp))))))))))))(IfStatement(InfixExpression(SimpleName:mpchange)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:mpchange)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:mpchange)))(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMp))))(Block(ReturnStatement(BooleanLiteral:false))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:isGM)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:setMp)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMp))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mpchange))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hpmpupdate))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Pair))(SimpleType(SimpleName:MapleStat))(SimpleType(SimpleName:Integer)))(QualifiedName:MapleStat.MP)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMp))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getClient)))(SimpleName:getSession)))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MaplePacketCreator))(SimpleName:updatePlayerStats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hpmpupdate)(BooleanLiteral:true))))))(IfStatement(InfixExpression(SimpleName:moveTo)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMap)))(SimpleName:getReturnMapId))(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMapId)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MapleMap))(VariableDeclarationFragment(SimpleName:target)))(IfStatement(InfixExpression(SimpleName:moveTo)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:999999999))(Block(ExpressionStatement(Assignment(SimpleName:target)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMap)))(SimpleName:getReturnMap)))))(Block(ExpressionStatement(Assignment(SimpleName:target)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ChannelServer))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getClient)))(SimpleName:getChannel)))))(SimpleName:getMapFactory)))(SimpleName:getMap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:moveTo)))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getId))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:10000000))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:60))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMapId))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:10000000))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:61)))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getId))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:10000000))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:21))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMapId))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:10000000))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:20)))(Block(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getId))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:10000000))(INFIX_EXPRESSION_OPERATOR:!=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMapId))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:10000000)))(Block(ReturnStatement(BooleanLiteral:false))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:changeMap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:target)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getPortal)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))(Block(ReturnStatement(BooleanLiteral:false))))))(IfStatement(MethodInvocation(SimpleName:isShadowClaw))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:projectile)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:MapleInventory))(VariableDeclarationFragment(SimpleName:use)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getInventory)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:MapleInventoryType.USE)))))(VariableDeclarationStatement(SimpleType(SimpleName:MapleItemInformationProvider))(VariableDeclarationFragment(SimpleName:mii)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MapleItemInformationProvider))(SimpleName:getInstance))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:255))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IItem))(VariableDeclarationFragment(SimpleName:item)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:use))(SimpleName:getItem)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(SimpleName:i))))))(IfStatement(InfixExpression(SimpleName:item)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isStar)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mii))(SimpleName:isThrowingStar)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getItemId))))))(IfStatement(InfixExpression(SimpleName:isStar)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getQuantity))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:200)))(Block(ExpressionStatement(Assignment(SimpleName:projectile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getItemId))))(BreakStatement)))))))(IfStatement(InfixExpression(SimpleName:projectile)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement(BooleanLiteral:false)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MapleInventoryManipulator))(SimpleName:removeById)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getClient))(QualifiedName:MapleInventoryType.USE)(SimpleName:projectile)(NumberLiteral:200)(BooleanLiteral:false)(BooleanLiteral:true))))))))(IfStatement(SimpleName:overTime)(Block(ExpressionStatement(MethodInvocation(SimpleName:applyBuffEffect)(METHOD_INVOCATION_ARGUMENTS(SimpleName:applyfrom)(SimpleName:applyto)(SimpleName:primary))))))(IfStatement(InfixExpression(SimpleName:primary)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:overTime)(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(SimpleName:isHeal)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:applyBuff)(METHOD_INVOCATION_ARGUMENTS(SimpleName:applyfrom))))))(IfStatement(InfixExpression(SimpleName:primary)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:isMonsterBuff)))(Block(ExpressionStatement(MethodInvocation(SimpleName:applyMonsterBuff)(METHOD_INVOCATION_ARGUMENTS(SimpleName:applyfrom))))))(VariableDeclarationStatement(SimpleType(SimpleName:SummonMovementType))(VariableDeclarationFragment(SimpleName:summonMovementType)(MethodInvocation(SimpleName:getSummonMovementType))))(IfStatement(InfixExpression(InfixExpression(SimpleName:summonMovementType)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:MapleSummon))(VariableDeclarationFragment(SimpleName:tosummon)(ClassInstanceCreation(SimpleType(SimpleName:MapleSummon))(SimpleName:applyfrom)(SimpleName:sourceid)(SimpleName:pos)(SimpleName:summonMovementType))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tosummon))(SimpleName:isPuppet)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyfrom))(SimpleName:getCheatTracker)))(SimpleName:resetSummonAttack)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyfrom))(SimpleName:getMap)))(SimpleName:spawnSummon)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tosummon))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyfrom))(SimpleName:getSummons)))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceid)(SimpleName:tosummon))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tosummon))(SimpleName:addHP)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x))))(IfStatement(MethodInvocation(SimpleName:isBeholder))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tosummon))(SimpleName:addHP)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))))(IfStatement(MethodInvocation(SimpleName:isMagicDoor))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Point))(VariableDeclarationFragment(SimpleName:doorPosition)(ClassInstanceCreation(SimpleType(SimpleName:Point))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getPosition)))))(VariableDeclarationStatement(SimpleType(SimpleName:MapleDoor))(VariableDeclarationFragment(SimpleName:door)(ClassInstanceCreation(SimpleType(SimpleName:MapleDoor))(SimpleName:applyto)(SimpleName:doorPosition))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getMap)))(SimpleName:spawnDoor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:door))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:addDoor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:door))))(ExpressionStatement(Assignment(SimpleName:door)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MapleDoor))(SimpleName:door))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:addDoor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:door))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:door))(SimpleName:getTown)))(SimpleName:spawnDoor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:door))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getParty))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:silentPartyUpdate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:disableDoor))))(IfStatement(MethodInvocation(SimpleName:isMist))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:bounds)(MethodInvocation(SimpleName:calculateBoundingBox)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyfrom))(SimpleName:getPosition))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyfrom))(SimpleName:isFacingLeft))))))(VariableDeclarationStatement(SimpleType(SimpleName:MapleMist))(VariableDeclarationFragment(SimpleName:mist)(ClassInstanceCreation(SimpleType(SimpleName:MapleMist))(SimpleName:bounds)(SimpleName:applyfrom)(ThisExpression))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyfrom))(SimpleName:getMap)))(SimpleName:spawnMist)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mist)(MethodInvocation(SimpleName:getDuration))(InfixExpression(SimpleName:sourceid)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2111003))(BooleanLiteral:false)))))(IfStatement(MethodInvocation(SimpleName:isTimeLeap))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:PlayerCoolDownValueHolder))(SimpleName:i))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:getAllCooldowns))(Block(IfStatement(InfixExpression(QualifiedName:i.skillId)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:5121010))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:applyto))(SimpleName:removeCooldown)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:i.skillId))))))))))))(ReturnStatement(BooleanLiteral:true))))))