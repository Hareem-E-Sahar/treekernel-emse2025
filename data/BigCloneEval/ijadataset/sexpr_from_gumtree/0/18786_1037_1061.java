(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:getOverlapCount)(SingleVariableDeclaration(SimpleType(SimpleName:ScheduleItem))(SimpleName:item))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:ScheduleItem)))(SimpleName:overlapping))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getStart))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:end)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getStop))))(VariableDeclarationStatement(SimpleType(SimpleName:DataStore))(VariableDeclarationFragment(SimpleName:store)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DataStore))(SimpleName:getInstance))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Channel)))(VariableDeclarationFragment(SimpleName:channels)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:store))(SimpleName:getChannels))))(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:schChannel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channels))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:item))(SimpleName:getChannel))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:muxString)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schChannel))(SimpleName:getFrequency))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schChannel))(SimpleName:getBandWidth)))))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:startCal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startCal))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:start))))(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:endCal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:endCal))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:end))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxOverlap)(NumberLiteral:0)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startCal))(SimpleName:before)(METHOD_INVOCATION_ARGUMENTS(SimpleName:endCal)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Calendar))(VariableDeclarationFragment(SimpleName:span)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:span))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startCal))(SimpleName:getTime)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:span))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(NumberLiteral:1))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Integer)))(VariableDeclarationFragment(SimpleName:muxOverlapCount)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Integer))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxOverlapCount))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:muxString)(ClassInstanceCreation(SimpleType(SimpleName:Integer))(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(SimpleName:getOverlapsForMin)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startCal))(SimpleName:getTime))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:span))(SimpleName:getTime))(SimpleName:muxOverlapCount)(SimpleName:overlapping)(SimpleName:channels))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Integer))(Dimension))(VariableDeclarationFragment(SimpleName:count)(CastExpression(ArrayType(SimpleType(SimpleName:Integer))(Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:muxOverlapCount))(SimpleName:values)))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Integer))(Dimension(NumberLiteral:0)))))))))(IfStatement(InfixExpression(SimpleName:maxOverlap)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:count.length))(ExpressionStatement(Assignment(SimpleName:maxOverlap)(ASSIGNMENT_OPERATOR:=)(QualifiedName:count.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startCal))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Calendar.MINUTE)(NumberLiteral:1))))))(ReturnStatement(SimpleName:maxOverlap))))))