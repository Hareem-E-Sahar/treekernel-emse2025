(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:newProject)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:projectFile))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:targetFile))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:TabView))(SimpleName:view))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:URI))(SimpleName:projectURI))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:URI))(SimpleName:targetURI))(Block(AssertStatement(ParenthesizedExpression(InfixExpression(SimpleName:projectURI)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))))(IfStatement(InfixExpression(SimpleName:model)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:view))(SimpleName:queryUser)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:OVERWRITEPROJECTTITLE)))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:AbstractView.QueryValues.YES))(ReturnStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:model)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(SimpleName:setChanged)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectFile))(SimpleName:exists))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:view))(SimpleName:queryUser)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AbstractView.QueryValues.YES))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetFile))(SimpleName:exists))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:view))(SimpleName:queryUser)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AbstractView.QueryValues.YES))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetFile))(SimpleName:delete))))(ReturnStatement))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectFile))(SimpleName:delete)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetFile))(SimpleName:exists))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:view))(SimpleName:queryUser)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AbstractView.QueryValues.YES))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetFile))(SimpleName:delete)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:view))(SimpleName:genericError)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetFile))(SimpleName:toString))(StringLiteral:<STR>)))))(ReturnStatement))(ReturnStatement)))))(ExpressionStatement(Assignment(SimpleName:model)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProjectModelFactory))(SimpleName:createProjectModel))))(ExpressionStatement(MethodInvocation(SimpleName:setPropertiesFromModel)))(ExpressionStatement(Assignment(SimpleName:sourceURI)(ASSIGNMENT_OPERATOR:=)(SimpleName:projectURI)))(ExpressionStatement(MethodInvocation(SimpleName:setChanged)))(IfStatement(InfixExpression(SimpleName:projectResource)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:projectResource)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:createResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceURI))))))(VariableDeclarationStatement(SimpleType(SimpleName:RDFResourceNode))(VariableDeclarationFragment(SimpleName:projectNode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:setProjectURI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectURI)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:setTargetURI)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectNode)(SimpleName:targetURI))))(IfStatement(InfixExpression(SimpleName:sourceURI)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:model)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(SimpleName:setChanged)))))(ExpressionStatement(Assignment(SimpleName:targetOntology)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:OWOntology))(SimpleName:targetFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IRI))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetURI)))(ThisExpression)(QualifiedName:OntType.target)(SimpleName:view))))(ExpressionStatement(Assignment(SimpleName:displayReasoner)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectReasonerFactory))(SimpleName:createReasoner)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetOntology))(SimpleName:getModel))))))(ExpressionStatement(Assignment(SimpleName:outboardReasoner)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:projectReasonerFactory))(SimpleName:createReasoner)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetOntology))(SimpleName:getModel))))))(ExpressionStatement(MethodInvocation(SimpleName:notifyObservers)))))))