(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:private)(PrimitiveType:void)(SimpleName:compress)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:src))(SimpleType(SimpleName:IOException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:switches)))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Switch.test)))(ReturnStatement))(ExpressionStatement(MethodInvocation(SimpleName:checkSourceFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getPath)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src))))(ReturnStatement)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dst)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getPath))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:getAbsoluteFile))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:checkDestFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dst))))(ReturnStatement))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:inChannel)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:outChannel)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fileOut)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BZip2OutputStream))(VariableDeclarationFragment(SimpleName:bzOut)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:inLock)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:outLock)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:src)))(SimpleName:getChannel))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:inSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inChannel))(SimpleName:size))))(ExpressionStatement(Assignment(SimpleName:inLock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inChannel))(SimpleName:tryLock)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:inSize)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:inLock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src))))))(ExpressionStatement(Assignment(SimpleName:fileOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:dst))))(ExpressionStatement(Assignment(SimpleName:outChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOut))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:bzOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BZip2OutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedXOutputStream))(SimpleName:fileOut)(NumberLiteral:8192))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(ParenthesizedExpression(InfixExpression(FieldAccess(ThisExpression)(SimpleName:blockSize))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(QualifiedName:BZip2OutputStream.MAX_BLOCK_SIZE)(FieldAccess(ThisExpression)(SimpleName:blockSize)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BZip2OutputStream))(SimpleName:chooseBlockSize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inSize))))))))(ExpressionStatement(Assignment(SimpleName:outLock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outChannel))(SimpleName:tryLock))))(IfStatement(InfixExpression(SimpleName:outLock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dst))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:showProgress)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:switches)))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Switch.showProgress)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:pos)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:progress)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:showProgress)(INFIX_EXPRESSION_OPERATOR:||)(FieldAccess(ThisExpression)(SimpleName:verbose)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src)))))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inSize))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dst)))))))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:maxStep)(ConditionalExpression(SimpleName:showProgress)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:8192)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:inSize)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:pos)))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:MAX_PROGRESS))))(ParenthesizedExpression(InfixExpression(SimpleName:inSize)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:pos))))))(IfStatement(InfixExpression(SimpleName:maxStep)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(IfStatement(SimpleName:showProgress)(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(SimpleName:progress)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:MAX_PROGRESS))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(BreakStatement))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:step)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inChannel))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pos)(SimpleName:maxStep)(SimpleName:bzOut)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:step)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inChannel))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:inSize))))(ThrowStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:pos)(ASSIGNMENT_OPERATOR:+=)(SimpleName:step)))(IfStatement(SimpleName:showProgress)(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:p)(InfixExpression(CastExpression(PrimitiveType:double)(SimpleName:pos))(INFIX_EXPRESSION_OPERATOR:/)(CastExpression(PrimitiveType:double)(SimpleName:inSize)))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newProgress)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:MAX_PROGRESS)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:p))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(SimpleName:progress)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:newProgress))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:progress)(ASSIGNMENT_OPERATOR:=)(SimpleName:newProgress)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inLock))(SimpleName:release)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inChannel))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bzOut))(SimpleName:closeInstance)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:outSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outChannel))(SimpleName:position))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outChannel))(SimpleName:truncate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outSize))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outLock))(SimpleName:release)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOut))(SimpleName:close)))(IfStatement(FieldAccess(ThisExpression)(SimpleName:verbose))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:ratio)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:inSize)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ParenthesizedExpression(InfixExpression(SimpleName:outSize)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:100)))(ParenthesizedExpression(InfixExpression(CastExpression(PrimitiveType:double)(SimpleName:outSize))(INFIX_EXPRESSION_OPERATOR:/)(CastExpression(PrimitiveType:double)(SimpleName:inSize)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inSize))))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outSize))))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ratio))))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:switches)))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Switch.keep))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:delete)))(ThrowStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:src)))))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IO))(SimpleName:tryClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IO))(SimpleName:tryClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bzOut))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IO))(SimpleName:tryClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileOut))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IO))(SimpleName:tryRelease)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inLock))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IO))(SimpleName:tryRelease)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outLock))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:log)))(SimpleName:println))))(Block(ThrowStatement(SimpleName:ex)))))))))))