(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:open)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleType(SimpleName:Exception))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:isDesktopSupported))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:getDesktop)))(SimpleName:isSupported)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Desktop.Action.OPEN))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fixedFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsoluteFile)))(SimpleName:toString))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:URI))(SimpleName:toURI)(Block(TryStatement(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:URI))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getAbsolutePath))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ReturnStatement(SuperMethodInvocation(SimpleName:toURI))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Desktop))(SimpleName:getDesktop)))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fixedFile))))))))))