(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:backupPassword)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:uid))(SingleVariableDeclaration(ArrayType(PrimitiveType:char)(Dimension))(SimpleName:password))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:realm))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:securityQuestion))(SingleVariableDeclaration(ArrayType(PrimitiveType:char)(Dimension))(SimpleName:securityQuestionAnswer))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:passwordVerified)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getLdapBean)))(SimpleName:verifyPassword)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uid)(SimpleName:password)(SimpleName:realm)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:passwordVerified))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:GatekeeperAuthenticationException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:uid))(SimpleName:uid)(SimpleName:realm)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:securityQuestion)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:securityQuestionAnswer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:uid)(StringLiteral:<STR>)(SimpleName:realm)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:PasswordBackup))(VariableDeclarationFragment(SimpleName:passwordBackup)(MethodInvocation(SimpleName:findPasswordBackup)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uid)(SimpleName:realm)))))(IfStatement(InfixExpression(SimpleName:passwordBackup)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:em))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:passwordBackup))))))(IfStatement(InfixExpression(SimpleName:securityQuestion)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(NullLiteral))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pbeKeyAlgorithm)(SimpleName:PBE_KEY_ALGORITHM)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:salt)(MethodInvocation(SimpleName:getRandomSalt))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:iterationCount)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:USER_PASSWORD_ITERATION_COUNT)))))(VariableDeclarationStatement(SimpleType(SimpleName:PBEKeySpec))(VariableDeclarationFragment(SimpleName:pbeKeySpec)(ClassInstanceCreation(SimpleType(SimpleName:PBEKeySpec))(SimpleName:securityQuestionAnswer))))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKey))(VariableDeclarationFragment(SimpleName:secretKey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SecretKeyFactory))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pbeKeyAlgorithm))))(SimpleName:generateSecret)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pbeKeySpec)))))(VariableDeclarationStatement(SimpleType(SimpleName:PBEParameterSpec))(VariableDeclarationFragment(SimpleName:pbeParamSpec)(ClassInstanceCreation(SimpleType(SimpleName:PBEParameterSpec))(SimpleName:salt)(SimpleName:iterationCount))))(VariableDeclarationStatement(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cipher)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:secretKey))(SimpleName:getAlgorithm))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.ENCRYPT_MODE)(SimpleName:secretKey)(SimpleName:pbeParamSpec))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStreamWriter))(VariableDeclarationFragment(SimpleName:outputStreamWriter)(NullLiteral)))(TryStatement(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:outputStreamWriter)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(SimpleName:baos)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStreamWriter))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:password)(NumberLiteral:0)(QualifiedName:password.length)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStreamWriter))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(StringLiteral:<STR>)(SimpleName:ex))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:encryptedPassword)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:doFinal)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))))))(ExpressionStatement(MethodInvocation(SimpleName:storeEncryptedPassword)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encryptedPassword)(SimpleName:salt)(SimpleName:iterationCount)(SimpleName:uid)(SimpleName:realm)(SimpleName:securityQuestion))))(ReturnStatement(SimpleName:encryptedPassword)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:GeneralSecurityException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:uid))(SimpleName:ex))))))))))