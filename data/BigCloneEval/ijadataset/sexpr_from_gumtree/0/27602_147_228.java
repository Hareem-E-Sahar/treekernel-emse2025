(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:run)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:istream)(QualifiedName:System.in)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:version)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(MethodInvocation(SimpleName:parseArgs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)(BooleanLiteral:false)))))(IfStatement(InfixExpression(SimpleName:filename)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename)))))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:filename))))(ExpressionStatement(Assignment(SimpleName:istream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(ExpressionStatement(Assignment(SimpleName:istream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:filename))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:fatalError)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:toString))))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(ArrayType(SimpleType(SimpleName:String))(Dimension)))(VariableDeclarationFragment(SimpleName:wantLists)(MethodInvocation(SimpleName:readWantLists)(METHOD_INVOCATION_ARGUMENTS(SimpleName:istream)))))(IfStatement(InfixExpression(SimpleName:wantLists)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:options))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:option))(SimpleName:options)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:option))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:digest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:wset))(SimpleName:wantLists)(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:w))(SimpleName:wset)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(CharacterLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:w))(SimpleName:getBytes)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:byte)(CharacterLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:digest)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:ex))(Block)))(ExpressionStatement(MethodInvocation(SimpleName:parseArgs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)(BooleanLiteral:true))))(IfStatement(InfixExpression(InfixExpression(SimpleName:iterations)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:seed)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(Block(ExpressionStatement(Assignment(SimpleName:seed)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:seed)))))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:metric)(SimpleType(SimpleName:MetricSumSquares)))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:priorityScheme)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:NO_PRIORITIES)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:buildGraph)(METHOD_INVOCATION_ARGUMENTS(SimpleName:wantLists))))(IfStatement(InfixExpression(InfixExpression(SimpleName:showMissing)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:officialNames)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:officialNames))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SimpleName:usedNames)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:officialNames))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:missing)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(SimpleName:officialNames))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:missing))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SimpleName:missing)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))))(IfStatement(InfixExpression(SimpleName:showErrors)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:errors))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:errors))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:error))(SimpleName:errors)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:error)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:startTime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:removeImpossibleEdges)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(QualifiedName:Graph.Vertex))))(VariableDeclarationFragment(SimpleName:bestCycles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:findCycles))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bestMetric)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:metric))(SimpleName:calculate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bestCycles)))))(IfStatement(InfixExpression(SimpleName:iterations)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:metric))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:saveMatches)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:iterations)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:shuffle)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(QualifiedName:Graph.Vertex))))(VariableDeclarationFragment(SimpleName:cycles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:findCycles))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newMetric)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:metric))(SimpleName:calculate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cycles)))))(IfStatement(InfixExpression(SimpleName:newMetric)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:bestMetric))(Block(ExpressionStatement(Assignment(SimpleName:bestMetric)(ASSIGNMENT_OPERATOR:=)(SimpleName:newMetric)))(ExpressionStatement(Assignment(SimpleName:bestCycles)(ASSIGNMENT_OPERATOR:=)(SimpleName:cycles)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:saveMatches)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:metric)))))(IfStatement(SimpleName:verbose)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:metric)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graph))(SimpleName:restoreMatches)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:stopTime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(SimpleName:displayMatches)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bestCycles))))(IfStatement(SimpleName:showElapsedTime)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(SimpleName:stopTime)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:startTime)))(StringLiteral:<STR>))))))))))