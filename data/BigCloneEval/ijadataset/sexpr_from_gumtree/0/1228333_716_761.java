(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:InputStream))(SimpleName:getInputStream)(SingleVariableDeclaration(SimpleType(SimpleName:DataInputType))(SimpleName:type))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:input))(SimpleType(SimpleName:ApolloAdapterException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:stream)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:input)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:message)(StringLiteral:<STR>)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(SimpleName:message))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ApolloAdapterException))(SimpleName:message)))))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:DataInputType.FILE))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:apollo.util.IOUtil))(SimpleName:findFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:path)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ApolloAdapterException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)(StringLiteral:<STR>))))))))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:DataInputType.URL))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:query_str)(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Hashtable))(VariableDeclarationFragment(SimpleName:pubDbToURL)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Config))(SimpleName:getPublicDbList))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:url_str)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pubDbToURL))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getDatabase)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:database)(StringLiteral:<STR>)(SimpleName:url_str)))))(IfStatement(InfixExpression(SimpleName:url_str)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url_str))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:url_str)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url_str)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url_str))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:query_str)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url_str))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:index)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input))))(ExpressionStatement(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url_str))(SimpleName:length)))(ExpressionStatement(Assignment(SimpleName:query_str)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:query_str)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url_str))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index))))))))(Block(ExpressionStatement(Assignment(SimpleName:query_str)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:url_str)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)))))))))(Block(ExpressionStatement(Assignment(SimpleName:query_str)(ASSIGNMENT_OPERATOR:=)(SimpleName:input)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:query_str)))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:query_str))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex1))(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ApolloAdapterException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)(StringLiteral:<STR>)(SimpleName:query_str)(StringLiteral:<STR>))))))))))(ReturnStatement(SimpleName:stream))))))