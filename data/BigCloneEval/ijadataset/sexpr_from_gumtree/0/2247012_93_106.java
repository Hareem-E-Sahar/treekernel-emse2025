(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:isNear)(SingleVariableDeclaration(SimpleType(SimpleName:Point))(SimpleName:point))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(InfixExpression(QualifiedName:point.x)(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(SimpleName:getX)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(InfixExpression(QualifiedName:point.y)(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(SimpleName:getY)))))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:ZIGZAG))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:midY)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:srcY)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destY)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ReturnStatement(InfixExpression(MethodInvocation(SimpleName:isNearLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcX)(SimpleName:srcY)(SimpleName:srcX)(SimpleName:midY)(SimpleName:x)(SimpleName:y)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(SimpleName:isNearLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcX)(SimpleName:midY)(SimpleName:destX)(SimpleName:midY)(SimpleName:x)(SimpleName:y)))(MethodInvocation(SimpleName:isNearLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destX)(SimpleName:midY)(SimpleName:destX)(SimpleName:destY)(SimpleName:x)(SimpleName:y))))))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:LINE))(Block(ReturnStatement(MethodInvocation(SimpleName:isNearLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcX)(SimpleName:srcY)(SimpleName:destX)(SimpleName:destY)(SimpleName:x)(SimpleName:y)))))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CURVE))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:intersects)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))(NumberLiteral:4)(NumberLiteral:4)))))(Block(ReturnStatement(BooleanLiteral:false))))))))))