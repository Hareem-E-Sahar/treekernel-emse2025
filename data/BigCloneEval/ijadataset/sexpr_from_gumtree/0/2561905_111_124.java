(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:final)(SimpleType(QualifiedName:java.lang.Object))(SimpleName:GetPropertyData)(SingleVariableDeclaration(SimpleType(QualifiedName:java.util.Properties))(SimpleName:properties))(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.String))(SimpleName:name))(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.Class))(SimpleName:value_class))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:properties))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:name)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:value_class)))(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:Error.Argument))(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.lang.Object))(VariableDeclarationFragment(SimpleName:value)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:properties))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))(IfStatement(InstanceofExpression(SimpleName:value)(SimpleType(QualifiedName:java.lang.String)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.lang.reflect.Constructor))(VariableDeclarationFragment(SimpleName:ctor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:value_class))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CTOR_ARGS_D)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.lang.Object))(VariableDeclarationFragment(SimpleName:class_value)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(QualifiedName:java.lang.Object))(Dimension))(ArrayInitializer(SimpleName:value)))))))(ReturnStatement(SimpleName:class_value)))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.Throwable))(SimpleName:ignore))(Block(ReturnStatement(SimpleName:value))))))(ReturnStatement(SimpleName:value)))))))))