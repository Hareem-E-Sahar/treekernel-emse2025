(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:substitute)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:str))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:type))(SimpleType(SimpleName:IllegalArgumentException))(Block(IfStatement(InfixExpression(SimpleName:str)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:StringReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:StringReader))(SimpleName:str))))(VariableDeclarationStatement(SimpleType(SimpleName:StringWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:StringWriter)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:substitute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reader)(SimpleName:writer)(SimpleName:type)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Error))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:e)))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:getBuffer)))(SimpleName:toString)))))))