(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testMarshal)(SimpleType(SimpleName:JiBXException))(SimpleType(SimpleName:SAXException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:SortBy))(VariableDeclarationFragment(SimpleName:o)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SortByFactory))(SimpleName:create))))(VariableDeclarationStatement(SimpleType(SimpleName:IBindingFactory))(VariableDeclarationFragment(SimpleName:bfact)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BindingDirectory))(SimpleName:getFactory)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:SortBy)))))))(VariableDeclarationStatement(SimpleType(SimpleName:IMarshallingContext))(VariableDeclarationFragment(SimpleName:marshallingContext)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bfact))(SimpleName:createMarshallingContext))))(VariableDeclarationStatement(SimpleType(SimpleName:Writer))(VariableDeclarationFragment(SimpleName:outConsole)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(QualifiedName:System.out)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:marshallingContext))(SimpleName:setOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outConsole))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:marshallingContext))(SimpleName:setIndent)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:marshallingContext))(SimpleName:marshalDocument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:o)(StringLiteral:<STR>)(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:outputStream)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:Writer))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(SimpleName:outputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:marshallingContext))(SimpleName:setIndent)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:marshallingContext))(SimpleName:setOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:marshallingContext))(SimpleName:marshalDocument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:o)(StringLiteral:<STR>)(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:InputSource))(VariableDeclarationFragment(SimpleName:marshallingResult)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:toByteArray))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputSource))(VariableDeclarationFragment(SimpleName:expectedResult)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(SimpleName:fis))))(VariableDeclarationStatement(SimpleType(SimpleName:DifferenceListener))(VariableDeclarationFragment(SimpleName:differenceListener)(ClassInstanceCreation(SimpleType(SimpleName:IgnoreTextAndAttributeValuesDifferenceListener)))))(VariableDeclarationStatement(SimpleType(SimpleName:Diff))(VariableDeclarationFragment(SimpleName:diff)(ClassInstanceCreation(SimpleType(SimpleName:Diff))(SimpleName:expectedResult)(SimpleName:marshallingResult))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diff))(SimpleName:overrideDifferenceListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:differenceListener))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:diff))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:diff))(SimpleName:similar)))))))))