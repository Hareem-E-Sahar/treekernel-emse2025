(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:indexOf)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:size))))(VariableDeclarationStatement(SimpleType(SimpleName:DoublePoint))(VariableDeclarationFragment(SimpleName:pt1))(VariableDeclarationFragment(SimpleName:pt2))(VariableDeclarationFragment(SimpleName:pt3)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index1))(VariableDeclarationFragment(SimpleName:index2))(VariableDeclarationFragment(SimpleName:index3)))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(QualifiedName:Double.POSITIVE_INFINITY)))(ExpressionStatement(Assignment(SimpleName:pt1)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:DoublePoint))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:firstElement)))))(ExpressionStatement(Assignment(SimpleName:pt2)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:DoublePoint))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:lastElement)))))(IfStatement(InfixExpression(QualifiedName:pt1.x)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:x))(ReturnStatement(QualifiedName:Double.NEGATIVE_INFINITY)))(IfStatement(InfixExpression(QualifiedName:pt2.x)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:x))(ReturnStatement(QualifiedName:Double.POSITIVE_INFINITY)))(ExpressionStatement(Assignment(SimpleName:index1)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:index2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:index1)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:index2))(Block(ExpressionStatement(Assignment(SimpleName:index3)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:index1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:index2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:pt3)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:DoublePoint))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index3))))))(IfStatement(InfixExpression(QualifiedName:pt3.x)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:x))(Block(ExpressionStatement(Assignment(SimpleName:pt2)(ASSIGNMENT_OPERATOR:=)(SimpleName:pt3)))(ExpressionStatement(Assignment(SimpleName:index2)(ASSIGNMENT_OPERATOR:=)(SimpleName:index3))))(Block(ExpressionStatement(Assignment(SimpleName:pt1)(ASSIGNMENT_OPERATOR:=)(SimpleName:pt3)))(ExpressionStatement(Assignment(SimpleName:index1)(ASSIGNMENT_OPERATOR:=)(SimpleName:index3)))))))(IfStatement(InfixExpression(QualifiedName:pt1.x)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:pt2.x))(Block(ReturnStatement(ParenthesizedExpression(InfixExpression(CastExpression(PrimitiveType:double)(SimpleName:index1))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:pt1.x)))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(QualifiedName:pt2.x)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:pt1.x))))))))(Block(ReturnStatement(ParenthesizedExpression(CastExpression(PrimitiveType:double)(SimpleName:index1))))))))))