(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:buildDom)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:sXML))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:currDate)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.text.SimpleDateFormat))(VariableDeclarationFragment(SimpleName:formatter)(ClassInstanceCreation(SimpleType(QualifiedName:java.text.SimpleDateFormat))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dateStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:formatter))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currDate)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileName)(ClassInstanceCreation(SimpleType(SimpleName:String))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dateStr)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:newFile)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:newFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fileName))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.FileWriter))(VariableDeclarationFragment(SimpleName:fileOutput)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileWriter))(SimpleName:newFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOutput))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sXML))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOutput))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilderFactory))(VariableDeclarationFragment(SimpleName:factory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DocumentBuilderFactory))(SimpleName:newInstance))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilder))(VariableDeclarationFragment(SimpleName:builder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:factory))(SimpleName:newDocumentBuilder))))(ExpressionStatement(Assignment(SimpleName:document)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SAXException))(SimpleName:sxe))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Exception))(VariableDeclarationFragment(SimpleName:x)(SimpleName:sxe)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sxe))(SimpleName:getException))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sxe))(SimpleName:getException))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:x))(SimpleName:printStackTrace)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ParserConfigurationException))(SimpleName:pce))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pce))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:printStackTrace)))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newFile))(SimpleName:delete))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e2))(SimpleName:getMessage))(StringLiteral:<STR>))))))))))))