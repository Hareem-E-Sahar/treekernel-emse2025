(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:getInstances)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:targetClass))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType(SimpleType(SimpleName:TestProfile))))(SimpleName:testProfile))(Block(IfStatement(InfixExpression(SimpleName:testProfile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))(IfStatement(InfixExpression(SimpleName:targetClass)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:testProfileName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testProfile))(SimpleName:getName))))(ExpressionStatement(Assignment(SimpleName:targetClassName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetClass))(SimpleName:getName))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isTestProfile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testProfile))))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:testProfileName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:clazz)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:clazz)(ASSIGNMENT_OPERATOR:=)(SimpleName:testProfileName)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType(SimpleType(SimpleName:TestProfile))))(VariableDeclarationFragment(SimpleName:profileConstructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testProfile))(SimpleName:getConstructor))))(ExpressionStatement(Assignment(SimpleName:testProfileInstance)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:profileConstructor))(SimpleName:newInstance))))(ExpressionStatement(Assignment(SimpleName:clazz)(ASSIGNMENT_OPERATOR:=)(SimpleName:targetClassName)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType))(VariableDeclarationFragment(SimpleName:targetConstructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetClass))(SimpleName:getConstructor))))(ExpressionStatement(Assignment(SimpleName:targetInstance)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetConstructor))(SimpleName:newInstance)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:exception))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:clazz)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:exception))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:clazz)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exception))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:exception))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:clazz)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:exception))(Block(ExpressionStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:clazz)(StringLiteral:<STR>))))))))))))