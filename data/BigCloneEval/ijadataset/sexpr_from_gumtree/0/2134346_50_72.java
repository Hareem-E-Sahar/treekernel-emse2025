(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:extractZip)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:zipFile))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:destDir))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:URISyntaxException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:createTempFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:os)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:createTempFile))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)(SimpleName:os))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fileDestDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:destDir))))(AssertStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileDestDir))(SimpleName:exists)))(StringLiteral:<STR>))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileDestDir))(SimpleName:mkdir)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.ZipFile))(VariableDeclarationFragment(SimpleName:zip)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.ZipFile))(SimpleName:createTempFile))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.Enumeration))(VariableDeclarationFragment(SimpleName:_enum)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:entries))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_enum))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.ZipEntry))(VariableDeclarationFragment(SimpleName:file)(CastExpression(SimpleType(QualifiedName:java.util.zip.ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_enum))(SimpleName:nextElement)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.File))(InfixExpression(SimpleName:destDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:java.io.File.separator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:mkdir)))(ContinueStatement))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:fis)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:fos)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileOutputStream))(SimpleName:f))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis)(SimpleName:fos))))))))))))