(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:PGPPublicKeyRing))(SimpleName:generateKeyPair)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:identity))(SingleVariableDeclaration(ArrayType(PrimitiveType:char)(Dimension))(SimpleName:passPhrase))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:privatePath))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:publicPath))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Security))(SimpleName:addProvider)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BouncyCastleProvider))))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPairGenerator))(VariableDeclarationFragment(SimpleName:dsaKpg)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:KeyPairGenerator))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dsaKpg))(SimpleName:initialize)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1024))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPair))(VariableDeclarationFragment(SimpleName:dsaKp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dsaKpg))(SimpleName:generateKeyPair))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:secretOut)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:privatePath))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:publicOut)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:publicPath))))(VariableDeclarationStatement(SimpleType(SimpleName:PGPKeyPair))(VariableDeclarationFragment(SimpleName:dsaKeyPair)(ClassInstanceCreation(SimpleType(SimpleName:PGPKeyPair))(QualifiedName:PGPPublicKey.DSA)(SimpleName:dsaKp)(ClassInstanceCreation(SimpleType(SimpleName:Date))))))(VariableDeclarationStatement(SimpleType(SimpleName:PGPKeyRingGenerator))(VariableDeclarationFragment(SimpleName:keyRingGen)(ClassInstanceCreation(SimpleType(SimpleName:PGPKeyRingGenerator))(QualifiedName:PGPSignature.POSITIVE_CERTIFICATION)(SimpleName:dsaKeyPair)(SimpleName:identity)(QualifiedName:PGPEncryptedData.CAST5)(SimpleName:passPhrase)(BooleanLiteral:true)(NullLiteral)(NullLiteral)(ClassInstanceCreation(SimpleType(SimpleName:SecureRandom)))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyRingGen))(SimpleName:generateSecretKeyRing)))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:secretOut))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:secretOut))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:PGPPublicKeyRing))(VariableDeclarationFragment(SimpleName:publicRing)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyRingGen))(SimpleName:generatePublicKeyRing))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:publicRing))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:publicOut))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:publicOut))(SimpleName:close)))(ReturnStatement(SimpleName:publicRing))))))