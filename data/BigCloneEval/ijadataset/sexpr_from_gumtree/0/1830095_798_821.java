(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:recursivelyZipFiles)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:extension))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:currentRelativePath))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:currentDir))(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:zipOutputStream))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentDir))(SimpleName:list)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FilenameFilter))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dir)(SimpleName:name))))(IfStatement(InfixExpression(SimpleName:extension)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(BooleanLiteral:true))(ReturnStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extension))))))))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(SimpleName:files)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:currentDir)(SimpleName:filename))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileRelativePath)(InfixExpression(SimpleName:currentRelativePath)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Helper))(SimpleName:isNullOrEmpty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentRelativePath)))(StringLiteral:<STR>)(QualifiedName:File.separator)))(SimpleName:filename))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isDirectory))(ExpressionStatement(MethodInvocation(SimpleName:recursivelyZipFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extension)(SimpleName:fileRelativePath)(SimpleName:f)(SimpleName:zipOutputStream))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:data)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:f))(NumberLiteral:1000))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutputStream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:fileRelativePath)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(QualifiedName:data.length)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutputStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:count))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutputStream))(SimpleName:closeEntry)))))))))))