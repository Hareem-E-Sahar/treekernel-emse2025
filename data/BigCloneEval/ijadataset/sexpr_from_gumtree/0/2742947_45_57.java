(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:getNullValue)(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:iterationCount))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:f)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(SimpleName:x))))(Block(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x)(StringLiteral:<STR>)(MethodInvocation(SimpleName:f)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))))(ReturnStatement(SimpleName:x))))))