(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:E)))(SimpleName:detect)(SingleVariableDeclaration(SimpleType(SimpleName:AABB))(SimpleName:aabb))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:proxyList)))(SimpleName:size))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:E)))(VariableDeclarationFragment(SimpleName:list)))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:E))))))(Block(ExpressionStatement(Assignment(SimpleName:list)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:E)))(SimpleName:size))))))(IfStatement(FieldAccess(ThisExpression)(SimpleName:sort))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:proxyList)))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:sort))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max)(SimpleName:size)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:min)(NumberLiteral:0)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Proxy))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:proxyList)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:p.aabb))(SimpleName:getMinX))(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aabb))(SimpleName:getMinX)))(Block(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(SimpleName:index))))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(SimpleName:index)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:max)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:min))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:max)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Proxy))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:proxyList)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:p.aabb))(SimpleName:getMaxX))(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aabb))(SimpleName:getMinX)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:p.aabb))(SimpleName:overlaps)(METHOD_INVOCATION_ARGUMENTS(SimpleName:aabb)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:p.collidable)))))))(Block(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:index))(BreakStatement))))))(ReturnStatement(SimpleName:list))))))