(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:ConditionResult))(SimpleName:evaluate)(SimpleType(SimpleName:ResponsiveException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ValueData))(VariableDeclarationFragment(SimpleName:data)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getSensor)))(SimpleName:readFromSensor)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getChannel)))))(SimpleName:getDataObject)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:HardwareException))(SimpleName:he))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:he))(SimpleName:getMessage))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ResponsiveException))(StringLiteral:<STR>)(SimpleName:he))))))(TryStatement(Block(SwitchStatement(SimpleName:testOperator)(SwitchCase(SimpleName:GREATER_THAN))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testValue)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:ValueConditionResult))(QualifiedName:Boolean.TRUE)(SimpleName:data))))(BreakStatement)(SwitchCase(SimpleName:LESS_THAN))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testValue)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:ValueConditionResult))(QualifiedName:Boolean.TRUE)(SimpleName:data))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:testOperator)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassCastException))(SimpleName:cce))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ResponsiveException))(SimpleName:cce))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:ValueConditionResult))(QualifiedName:Boolean.FALSE)(SimpleName:data)))))))