(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:mN)(InfixExpression(SimpleName:CLASSNAME)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:sampledata)(ArrayInitializer(NumberLiteral:1)(NumberLiteral:1)(NumberLiteral:1)(NumberLiteral:0)(NumberLiteral:0))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:writeOutputFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:sampledata)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:printStackTrace))))))))(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:4))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:error)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:error)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:error)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:algClass)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:inputFile)(ArrayAccess(SimpleName:args)(NumberLiteral:1))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:outputFile)(ArrayAccess(SimpleName:args)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:mode)(ArrayAccess(SimpleName:args)(NumberLiteral:3))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:recv)(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mode))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:recv)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(TryStatement(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:inputdata)(MethodInvocation(SimpleName:parseFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:outNormalAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:algClass)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:clazz)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:algClass))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:outNormalAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:ctor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clazz))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(ArrayType(PrimitiveType:byte)(Dimension)))))))(VariableDeclarationStatement(SimpleType(SimpleName:AbsECDAlgorithm))(VariableDeclarationFragment(SimpleName:algorithmObject)(CastExpression(SimpleType(SimpleName:AbsECDAlgorithm))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputdata))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithmObject))(SimpleName:enableTestMode)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:outNormalAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(IfStatement(SimpleName:recv)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:outNormalAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:mode)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithmObject))(SimpleName:prepareToRecv))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:outNormalAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:mode)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithmObject))(SimpleName:prepareToSend)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:finalBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithmObject))(SimpleName:getData))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:outNormalAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:writeOutputFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outputFile)(SimpleName:finalBytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:outNormalAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:errErrorAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:errExAsLog)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LogIt))(SimpleName:errErrorAsLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:mN)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))))))))