(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Security))(SimpleName:addProvider)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:org.bouncycastle.jce.provider.BouncyCastleProvider))))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPairGenerator))(VariableDeclarationFragment(SimpleName:keyGen)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:KeyPairGenerator))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyGen))(SimpleName:initialize)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ECGenParameterSpec))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPair))(VariableDeclarationFragment(SimpleName:keyPair1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyGen))(SimpleName:generateKeyPair))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPair))(VariableDeclarationFragment(SimpleName:keyPair2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyGen))(SimpleName:generateKeyPair))))(VariableDeclarationStatement(SimpleType(SimpleName:DG14File))(VariableDeclarationFragment(SimpleName:file1)(ClassInstanceCreation(SimpleType(SimpleName:DG14File))(CastExpression(SimpleType(SimpleName:ECPublicKey))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPair1))(SimpleName:getPublic))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:Integer))(SimpleType(SimpleName:ECPublicKey)))(VariableDeclarationFragment(SimpleName:map)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:Integer))(SimpleType(SimpleName:ECPublicKey))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:map))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Integer))(NumberLiteral:10))(CastExpression(SimpleType(SimpleName:ECPublicKey))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPair1))(SimpleName:getPublic))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:map))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Integer))(NumberLiteral:20))(CastExpression(SimpleType(SimpleName:ECPublicKey))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPair2))(SimpleName:getPublic))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file1)))))(VariableDeclarationStatement(SimpleType(SimpleName:DG14File))(VariableDeclarationFragment(SimpleName:file1parsed)(ClassInstanceCreation(SimpleType(SimpleName:DG14File))(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file1))(SimpleName:getEncoded))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file1parsed)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:res1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file1))(SimpleName:getEncoded))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file1parsed))(SimpleName:getEncoded))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:res1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))