(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:testUnzipZipInputStreamFile)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetFolder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_temporaryFolder))(SimpleName:newFolder)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Pipe))(VariableDeclarationFragment(SimpleName:zipPipe)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pipe))(SimpleName:open))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SinkChannel))(VariableDeclarationFragment(SimpleName:sink)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipPipe))(SimpleName:sink))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SourceChannel))(VariableDeclarationFragment(SimpleName:source)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipPipe))(SimpleName:source))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:sourceIn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:newInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:source)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:sourceOut)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:newOutputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sink)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ZipInputStream))(VariableDeclarationFragment(SimpleName:zis)(ClassInstanceCreation(SimpleType(SimpleName:ZipInputStream))(SimpleName:sourceIn))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(QualifiedName:TestResources.SHARD1))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AtomicBoolean))(VariableDeclarationFragment(SimpleName:failed)(ClassInstanceCreation(SimpleType(SimpleName:AtomicBoolean))(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:b)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:read))))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:System.err))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:failed))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignore))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceOut))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignore))(Block)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtil))(SimpleName:unzip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zis)(SimpleName:targetFolder))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:segment)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetFolder)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:segment))(SimpleName:exists)))))))))