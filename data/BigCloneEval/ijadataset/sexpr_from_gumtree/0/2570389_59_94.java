(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:initialiseManager)(Block(VariableDeclarationStatement(SimpleType(SimpleName:CharsetDigesterDriver))(VariableDeclarationFragment(SimpleName:dd)(ClassInstanceCreation(SimpleType(SimpleName:CharsetDigesterDriver)))))(VariableDeclarationStatement(SimpleType(SimpleName:Charsets))(VariableDeclarationFragment(SimpleName:css)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dd))(SimpleName:digest))))(ExpressionStatement(Assignment(SimpleName:createdEncodingMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(ExpressionStatement(Assignment(SimpleName:charsetNameAliasMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(ExpressionStatement(Assignment(SimpleName:preloadedEncodingMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(ExpressionStatement(Assignment(SimpleName:unsupportedCharsetNameSet)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashSet)))))(ExpressionStatement(Assignment(SimpleName:charsetMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(IfStatement(InfixExpression(SimpleName:css)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:charsets)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:css))(SimpleName:getCharsets))))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:charsets))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Charset))(VariableDeclarationFragment(SimpleName:cs)(CastExpression(SimpleType(SimpleName:Charset))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cs))(SimpleName:getName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:charsetMap)))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(SimpleName:cs))))(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:aliases)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cs))(SimpleName:getAlias))))(IfStatement(InfixExpression(SimpleName:aliases)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:aliasIterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aliases))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aliasIterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Alias))(VariableDeclarationFragment(SimpleName:a)(CastExpression(SimpleType(SimpleName:Alias))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aliasIterator))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:charsetNameAliasMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:a))(SimpleName:getName))(SimpleName:name))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cs))(SimpleName:isPreload))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:preloadedEncodingMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(MethodInvocation(SimpleName:createEncoding)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cs)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedEncodingException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cs)(StringLiteral:<STR>)))))))))))))))