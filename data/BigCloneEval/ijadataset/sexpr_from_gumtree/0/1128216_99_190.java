(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:initGUI)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setContentPane)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getJContentPane)))))(ExpressionStatement(Assignment(SimpleName:showTM3CTonf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:showTree)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:showWeight)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:weightPrefix)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:valuePrefix)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(SimpleName:showTM3CTonf)(Block(ExpressionStatement(MethodInvocation(SimpleName:addPanelEast)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getJContentPane)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dataFile)(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dataFileType)(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:TreeMapNode))(VariableDeclarationFragment(SimpleName:root)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TM3))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataFileType)))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:builderTM3)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BuilderTM3))(MethodInvocation(SimpleName:createReader)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataFile))))))(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builderTM3))(SimpleName:getRoot))))(IfStatement(SimpleName:showTM3CTonf)(Block(ExpressionStatement(MethodInvocation(SimpleName:setTM3Fields)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:panelTM3))(SimpleName:setVisible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XML))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataFileType)))(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(MethodInvocation(SimpleName:getCodeBase))(SimpleName:dataFile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:connection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:BuilderXML))(VariableDeclarationFragment(SimpleName:bXml)(ClassInstanceCreation(SimpleType(SimpleName:BuilderXML))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getInputStream)))))(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bXml))(SimpleName:getRoot)))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ParseException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))(Block(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DemoUtil))(SimpleName:buildDemoRoot)))))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:jTreeMap))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JTreeMap))(SimpleName:root)(ClassInstanceCreation(SimpleType(SimpleName:SplitBySortedWeight)))(SimpleName:treeView)(SimpleName:weightPrefix)(SimpleName:valuePrefix)(SimpleName:showWeight))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:jTreeMap)))(SimpleName:setFont)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Font))(NullLiteral)(QualifiedName:Font.BOLD)(SimpleName:DEFAULT_FONT_SIZE)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:colourProvider)(MethodInvocation(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:ColorProvider))(VariableDeclarationFragment(SimpleName:colourProviderInstance)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:colourProvider)))(Block(ExpressionStatement(Assignment(SimpleName:colourProviderInstance)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomColorProvider))(FieldAccess(ThisExpression)(SimpleName:jTreeMap))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:colourProvider)))(Block(ExpressionStatement(Assignment(SimpleName:colourProviderInstance)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HSBTreeMapColorProvider))(SimpleName:jTreeMap)(QualifiedName:HSBTreeMapColorProvider.ColorDistributionTypes.Linear)(QualifiedName:Color.GREEN)(QualifiedName:Color.RED)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:colourProvider)))(Block(ExpressionStatement(Assignment(SimpleName:colourProviderInstance)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HSBTreeMapColorProvider))(SimpleName:jTreeMap)(QualifiedName:HSBTreeMapColorProvider.ColorDistributionTypes.Log)(QualifiedName:Color.GREEN)(QualifiedName:Color.RED)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:colourProvider)))(Block(ExpressionStatement(Assignment(SimpleName:colourProviderInstance)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomColorProvider))(FieldAccess(ThisExpression)(SimpleName:jTreeMap))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:colourProvider)))(Block(ExpressionStatement(Assignment(SimpleName:colourProviderInstance)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HSBTreeMapColorProvider))(SimpleName:jTreeMap)(QualifiedName:HSBTreeMapColorProvider.ColorDistributionTypes.CubicRoot)(QualifiedName:Color.GREEN)(QualifiedName:Color.RED)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:colourProvider)))(Block(ExpressionStatement(Assignment(SimpleName:colourProviderInstance)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HSBTreeMapColorProvider))(SimpleName:jTreeMap)(QualifiedName:HSBTreeMapColorProvider.ColorDistributionTypes.Exp)(QualifiedName:Color.GREEN)(QualifiedName:Color.RED)))))))))))(IfStatement(InfixExpression(SimpleName:colourProviderInstance)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:colourProviderInstance)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RedGreenColorProvider))(FieldAccess(ThisExpression)(SimpleName:jTreeMap)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:jTreeMap)))(SimpleName:setColorProvider)(METHOD_INVOCATION_ARGUMENTS(SimpleName:colourProviderInstance))))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:ZoomPopupMenu))(FieldAccess(ThisExpression)(SimpleName:jTreeMap))(BooleanLiteral:true)))(IfStatement(SimpleName:showTree)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:JSplitPane))(VariableDeclarationFragment(SimpleName:splitPaneCenter)(ClassInstanceCreation(SimpleType(SimpleName:JSplitPane)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:splitPaneCenter))(SimpleName:setBorder)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BorderFactory))(SimpleName:createEmptyBorder)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getJContentPane)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:splitPaneCenter)(QualifiedName:BorderLayout.CENTER))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:JScrollPane))(VariableDeclarationFragment(SimpleName:jScrollPane1)(ClassInstanceCreation(SimpleType(SimpleName:JScrollPane)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:splitPaneCenter))(SimpleName:setTopComponent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:jScrollPane1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:splitPaneCenter))(SimpleName:setBottomComponent)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:jTreeMap)))))(ExpressionStatement(Assignment(SimpleName:treeModel)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DefaultTreeModel))(SimpleName:root))))(ExpressionStatement(Assignment(SimpleName:treeView)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JTree))(FieldAccess(ThisExpression)(SimpleName:treeModel)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jTreeMap))(SimpleName:setTreeView)(METHOD_INVOCATION_ARGUMENTS(SimpleName:treeView))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jScrollPane1))(SimpleName:getViewport)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:treeView)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jScrollPane1))(SimpleName:setPreferredSize)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:SCROLLPANE_WIDTH)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jTreeMap))(SimpleName:getRoot)))(SimpleName:getHeight))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:treeView))(SimpleName:addTreeSelectionListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:TreeSelectionListener))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:valueChanged)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:TreeSelectionEvent))(SimpleName:e))(Block(VariableDeclarationStatement(SimpleType(SimpleName:TreeMapNode))(VariableDeclarationFragment(SimpleName:dest)(CastExpression(SimpleType(SimpleName:TreeMapNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:JTreeMapAppletExample))(SimpleName:treeView)))(SimpleName:getLastSelectedPathComponent)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:dest)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:isLeaf)))(Block(ExpressionStatement(Assignment(SimpleName:dest)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:TreeMapNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:getParent)))))))(IfStatement(InfixExpression(SimpleName:dest)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:JTreeMapAppletExample))(SimpleName:jTreeMap)))(SimpleName:zoom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dest))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:JTreeMapAppletExample))(SimpleName:jTreeMap)))(SimpleName:repaint)))))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getJContentPane)))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:jTreeMap))(QualifiedName:BorderLayout.CENTER))))))))))