(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:reject)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:surl))(SingleVariableDeclaration(SimpleType(SimpleName:ProgressMonitor))(SimpleName:mon))(SimpleType(SimpleName:IllegalArgumentException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilder))(VariableDeclarationFragment(SimpleName:builder)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:builder)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DocumentBuilderFactory))(SimpleName:newInstance)))(SimpleName:newDocumentBuilder))))(VariableDeclarationStatement(SimpleType(SimpleName:URISplit))(VariableDeclarationFragment(SimpleName:split)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:URISplit))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:surl)))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(QualifiedName:split.file))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(VariableDeclarationStatement(SimpleType(SimpleName:InputSource))(VariableDeclarationFragment(SimpleName:source)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(SimpleName:in))))(VariableDeclarationStatement(SimpleType(SimpleName:Document))(VariableDeclarationFragment(SimpleName:document)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:source)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:getDocumentElement))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:localName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:n))(SimpleName:getNodeName))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localName))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:localName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localName))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localName))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ReturnStatement(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localName))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ReturnStatement(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localName))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ReturnStatement(BooleanLiteral:false)))(Block(ReturnStatement(BooleanLiteral:true)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:SpaseRecordDataSourceFactory))))(SimpleName:getName)))))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(NullLiteral)(SimpleName:ex))))(ReturnStatement(BooleanLiteral:true)))))))))