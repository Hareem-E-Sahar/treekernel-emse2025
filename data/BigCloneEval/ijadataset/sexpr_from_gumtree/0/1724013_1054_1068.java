(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:actionCheckWiki)(Block(VariableDeclarationStatement(SimpleType(SimpleName:EnumWikipedia))(VariableDeclarationFragment(SimpleName:wikipedia)(MethodInvocation(SimpleName:getWikipedia))))(IfStatement(InfixExpression(SimpleName:wikipedia)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wikipedia))(SimpleName:getCWConfiguration)))(SimpleName:isProjectAvailable)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:url)(SimpleName:URL_OTHER_WIKIPEDIA)))(ExpressionStatement(MethodInvocation(SimpleName:displayUrlMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GT))(SimpleName:_)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:url))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utilities))(SimpleName:isDesktopSupported))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utilities))(SimpleName:browseURL)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url))))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Controller))(SimpleName:runCheckWikiProject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getWikipedia)))))))))