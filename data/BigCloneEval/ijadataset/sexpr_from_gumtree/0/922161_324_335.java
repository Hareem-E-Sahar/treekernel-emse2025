(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:findTokenIndex)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:off))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:a)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)(QualifiedName:nodeTokens.length)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:a)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:b))(Block(ExpressionStatement(Assignment(SimpleName:idx)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:a)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:b)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bo)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(FieldAccess(ArrayAccess(SimpleName:nodeTokens)(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(SimpleName:endOffset))(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:eo)(FieldAccess(ArrayAccess(SimpleName:nodeTokens)(SimpleName:idx))(SimpleName:endOffset))))(IfStatement(InfixExpression(SimpleName:off)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:bo))(ExpressionStatement(Assignment(SimpleName:b)(ASSIGNMENT_OPERATOR:=)(SimpleName:idx)))(IfStatement(InfixExpression(SimpleName:off)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:eo))(ExpressionStatement(Assignment(SimpleName:a)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(BreakStatement)))))(ReturnStatement(SimpleName:idx))))))