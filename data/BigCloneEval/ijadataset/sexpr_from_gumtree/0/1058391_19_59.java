(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:test_10)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cmnd)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:RuntimeAdditionalTest0.os))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:cmnd)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:RuntimeAdditionalTest0.cm)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:RuntimeAdditionalTest0.libFile)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:RuntimeAdditionalTest0.os))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:cmnd)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:RuntimeAdditionalTest0.libFile)(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:pi3)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cmnd)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2000)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pi3))(SimpleName:getOutputStream)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pi3))(SimpleName:getErrorStream)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pi3))(SimpleName:getInputStream))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ia)))(WhileStatement(BooleanLiteral:true)(Block(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:ia)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:available))))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bbb)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:ia))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bbb))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pi3))(SimpleName:exitValue)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:ia)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:available))))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bbb)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:ia))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bbb))))))(BreakStatement))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalThreadStateException))(SimpleName:e))(Block(ContinueStatement)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:eeee))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:eeee))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))))