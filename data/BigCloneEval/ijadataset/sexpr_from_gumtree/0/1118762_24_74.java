(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:List))(SimpleName:unzip)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:zipFileName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:unzipDirectory))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:unzipDir)(SimpleName:unzipDirectory)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:unzipDir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:File.separator))))(Block(ExpressionStatement(Assignment(SimpleName:unzipDir)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:File.separator)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isEmpty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:unzipDir))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:unzipDir))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canWrite)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:unzipDir)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath))))(ExpressionStatement(Assignment(SimpleName:unzipDir)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:unzipDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:list)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zipfile)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(SimpleName:zipFileName))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Enumeration))(VariableDeclarationFragment(SimpleName:enumeration)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:entries))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:enumeration))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:s1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:enumeration))(SimpleName:nextElement)))(SimpleName:toString))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:s2)(InfixExpression(SimpleName:unzipDir)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:s1))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:zipentry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:getEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s1)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:File.separator))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:s1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s1)(StringLiteral:<STR>)(QualifiedName:File.separator)))))(ExpressionStatement(Assignment(SimpleName:s2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s2)(StringLiteral:<STR>)(QualifiedName:File.separator))))))(Block(ExpressionStatement(Assignment(SimpleName:s1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s1)(StringLiteral:<STR>)(QualifiedName:File.separator)))))(ExpressionStatement(Assignment(SimpleName:s2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s2)(StringLiteral:<STR>)(QualifiedName:File.separator)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s2))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipentry))(SimpleName:isDirectory)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:s2))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:s3)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getParent))))(IfStatement(InfixExpression(InfixExpression(SimpleName:s3)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s3))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file2)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:s3))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file2))(SimpleName:exists)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file2))(SimpleName:mkdirs))))))(VariableDeclarationStatement(SimpleType(SimpleName:DataInputStream))(VariableDeclarationFragment(SimpleName:datainputstream)(ClassInstanceCreation(SimpleType(SimpleName:DataInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipentry))))))(VariableDeclarationStatement(SimpleType(SimpleName:DataOutputStream))(VariableDeclarationFragment(SimpleName:dataoutputstream)(ClassInstanceCreation(SimpleType(SimpleName:DataOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:s2)))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:abyte0)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:datainputstream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:abyte0)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dataoutputstream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:abyte0)(NumberLiteral:0)(SimpleName:i)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:datainputstream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dataoutputstream))(SimpleName:close))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file1)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:s1))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file1))(SimpleName:exists)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file1))(SimpleName:mkdirs))))))))(ReturnStatement(SimpleName:list))))))