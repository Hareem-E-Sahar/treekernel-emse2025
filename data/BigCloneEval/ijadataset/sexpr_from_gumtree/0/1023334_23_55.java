(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:final)(PrimitiveType:void)(SimpleName:createZipFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:sourcePath))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:zipPath))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:sourceFileName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:zipFileName))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zipOutStream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fin)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:zipOutStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(InfixExpression(SimpleName:zipPath)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:zipFileName)))))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:data)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER_SIZE))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:sourcePath)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:sourceFileName)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:sourceFileName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(ExpressionStatement(Assignment(SimpleName:fin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytesRead)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:bytesRead)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:BUFFER_SIZE)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:bytesRead))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fin)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:zipOutStream)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(SimpleName:e)))))(Block(IfStatement(InfixExpression(SimpleName:fin)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fin))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fin)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(SimpleName:zipOutStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOutStream))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:zipOutStream)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))))))))