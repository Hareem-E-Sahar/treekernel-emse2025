(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:copyDirectoryRecursively)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:source))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:target))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:overwrite))(SingleVariableDeclaration(SimpleType(SimpleName:FileFilter))(SimpleName:fileFilter))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:temporary))(SimpleType(SimpleName:IOException))(Block(AssertStatement(InfixExpression(SimpleName:source)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(AssertStatement(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileFilter))(VariableDeclarationFragment(SimpleName:filter)(ConditionalExpression(InfixExpression(SimpleName:fileFilter)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(SimpleName:fileFilter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AllFileFilter))(SimpleName:getInstance)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:target)))(Block(ReturnStatement)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:isDirectory)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:acceptedFiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:listFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filter)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:leftChildFolders)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:listFiles)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileFilter))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:pathname))(Block(ReturnStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filter))(SimpleName:accept)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pathname))))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DirectoryFileFilter))(SimpleName:getInstance)))(SimpleName:accept)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pathname)))))))))))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(QualifiedName:acceptedFiles.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:exists))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:mkdirs))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getAbsolutePath)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:acceptedFiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:acceptedFiles)(SimpleName:i)))(SimpleName:isDirectory))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:newTarget)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getPath))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:acceptedFiles)(SimpleName:i)))(SimpleName:getName)))))(IfStatement(SimpleName:temporary)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newTarget))(SimpleName:deleteOnExit)))))(ExpressionStatement(MethodInvocation(SimpleName:copyDirectoryRecursively)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:acceptedFiles)(SimpleName:i))(SimpleName:newTarget)(SimpleName:overwrite)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AllFileFilter))(SimpleName:getInstance))(SimpleName:temporary)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:acceptedFiles)(SimpleName:i)))(SimpleName:isFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:src)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:acceptedFiles)(SimpleName:i)))(SimpleName:getAbsoluteFile))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dst)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:target)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:acceptedFiles)(SimpleName:i)))(SimpleName:getName))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dst)))(Block(ContinueStatement)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dst))(SimpleName:exists))(Block(IfStatement(SimpleName:overwrite)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dst))(SimpleName:delete))))(Block(ContinueStatement)))))(IfStatement(SimpleName:temporary)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dst))(SimpleName:deleteOnExit)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtilities))(SimpleName:copyBinaryFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:dst)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(ArrayAccess(SimpleName:acceptedFiles)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:leftChildFolders.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:newTarget)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:getPath))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:leftChildFolders)(SimpleName:i)))(SimpleName:getName)))))(IfStatement(SimpleName:temporary)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newTarget))(SimpleName:deleteOnExit)))))(ExpressionStatement(MethodInvocation(SimpleName:copyDirectoryRecursively)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:leftChildFolders)(SimpleName:i))(SimpleName:newTarget)(SimpleName:overwrite)(SimpleName:filter)(SimpleName:temporary))))))))))