(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:DataOutputStream))(SimpleName:getLogFile)(SimpleType(SimpleName:LoggerException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:uniqueId)(StringLiteral:<STR>)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:tries)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:logDirectory)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filePrefix)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileSuffix)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:filePrefix)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:fileSuffix)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:logFileName)(InfixExpression(SimpleName:filePrefix)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:fileSuffix))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:logFileName)(BooleanLiteral:true)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:LoggerException))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:lockLogFile))(BreakStatement))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:getChannel))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:fl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:tryLock))))(IfStatement(InfixExpression(SimpleName:fl)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(BreakStatement)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:LoggerException))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))(ExpressionStatement(Assignment(SimpleName:uniqueId)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:tries))(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:tries)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:50))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:LoggerException))(StringLiteral:<STR>)(StringLiteral:<STR>))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:DataOutputStream))(SimpleName:fos)))))))