(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getLevelFullName)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:level)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourceUtil))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:level))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SubversionConstants.SVN_ACCESS_LEVEL_DENY_ACCESS)))(Block(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourceUtil))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:level))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SubversionConstants.SVN_ACCESS_LEVEL_READONLY)))(Block(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourceUtil))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:level))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SubversionConstants.SVN_ACCESS_LEVEL_READWRITE)))(Block(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourceUtil))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))(ReturnStatement(SimpleName:name))))))