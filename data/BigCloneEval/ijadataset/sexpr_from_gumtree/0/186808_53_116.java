(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:notifyTerminated)(SingleVariableDeclaration(SimpleType(SimpleName:Writer))(SimpleName:r))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:all_writers))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:r))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:all_writers))(SimpleName:isEmpty))(Block(ExpressionStatement(Assignment(SimpleName:all_terminated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:open_files))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:FileWriter.FileChunk))(VariableDeclarationFragment(SimpleName:fc)(CastExpression(SimpleType(QualifiedName:FileWriter.FileChunk))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next)))))(DoStatement(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fc.stream))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fc.stream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))(ExpressionStatement(Assignment(SimpleName:fc)(ASSIGNMENT_OPERATOR:=)(QualifiedName:fc.next))))(InfixExpression(SimpleName:fc)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))))(ExpressionStatement(Assignment(SimpleName:iterator)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:open_files))(SimpleName:iterator))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:all_ok)(BooleanLiteral:true)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:FileWriter.FileChunk))(VariableDeclarationFragment(SimpleName:fc)(CastExpression(SimpleType(QualifiedName:FileWriter.FileChunk))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:logComment)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:fc.name)(StringLiteral:<STR>)(QualifiedName:fc.start_byte)(StringLiteral:<STR>)(QualifiedName:fc.position)(StringLiteral:<STR>)(QualifiedName:fc.actual_file)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ok)(BooleanLiteral:true)))(WhileStatement(InfixExpression(QualifiedName:fc.next)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:ok)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:fc.start_byte)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fc.actual_file))(SimpleName:length))))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:fc.next.start_byte)))))(ExpressionStatement(Assignment(SimpleName:fc)(ASSIGNMENT_OPERATOR:=)(QualifiedName:fc.next)))))(IfStatement(SimpleName:ok)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:logComment)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:fc.name)(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:fc.name)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:all_ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))(IfStatement(SimpleName:all_ok)(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:16384))))))(ExpressionStatement(Assignment(SimpleName:iterator)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:open_files))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:FileWriter.FileChunk))(VariableDeclarationFragment(SimpleName:fc)(CastExpression(SimpleType(QualifiedName:FileWriter.FileChunk))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next)))))(TryStatement(Block(IfStatement(InfixExpression(QualifiedName:fc.next)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(QualifiedName:fc.actual_file)(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:fc)(ASSIGNMENT_OPERATOR:=)(QualifiedName:fc.next)))(WhileStatement(InfixExpression(SimpleName:fc)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(QualifiedName:fc.actual_file))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:actually_read)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(WhileStatement(InfixExpression(SimpleName:actually_read)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:actually_read))))(ExpressionStatement(Assignment(SimpleName:actually_read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fc.actual_file))(SimpleName:delete)))(ExpressionStatement(Assignment(SimpleName:fc)(ASSIGNMENT_OPERATOR:=)(QualifiedName:fc.next))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fte))(SimpleName:allWritersTerminated)))(ExpressionStatement(Assignment(SimpleName:fte)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))))))