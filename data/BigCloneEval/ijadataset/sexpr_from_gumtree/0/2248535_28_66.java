(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(VariableDeclarationStatement(SimpleType(SimpleName:SimulationThread))(VariableDeclarationFragment(SimpleName:behClkThread)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:DVApplication))(VariableDeclarationFragment(SimpleName:app)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:appCls)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:appCls)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:0)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedClassVersionError))(SimpleName:unsupportedClassVersionError))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))))(ThrowStatement(SimpleName:unsupportedClassVersionError)))))(AssertStatement(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:DVApplication))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:appCls)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:BehavioralSimulation))(VariableDeclarationFragment(SimpleName:sim)(ClassInstanceCreation(SimpleType(SimpleName:BehavioralSimulation))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:PRNGFactory))(VariableDeclarationFragment(SimpleName:rngFactory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PRNGFactoryFactory))(SimpleName:getDefaultFactory))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SimulationManager))(VariableDeclarationFragment(SimpleName:simManager)(ClassInstanceCreation(SimpleType(SimpleName:SimulationManager))(StringLiteral:<STR>)(SimpleName:rngFactory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rngFactory))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:OVAEngine))(VariableDeclarationFragment(SimpleName:ovaEngine)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:DVSimulation))(VariableDeclarationFragment(SimpleName:dvSim)(ClassInstanceCreation(SimpleType(SimpleName:DVSimulation))(SimpleName:sim)(SimpleName:simManager)(SimpleName:ovaEngine))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:clockName)(StringLiteral:<STR>)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sim))(SimpleName:createRegister)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clockName)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:behClkThread)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dvSim))(SimpleName:fork)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clockName)(ClassInstanceCreation(SimpleType(SimpleName:BehavioralClockGenerator))(SimpleName:dvSim)(SimpleName:clockName)(NumberLiteral:100))))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType))(VariableDeclarationFragment(SimpleName:appCtor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCls))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:DVSimulation)))))))(ExpressionStatement(Assignment(SimpleName:app)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:DVApplication))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:appCtor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dvSim))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:app))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sim))(SimpleName:run))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(Block(IfStatement(InfixExpression(SimpleName:behClkThread)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:behClkThread))(SimpleName:terminate)))))(IfStatement(InfixExpression(SimpleName:app)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:app))(SimpleName:finish)))))))))))