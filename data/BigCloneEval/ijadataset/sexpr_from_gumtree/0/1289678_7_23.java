(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:max)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x)(NumberLiteral:999)))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(PostfixExpression(SimpleName:x)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:y)(NumberLiteral:999)))(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(PostfixExpression(SimpleName:y)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:possiblePalindrome)(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:y))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PalindromeChecker))(SimpleName:test)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:possiblePalindrome))))(Block(IfStatement(InfixExpression(SimpleName:max)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(SimpleName:possiblePalindrome)))))(IfStatement(InfixExpression(SimpleName:possiblePalindrome)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:max))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(SimpleName:possiblePalindrome)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:max))))))))