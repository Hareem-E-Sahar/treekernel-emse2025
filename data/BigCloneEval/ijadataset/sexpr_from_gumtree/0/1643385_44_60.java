(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:Exception))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:args)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:target)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:shifted)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:shifted)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:target))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(SimpleName:execRunnableBean)(METHOD_INVOCATION_ARGUMENTS(SimpleName:target)(SimpleName:shifted)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:initializeAndInvokeMain)(METHOD_INVOCATION_ARGUMENTS(SimpleName:target)(SimpleName:shifted))))))))))