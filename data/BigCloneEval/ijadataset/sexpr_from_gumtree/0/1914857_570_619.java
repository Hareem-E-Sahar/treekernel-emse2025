(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:synchronized)(SimpleType(SimpleName:DocumentsWriterThreadState))(SimpleName:getThreadState)(SingleVariableDeclaration(SimpleType(SimpleName:Document))(SimpleName:doc))(SingleVariableDeclaration(SimpleType(SimpleName:Term))(SimpleName:delTerm))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentsWriterThreadState))(VariableDeclarationFragment(SimpleName:state)(CastExpression(SimpleType(SimpleName:DocumentsWriterThreadState))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threadBindings))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentsWriterThreadState))(VariableDeclarationFragment(SimpleName:minThreadState)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:threadStates.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentsWriterThreadState))(VariableDeclarationFragment(SimpleName:ts)(ArrayAccess(SimpleName:threadStates)(SimpleName:i))))(IfStatement(InfixExpression(InfixExpression(SimpleName:minThreadState)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:ts.numThreads)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:minThreadState.numThreads)))(ExpressionStatement(Assignment(SimpleName:minThreadState)(ASSIGNMENT_OPERATOR:=)(SimpleName:ts))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:minThreadState)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(QualifiedName:minThreadState.numThreads)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:threadStates.length)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:MAX_THREAD_STATE)))))(Block(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(SimpleName:minThreadState)))(ExpressionStatement(PostfixExpression(QualifiedName:state.numThreads)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:DocumentsWriterThreadState))(Dimension))(VariableDeclarationFragment(SimpleName:newArray)(ArrayCreation(ArrayType(SimpleType(SimpleName:DocumentsWriterThreadState))(Dimension(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:threadStates.length)))))))(IfStatement(InfixExpression(QualifiedName:threadStates.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:threadStates)(NumberLiteral:0)(SimpleName:newArray)(NumberLiteral:0)(QualifiedName:threadStates.length)))))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(Assignment(ArrayAccess(SimpleName:newArray)(QualifiedName:threadStates.length))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DocumentsWriterThreadState))(ThisExpression)))))(ExpressionStatement(Assignment(SimpleName:threadStates)(ASSIGNMENT_OPERATOR:=)(SimpleName:newArray)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threadBindings))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread))(SimpleName:state))))))(ExpressionStatement(MethodInvocation(SimpleName:waitReady)(METHOD_INVOCATION_ARGUMENTS(SimpleName:state))))(ExpressionStatement(MethodInvocation(SimpleName:initSegmentName)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(Assignment(QualifiedName:state.isIdle)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:success)(BooleanLiteral:false)))(TryStatement(Block(ExpressionStatement(Assignment(QualifiedName:state.docState.docID)(ASSIGNMENT_OPERATOR:=)(SimpleName:nextDocID)))(AssertStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:testPoint)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:delTerm)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:addDeleteTerm)(METHOD_INVOCATION_ARGUMENTS(SimpleName:delTerm)(QualifiedName:state.docState.docID))))(ExpressionStatement(Assignment(QualifiedName:state.doFlushAfter)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:timeToFlushDeletes))))))(AssertStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:testPoint)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(PostfixExpression(SimpleName:nextDocID)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(PostfixExpression(SimpleName:numDocsInRAM)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:flushPending))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:maxBufferedDocs)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:IndexWriter.DISABLE_AUTO_FLUSH)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:numDocsInRAM)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:maxBufferedDocs)))(Block(ExpressionStatement(Assignment(SimpleName:flushPending)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(QualifiedName:state.doFlushAfter)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(Assignment(SimpleName:success)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:success))(Block(ExpressionStatement(Assignment(QualifiedName:state.isIdle)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(SimpleName:notifyAll)))(IfStatement(QualifiedName:state.doFlushAfter)(Block(ExpressionStatement(Assignment(QualifiedName:state.doFlushAfter)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:flushPending)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))))(ReturnStatement(SimpleName:state))))))