(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ArrayType(SimpleType(SimpleName:QualityBox))(Dimension))(SimpleName:loadQualities)(SingleVariableDeclaration(SimpleType(SimpleName:JxObject))(SimpleName:object))(Block(VariableDeclarationStatement(SimpleType(SimpleName:OntologyNode))(VariableDeclarationFragment(SimpleName:quality)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:_ontology)))(SimpleName:getNodeByInternalName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:QualityBox)))(VariableDeclarationFragment(SimpleName:quality_list)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:QualityBox))))))(IfStatement(InfixExpression(SimpleName:quality)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:recurseQualities)(METHOD_INVOCATION_ARGUMENTS(SimpleName:quality)(SimpleName:quality_list)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:QualityBox))(Dimension))(VariableDeclarationFragment(SimpleName:quality_array)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:quality_list))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:QualityBox))(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:quality_list))(SimpleName:size)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:quality_array))))(IfStatement(InfixExpression(SimpleName:object)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:JxObjectQuality))(Dimension))(VariableDeclarationFragment(SimpleName:object_qualities)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:object))(SimpleName:getQualities))))(IfStatement(InfixExpression(SimpleName:object_qualities)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:JxObjectQuality))(SimpleName:oq))(SimpleName:object_qualities)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i0)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i1)(QualifiedName:quality_array.length)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(QualifiedName:quality_array.length)))(DoStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:i0)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:QualityBox))(VariableDeclarationFragment(SimpleName:qb)(ArrayAccess(SimpleName:quality_array)(SimpleName:i))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:diff)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oq))(SimpleName:getQuality)))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qb))(SimpleName:getOntologyNode))))))(IfStatement(InfixExpression(SimpleName:diff)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qb))(SimpleName:setSelected)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qb))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oq))(SimpleName:getValue)))))(BreakStatement))(IfStatement(InfixExpression(SimpleName:diff)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:i1)(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))(ExpressionStatement(Assignment(SimpleName:i0)(ASSIGNMENT_OPERATOR:=)(SimpleName:i))))))(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:>>=)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))))))))(ReturnStatement(SimpleName:quality_array))))))