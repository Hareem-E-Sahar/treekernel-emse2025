(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:login)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SessionManager))(VariableDeclarationFragment(SimpleName:sessionManager)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SparkManager))(SimpleName:getSessionManager))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:hasErrors)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:errorMessage)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:serverName)(MethodInvocation(SimpleName:getServerName))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hasErrors))(Block(ExpressionStatement(Assignment(SimpleName:localPref)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SettingsManager))(SimpleName:getLocalPreferences))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:isDebuggerEnabled))(Block(ExpressionStatement(Assignment(QualifiedName:XMPPConnection.DEBUG_ENABLED)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SmackConfiguration))(SimpleName:setPacketReplyTimeout)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getTimeOut))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000)))))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:port)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getXmppPort))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:checkForPort)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serverName))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:checkForPort)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:portString)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serverName))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:checkForPort)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ModelUtil))(SimpleName:hasLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:portString)))(Block(ExpressionStatement(Assignment(SimpleName:port)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:portString)))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:useSSL)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:isSSL))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:hostPortConfigured)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:isHostAndPortConfigured))))(VariableDeclarationStatement(SimpleType(SimpleName:ConnectionConfiguration))(VariableDeclarationFragment(SimpleName:config)))(IfStatement(SimpleName:useSSL)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hostPortConfigured))(Block(ExpressionStatement(Assignment(SimpleName:config)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(SimpleName:serverName)(NumberLiteral:5223))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setSocketFactory)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:DummySSLSocketFactory)))))))(Block(ExpressionStatement(Assignment(SimpleName:config)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getXmppHost))(SimpleName:port)(SimpleName:serverName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setSocketFactory)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:DummySSLSocketFactory)))))))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hostPortConfigured))(Block(ExpressionStatement(Assignment(SimpleName:config)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(SimpleName:serverName)))))(Block(ExpressionStatement(Assignment(SimpleName:config)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConnectionConfiguration))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getXmppHost))(SimpleName:port)(SimpleName:serverName))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setReconnectionAllowed)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setRosterLoadedAtLogin)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setSendPresence)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:isPKIEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SASLAuthentication))(SimpleName:supportSASLMechanism)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setKeystoreType)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getPKIStore)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getPKIStore)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setPKCS11Library)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getPKCS11Library))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getPKIStore)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setKeystoreType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setKeystorePath)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getJKSPath))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getPKIStore)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block)(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getPKIStore)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setKeystoreType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))))(IfStatement(InfixExpression(SimpleName:config)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:compressionEnabled)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:isCompressionEnabled))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setCompressionEnabled)(METHOD_INVOCATION_ARGUMENTS(SimpleName:compressionEnabled))))(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:XMPPConnection))(SimpleName:config)(ThisExpression))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ModelUtil))(SimpleName:hasLength)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getTrustStorePath))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setTruststorePath)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getTrustStorePath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:setTruststorePassword)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getTrustStorePassword)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:connect)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:resource)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:getResource))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ModelUtil))(SimpleName:hasLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resource))))(Block(ExpressionStatement(Assignment(SimpleName:resource)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getUsername))(MethodInvocation(SimpleName:getPassword))(SimpleName:resource))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sessionManager))(SimpleName:setServerAddress)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getServiceName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sessionManager))(SimpleName:initializeSession)(METHOD_INVOCATION_ARGUMENTS(SimpleName:connection)(MethodInvocation(SimpleName:getUsername))(MethodInvocation(SimpleName:getPassword)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sessionManager))(SimpleName:setJID)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getUser))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:xee))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loginDialog))(SimpleName:isVisible)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loginDialog))(SimpleName:setVisible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(IfStatement(InstanceofExpression(SimpleName:xee)(SimpleType(SimpleName:XMPPException)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:XMPPException))(VariableDeclarationFragment(SimpleName:xe)(CastExpression(SimpleType(SimpleName:XMPPException))(SimpleName:xee))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:XMPPError))(VariableDeclarationFragment(SimpleName:error)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xe))(SimpleName:getXMPPError))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:errorCode)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:error)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:errorCode)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:error))(SimpleName:getCode))))))(IfStatement(InfixExpression(SimpleName:errorCode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:401))(Block(ExpressionStatement(Assignment(SimpleName:errorMessage)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Res))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:errorCode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:502))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:errorCode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:504)))(Block(ExpressionStatement(Assignment(SimpleName:errorMessage)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Res))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:errorCode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:409))(Block(ExpressionStatement(Assignment(SimpleName:errorMessage)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Res))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(Block(ExpressionStatement(Assignment(SimpleName:errorMessage)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Res))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))(Block(ExpressionStatement(Assignment(SimpleName:errorMessage)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SparkRes))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SparkRes.UNRECOVERABLE_ERROR)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:warning)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:xee))))(ExpressionStatement(Assignment(SimpleName:hasErrors)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))(IfStatement(SimpleName:hasErrors)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progressBar))(SimpleName:setVisible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loginDialog))(SimpleName:isVisible))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:isSSOEnabled)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showMessageDialog)(METHOD_INVOCATION_ARGUMENTS(SimpleName:loginDialog)(SimpleName:errorMessage)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Res))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:JOptionPane.ERROR_MESSAGE)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showMessageDialog)(METHOD_INVOCATION_ARGUMENTS(SimpleName:loginDialog)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Res))(SimpleName:getString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(QualifiedName:JOptionPane.ERROR_MESSAGE))))))))(ExpressionStatement(MethodInvocation(SimpleName:setEnabled)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ReturnStatement(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:addConnectionListener)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SparkManager))(SimpleName:getSessionManager)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:setUsername)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getUsername)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:savePasswordBox))(SimpleName:isSelected))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:encodedPassword)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:encodedPassword)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Encryptor))(SimpleName:encrypt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getPassword))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:setPassword)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encodedPassword)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:setPassword)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:setSavePassword)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:savePasswordBox))(SimpleName:isSelected)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:setAutoLogin)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:autoLoginBox))(SimpleName:isSelected)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:localPref))(SimpleName:setServer)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serverField))(SimpleName:getText)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SettingsManager))(SimpleName:saveSettings)))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hasErrors)))))))