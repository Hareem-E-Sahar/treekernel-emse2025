(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testDoAction)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Framework))(VariableDeclarationFragment(SimpleName:fw)(MethodInvocation(SimpleName:getFrameworkInstance))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeSet))(VariableDeclarationFragment(SimpleName:nodeset)(ClassInstanceCreation(SimpleType(SimpleName:NodeSet)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IDispatchedScript))(VariableDeclarationFragment(SimpleName:dsc)(ClassInstanceCreation(SimpleType(SimpleName:DispatchedScriptImpl))(SimpleName:nodeset)(SimpleName:TEST_PROJ)(NullLiteral)(NullLiteral)(NullLiteral)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(StringLiteral:<STR>)))(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:CommandAction))(VariableDeclarationFragment(SimpleName:action)(ClassInstanceCreation(SimpleType(SimpleName:CommandAction))(SimpleName:fw)(SimpleName:dsc)(NullLiteral))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:NodeEntryImpl))(VariableDeclarationFragment(SimpleName:nodeentry)(ClassInstanceCreation(SimpleType(SimpleName:NodeEntryImpl))(QualifiedName:CtlTest.localNodeHostname)(QualifiedName:CtlTest.localNodeHostname))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:wascalled)(Dimension)(ArrayInitializer(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:setNodeDispatcher)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:NodeDispatcher))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:executeNodedispatch)(SingleVariableDeclaration(SimpleType(SimpleName:Project))(SimpleName:project))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:INodeEntry)))(SimpleName:nodes))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:threadcount))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:keepgoing))(SingleVariableDeclaration(SimpleType(SimpleName:FailedNodesListener))(SimpleName:failedListener))(SingleVariableDeclaration(SimpleType(SimpleName:NodeCallableFactory))(SimpleName:factory))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:wascalled)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:doAction)))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(InstanceofExpression(SimpleName:e)(SimpleType(SimpleName:NodesetEmptyException)))))))))(ExpressionStatement(MethodInvocation(SimpleName:assertFalse)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:wascalled)(NumberLiteral:0))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destNodesFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getEtcDir))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:testNodesFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:TEST_NODES_XML))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFileStreams)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testNodesFile)(SimpleName:destNodesFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IDispatchedScript))(VariableDeclarationFragment(SimpleName:dsc)(ClassInstanceCreation(SimpleType(SimpleName:DispatchedScriptImpl))(SimpleName:nodeset)(SimpleName:TEST_PROJ)(NullLiteral)(NullLiteral)(NullLiteral)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(StringLiteral:<STR>)))(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:CommandAction))(VariableDeclarationFragment(SimpleName:action)(ClassInstanceCreation(SimpleType(SimpleName:CommandAction))(SimpleName:fw)(SimpleName:dsc)(NullLiteral))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:NodeEntryImpl))(VariableDeclarationFragment(SimpleName:nodeentry)(ClassInstanceCreation(SimpleType(SimpleName:NodeEntryImpl))(QualifiedName:CtlTest.localNodeHostname)(QualifiedName:CtlTest.localNodeHostname))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:wascalled)(Dimension)(ArrayInitializer(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:setNodeDispatcher)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:NodeDispatcher))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:executeNodedispatch)(SingleVariableDeclaration(SimpleType(SimpleName:Project))(SimpleName:project))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:INodeEntry)))(SimpleName:nodes))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:threadcount))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:keepgoing))(SingleVariableDeclaration(SimpleType(SimpleName:FailedNodesListener))(SimpleName:failedListener))(SingleVariableDeclaration(SimpleType(SimpleName:NodeCallableFactory))(SimpleName:factory))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:wascalled)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:doAction)))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:wascalled)(NumberLiteral:0))))))))))