(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:folderFileChooserActionPerformed)(SingleVariableDeclaration(SimpleType(QualifiedName:java.awt.event.ActionEvent))(SimpleName:evt))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:evt))(SimpleName:getActionCommand)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JFileChooser.APPROVE_SELECTION)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:selectedFolder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:folderFileChooser))(SimpleName:getSelectedFile))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:collectionCopyFile)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:newDocumentName)))(VariableDeclarationStatement(SimpleType(SimpleName:Document))(VariableDeclarationFragment(SimpleName:newDocument)))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:distinguisherReplacer)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:matchingFilenameDistinguisher)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:nextToken)))(VariableDeclarationStatement(SimpleType(SimpleName:Term))(VariableDeclarationFragment(SimpleName:newTerm)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:userHome)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileSeparator)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:userOption)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:folderTextFiles)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:File))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:folderRejectedFiles)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:File))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:ignoredFiles)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:File))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileNameExtensionFilter))(VariableDeclarationFragment(SimpleName:textFileFilter)(ClassInstanceCreation(SimpleType(SimpleName:FileNameExtensionFilter))(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Scanner))(VariableDeclarationFragment(SimpleName:tokenizer)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fileSource)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:collectionDestination)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Integer)))(VariableDeclarationFragment(SimpleName:termHashMap)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Index))(VariableDeclarationFragment(SimpleName:collectionIndex)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeCollection))(SimpleName:getIndex))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:documentTermMaxFrequency)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:currentTermFrequency)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:folderFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:selectedFolder))(SimpleName:listFiles))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:textFileFilter))(SimpleName:accept)(METHOD_INVOCATION_ARGUMENTS(SimpleName:folderFile)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:folderTextFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:folderFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:folderRejectedFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:folderFile))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:selectedFile))(SimpleName:folderTextFiles)(Block(ExpressionStatement(Assignment(SimpleName:newDocumentName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:selectedFile))(SimpleName:getName))))(ExpressionStatement(Assignment(SimpleName:newDocument)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Document))(SimpleName:newDocumentName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeCollection))(SimpleName:containsDocument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newDocument)))(Block(ExpressionStatement(Assignment(SimpleName:matchingFilenameDistinguisher)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:newDocumentName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newDocumentName))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:matchingFilenameDistinguisher)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newDocument))(SimpleName:setDocumentName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newDocumentName))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeCollection))(SimpleName:containsDocument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newDocument)))(Block(ExpressionStatement(PostfixExpression(SimpleName:matchingFilenameDistinguisher)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:newDocumentName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:distinguisherReplacer))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newDocumentName))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newDocumentName))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Integer))(SimpleName:matchingFilenameDistinguisher)))(SimpleName:toString)))))(SimpleName:toString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newDocument))(SimpleName:setDocumentName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newDocumentName))))))))(ExpressionStatement(Assignment(SimpleName:termHashMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Integer))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:tokenizer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Scanner))(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:selectedFile))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:useDelimiter)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:nextToken)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:next)))(SimpleName:toLowerCase))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nextToken))(SimpleName:isEmpty)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:termHashMap))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextToken)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:termHashMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextToken)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:termHashMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextToken)))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:termHashMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nextToken)(NumberLiteral:1))))))))(ExpressionStatement(Assignment(SimpleName:documentTermMaxFrequency)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:term))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:termHashMap))(SimpleName:keySet))(Block(ExpressionStatement(Assignment(SimpleName:newTerm)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Term))(SimpleName:term))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collectionIndex))(SimpleName:termExists)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newTerm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collectionIndex))(SimpleName:addTerm)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newTerm)))))(ExpressionStatement(Assignment(SimpleName:currentTermFrequency)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:termHashMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:term)))))(IfStatement(InfixExpression(SimpleName:currentTermFrequency)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:documentTermMaxFrequency))(ExpressionStatement(Assignment(SimpleName:documentTermMaxFrequency)(ASSIGNMENT_OPERATOR:=)(SimpleName:currentTermFrequency))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collectionIndex))(SimpleName:addOccurence)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newTerm)(SimpleName:newDocument)(SimpleName:currentTermFrequency))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newDocument))(SimpleName:setTermMaxFrequency)(METHOD_INVOCATION_ARGUMENTS(SimpleName:documentTermMaxFrequency))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeCollection))(SimpleName:addDocument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newDocument))))(ExpressionStatement(Assignment(SimpleName:userHome)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:fileSeparator)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:collectionCopyFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:userHome)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileSeparator)(StringLiteral:<STR>)(SimpleName:fileSeparator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeCollection))(SimpleName:getDocumentCollectionName))(SimpleName:fileSeparator)(SimpleName:newDocumentName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collectionCopyFile))(SimpleName:createNewFile)))(ExpressionStatement(Assignment(SimpleName:fileSource)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:selectedFile)))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:collectionDestination)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:collectionCopyFile)))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collectionDestination))(SimpleName:transferFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileSource)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSource))(SimpleName:size))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:userOption)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showConfirmDialog)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(StringLiteral:<STR>)(QualifiedName:JOptionPane.YES_NO_OPTION)(QualifiedName:JOptionPane.WARNING_MESSAGE)))))(IfStatement(InfixExpression(SimpleName:userOption)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JOptionPane.NO_OPTION))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:activeCollection))(SimpleName:removeDocument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newDocument))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:term))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:termHashMap))(SimpleName:keySet))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collectionIndex))(SimpleName:removeAllOccurences)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Term))(SimpleName:term))(SimpleName:newDocument))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:folderTextFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:selectedFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ignoredFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:selectedFile)))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:tokenizer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:close))))(IfStatement(InfixExpression(SimpleName:fileSource)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileSource))(SimpleName:close))))(IfStatement(InfixExpression(SimpleName:collectionDestination)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:collectionDestination))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ignoredFiles))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IgnoredFilesDialog))(VariableDeclarationFragment(SimpleName:ignoredFilesDialog)(ClassInstanceCreation(SimpleType(SimpleName:IgnoredFilesDialog))(SimpleName:ignoredFiles)(ThisExpression))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ignoredFilesDialog))(SimpleName:setVisible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ExpressionStatement(MethodInvocation(SimpleName:processWindowEvent)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:WindowEvent))(ThisExpression)(QualifiedName:WindowEvent.WINDOW_CLOSING))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:evt))(SimpleName:getActionCommand)))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:JFileChooser.CANCEL_SELECTION)))(ExpressionStatement(MethodInvocation(SimpleName:processWindowEvent)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:WindowEvent))(ThisExpression)(QualifiedName:WindowEvent.WINDOW_CLOSING)))))))))))