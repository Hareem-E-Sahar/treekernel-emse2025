(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:int)(SimpleName:packSizeNum)(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:n))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:e))(Block(IfStatement(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(NumberLiteral:1)))(IfStatement(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:n)))))(ForStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:--)(SimpleName:e))(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:*=)(NumberLiteral:10))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:10000))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:/=)(NumberLiteral:10000))))(ReturnStatement(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(SimpleName:packshorts)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n))))))))))