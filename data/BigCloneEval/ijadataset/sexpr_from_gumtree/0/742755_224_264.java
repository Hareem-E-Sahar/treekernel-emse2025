(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:zipFolder)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:internalPath))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dirZip))(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:zipOut))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:4096))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:fileArray)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dirZip))(SimpleName:listFiles))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileName)(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:fileArray)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:fileArray.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:fileName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:fileArray)(SimpleName:i)))(SimpleName:getName))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:fileArray)(SimpleName:i)))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileName))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:zipFolder)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:internalPath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)(StringLiteral:<STR>))(ArrayAccess(SimpleName:fileArray)(SimpleName:i))(SimpleName:zipOut)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:fileArray)(SimpleName:i)))(SimpleName:isDirectory)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:include)(BooleanLiteral:true)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientSession))(SimpleName:getTranslationFileMapToSubModuleID)))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:submoduleID)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientSession))(SimpleName:getTranslationFileMapToSubModuleID)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:submoduleID)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:moduleID)(NullLiteral)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:IModule))(SimpleName:module))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taxonomy))(SimpleName:getModules))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ISubModule))(VariableDeclarationFragment(SimpleName:sm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getSubModuleByID)(METHOD_INVOCATION_ARGUMENTS(SimpleName:submoduleID)))))(IfStatement(InfixExpression(SimpleName:sm)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:moduleID)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:getID))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:moduleID)))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientSession))(SimpleName:getClientSelection)))(SimpleName:constainsSubModule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:moduleID)(SimpleName:submoduleID))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:include)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))(IfStatement(SimpleName:include)(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:inFile)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ArrayAccess(SimpleName:fileArray)(SimpleName:i)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:internalPath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inFile))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:len))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inFile))(SimpleName:close))))))))))))))))