(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:messageReceived)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelHandlerContext))(SimpleName:arg0))(SingleVariableDeclaration(SimpleType(SimpleName:MessageEvent))(SimpleName:arg1))(SimpleType(SimpleName:Exception))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:curtime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:objectSizeEstimator))(SimpleName:estimateSize)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg1))(SimpleName:getMessage))))))(IfStatement(InfixExpression(SimpleName:trafficCounter)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trafficCounter))(SimpleName:bytesRecvFlowControl)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg0)(SimpleName:size))))(IfStatement(InfixExpression(SimpleName:readLimit)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:wait)(MethodInvocation(SimpleName:getTimeToWait)(METHOD_INVOCATION_ARGUMENTS(SimpleName:readLimit)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trafficCounter))(SimpleName:getCurrentReadBytes))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trafficCounter))(SimpleName:getLastTime))(SimpleName:curtime)))))(IfStatement(InfixExpression(SimpleName:wait)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:MINIMAL_WAIT))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg0))(SimpleName:getChannel))))(IfStatement(InfixExpression(InfixExpression(SimpleName:channel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:isConnected)))(Block(IfStatement(InfixExpression(SimpleName:executor)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:release))(SimpleName:get))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:wait))))(ReturnStatement)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg0))(SimpleName:getAttachment))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg0))(SimpleName:setAttachment)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Boolean.TRUE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:setReadable)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:executor))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReopenRead))(SimpleName:arg0)(SimpleName:wait))))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:release))(SimpleName:get))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:wait)))))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:release))(SimpleName:get))(Block(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:wait)))))))))))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:messageReceived)(SimpleName:arg0)(SimpleName:arg1)))))))))