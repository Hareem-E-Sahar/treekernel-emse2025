(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:audioInputStream)(MethodInvocation(SimpleName:openAudioInputStream))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SourceDataLine))(VariableDeclarationFragment(SimpleName:sourceDataLine)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getSourceDataLine)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:getFormat))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:audioFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDataLine))(SimpleName:getFormat))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioFormat))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)))))(ReturnStatement)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioFormat))(SimpleName:getEncoding))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:AudioFormat.Encoding.PCM_SIGNED))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)))))(ReturnStatement)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioFormat))(SimpleName:getSampleSizeInBits))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:16))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)))))(ReturnStatement)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioFormat))(SimpleName:isBigEndian))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDataLine))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:getFormat)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDataLine))(SimpleName:start)))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:8192))))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:isInterrupted))))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(QualifiedName:buf.length)))))(IfStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:newAudioInputStream)(MethodInvocation(SimpleName:openAudioInputStream))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newAudioInputStream))(SimpleName:getFormat)))(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:getFormat)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newAudioInputStream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)))))(BreakStatement)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:oldAudioInputStream)(SimpleName:audioInputStream)))(ExpressionStatement(Assignment(SimpleName:audioInputStream)(ASSIGNMENT_OPERATOR:=)(SimpleName:newAudioInputStream)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oldAudioInputStream))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(QualifiedName:buf.length)))))(IfStatement(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)))))(BreakStatement)))))(SwitchStatement(SimpleName:state)(SwitchCase(NumberLiteral:0))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:len))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:4))(Block(ExpressionStatement(Assignment(SimpleName:volume)(ASSIGNMENT_OPERATOR:*=)(SimpleName:VOLUME_STEP_PER_SAMPLE)))(IfStatement(InfixExpression(SimpleName:volume)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:1F))(Block(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:volume)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1F)))(BreakStatement)))(ExpressionStatement(MethodInvocation(SimpleName:convertSample)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:i))))(ExpressionStatement(MethodInvocation(SimpleName:convertSample)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))))))(BreakStatement)(SwitchCase(NumberLiteral:1))(BreakStatement)(SwitchCase(NumberLiteral:2))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:len))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:4))(Block(ExpressionStatement(Assignment(SimpleName:volume)(ASSIGNMENT_OPERATOR:/=)(SimpleName:VOLUME_STEP_PER_SAMPLE)))(IfStatement(InfixExpression(SimpleName:volume)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:MIN_VALUE))(Block(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:3)))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))(BreakStatement)))(ExpressionStatement(MethodInvocation(SimpleName:convertSample)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:i))))(ExpressionStatement(MethodInvocation(SimpleName:convertSample)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))))))(BreakStatement)(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AssertionError)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDataLine))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:len))))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:4))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDataLine))(SimpleName:drain))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDataLine))(SimpleName:stop))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDataLine))(SimpleName:close))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:LineUnavailableException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:UnsupportedAudioFileException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage)))))))))))))