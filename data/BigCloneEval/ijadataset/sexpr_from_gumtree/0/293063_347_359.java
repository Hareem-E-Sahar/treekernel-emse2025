(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:digest)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IEditorInput))(SimpleName:input))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:result)(NullLiteral)))(IfStatement(InstanceofExpression(SimpleName:input)(SimpleType(SimpleName:IFileEditorInput)))(Block(IfStatement(InfixExpression(SimpleName:digesterService)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digesterService))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:IFileEditorInput))(SimpleName:input))))(SimpleName:getFile)))(SimpleName:getContents)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Activator))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Status.ERROR)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input))))))))))))(ReturnStatement(SimpleName:result))))))