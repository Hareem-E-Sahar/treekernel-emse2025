(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:processFile)(SingleVariableDeclaration(SimpleType(SimpleName:Context))(SimpleName:cx))(SingleVariableDeclaration(SimpleType(SimpleName:Scriptable))(SimpleName:scope))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Reader))(VariableDeclarationFragment(SimpleName:in)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:filename))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:is))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:mfex))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Context))(SimpleName:reportError)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IVErrorReporter))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:filename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioex))(SimpleName:toString)))))))(ExpressionStatement(Assignment(SimpleName:exitCode)(ASSIGNMENT_OPERATOR:=)(SimpleName:EXITCODE_FILE_NOT_FOUND)))(ReturnStatement))))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:filename))))(ExpressionStatement(Assignment(SimpleName:filename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(QualifiedName:java.io.File))(SimpleName:filename)))(SimpleName:getCanonicalPath)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Context))(SimpleName:reportError)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IVErrorReporter))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:filename))))))(ExpressionStatement(Assignment(SimpleName:exitCode)(ASSIGNMENT_OPERATOR:=)(SimpleName:EXITCODE_FILE_NOT_FOUND)))(ReturnStatement)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:logRB)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Resource.JSERROR)(SimpleName:ioe)))))))))(ExpressionStatement(MethodInvocation(SimpleName:evaluateReader)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cx)(SimpleName:scope)(SimpleName:in)(SimpleName:filename)(NumberLiteral:1))))))))