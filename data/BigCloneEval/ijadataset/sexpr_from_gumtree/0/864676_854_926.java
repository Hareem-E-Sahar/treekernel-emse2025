(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:final)(PrimitiveType:boolean)(SimpleName:checkForUpdate)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:currentVersion))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:updateURL))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:noLock))(SimpleType(SimpleName:Exception))(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:parentFDTConfDirName)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fdtUpdateConfFileName)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:confFile)(MethodInvocation(SimpleName:createOrGetRWFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:parentFDTConfDirName)(SimpleName:fdtUpdateConfFileName)))))(IfStatement(InfixExpression(SimpleName:confFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:lastCheck)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:updateProperties)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:confFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:updateProperties))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:lastCheckProp)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:updateProperties))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:lastCheck)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:lastCheckProp)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:lastCheck)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:parseLong)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastCheckProp))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(StringLiteral:<STR>)(SimpleName:t))))))(ExpressionStatement(Assignment(SimpleName:lastCheck)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:confFile))(SimpleName:t))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:closeIgnoringExceptions)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fos))))(ExpressionStatement(MethodInvocation(SimpleName:closeIgnoringExceptions)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:now)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bHaveUpdates)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:checkAndSetInstanceID)(METHOD_INVOCATION_ARGUMENTS(SimpleName:updateProperties))))(IfStatement(InfixExpression(InfixExpression(SimpleName:lastCheck)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:FDT.UPDATE_PERIOD))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:now))(Block(ExpressionStatement(Assignment(SimpleName:lastCheck)(ASSIGNMENT_OPERATOR:=)(SimpleName:now)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:bHaveUpdates)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:updateFDT)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentVersion)(SimpleName:updateURL)(BooleanLiteral:false)(SimpleName:noLock)))))(IfStatement(SimpleName:bHaveUpdates)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(StringLiteral:<STR>)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(StringLiteral:<STR>)(SimpleName:t)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:updateProperties))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:now)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:confFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:updateProperties))(SimpleName:store)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fos)(NullLiteral)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(StringLiteral:<STR>)(SimpleName:t1))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:closeIgnoringExceptions)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fos))))))(ReturnStatement(SimpleName:bHaveUpdates)))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:parentFDTConfDirName)(QualifiedName:File.separator)(SimpleName:fdtUpdateConfFileName)))))))(ReturnStatement(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(StringLiteral:<STR>)(SimpleName:t)))))))(ReturnStatement(BooleanLiteral:false))))))