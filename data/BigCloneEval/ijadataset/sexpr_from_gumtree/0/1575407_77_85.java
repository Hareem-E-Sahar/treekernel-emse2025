(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:testOutOfBoundDigestion)(SimpleType(SimpleName:JPLEmptySequenceException))(SimpleType(SimpleName:JPLParseException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:JPLCleaver))(VariableDeclarationFragment(SimpleName:enzyme)(ClassInstanceCreation(SimpleType(SimpleName:JPLCleaver))(ClassInstanceCreation(SimpleType(SimpleName:JPLRegExpCutter))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sequenceString)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:JPLIAASequence))(VariableDeclarationFragment(SimpleName:sequence)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(QualifiedName:JPLAASequence.Builder))(SimpleName:sequenceString)))(SimpleName:build))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:enzyme))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sequence))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:JPLIAASequence)))(VariableDeclarationFragment(SimpleName:digests)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:enzyme))(SimpleName:getDigests))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digests))))))))