(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Boolean))(SimpleName:accumulate)(SingleVariableDeclaration(Modifier:final)(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:r))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:List))(SimpleName:bindings))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:arg)(ArrayAccess(SimpleName:r)(NumberLiteral:0))))(IfStatement(InstanceofExpression(SimpleName:arg)(SimpleType(SimpleName:ConstantTerm)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ConstantTerm))(VariableDeclarationFragment(SimpleName:t)(CastExpression(SimpleType(SimpleName:ConstantTerm))(SimpleName:arg))))(ExpressionStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:getObject))))))(IfStatement(InstanceofExpression(SimpleName:arg)(SimpleType(SimpleName:ComplexTerm)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ComplexTerm))(VariableDeclarationFragment(SimpleName:ct)(CastExpression(SimpleType(SimpleName:ComplexTerm))(SimpleName:arg))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:first)(ArrayAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ct))(SimpleName:getTerms))(NumberLiteral:1))))(IfStatement(InstanceofExpression(SimpleName:first)(SimpleType(SimpleName:ConstantTerm)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:constructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:ConstantTerm))(SimpleName:first))))(SimpleName:getObject)))(SimpleName:toString))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:cl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:constructor)))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:list)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RListUtils))(SimpleName:rlist2List)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:ComplexTerm))(ArrayAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ct))(SimpleName:getTerms))(NumberLiteral:0)))(SimpleName:list)(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:arity)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:size))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:dat)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(SimpleName:arity))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Class))(Dimension))(VariableDeclarationFragment(SimpleName:par)(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension(SimpleName:arity))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:ListIterator))(VariableDeclarationFragment(SimpleName:li)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:listIterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:li))(SimpleName:hasNext))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:o)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:li))(SimpleName:next))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dat)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(SimpleName:o)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:par)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:getClass))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:par)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:Double))))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:par)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(TypeLiteral(PrimitiveType:double)))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:par)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:Boolean))))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:par)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(TypeLiteral(PrimitiveType:boolean)))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:par)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(TypeLiteral(SimpleType(SimpleName:Integer))))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:par)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(TypeLiteral(PrimitiveType:int)))))(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:List)))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:par)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(TypeLiteral(SimpleType(SimpleName:List))))))(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:ComplexTerm)))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:par)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(TypeLiteral(SimpleType(SimpleName:Object)))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:target)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:o)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cl))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:par))))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dat)))))(ExpressionStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:o))))(ReturnStatement(QualifiedName:Boolean.FALSE)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))))(ExpressionStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg)))))))(ReturnStatement(QualifiedName:Boolean.FALSE))))))