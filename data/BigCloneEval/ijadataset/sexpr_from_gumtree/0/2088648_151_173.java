(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:findTransitiveDependencies)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:libPath))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:libraryEntries))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:clazzSet)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String))))))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(QualifiedType(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:Entry))(SimpleType(SimpleName:String)))(SimpleName:library))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libraryEntries))(SimpleName:entrySet))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:JarFile))(VariableDeclarationFragment(SimpleName:jarFile)(ClassInstanceCreation(SimpleType(SimpleName:JarFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:library))(SimpleName:toString)))))(VariableDeclarationStatement(ArrayType(ParameterizedType(QualifiedType(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:Entry))(SimpleType(SimpleName:String)))(Dimension))(VariableDeclarationFragment(SimpleName:clazzes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:library))(SimpleName:getClassReferences)))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(QualifiedName:LibrarySet.Entry))(Dimension(NumberLiteral:0))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:clazzes.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:LibrarySet.Entry))(VariableDeclarationFragment(SimpleName:clazzEntry)(ArrayAccess(SimpleName:clazzes)(SimpleName:i))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:clazzStream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getEntry)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clazzEntry))(SimpleName:toString))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clazzSet))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:poolReader))(SimpleName:getClassesInUse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clazzStream)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:library)(StringLiteral:<STR>))))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:transitiveCodeDeps)(MethodInvocation(SimpleName:findCodeDependencies)(METHOD_INVOCATION_ARGUMENTS(SimpleName:libPath)(SimpleName:clazzSet)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transitiveCodeDeps))(SimpleName:removeAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:libEntries))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transitiveCodeDeps))(SimpleName:removeAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transitiveEntries))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transitiveCodeDeps))(SimpleName:entrySet)))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transitiveEntries))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transitiveCodeDeps))))(ExpressionStatement(MethodInvocation(SimpleName:findTransitiveDependencies)(METHOD_INVOCATION_ARGUMENTS(SimpleName:libPath)(SimpleName:transitiveCodeDeps))))))))))