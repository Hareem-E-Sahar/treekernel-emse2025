(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:cloneTest)(SingleVariableDeclaration(SimpleType(SimpleName:Long))(SimpleName:nTestOldId))(SingleVariableDeclaration(SimpleType(SimpleName:Long))(SimpleName:nTestNew))(Block(VariableDeclarationStatement(SimpleType(SimpleName:CoTest))(VariableDeclarationFragment(SimpleName:coTestOld)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:CoTestDAO))))(SimpleName:findById)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nTestOldId)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:CoQuestion)))(VariableDeclarationFragment(SimpleName:setQuestion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:coTestOld))(SimpleName:getCoQuestions))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:setQuestion))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:CoQuestion)))(VariableDeclarationFragment(SimpleName:iterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:setQuestion))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:beginTransaction)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:CoQuestion))(VariableDeclarationFragment(SimpleName:coQuestionOld)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next))))(VariableDeclarationStatement(SimpleType(SimpleName:Long))(VariableDeclarationFragment(SimpleName:nQuestionNewId)(MethodInvocation(SimpleName:getSequence)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Long))(VariableDeclarationFragment(SimpleName:nQuestionOldId)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:coQuestionOld))(SimpleName:getQuestionId))))(VariableDeclarationStatement(SimpleType(SimpleName:Query))(VariableDeclarationFragment(SimpleName:query)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:createNativeQuery)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Statements.CLONE_QUESTION)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:query))(SimpleName:setParameter)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(SimpleName:nQuestionNewId))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:query))(SimpleName:setParameter)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:coTestOld))(SimpleName:getTestId)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:query))(SimpleName:setParameter)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3)(SimpleName:nQuestionOldId))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nUpdate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:query))(SimpleName:executeUpdate))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nQuestionNewId)(StringLiteral:<STR>)(SimpleName:nUpdate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:commit)))(VariableDeclarationStatement(SimpleType(SimpleName:CoQuestion))(VariableDeclarationFragment(SimpleName:coQuestion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:CoQuestionDAO))))(SimpleName:findById)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nQuestionNewId)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:refresh)(METHOD_INVOCATION_ARGUMENTS(SimpleName:coQuestion))))(IfStatement(InfixExpression(SimpleName:coQuestion)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:beginTransaction)))(ExpressionStatement(Assignment(SimpleName:query)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:createNativeQuery)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Statements.CLONE_QUESTION_MATERIAL)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:query))(SimpleName:setParameter)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(SimpleName:nQuestionNewId))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:query))(SimpleName:setParameter)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)(SimpleName:nQuestionOldId))))(ExpressionStatement(Assignment(SimpleName:nUpdate)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:query))(SimpleName:executeUpdate))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nQuestionOldId)(StringLiteral:<STR>)(SimpleName:nQuestionNewId)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:nUpdate)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:commit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:DataManagerQuestion))))(SimpleName:cloneQuestion)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nQuestionOldId)(SimpleName:nQuestionNewId))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:beginTransaction)))(ExpressionStatement(MethodInvocation(SimpleName:cloneUserHistory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nTestOldId)(SimpleName:nTestNew))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EntityManagerHelper))(SimpleName:rollback)))))))