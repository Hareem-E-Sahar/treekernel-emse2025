(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:int)(SimpleName:buildStream)(SingleVariableDeclaration(SimpleType(SimpleName:Map))(SimpleName:page))(SingleVariableDeclaration(SimpleType(SimpleName:FixedIClip))(SimpleName:clipp))(SingleVariableDeclaration(SimpleType(SimpleName:AffineTransform))(SimpleName:ctm))(SingleVariableDeclaration(SimpleType(SimpleName:CompositeInputStream))(SimpleName:in))(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:ocrimgs))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:ParseException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PDFReader))(VariableDeclarationFragment(SimpleName:pdfr)(SimpleName:pdfr_)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:ops)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(NumberLiteral:6))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:opsi)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:GraphicsState))(VariableDeclarationFragment(SimpleName:gs)(ClassInstanceCreation(SimpleType(SimpleName:GraphicsState)))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:gsstack)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList))(NumberLiteral:10))))(VariableDeclarationStatement(SimpleType(SimpleName:AffineTransform))(VariableDeclarationFragment(SimpleName:Tm)(ClassInstanceCreation(SimpleType(SimpleName:AffineTransform))))(VariableDeclarationFragment(SimpleName:Tlm)(ClassInstanceCreation(SimpleType(SimpleName:AffineTransform))))(VariableDeclarationFragment(SimpleName:tmpat)(ClassInstanceCreation(SimpleType(SimpleName:AffineTransform)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:Tc)(NumberLiteral:0.0))(VariableDeclarationFragment(SimpleName:Tw)(NumberLiteral:0.0))(VariableDeclarationFragment(SimpleName:Tz)(NumberLiteral:100.0))(VariableDeclarationFragment(SimpleName:TL)(NumberLiteral:0.0))(VariableDeclarationFragment(SimpleName:Ts)(NumberLiteral:0.0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:Tr)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:GeneralPath))(VariableDeclarationFragment(SimpleName:path)(ClassInstanceCreation(SimpleType(SimpleName:GeneralPath)))))(VariableDeclarationStatement(SimpleType(SimpleName:Color))(VariableDeclarationFragment(SimpleName:color)(QualifiedName:Color.BLACK))(VariableDeclarationFragment(SimpleName:fcolor)(QualifiedName:Color.BLACK)))(VariableDeclarationStatement(SimpleType(SimpleName:ColorSpace))(VariableDeclarationFragment(SimpleName:fCS)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpace))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ColorSpace.CS_GRAY))))(VariableDeclarationFragment(SimpleName:sCS)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpace))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ColorSpace.CS_GRAY)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:float)(Dimension))(VariableDeclarationFragment(SimpleName:cscomp)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(NumberLiteral:4))))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:markedseq)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList))(NumberLiteral:5))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:curx)(NumberLiteral:0.0))(VariableDeclarationFragment(SimpleName:cury)(NumberLiteral:0.0)))(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:resources)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:page))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:page))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ClassInstanceCreation(SimpleType(SimpleName:HashMap))(NumberLiteral:1)))))))(VariableDeclarationFragment(SimpleName:xores)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationFragment(SimpleName:fontres)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationFragment(SimpleName:csres)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationFragment(SimpleName:patres)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationFragment(SimpleName:shres)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationFragment(SimpleName:propres)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Document))(VariableDeclarationFragment(SimpleName:doc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clipp))(SimpleName:getDocument))))(VariableDeclarationStatement(SimpleType(SimpleName:Layer))(VariableDeclarationFragment(SimpleName:scratchLayer)(ConditionalExpression(InfixExpression(SimpleName:doc)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:doc))(SimpleName:getLayer)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Layer.SCRATCH)))(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:Point2D))(VariableDeclarationFragment(SimpleName:srcpt)(ClassInstanceCreation(SimpleType(QualifiedName:Point2D.Double))))(VariableDeclarationFragment(SimpleName:transpt)(ClassInstanceCreation(SimpleType(QualifiedName:Point2D.Double)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:d)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(NumberLiteral:6))))))(VariableDeclarationStatement(SimpleType(SimpleName:INode))(VariableDeclarationFragment(SimpleName:textp)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FixedIHBox))(VariableDeclarationFragment(SimpleName:linep)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:baseline)(QualifiedName:Double.MIN_VALUE)))(VariableDeclarationStatement(SimpleType(SimpleName:FontPDF))(VariableDeclarationFragment(SimpleName:tf)(NullLiteral)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:Tja)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(NumberLiteral:1))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:spacew)(NumberLiteral:0.0))(VariableDeclarationFragment(SimpleName:concatthreshold)(NumberLiteral:0.0)))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle2D))(VariableDeclarationFragment(SimpleName:maxr)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:lastX)(NumberLiteral:0.0))(VariableDeclarationFragment(SimpleName:totalW)(NumberLiteral:0.0)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fconcat)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:SpanPDF))(VariableDeclarationFragment(SimpleName:fontspan)(NullLiteral))(VariableDeclarationFragment(SimpleName:sspan)(NullLiteral))(VariableDeclarationFragment(SimpleName:fillspan)(NullLiteral))(VariableDeclarationFragment(SimpleName:Trspan)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:StrokeSpan))(VariableDeclarationFragment(SimpleName:strokespan)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:lastleaf)(SimpleName:clipp)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fnewfont)(BooleanLiteral:true))(VariableDeclarationFragment(SimpleName:fnewline)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fstroke)(BooleanLiteral:false))(VariableDeclarationFragment(SimpleName:ffill)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fvalidpath)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:Color))(VariableDeclarationFragment(SimpleName:newcolor)(SimpleName:color))(VariableDeclarationFragment(SimpleName:newfcolor)(SimpleName:fcolor)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newTr)(SimpleName:Tr)))(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:fontdict)(Assignment(QualifiedName:gs.fontdict)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:pointsize)(Assignment(QualifiedName:gs.pointsize)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1.0))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:linewidth)(Assignment(QualifiedName:gs.linewidth)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Context.DEFAULT_STROKE))(SimpleName:getLineWidth)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:linecap)(Assignment(QualifiedName:gs.linecap)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Context.DEFAULT_STROKE))(SimpleName:getEndCap))))(VariableDeclarationFragment(SimpleName:linejoin)(Assignment(QualifiedName:gs.linejoin)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Context.DEFAULT_STROKE))(SimpleName:getLineJoin)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:miterlimit)(Assignment(QualifiedName:gs.miterlimit)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Context.DEFAULT_STROKE))(SimpleName:getMiterLimit)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:float)(Dimension))(VariableDeclarationFragment(SimpleName:dasharray)(Assignment(QualifiedName:gs.dasharray)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Context.DEFAULT_STROKE))(SimpleName:getDashArray)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:dashphase)(Assignment(QualifiedName:gs.dashphase)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Context.DEFAULT_STROKE))(SimpleName:getDashPhase)))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:pathrect)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Line2D))(VariableDeclarationFragment(SimpleName:pathline)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fshowshape)(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(SimpleName:getHints))(INFIX_EXPRESSION_OPERATOR:&)(QualifiedName:MediaAdaptor.HINT_NO_SHAPE)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cmdcnt)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:leafcnt)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:spancnt)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:vspancnt)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:concatcnt)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pathcnt)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:pathlen)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:pathlens)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(NumberLiteral:5000))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PDFReader))(SimpleName:eatSpace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c))(VariableDeclarationFragment(SimpleName:peek)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:peek))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(IfStatement(ArrayAccess(SimpleName:OP)(SimpleName:c))(Block(IfStatement(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:6))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:ops)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(SimpleName:ops)(NumberLiteral:1))(StringLiteral:<STR>)(ArrayAccess(SimpleName:ops)(NumberLiteral:5))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ops)(PostfixExpression(SimpleName:opsi)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PDFReader))(SimpleName:readObject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))))(Block(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)))(VariableDeclarationFragment(SimpleName:c3)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(VariableDeclarationFragment(SimpleName:c2c3)))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:c2)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:||)(ArrayAccess(SimpleName:WSDL)(SimpleName:c2)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:peek)(ASSIGNMENT_OPERATOR:=)(SimpleName:c2)))(ExpressionStatement(Assignment(SimpleName:c2c3)(ASSIGNMENT_OPERATOR:=)(CharacterLiteral:<STR>))))(IfStatement(InfixExpression(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c3)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:||)(ArrayAccess(SimpleName:WSDL)(SimpleName:c3)))(Block(ExpressionStatement(Assignment(SimpleName:peek)(ASSIGNMENT_OPERATOR:=)(SimpleName:c3)))(ExpressionStatement(Assignment(SimpleName:c2c3)(ASSIGNMENT_OPERATOR:=)(SimpleName:c2))))(Block(ExpressionStatement(Assignment(SimpleName:c2c3)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:c2)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:c3))))(ExpressionStatement(Assignment(SimpleName:peek)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))(IfStatement(InfixExpression(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ArrayAccess(SimpleName:WSDL)(SimpleName:peek))))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:c2)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(BreakStatement)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:char)(SimpleName:c))(CastExpression(PrimitiveType:char)(SimpleName:c2))(CastExpression(PrimitiveType:char)(SimpleName:c3))(StringLiteral:<STR>)(SimpleName:peek))))))))))(ExpressionStatement(PostfixExpression(SimpleName:cmdcnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(SimpleName:DEBUG)(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:scmd)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer))(NumberLiteral:3))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:char)(SimpleName:c)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:char)(SimpleName:c2)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:c2))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scmd))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:char)(SimpleName:c3))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:arity)(CastExpression(SimpleType(SimpleName:Integer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:streamcmds_))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scmd))(SimpleName:toString)))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ok)(InfixExpression(InfixExpression(SimpleName:arity)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arity))(SimpleName:intValue))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:opsi))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arity))(SimpleName:intValue))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Integer.MAX_VALUE))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:ok))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:arity)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:opsi)(StringLiteral:<STR>)(SimpleName:arity)))))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:scmd)(StringLiteral:<STR>)(SimpleName:c)(StringLiteral:<STR>)(SimpleName:c2)(StringLiteral:<STR>)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:opsi))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:ops)(SimpleName:i)))))))(IfStatement(SimpleName:DEBUG)(AssertStatement(BooleanLiteral:false)))(ReturnStatement(SimpleName:cmdcnt))))))(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>))(WhileStatement(InfixExpression(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(ArrayAccess(SimpleName:WHITESPACE)(SimpleName:peek)))(ExpressionStatement(Assignment(SimpleName:peek)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:unread)(METHOD_INVOCATION_ARGUMENTS(SimpleName:peek))))(SwitchStatement(SimpleName:c)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:setWindingRule)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GeneralPath.WIND_NON_ZERO))))(ExpressionStatement(Assignment(SimpleName:ffill)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:fstroke)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:setWindingRule)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GeneralPath.WIND_EVEN_ODD))))(ExpressionStatement(Assignment(SimpleName:ffill)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:fstroke)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clipp))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:textp)(INFIX_EXPRESSION_OPERATOR:==)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clipp))(SimpleName:getLastChild))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:getTranslateX))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX)))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:5.0)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:getTranslateX))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX)))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0.001)))(Block)(Block(ExpressionStatement(Assignment(SimpleName:textp)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FixedI))(StringLiteral:<STR>)(NullLiteral)(SimpleName:clipp))))(ExpressionStatement(Assignment(SimpleName:linep)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FixedIHBox))(StringLiteral:<STR>)(NullLiteral)(SimpleName:textp))))(ExpressionStatement(Assignment(SimpleName:fconcat)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:baseline)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.MIN_VALUE)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tlm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Tm)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedImage))(VariableDeclarationFragment(SimpleName:img)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Images))(SimpleName:createScaledInline)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:csres)(SimpleName:ctm)(SimpleName:newfcolor)(SimpleName:pdfr)))))(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:appendImage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:clipp)(SimpleName:img)(SimpleName:ctm)))))(ExpressionStatement(PostfixExpression(SimpleName:leafcnt)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(InfixExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:attrs)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:c2)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:attrs)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Map))(ParenthesizedExpression(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:ops)(NumberLiteral:1)))(SimpleName:getClass))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CLASS_DICTIONARY))(ArrayAccess(SimpleName:ops)(NumberLiteral:1))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:propres))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:1))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Span))(VariableDeclarationFragment(SimpleName:seq)(CastExpression(SimpleType(SimpleName:Span))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Behavior))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))(StringLiteral:<STR>)(SimpleName:attrs)(SimpleName:scratchLayer))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:seq))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:markedseq))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:seq)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block)))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(SimpleName:fvalidpath)(StringLiteral:<STR>))(IfStatement(SimpleName:fvalidpath)(Block(IfStatement(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:closePath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:setWindingRule)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GeneralPath.WIND_NON_ZERO))))(ExpressionStatement(Assignment(SimpleName:ffill)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:fstroke)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(SimpleName:fvalidpath)(StringLiteral:<STR>))(IfStatement(SimpleName:fvalidpath)(Block(IfStatement(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:closePath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:setWindingRule)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GeneralPath.WIND_EVEN_ODD))))(ExpressionStatement(Assignment(SimpleName:ffill)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:fstroke)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:sCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getColorSpace)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:0))(SimpleName:csres)(SimpleName:patres)))))(AssertStatement(InfixExpression(SimpleName:sCS)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:0))))(StringLiteral:<STR>)(SimpleName:csres)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:6))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:3))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:curveTo)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:1)))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:2)))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:3)))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:curx)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:4)))))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:cury)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:5))))))))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:100))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:6))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpat))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:d)(NumberLiteral:0))(ArrayAccess(SimpleName:d)(NumberLiteral:1))(ArrayAccess(SimpleName:d)(NumberLiteral:2))(ArrayAccess(SimpleName:d)(NumberLiteral:3))(ArrayAccess(SimpleName:d)(NumberLiteral:4))(ArrayAccess(SimpleName:d)(NumberLiteral:5)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpat))(SimpleName:isIdentity)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:concatenate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpat))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpat))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:AffineTransform.TYPE_TRANSLATION))(ExpressionStatement(Assignment(SimpleName:fnewfont)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:fCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getColorSpace)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:0))(SimpleName:csres)(SimpleName:patres)))))(AssertStatement(InfixExpression(SimpleName:fCS)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:0))))(StringLiteral:<STR>)(SimpleName:csres)))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Leaf))(VariableDeclarationFragment(SimpleName:l)(MethodInvocation(SimpleName:cmdDo)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))(SimpleName:xores)(SimpleName:resources)(SimpleName:ctm)(SimpleName:newfcolor)(SimpleName:clipp)(SimpleName:d)(SimpleName:ocrimgs)))))(IfStatement(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))(ExpressionStatement(PostfixExpression(SimpleName:leafcnt)(POSTFIX_EXPRESSION_OPERATOR:++))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lastleaf))(SimpleName:isLeaf))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:Mark))(CastExpression(SimpleType(SimpleName:Leaf))(SimpleName:lastleaf))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lastleaf))(SimpleName:size))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:oa)(CastExpression(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:oa)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:OBJECT_NULL))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:oa.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ExpressionStatement(Assignment(QualifiedName:gs.dasharray)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(SimpleName:getFloats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oa)(Assignment(QualifiedName:gs.dasharray)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(QualifiedName:oa.length)))))(QualifiedName:oa.length)))))(ExpressionStatement(Assignment(QualifiedName:gs.dashphase)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:1)))))(SimpleName:floatValue))))(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:clipp.bbox.width)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:intValue)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:clipp.bbox.width)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:intValue))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:linep))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:linep)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:lastleaf))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:linep))(SimpleName:remove)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FixedLeafAscii))(StringLiteral:<STR>)(NullLiteral)(SimpleName:linep)))(SimpleName:getIbbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX)))))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateY)))))(NumberLiteral:0)(NumberLiteral:0)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:textp))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:textp))(SimpleName:remove)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:markedseq))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Span))(VariableDeclarationFragment(SimpleName:seq)(CastExpression(SimpleType(SimpleName:Span))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:markedseq))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:markedseq))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:seq))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf)))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(AssertStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:setWindingRule)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GeneralPath.WIND_NON_ZERO))))(ExpressionStatement(Assignment(SimpleName:ffill)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:setWindingRule)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GeneralPath.WIND_EVEN_ODD))))(ExpressionStatement(Assignment(SimpleName:ffill)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:sCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpace))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ColorSpace.CS_GRAY)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:gray)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:floatValue))))(ExpressionStatement(Assignment(SimpleName:newcolor)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:gray)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f))(QualifiedName:Color.BLACK)(ConditionalExpression(InfixExpression(SimpleName:gray)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f))(QualifiedName:Color.WHITE)(ClassInstanceCreation(SimpleType(SimpleName:Color))(SimpleName:gray)(SimpleName:gray)(SimpleName:gray)(NumberLiteral:1f)))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:fCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpace))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ColorSpace.CS_GRAY)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:gray)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:floatValue))))(ExpressionStatement(Assignment(SimpleName:newfcolor)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:gray)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f))(QualifiedName:Color.BLACK)(ConditionalExpression(InfixExpression(SimpleName:gray)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f))(QualifiedName:Color.WHITE)(ClassInstanceCreation(SimpleType(SimpleName:Color))(SimpleName:gray)(SimpleName:gray)(SimpleName:gray)(NumberLiteral:1f))))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:gsdicts)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:gsdict)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gsdicts))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(SimpleName:cmdgs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:gsdict)(SimpleName:fontres)(SimpleName:ctm)(SimpleName:d)(SimpleName:gs))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gsdict))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:fnewfont)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(SimpleName:fvalidpath)(StringLiteral:<STR>))(IfStatement(SimpleName:fvalidpath)(Block(IfStatement(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:closePath))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(BooleanLiteral:false))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:gs.flatness)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:intValue))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:gs.linecap)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:intValue))))(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:gs.linejoin)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:intValue))))(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:sCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpaceCMYK))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(SimpleName:getFloats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:cscomp)(NumberLiteral:4))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:r)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:0)))(VariableDeclarationFragment(SimpleName:g)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:1)))(VariableDeclarationFragment(SimpleName:b)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:2)))(VariableDeclarationFragment(SimpleName:k)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:3))))(ExpressionStatement(Assignment(SimpleName:newcolor)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(QualifiedName:Color.WHITE)(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:1f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:1f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:1f)))(QualifiedName:Color.BLACK)(ClassInstanceCreation(SimpleType(SimpleName:Color))(SimpleName:sCS)(SimpleName:cscomp)(NumberLiteral:1f)))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:fCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpaceCMYK))(SimpleName:getInstance))))(ExpressionStatement(MethodInvocation(SimpleName:getFloats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:cscomp)(NumberLiteral:4))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:r)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:0)))(VariableDeclarationFragment(SimpleName:g)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:1)))(VariableDeclarationFragment(SimpleName:b)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:2)))(VariableDeclarationFragment(SimpleName:k)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:3))))(ExpressionStatement(Assignment(SimpleName:newfcolor)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(QualifiedName:Color.WHITE)(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:1f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:1f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:1f)))(QualifiedName:Color.BLACK)(ClassInstanceCreation(SimpleType(SimpleName:Color))(SimpleName:fCS)(SimpleName:cscomp)(NumberLiteral:1f)))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:2))))(AssertStatement(InfixExpression(SimpleName:pathline)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(InfixExpression(ArrayAccess(SimpleName:d)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(ArrayAccess(SimpleName:d)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:1))))(IfStatement(InfixExpression(InfixExpression(SimpleName:pathlen)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:peek)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:peek))))(INFIX_EXPRESSION_OPERATOR:<)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:>)(CharacterLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:pathline)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:Line2D.Double))(SimpleName:curx)(SimpleName:cury)(ArrayAccess(SimpleName:d)(NumberLiteral:0))(ArrayAccess(SimpleName:d)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:lineTo)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:curx)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:cury)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:1)))))))))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:1000)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:gs.miterlimit)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:intValue))))(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lastleaf))(SimpleName:isLeaf))(ExpressionStatement(ClassInstanceCreation(SimpleType(SimpleName:Mark))(CastExpression(SimpleType(SimpleName:Leaf))(SimpleName:lastleaf))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lastleaf))(SimpleName:size))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(InfixExpression(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:pathline)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))))(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:moveTo)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:curx)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:cury)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:1))))))))(ExpressionStatement(PostfixExpression(SimpleName:pathlen)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:fvalidpath)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:reset)))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:pathrect)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:pathline)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:fvalidpath)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gsstack))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:gs)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:GraphicsState))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gsstack))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gsstack))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))(ExpressionStatement(Assignment(SimpleName:fnewfont)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:newTr)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.Tr)))(ExpressionStatement(Assignment(SimpleName:Tc)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.Tc)))(ExpressionStatement(Assignment(SimpleName:Tw)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.Tw)))(ExpressionStatement(Assignment(SimpleName:Tz)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.Tz)))(ExpressionStatement(Assignment(SimpleName:TL)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.TL)))(ExpressionStatement(Assignment(SimpleName:Ts)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.Ts)))(ExpressionStatement(Assignment(SimpleName:fCS)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.fCS)))(ExpressionStatement(Assignment(SimpleName:sCS)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.sCS)))(ExpressionStatement(Assignment(SimpleName:newcolor)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.strokecolor)))(ExpressionStatement(Assignment(SimpleName:newfcolor)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.fillcolor)))(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:ctm)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.ctm)))(IfStatement(InfixExpression(InfixExpression(SimpleName:clipp)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:gs.clip))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clipp))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clipp))(SimpleName:remove))))(ExpressionStatement(Assignment(SimpleName:clipp)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.clip)))(ExpressionStatement(Assignment(SimpleName:fvalidpath)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:gs.Tr)(ASSIGNMENT_OPERATOR:=)(SimpleName:newTr)))(ExpressionStatement(Assignment(QualifiedName:gs.Tc)(ASSIGNMENT_OPERATOR:=)(SimpleName:Tc)))(ExpressionStatement(Assignment(QualifiedName:gs.Tw)(ASSIGNMENT_OPERATOR:=)(SimpleName:Tw)))(ExpressionStatement(Assignment(QualifiedName:gs.Tz)(ASSIGNMENT_OPERATOR:=)(SimpleName:Tz)))(ExpressionStatement(Assignment(QualifiedName:gs.TL)(ASSIGNMENT_OPERATOR:=)(SimpleName:TL)))(ExpressionStatement(Assignment(QualifiedName:gs.Ts)(ASSIGNMENT_OPERATOR:=)(SimpleName:Ts)))(ExpressionStatement(Assignment(QualifiedName:gs.fCS)(ASSIGNMENT_OPERATOR:=)(SimpleName:fCS)))(ExpressionStatement(Assignment(QualifiedName:gs.sCS)(ASSIGNMENT_OPERATOR:=)(SimpleName:sCS)))(ExpressionStatement(Assignment(QualifiedName:gs.strokecolor)(ASSIGNMENT_OPERATOR:=)(SimpleName:newcolor)))(ExpressionStatement(Assignment(QualifiedName:gs.fillcolor)(ASSIGNMENT_OPERATOR:=)(SimpleName:newfcolor)))(ExpressionStatement(Assignment(QualifiedName:gs.ctm)(ASSIGNMENT_OPERATOR:=)(SimpleName:ctm)))(ExpressionStatement(Assignment(QualifiedName:gs.clip)(ASSIGNMENT_OPERATOR:=)(SimpleName:clipp)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gsstack))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:GraphicsState))(SimpleName:gs)))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:sCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpace))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ColorSpace.CS_sRGB)))))(ExpressionStatement(MethodInvocation(SimpleName:getFloats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:cscomp)(NumberLiteral:3))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:r)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:0)))(VariableDeclarationFragment(SimpleName:g)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:1)))(VariableDeclarationFragment(SimpleName:b)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:newcolor)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(QualifiedName:Color.BLACK)(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f)))(QualifiedName:Color.WHITE)(ClassInstanceCreation(SimpleType(SimpleName:Color))(SimpleName:r)(SimpleName:g)(SimpleName:b)(NumberLiteral:1f)))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(InfixExpression(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:pathline)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))))(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:4))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:deltaTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:2)(SimpleName:d)(NumberLiteral:2)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x)(Assignment(SimpleName:curx)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0))))(VariableDeclarationFragment(SimpleName:y)(Assignment(SimpleName:cury)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:1))))(VariableDeclarationFragment(SimpleName:w)(ArrayAccess(SimpleName:d)(NumberLiteral:2)))(VariableDeclarationFragment(SimpleName:h)(ArrayAccess(SimpleName:d)(NumberLiteral:3))))(IfStatement(InfixExpression(SimpleName:w)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0.0))(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:+=)(SimpleName:w)))(ExpressionStatement(Assignment(SimpleName:w)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:w))))))(IfStatement(InfixExpression(SimpleName:w)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1.0))(ExpressionStatement(Assignment(SimpleName:w)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1.0))))(IfStatement(InfixExpression(SimpleName:h)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0.0))(Block(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:+=)(SimpleName:h)))(ExpressionStatement(Assignment(SimpleName:h)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:h))))))(IfStatement(InfixExpression(SimpleName:h)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1.0))(ExpressionStatement(Assignment(SimpleName:h)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1.0))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:r)(ClassInstanceCreation(SimpleType(SimpleName:Rectangle))(CastExpression(PrimitiveType:int)(SimpleName:x))(CastExpression(PrimitiveType:int)(ParenthesizedExpression(SimpleName:y)))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(SimpleName:w))))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:fvalidpath))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:peek)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:peek))))(INFIX_EXPRESSION_OPERATOR:<)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:>)(CharacterLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:peek)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>)))))(Block(ExpressionStatement(Assignment(SimpleName:pathrect)(ASSIGNMENT_OPERATOR:=)(SimpleName:r)))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:r)(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:4)))))(ExpressionStatement(Assignment(SimpleName:fvalidpath)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:fCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ColorSpace))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ColorSpace.CS_sRGB)))))(ExpressionStatement(MethodInvocation(SimpleName:getFloats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:cscomp)(NumberLiteral:3))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:r)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:0)))(VariableDeclarationFragment(SimpleName:g)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:1)))(VariableDeclarationFragment(SimpleName:b)(ArrayAccess(SimpleName:cscomp)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:newfcolor)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0f)))(QualifiedName:Color.BLACK)(ConditionalExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1f)))(QualifiedName:Color.WHITE)(ClassInstanceCreation(SimpleType(SimpleName:Color))(SimpleName:r)(SimpleName:g)(SimpleName:b)(NumberLiteral:1f))))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(QualifiedName:gs.renderingintent)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:String))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:fstroke)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>))))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:ops)(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(SimpleName:getClass))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CLASS_NAME)))(Block(AssertStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:sCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getColorSpace)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(SimpleName:csres)(SimpleName:patres)))))(ExpressionStatement(PostfixExpression(SimpleName:opsi)(POSTFIX_EXPRESSION_OPERATOR:--)))))(IfStatement(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:getFloats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:cscomp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:opsi)(NumberLiteral:4))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:float)(Dimension))(VariableDeclarationFragment(SimpleName:rgb)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sCS))(SimpleName:toRGB)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cscomp)))))(ExpressionStatement(Assignment(SimpleName:newcolor)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Color))(ArrayAccess(SimpleName:rgb)(NumberLiteral:0))(ArrayAccess(SimpleName:rgb)(NumberLiteral:1))(ArrayAccess(SimpleName:rgb)(NumberLiteral:2))(NumberLiteral:1f)))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(SimpleName:fvalidpath)(StringLiteral:<STR>))(IfStatement(SimpleName:fvalidpath)(Block(IfStatement(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:closePath))))(ExpressionStatement(Assignment(SimpleName:fstroke)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>))))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:ops)(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(SimpleName:getClass))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CLASS_NAME)))(Block(AssertStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8)))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:fCS)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getColorSpace)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(SimpleName:csres)(SimpleName:patres)))))(ExpressionStatement(PostfixExpression(SimpleName:opsi)(POSTFIX_EXPRESSION_OPERATOR:--)))))(IfStatement(InfixExpression(SimpleName:opsi)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:getFloats)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:cscomp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:opsi)(NumberLiteral:4))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:float)(Dimension))(VariableDeclarationFragment(SimpleName:rgb)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fCS))(SimpleName:toRGB)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cscomp)))))(ExpressionStatement(Assignment(SimpleName:newfcolor)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Color))(ArrayAccess(SimpleName:rgb)(NumberLiteral:0))(ArrayAccess(SimpleName:rgb)(NumberLiteral:1))(ArrayAccess(SimpleName:rgb)(NumberLiteral:2))(NumberLiteral:1f)))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:shdict)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:shres))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:ColorSpace))(VariableDeclarationFragment(SimpleName:cs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getColorSpace)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:shdict))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:csres)(SimpleName:patres)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:oa)(CastExpression(ArrayType(SimpleType(SimpleName:Object))(Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:shdict))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:bbox)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:oa)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PDFReader))(SimpleName:array2Rectangle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:oa)(SimpleName:ctm)(BooleanLiteral:false)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clipp))(SimpleName:getCrop))))))(VariableDeclarationStatement(SimpleType(SimpleName:FixedLeafShade))(VariableDeclarationFragment(SimpleName:l)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FixedLeafShade))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shdict)(SimpleName:cs)(SimpleName:bbox)(SimpleName:clipp)(SimpleName:pdfr)))))(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))(ExpressionStatement(PostfixExpression(SimpleName:leafcnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getBbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getIbbox)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:setValid)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:Tw)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:Tc)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:1))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ops)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:ops)(NumberLiteral:2))))))(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tlm))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0.0)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:TL)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Tlm))))(ExpressionStatement(Assignment(SimpleName:c2c3)(ASSIGNMENT_OPERATOR:=)(CharacterLiteral:<STR>)))))(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lastleaf))(SimpleName:isStruct))(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(SimpleName:linep))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:newsize)(NumberLiteral:0f)))(IfStatement(SimpleName:fnewfont)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcpt))(SimpleName:setLocation)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:gs.pointsize)(NumberLiteral:0.0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:deltaTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcpt)(SimpleName:transpt))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:zx)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transpt))(SimpleName:getX)))(VariableDeclarationFragment(SimpleName:zy)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transpt))(SimpleName:getY))))(ExpressionStatement(Assignment(SimpleName:newsize)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:zy)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.0))(SimpleName:zx)(ConditionalExpression(InfixExpression(SimpleName:zx)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.0))(SimpleName:zy)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sqrt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(SimpleName:zx)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:zx))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:zy)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:zy))))))))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:fontdict)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:gs.fontdict))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:newsize)(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:getSize2D)))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0.0001)))(Block(ExpressionStatement(Assignment(SimpleName:fnewfont)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))(IfStatement(SimpleName:fnewfont)(Block(IfStatement(InfixExpression(SimpleName:fontspan)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fontspan))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))(AssertStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:fshowshape))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fontspan))(SimpleName:isSet)))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fontspan))(SimpleName:getStart))(SimpleName:leaf))(StringLiteral:<STR>)(SimpleName:lastleaf)))(ExpressionStatement(PostfixExpression(SimpleName:spancnt)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(Assignment(SimpleName:fontdict)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.fontdict)))(ExpressionStatement(Assignment(SimpleName:pointsize)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.pointsize)))(ExpressionStatement(Assignment(SimpleName:tf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getFont)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fontdict)(SimpleName:pointsize)(SimpleName:newsize)(SimpleName:page)(SimpleName:Tm)(ThisExpression)))))(ExpressionStatement(Assignment(SimpleName:maxr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:getMaxCharBounds))))(ExpressionStatement(Assignment(SimpleName:fontspan)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SpanPDF))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Behavior))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(ParenthesizedExpression(ConditionalExpression(SimpleName:DEBUG)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:getFamily))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:getSize2D)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:getFamily))))(StringLiteral:<STR>)(NullLiteral)(SimpleName:scratchLayer))))))(ExpressionStatement(Assignment(QualifiedName:fontspan.font)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:getFont))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fontspan))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))(ExpressionStatement(Assignment(SimpleName:spacew)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:measureText)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleX)))))(ExpressionStatement(Assignment(SimpleName:concatthreshold)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:spacew)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleX)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:4.0))))(ExpressionStatement(Assignment(SimpleName:fnewfont)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:canRender)))(BreakStatement))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fType3)(InstanceofExpression(SimpleName:tf)(SimpleType(SimpleName:FontType3)))))(IfStatement(SimpleName:fType3)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:FontType3))(SimpleName:tf))))(SimpleName:setPage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:page)))))(IfStatement(InfixExpression(SimpleName:newTr)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:Tr))(Block(IfStatement(InfixExpression(SimpleName:Trspan)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Trspan))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))(ExpressionStatement(PostfixExpression(SimpleName:spancnt)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(Assignment(SimpleName:Tr)(ASSIGNMENT_OPERATOR:=)(SimpleName:newTr)))(IfStatement(InfixExpression(SimpleName:Tr)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:Trspan)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(PostfixExpression(SimpleName:vspancnt)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(Assignment(SimpleName:Trspan)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SpanPDF))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Behavior))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(NullLiteral)(SimpleName:scratchLayer))))))(ExpressionStatement(Assignment(QualifiedName:Trspan.Tr)(ASSIGNMENT_OPERATOR:=)(SimpleName:Tr)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Trspan))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:newbaseline)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateY))))(IfStatement(InfixExpression(InfixExpression(SimpleName:newbaseline)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:baseline))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:baseline)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:newbaseline))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0.1)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:linep))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:linep)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FixedIHBox))(StringLiteral:<STR>)(NullLiteral)(SimpleName:textp))))(ExpressionStatement(Assignment(SimpleName:fconcat)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(ExpressionStatement(Assignment(SimpleName:baseline)(ASSIGNMENT_OPERATOR:=)(SimpleName:newbaseline)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:oa)))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:oa)(ASSIGNMENT_OPERATOR:=)(SimpleName:Tja)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:oa)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(ExpressionStatement(Assignment(SimpleName:oa)(ASSIGNMENT_OPERATOR:=)(CastExpression(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayAccess(SimpleName:ops)(NumberLiteral:0))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:sTc)(InfixExpression(SimpleName:Tc)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleX))))(VariableDeclarationFragment(SimpleName:kern1)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:sTc)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0.0))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:floor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sTc)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sTc)))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fspace1)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:frot)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getShearX))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0.0))))(VariableDeclarationStatement(SimpleType(SimpleName:FontRenderContext))(VariableDeclarationFragment(SimpleName:frc)(ParenthesizedExpression(ConditionalExpression(SimpleName:frot)(ClassInstanceCreation(SimpleType(SimpleName:FontRenderContext))(SimpleName:Tm)(BooleanLiteral:true)(BooleanLiteral:true))(NullLiteral)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:imax)(QualifiedName:oa.length)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:imax))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:o)(ArrayAccess(SimpleName:oa)(SimpleName:i))))(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:Number)))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:kern)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(SimpleName:o))))(SimpleName:doubleValue))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:1000.0))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:pointsize))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:kern))(NumberLiteral:0.0)))))(Block(AssertStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:getClass))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:CLASS_STRING)))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:txt8)(CastExpression(SimpleType(SimpleName:StringBuffer))(SimpleName:o))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:txt)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:txt8)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:s)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:smax)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:txt))(SimpleName:length)))(VariableDeclarationFragment(SimpleName:e)))(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:smax))(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:=)(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:txt))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(SimpleName:s)))))(IfStatement(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(SimpleName:smax)))(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ALL_WS))(SimpleName:reset)(METHOD_INVOCATION_ARGUMENTS(SimpleName:txt))))(SimpleName:matches)))(Block(ExpressionStatement(Assignment(SimpleName:e)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:fspace1)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(IfStatement(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:e))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sub)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:txt))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)(SimpleName:e)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:kern)(InfixExpression(SimpleName:kern1)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sub))(SimpleName:length)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:fw)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:measureText)(METHOD_INVOCATION_ARGUMENTS(SimpleName:txt8)(SimpleName:s)(SimpleName:e)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:kern))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bw)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fw)))))(VariableDeclarationFragment(SimpleName:bh)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:maxr))(SimpleName:getHeight))))))(VariableDeclarationFragment(SimpleName:ascent)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:maxr))(SimpleName:getY))))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:dx)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lastX))))(IfStatement(InfixExpression(SimpleName:frot)(INFIX_EXPRESSION_OPERATOR:&&)(BooleanLiteral:false))(Block(VariableDeclarationStatement(SimpleType(SimpleName:GlyphVector))(VariableDeclarationFragment(SimpleName:gv)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:getFont)))(SimpleName:createGlyphVector)(METHOD_INVOCATION_ARGUMENTS(SimpleName:frc)(SimpleName:sub)))))(VariableDeclarationStatement(SimpleType(SimpleName:Shape))(VariableDeclarationFragment(SimpleName:txtshp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gv))(SimpleName:getOutline))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle2D))(VariableDeclarationFragment(SimpleName:r2d)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gv))(SimpleName:getVisualBounds))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gv))(SimpleName:getPixelBounds)(METHOD_INVOCATION_ARGUMENTS(SimpleName:frc)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX)))(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateY)))))))(VariableDeclarationStatement(SimpleType(SimpleName:FixedLeafShape))(VariableDeclarationFragment(SimpleName:lshp)(ClassInstanceCreation(SimpleType(SimpleName:FixedLeafShape))(StringLiteral:<STR>)(NullLiteral)(SimpleName:linep)(SimpleName:txtshp)(BooleanLiteral:true)(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(SimpleName:lshp)))(ExpressionStatement(PostfixExpression(SimpleName:leafcnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lshp))(SimpleName:getIbbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(SimpleName:r))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lshp))(SimpleName:getBbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(SimpleName:r)))))(IfStatement(SimpleName:fType3)(Block(VariableDeclarationStatement(SimpleType(SimpleName:FontType3))(VariableDeclarationFragment(SimpleName:tf3)(CastExpression(SimpleType(SimpleName:FontType3))(SimpleName:tf))))(VariableDeclarationStatement(SimpleType(SimpleName:FixedLeafType3))(VariableDeclarationFragment(SimpleName:l)(ClassInstanceCreation(SimpleType(SimpleName:FixedLeafType3))(SimpleName:sub)(NullLiteral)(SimpleName:linep)(SimpleName:tf3))))(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))(ExpressionStatement(PostfixExpression(SimpleName:leafcnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:w)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:minascent)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:maxdescent)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:jmax)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:txt))(SimpleName:length))))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:jmax))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:glyph)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf3))(SimpleName:getGlyph)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:txt))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:bbox)(QualifiedName:glyph.bbox)))(ExpressionStatement(Assignment(SimpleName:w)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:bbox.width)))(ExpressionStatement(Assignment(SimpleName:minascent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:minascent)(QualifiedName:bbox.y)))))(ExpressionStatement(Assignment(SimpleName:maxdescent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(SimpleName:maxdescent)(InfixExpression(QualifiedName:bbox.height)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:bbox.y))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getIbbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX)))))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateY))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:Ts)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleY))))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:minascent)))))(SimpleName:w)(InfixExpression(SimpleName:maxdescent)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:minascent)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getBbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getIbbox)))))(ExpressionStatement(Assignment(QualifiedName:l.baseline)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:minascent)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:fconcat)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dx)))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:concatthreshold)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:Ts)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.0)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FixedLeafAsciiKern))(VariableDeclarationFragment(SimpleName:l)(CastExpression(SimpleType(SimpleName:FixedLeafAsciiKern))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:linep))(SimpleName:getLastChild)))))(AssertStatement(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:lastleaf)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:appendText)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sub)(CastExpression(PrimitiveType:byte)(SimpleName:kern1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:setKernAt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getKernAt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dx)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:ibbox)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getIbbox))))(ExpressionStatement(Assignment(SimpleName:totalW)(ASSIGNMENT_OPERATOR:+=)(SimpleName:fw)))(ExpressionStatement(Assignment(QualifiedName:ibbox.width)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(SimpleName:totalW))))))(ExpressionStatement(Assignment(QualifiedName:ibbox.height)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ibbox.height)(SimpleName:bh)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:l.bbox))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ibbox.width)(QualifiedName:ibbox.height))))(ExpressionStatement(PostfixExpression(SimpleName:concatcnt)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FixedLeafAsciiKern))(VariableDeclarationFragment(SimpleName:l)(ClassInstanceCreation(SimpleType(SimpleName:FixedLeafAsciiKern))(SimpleName:sub)(NullLiteral)(SimpleName:linep)(CastExpression(PrimitiveType:byte)(SimpleName:kern1)))))(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))(ExpressionStatement(PostfixExpression(SimpleName:leafcnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getIbbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX)))))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateY))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:maxr))(SimpleName:getY))(InfixExpression(SimpleName:Ts)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleY)))))))(SimpleName:bw)(SimpleName:bh))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:l.bbox))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getIbbox)))))(ExpressionStatement(Assignment(QualifiedName:l.baseline)(ASSIGNMENT_OPERATOR:=)(SimpleName:ascent)))(ExpressionStatement(Assignment(SimpleName:totalW)(ASSIGNMENT_OPERATOR:=)(SimpleName:fw)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lastleaf))(SimpleName:setValid)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpat))(SimpleName:setToTranslation)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:fw)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:sTc)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sub))(SimpleName:length)))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:kern))))(NumberLiteral:0.0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:preConcatenate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpat))))(ExpressionStatement(Assignment(SimpleName:lastX)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getTranslateX))))(ExpressionStatement(Assignment(SimpleName:fconcat)(ASSIGNMENT_OPERATOR:=)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:frot))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:fType3))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sub))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sub))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:128)))))))(IfStatement(SimpleName:fspace1)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Tw)(NumberLiteral:0.0))))(ExpressionStatement(Assignment(SimpleName:fspace1)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:fconcat)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:smax))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:txt))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:spacecnt)(NumberLiteral:0)))(DoStatement(Block(ExpressionStatement(PostfixExpression(SimpleName:spacecnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(PostfixExpression(SimpleName:e)(POSTFIX_EXPRESSION_OPERATOR:++))))(InfixExpression(InfixExpression(SimpleName:e)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:smax))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:txt))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:spacecnt)(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(SimpleName:spacew)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:Tw)(SimpleName:Tc))))(NumberLiteral:0.0))))(ExpressionStatement(Assignment(SimpleName:fconcat)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))))))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tlm))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:d)(NumberLiteral:0))(ArrayAccess(SimpleName:d)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Tlm)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:TL)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:d)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tlm))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:d)(NumberLiteral:0))(ArrayAccess(SimpleName:d)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Tlm)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:m00)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleX)))(VariableDeclarationFragment(SimpleName:m01)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getShearX)))(VariableDeclarationFragment(SimpleName:m10)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getShearY)))(VariableDeclarationFragment(SimpleName:m11)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleY))))(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:6))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpat))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:d)(NumberLiteral:0))(ArrayAccess(SimpleName:d)(NumberLiteral:1))(ArrayAccess(SimpleName:d)(NumberLiteral:2))(ArrayAccess(SimpleName:d)(NumberLiteral:3))(ArrayAccess(SimpleName:d)(NumberLiteral:4))(ArrayAccess(SimpleName:d)(NumberLiteral:5)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:concatenate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpat))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tlm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Tm))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:m00)(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleX)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:m01)(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getShearX))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:m10)(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getShearY))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:m11)(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:getScaleY))))(ExpressionStatement(Assignment(SimpleName:fnewfont)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tlm))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0.0)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:TL)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:setTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Tlm)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:Tc)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:Tw)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:Tz)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:TL)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(AssertStatement(InfixExpression(SimpleName:fontres)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(SimpleName:page))(ExpressionStatement(Assignment(QualifiedName:gs.fontdict)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Map))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdfr))(SimpleName:getObject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fontres))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))))))(AssertStatement(InfixExpression(QualifiedName:gs.fontdict)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(InfixExpression(ArrayAccess(SimpleName:ops)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:fontres)))(ExpressionStatement(Assignment(QualifiedName:gs.pointsize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:1)))))(SimpleName:doubleValue))))(ExpressionStatement(Assignment(SimpleName:fnewfont)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:newTr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:intValue)))))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:1))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:d)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0.0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Tm))(SimpleName:deltaTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:Ts)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:d)(NumberLiteral:0)))))))))))))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:4))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:curveTo)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:float)(SimpleName:curx))(CastExpression(PrimitiveType:float)(SimpleName:cury))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:1)))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:curx)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:2)))))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:cury)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:3))))))))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:100)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(Block(IfStatement(SimpleName:fvalidpath)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:bounds)))(IfStatement(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:bounds)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Rectangle))(QualifiedName:pathrect.x)(QualifiedName:pathrect.y)(InfixExpression(QualifiedName:pathrect.width)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(InfixExpression(QualifiedName:pathrect.height)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(VariableDeclarationStatement(SimpleType(SimpleName:Shape))(VariableDeclarationFragment(SimpleName:oldshape)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clipp))(SimpleName:getClip))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:oldshape)(SimpleType(SimpleName:Rectangle)))))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pathrect))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:Rectangle))(SimpleName:oldshape))))))(ExpressionStatement(Assignment(SimpleName:clipp)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FixedIClip))(ConditionalExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(StringLiteral:<STR>)(StringLiteral:<STR>))(NullLiteral)(SimpleName:clipp)(ClassInstanceCreation(SimpleType(SimpleName:Rectangle))(NumberLiteral:0)(NumberLiteral:0)(QualifiedName:bounds.width)(QualifiedName:bounds.height))(SimpleName:bounds))))))(IfStatement(InfixExpression(SimpleName:pathline)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:bounds)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:GeneralPath))(VariableDeclarationFragment(SimpleName:wpath)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:peek))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:wpath)(ASSIGNMENT_OPERATOR:=)(SimpleName:path)))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GeneralPath))))))(Block(ExpressionStatement(Assignment(SimpleName:wpath)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:GeneralPath))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:clone)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wpath))(SimpleName:closePath)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wpath))(SimpleName:setWindingRule)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(QualifiedName:GeneralPath.WIND_EVEN_ODD)(QualifiedName:GeneralPath.WIND_NON_ZERO)))))(ExpressionStatement(Assignment(SimpleName:bounds)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wpath))(SimpleName:getBounds))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpat))(SimpleName:setToTranslation)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(QualifiedName:bounds.x))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(QualifiedName:bounds.y)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wpath))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpat))))(ExpressionStatement(Assignment(SimpleName:clipp)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FixedIClip))(ConditionalExpression(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(StringLiteral:<STR>)(StringLiteral:<STR>))(NullLiteral)(SimpleName:clipp)(SimpleName:wpath)(SimpleName:bounds)))))))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:d)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Number))(ArrayAccess(SimpleName:ops)(NumberLiteral:0)))))(SimpleName:doubleValue))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:d)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0.0)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:deltaTransform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:1))))(ExpressionStatement(Assignment(QualifiedName:gs.linewidth)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(InfixExpression(ArrayAccess(SimpleName:d)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.0))(ArrayAccess(SimpleName:d)(NumberLiteral:0))(ConditionalExpression(InfixExpression(ArrayAccess(SimpleName:d)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.0))(ArrayAccess(SimpleName:d)(NumberLiteral:1))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sqrt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(ArrayAccess(SimpleName:d)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ArrayAccess(SimpleName:d)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:d)(NumberLiteral:1)))))))))))))(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(SimpleName:c2c3)(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDoubles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ops)(SimpleName:d)(NumberLiteral:4))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctm))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)(NumberLiteral:0)(SimpleName:d)(NumberLiteral:0)(NumberLiteral:2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:curveTo)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:0)))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:1)))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:2)))(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:d)(NumberLiteral:3)))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:curx)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:2)))))(CastExpression(PrimitiveType:float)(ParenthesizedExpression(Assignment(SimpleName:cury)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:d)(NumberLiteral:3))))))))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:100)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(WhileStatement(InfixExpression(InfixExpression(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>)))(Block))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PDFReader))(SimpleName:eatSpace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))(BreakStatement)(SwitchCase)(AssertStatement(BooleanLiteral:false)(InfixExpression(CastExpression(PrimitiveType:char)(SimpleName:c))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:c)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:char)(SimpleName:c))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:opsi)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:fstroke)(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:ffill))(Block(IfStatement(InfixExpression(SimpleName:fnewline)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(InfixExpression(ParenthesizedExpression(Assignment(QualifiedName:gs.linewidth)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(InfixExpression(QualifiedName:gs.linewidth)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1f))(NumberLiteral:1f)(QualifiedName:gs.linewidth)))))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:linewidth))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:gs.linecap)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:linecap)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:gs.linejoin)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:linejoin)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:gs.miterlimit)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:miterlimit)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:gs.dashphase)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:dashphase)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:gs.dasharray)(SimpleName:dasharray)))))))(Block(ExpressionStatement(Assignment(SimpleName:fnewline)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:strokespan)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strokespan))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))(ExpressionStatement(PostfixExpression(SimpleName:spancnt)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(Assignment(SimpleName:linewidth)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.linewidth)))(ExpressionStatement(Assignment(SimpleName:linecap)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.linecap)))(ExpressionStatement(Assignment(SimpleName:linejoin)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.linejoin)))(ExpressionStatement(Assignment(SimpleName:miterlimit)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.miterlimit)))(ExpressionStatement(Assignment(SimpleName:dasharray)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.dasharray)))(ExpressionStatement(Assignment(SimpleName:dashphase)(ASSIGNMENT_OPERATOR:=)(QualifiedName:gs.dashphase)))(IfStatement(InfixExpression(SimpleName:dasharray)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:dai)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:imax)(QualifiedName:dasharray.length)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:imax))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(IfStatement(InfixExpression(ArrayAccess(SimpleName:dasharray)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0f))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dasharray)(PostfixExpression(SimpleName:dai)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:dasharray)(SimpleName:i))))))(IfStatement(InfixExpression(SimpleName:dai)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:dasharray.length))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:float)(Dimension))(VariableDeclarationFragment(SimpleName:newda)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(SimpleName:dai))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dasharray)(NumberLiteral:0)(SimpleName:newda)(NumberLiteral:0)(SimpleName:dai))))(ExpressionStatement(Assignment(SimpleName:dasharray)(ASSIGNMENT_OPERATOR:=)(SimpleName:newda)))))))(VariableDeclarationStatement(SimpleType(SimpleName:BasicStroke))(VariableDeclarationFragment(SimpleName:bs)(ClassInstanceCreation(SimpleType(SimpleName:BasicStroke))(SimpleName:linewidth)(SimpleName:linecap)(SimpleName:linejoin)(SimpleName:miterlimit)(SimpleName:dasharray)(SimpleName:dashphase))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Context.DEFAULT_STROKE))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bs)))(Block(ExpressionStatement(Assignment(SimpleName:strokespan)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(PostfixExpression(SimpleName:vspancnt)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(Assignment(SimpleName:strokespan)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:StrokeSpan))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Behavior))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:linejoin))(StringLiteral:<STR>)(NullLiteral)(SimpleName:scratchLayer))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strokespan))(SimpleName:setStroke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bs))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strokespan))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:fshowshape))(Block(ExpressionStatement(Assignment(SimpleName:pathrect)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:pathline)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:reset))))(IfStatement(SimpleName:fvalidpath)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Shape))(VariableDeclarationFragment(SimpleName:shape)))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:bounds)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)))(IfStatement(InfixExpression(SimpleName:pathrect)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(AssertStatement(InfixExpression(SimpleName:pathlen)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(SimpleName:pathlen))(ExpressionStatement(Assignment(SimpleName:bounds)(ASSIGNMENT_OPERATOR:=)(SimpleName:pathrect)))(ExpressionStatement(Assignment(SimpleName:shape)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Rectangle))(NumberLiteral:0)(NumberLiteral:0)(QualifiedName:pathrect.width)(QualifiedName:pathrect.height))))(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:pathrect)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(AssertStatement(InfixExpression(SimpleName:pathline)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(SimpleName:pathline)))(IfStatement(InfixExpression(SimpleName:pathline)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pathline))(SimpleName:getX1)))(VariableDeclarationFragment(SimpleName:y1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pathline))(SimpleName:getY1)))(VariableDeclarationFragment(SimpleName:x2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pathline))(SimpleName:getX2)))(VariableDeclarationFragment(SimpleName:y2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pathline))(SimpleName:getY2)))(VariableDeclarationFragment(SimpleName:xmin))(VariableDeclarationFragment(SimpleName:ymin))(VariableDeclarationFragment(SimpleName:w2d))(VariableDeclarationFragment(SimpleName:h2d)))(IfStatement(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:x2))(Block(ExpressionStatement(Assignment(SimpleName:xmin)(ASSIGNMENT_OPERATOR:=)(SimpleName:x1)))(ExpressionStatement(Assignment(SimpleName:w2d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x1)))))(Block(ExpressionStatement(Assignment(SimpleName:xmin)(ASSIGNMENT_OPERATOR:=)(SimpleName:x2)))(ExpressionStatement(Assignment(SimpleName:w2d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x2))))))(IfStatement(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:y2))(Block(ExpressionStatement(Assignment(SimpleName:ymin)(ASSIGNMENT_OPERATOR:=)(SimpleName:y1)))(ExpressionStatement(Assignment(SimpleName:h2d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:y2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y1)))))(Block(ExpressionStatement(Assignment(SimpleName:ymin)(ASSIGNMENT_OPERATOR:=)(SimpleName:y2)))(ExpressionStatement(Assignment(SimpleName:h2d)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y2))))))(ExpressionStatement(Assignment(SimpleName:bounds)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Rectangle))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmin))))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ymin))))(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:w2d)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.0))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(SimpleName:w2d))))(NumberLiteral:1)))(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:h2d)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.0))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h2d))))(NumberLiteral:1))))))(ExpressionStatement(Assignment(SimpleName:shape)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:Line2D.Double))(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:xmin))(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:ymin))(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:xmin))(InfixExpression(SimpleName:y2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:ymin)))))(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(SimpleName:DEBUG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(SimpleName:pathcnt)))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:pathline)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:reset))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle2D))(VariableDeclarationFragment(SimpleName:r2d)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:getBounds2D))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:w2d)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r2d))(SimpleName:getWidth)))(VariableDeclarationFragment(SimpleName:h2d)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r2d))(SimpleName:getHeight))))(ExpressionStatement(Assignment(SimpleName:bounds)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Rectangle))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r2d))(SimpleName:getX)))))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:round)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r2d))(SimpleName:getY)))))(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:w2d)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.0))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(SimpleName:w2d))))(NumberLiteral:1)))(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:h2d)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.0))(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h2d))))(NumberLiteral:1))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpat))(SimpleName:setToTranslation)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r2d))(SimpleName:getX)))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r2d))(SimpleName:getY))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpat))))(ExpressionStatement(Assignment(SimpleName:shape)(ASSIGNMENT_OPERATOR:=)(SimpleName:path)))(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(ConditionalExpression(SimpleName:DEBUG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:pathcnt))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GeneralPath))))))))(IfStatement(InfixExpression(SimpleName:shape)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FixedLeafShape))(VariableDeclarationFragment(SimpleName:l)(ClassInstanceCreation(SimpleType(SimpleName:FixedLeafShape))(SimpleName:name)(NullLiteral)(SimpleName:clipp)(SimpleName:shape)(SimpleName:fstroke)(SimpleName:ffill))))(ExpressionStatement(Assignment(SimpleName:lastleaf)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))(ExpressionStatement(PostfixExpression(SimpleName:leafcnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getIbbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bounds))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:getBbox)))(SimpleName:setBounds)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bounds))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:setValid)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:pathlens)(SimpleName:pathcnt))(ASSIGNMENT_OPERATOR:=)(SimpleName:pathlen)))(ExpressionStatement(Assignment(SimpleName:pathlen)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(IfStatement(InfixExpression(InfixExpression(SimpleName:pathcnt)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:pathlens.length))(ExpressionStatement(PostfixExpression(SimpleName:pathcnt)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(Block(IfStatement(InstanceofExpression(SimpleName:lastleaf)(SimpleType(SimpleName:FixedLeafShape)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FixedLeafShape))(VariableDeclarationFragment(SimpleName:l)(CastExpression(SimpleType(SimpleName:FixedLeafShape))(SimpleName:lastleaf))))(IfStatement(SimpleName:fstroke)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:setStroke)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:setFill)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))))))(ExpressionStatement(Assignment(SimpleName:fvalidpath)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:fstroke)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:ffill)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:color)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:newcolor))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:color))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newcolor)))))(Block(IfStatement(InfixExpression(SimpleName:sspan)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sspan))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf)))(ExpressionStatement(PostfixExpression(SimpleName:spancnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sspan))(SimpleName:destroy))))))(ExpressionStatement(Assignment(SimpleName:color)(ASSIGNMENT_OPERATOR:=)(SimpleName:newcolor)))(AssertStatement(InfixExpression(SimpleName:color)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(SimpleName:color))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Color.BLACK))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:color)))(Block(ExpressionStatement(Assignment(SimpleName:sspan)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(PostfixExpression(SimpleName:vspancnt)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(Assignment(SimpleName:sspan)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SpanPDF))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Behavior))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(ParenthesizedExpression(ConditionalExpression(SimpleName:DEBUG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:color))(SimpleName:getRGB)))))(StringLiteral:<STR>)))(StringLiteral:<STR>)(NullLiteral)(SimpleName:scratchLayer))))))(ExpressionStatement(Assignment(QualifiedName:sspan.stroke)(ASSIGNMENT_OPERATOR:=)(SimpleName:color)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sspan))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:fcolor)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:newfcolor))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcolor))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newfcolor)))))(Block(IfStatement(InfixExpression(SimpleName:fillspan)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fillspan))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf)))(ExpressionStatement(PostfixExpression(SimpleName:spancnt)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fillspan))(SimpleName:destroy))))))(ExpressionStatement(Assignment(SimpleName:fcolor)(ASSIGNMENT_OPERATOR:=)(SimpleName:newfcolor)))(AssertStatement(InfixExpression(SimpleName:fcolor)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(SimpleName:fcolor))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Color.BLACK))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fcolor)))(Block(ExpressionStatement(Assignment(SimpleName:fillspan)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(PostfixExpression(SimpleName:vspancnt)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(Assignment(SimpleName:fillspan)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SpanPDF))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Behavior))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(ParenthesizedExpression(ConditionalExpression(SimpleName:DEBUG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcolor))(SimpleName:getRGB)))))(StringLiteral:<STR>)))(StringLiteral:<STR>)(NullLiteral)(SimpleName:scratchLayer))))))(ExpressionStatement(Assignment(QualifiedName:fillspan.fill)(ASSIGNMENT_OPERATOR:=)(SimpleName:fcolor)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fillspan))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastleaf))))))))))))(ExpressionStatement(Assignment(SimpleName:spancnt)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Span))(SimpleName:closeAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clipp)))))(IfStatement(InfixExpression(QualifiedName:Multivalent.MONITOR)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:ocrimgs)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:cmdcnt)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:leafcnt)(StringLiteral:<STR>)(SimpleName:spancnt)(StringLiteral:<STR>)(SimpleName:vspancnt)(StringLiteral:<STR>)(SimpleName:concatcnt)(StringLiteral:<STR>)(SimpleName:pathcnt)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start)))))))))(ReturnStatement(SimpleName:cmdcnt))))))