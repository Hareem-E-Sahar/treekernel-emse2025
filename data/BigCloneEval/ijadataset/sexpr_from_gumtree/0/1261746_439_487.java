(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:transfer)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:srcPath))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:destPath))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:srcFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:srcPath))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:destPath))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:isFile))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:fileSize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:length))))(IfStatement(InfixExpression(InfixExpression(QualifiedName:sourceDescr.mySrcAndDest.minfilesize)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:fileSize)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:sourceDescr.mySrcAndDest.minfilesize)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(IfStatement(InfixExpression(InfixExpression(QualifiedName:sourceDescr.mySrcAndDest.maxfilesize)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:fileSize)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:sourceDescr.mySrcAndDest.maxfilesize)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:spaceLeft)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destFile))(SimpleName:getUsableSpace))))(IfStatement(InfixExpression(InfixExpression(QualifiedName:destDescr.mySrcAndDest.minSpaceLeft)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:spaceLeft)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:fileSize))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:destDescr.mySrcAndDest.minSpaceLeft)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:lastModified)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:lastModified))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:now)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Calendar))(SimpleName:getInstance)))(SimpleName:getTimeInMillis))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:timeFromNow)(InfixExpression(SimpleName:now)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lastModified))))(IfStatement(InfixExpression(InfixExpression(QualifiedName:destDescr.mySrcAndDest.olderThanNDays)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:timeFromNow)(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(NumberLiteral:1000)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:60)(NumberLiteral:60)(NumberLiteral:24))))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:destDescr.mySrcAndDest.olderThanNDays)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(IfStatement(InfixExpression(InfixExpression(QualifiedName:destDescr.mySrcAndDest.youngerThanNDays)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:timeFromNow)(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(NumberLiteral:1000)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:60)(NumberLiteral:60)(NumberLiteral:24))))(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:destDescr.mySrcAndDest.youngerThanNDays)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcPath))(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:sourceDescr.mySrcAndDest.includes))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcPath))(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:sourceDescr.mySrcAndDest.excludes)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:destPath)))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:&)(QualifiedName:sourceDescr.mySrcAndDest.includeSubdirs))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:destPath)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destDir))(SimpleName:mkdirs)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:filename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcFile))(SimpleName:list))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:filename.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:transfer)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:srcPath)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(ArrayAccess(SimpleName:filename)(SimpleName:i)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destDir))(SimpleName:getPath)))))))))))))))