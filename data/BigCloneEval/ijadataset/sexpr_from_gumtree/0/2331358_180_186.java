(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:toString)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:access)))(IfStatement(MethodInvocation(SimpleName:isReadable))(Block(IfStatement(MethodInvocation(SimpleName:isWritable))(ExpressionStatement(Assignment(SimpleName:access)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:access)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(SimpleName:isWritable))(ExpressionStatement(Assignment(SimpleName:access)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:access)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(ReturnStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getClass)))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(SimpleName:getDescription))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(StringLiteral:<STR>)(MethodInvocation(SimpleName:getType))(StringLiteral:<STR>)(SimpleName:access)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(MethodInvocation(SimpleName:isIs))(StringLiteral:<STR>)(StringLiteral:<STR>)))(StringLiteral:<STR>)(MethodInvocation(SimpleName:getDescriptor))(StringLiteral:<STR>)))))))