(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:md5)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:digest)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:digester)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:8192))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:byteCount)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:byteCount)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digester))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(NumberLiteral:0)(SimpleName:byteCount))))))(ExpressionStatement(Assignment(SimpleName:digest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digester))(SimpleName:digest)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:cause))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>))(SimpleName:cause))))))(ReturnStatement(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:digest)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(NullLiteral)(MethodInvocation(SimpleName:byteArrayToHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digest)))))))))