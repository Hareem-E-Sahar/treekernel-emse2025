(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:write0)(SingleVariableDeclaration(SimpleType(SimpleName:Buffer))(SimpleName:pkt))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:blockNum))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:stripeNum))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:DuplicatePacketException))(SimpleType(SimpleName:BlockAlreadyDecodedException))(SimpleType(SimpleName:FileAlreadyDecodedException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:getMode)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileAlreadyDecodedException))(StringLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:params))(SimpleName:isPaddingPacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:blockNum)(SimpleName:stripeNum)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:blockNum)(StringLiteral:<STR>)(SimpleName:stripeNum)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DuplicatePacketException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:blockNum)(StringLiteral:<STR>)(SimpleName:stripeNum))(SimpleName:blockNum)(SimpleName:stripeNum)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pp))(SimpleName:isBlockDecoded)(METHOD_INVOCATION_ARGUMENTS(SimpleName:blockNum)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BlockAlreadyDecodedException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:blockNum)(StringLiteral:<STR>)(SimpleName:stripeNum))(SimpleName:blockNum)(SimpleName:stripeNum)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pp))(SimpleName:getPacketIndex)(METHOD_INVOCATION_ARGUMENTS(SimpleName:blockNum)(SimpleName:stripeNum)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pp))(SimpleName:getPacketIndex)(METHOD_INVOCATION_ARGUMENTS(SimpleName:blockNum)(SimpleName:stripeNum)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DuplicatePacketException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:blockNum)(StringLiteral:<STR>)(SimpleName:stripeNum)(StringLiteral:<STR>)(SimpleName:i))(SimpleName:blockNum)(SimpleName:stripeNum)(SimpleName:i)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:packetIndex)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:packetCount)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(SynchronizedStatement(SimpleName:pp)(Block(ExpressionStatement(Assignment(SimpleName:packetIndex)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pp))(SimpleName:addPacketEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:blockNum)(SimpleName:stripeNum)))))(ExpressionStatement(Assignment(SimpleName:packetCount)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pp))(SimpleName:getPacketCount)(METHOD_INVOCATION_ARGUMENTS(SimpleName:blockNum)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:raf))(SimpleName:seekAndWrite)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:packetIndex)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:packetSize))(QualifiedName:pkt.b)(QualifiedName:pkt.off)(QualifiedName:pkt.len))))(ExpressionStatement(MethodInvocation(SimpleName:fire)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:PacketWrittenEvent))(ThisExpression)(SimpleName:blockNum)(SimpleName:stripeNum)(SimpleName:packetCount)))))(ReturnStatement(SimpleName:packetCount))))))