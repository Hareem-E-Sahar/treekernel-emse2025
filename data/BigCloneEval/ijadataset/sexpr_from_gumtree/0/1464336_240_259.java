(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:Properties))(SimpleName:loadProperties)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:result)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(SimpleName:result)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:input)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:input)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(IfStatement(QualifiedName:InternalPlatform.DEBUG_PREFERENCE_GENERAL)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Policy))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))))(Block(IfStatement(InfixExpression(SimpleName:input)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))))(ReturnStatement(SimpleName:result))))))