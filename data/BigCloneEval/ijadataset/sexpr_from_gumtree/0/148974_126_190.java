(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:performUpdateCheck)(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)))(VariableDeclarationStatement(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:props)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:versionURL))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:connection)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Environment))(SimpleName:getPhexVendor)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inStream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getInputStream))))(ExpressionStatement(Assignment(SimpleName:props)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inStream)))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.net.MalformedURLException))(SimpleName:exp))(Block(ExpressionStatement(Assignment(SimpleName:updateCheckError)(ASSIGNMENT_OPERATOR:=)(SimpleName:exp)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:logError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exp))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnknownHostException))(SimpleName:exp))(Block(ExpressionStatement(Assignment(SimpleName:updateCheckError)(ASSIGNMENT_OPERATOR:=)(SimpleName:exp)))(ReturnStatement)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SocketException))(SimpleName:exp))(Block(ExpressionStatement(Assignment(SimpleName:updateCheckError)(ASSIGNMENT_OPERATOR:=)(SimpleName:exp)))(ReturnStatement)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exp))(Block(ExpressionStatement(Assignment(SimpleName:updateCheckError)(ASSIGNMENT_OPERATOR:=)(SimpleName:exp)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:logWarning)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exp))))(ReturnStatement))))(ExpressionStatement(Assignment(QualifiedName:ServiceManager.sCfg.lastUpdateCheckTime)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(QualifiedName:ServiceManager.sCfg.showUpdateNotification))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:ServiceManager.sCfg))(SimpleName:save)))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:releaseVersion)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:RELEASE_VERSION_KEY)(StringLiteral:<STR>)))))(IfStatement(QualifiedName:ServiceManager.sCfg.showBetaUpdateNotification)(Block(ExpressionStatement(Assignment(SimpleName:betaVersion)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:props))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:BETA_VERSION_KEY)(StringLiteral:<STR>))))))(Block(ExpressionStatement(Assignment(SimpleName:betaVersion)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:releaseCompare)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VersionUtils))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:releaseVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VersionUtils))(SimpleName:getProgramVersion))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:betaCompare)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VersionUtils))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:betaVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VersionUtils))(SimpleName:getProgramVersion))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:releaseCompare)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:betaCompare)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:ServiceManager.sCfg))(SimpleName:save)))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:releaseCompare)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VersionUtils))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:releaseVersion)(QualifiedName:ServiceManager.sCfg.lastUpdateCheckVersion)))))(ExpressionStatement(Assignment(SimpleName:betaCompare)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VersionUtils))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:betaVersion)(QualifiedName:ServiceManager.sCfg.lastBetaUpdateCheckVersion)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:verDiff)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VersionUtils))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:betaVersion)(SimpleName:releaseVersion)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:triggerUpdateNotification)(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:releaseCompare)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(QualifiedName:ServiceManager.sCfg.lastUpdateCheckVersion)(ASSIGNMENT_OPERATOR:=)(SimpleName:releaseVersion)))(ExpressionStatement(Assignment(SimpleName:triggerUpdateNotification)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:betaCompare)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(QualifiedName:ServiceManager.sCfg.lastBetaUpdateCheckVersion)(ASSIGNMENT_OPERATOR:=)(SimpleName:betaVersion)))(ExpressionStatement(Assignment(SimpleName:triggerUpdateNotification)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:verDiff)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:releaseVersion)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(Block(ExpressionStatement(Assignment(SimpleName:betaVersion)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:ServiceManager.sCfg))(SimpleName:save)))(IfStatement(SimpleName:triggerUpdateNotification)(Block(ExpressionStatement(MethodInvocation(SimpleName:fireUpdateNotification)))))))))