(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Instances))(SimpleName:transformData)(SingleVariableDeclaration(SimpleType(SimpleName:MultiLabelInstances))(SimpleName:trainingData))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(Assignment(SimpleName:classifierInstances)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:prepareClassifierInstances)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trainingData)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifierInstances))(SimpleName:insertAttributeAt)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Attribute))(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifierInstances))(SimpleName:numAttributes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifierInstances))(SimpleName:setClassIndex)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifierInstances))(SimpleName:numAttributes))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:kFoldsCV))(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MultiLabelLearner))(VariableDeclarationFragment(SimpleName:tempLearner)))(VariableDeclarationStatement(SimpleType(SimpleName:MultiLabelInstances))(VariableDeclarationFragment(SimpleName:mlTest)))(IfStatement(InfixExpression(SimpleName:kFoldsCV)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:tempLearner)(ASSIGNMENT_OPERATOR:=)(SimpleName:baseLearner)))(ExpressionStatement(Assignment(SimpleName:mlTest)(ASSIGNMENT_OPERATOR:=)(SimpleName:trainingData))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Instances))(VariableDeclarationFragment(SimpleName:train)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trainingData))(SimpleName:getDataSet)))(SimpleName:trainCV)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kFoldsCV)(SimpleName:k)))))(VariableDeclarationStatement(SimpleType(SimpleName:Instances))(VariableDeclarationFragment(SimpleName:test)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trainingData))(SimpleName:getDataSet)))(SimpleName:testCV)(METHOD_INVOCATION_ARGUMENTS(SimpleName:kFoldsCV)(SimpleName:k)))))(VariableDeclarationStatement(SimpleType(SimpleName:MultiLabelInstances))(VariableDeclarationFragment(SimpleName:mlTrain)(ClassInstanceCreation(SimpleType(SimpleName:MultiLabelInstances))(SimpleName:train)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trainingData))(SimpleName:getLabelsMetaData)))))(ExpressionStatement(Assignment(SimpleName:mlTest)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MultiLabelInstances))(SimpleName:test)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trainingData))(SimpleName:getLabelsMetaData)))))(ExpressionStatement(Assignment(SimpleName:tempLearner)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:foldLearner))(SimpleName:makeCopy))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempLearner))(SimpleName:build)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mlTrain))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:instanceIndex)(NumberLiteral:0)))(InfixExpression(SimpleName:instanceIndex)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlTest))(SimpleName:getDataSet)))(SimpleName:numInstances)))(PostfixExpression(SimpleName:instanceIndex)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Instance))(VariableDeclarationFragment(SimpleName:instance)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlTest))(SimpleName:getDataSet)))(SimpleName:instance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:instanceIndex)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:newValues)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifierInstances))(SimpleName:numAttributes)))))))(ExpressionStatement(MethodInvocation(SimpleName:valuesX)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempLearner)(SimpleName:instance)(SimpleName:newValues)(SimpleName:metaDatasetChoice))))(VariableDeclarationStatement(ArrayType(PrimitiveType:boolean)(Dimension))(VariableDeclarationFragment(SimpleName:trueLabels)(ArrayCreation(ArrayType(PrimitiveType:boolean)(Dimension(SimpleName:numLabels))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numLabels))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:labelIndice)(ArrayAccess(SimpleName:labelIndices)(SimpleName:i))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:classValue)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlTest))(SimpleName:getDataSet)))(SimpleName:attribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:labelIndice))))(SimpleName:value)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlTest))(SimpleName:getDataSet)))(SimpleName:instance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:instanceIndex))))(SimpleName:value)(METHOD_INVOCATION_ARGUMENTS(SimpleName:labelIndice))))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:trueLabels)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classValue))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:MultiLabelOutput))(VariableDeclarationFragment(SimpleName:mlo)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseLearner))(SimpleName:makePrediction)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlTest))(SimpleName:getDataSet)))(SimpleName:instance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:instanceIndex)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:arrayOfScores)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlo))(SimpleName:getConfidences))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:Double)))(VariableDeclarationFragment(SimpleName:list)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numLabels))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:arrayOfScores)(SimpleName:i)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:list))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:tempThresshold)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:threshold)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:prev)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:t)(SimpleName:numLabels))(VariableDeclarationFragment(SimpleName:tempT)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Double))(SimpleName:x))(SimpleName:list)(Block(ExpressionStatement(Assignment(SimpleName:tempThresshold)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:prev)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numLabels))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:trueLabels)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:true)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:arrayOfScores)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:tempThresshold))))(Block(ExpressionStatement(PostfixExpression(SimpleName:tempT)(POSTFIX_EXPRESSION_OPERATOR:++))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:trueLabels)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:arrayOfScores)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:tempThresshold))))(Block(ExpressionStatement(PostfixExpression(SimpleName:tempT)(POSTFIX_EXPRESSION_OPERATOR:++))))))))(IfStatement(InfixExpression(SimpleName:tempT)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:t))(Block(ExpressionStatement(Assignment(SimpleName:t)(ASSIGNMENT_OPERATOR:=)(SimpleName:tempT)))(ExpressionStatement(Assignment(SimpleName:threshold)(ASSIGNMENT_OPERATOR:=)(SimpleName:tempThresshold)))))(ExpressionStatement(Assignment(SimpleName:tempT)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:prev)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:newValues)(InfixExpression(QualifiedName:newValues.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(SimpleName:threshold)))(VariableDeclarationStatement(SimpleType(SimpleName:Instance))(VariableDeclarationFragment(SimpleName:newInstance)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DataUtils))(SimpleName:createInstance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlTest))(SimpleName:getDataSet)))(SimpleName:instance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:instanceIndex)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mlTest))(SimpleName:getDataSet)))(SimpleName:instance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:instanceIndex))))(SimpleName:weight))(SimpleName:newValues)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifierInstances))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newInstance))))))))(ReturnStatement(SimpleName:classifierInstances))))))