(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:init)(SingleVariableDeclaration(SimpleType(SimpleName:InputSource))(SimpleName:in))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:transformedDoc)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:caw)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CharArrayWriter)))))(VariableDeclarationStatement(SimpleType(SimpleName:Reader))(VariableDeclarationFragment(SimpleName:reader)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:getCharacterStream))))(ExpressionStatement(Assignment(SimpleName:caw)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CharArrayWriter)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:total)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:char)(Dimension))(VariableDeclarationFragment(SimpleName:buff)(ArrayCreation(ArrayType(PrimitiveType:char)(Dimension(NumberLiteral:1024))))))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buff)(NumberLiteral:0)(QualifiedName:buff.length)))))(ExpressionStatement(Assignment(SimpleName:total)(ASSIGNMENT_OPERATOR:+=)(SimpleName:read)))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:caw))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buff)(NumberLiteral:0)(SimpleName:read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:caw))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:iox))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iox))(SimpleName:getMessage))(SimpleName:iox)))))))))))