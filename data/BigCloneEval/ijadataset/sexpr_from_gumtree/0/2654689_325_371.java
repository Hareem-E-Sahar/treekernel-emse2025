(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:LocalFileState))(SimpleName:storeArchived)(SingleVariableDeclaration(SimpleType(SimpleName:LocalFileState))(SimpleName:in))(SimpleType(SimpleName:Exception))(Block(IfStatement(SimpleName:trialRun)(ReturnStatement(SimpleName:in)))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(NullLiteral)))(SynchronizedStatement(SimpleName:lock)(Block(SwitchStatement(QualifiedName:in.state)(SwitchCase(SimpleName:RUNNING))(SwitchCase(SimpleName:READY))(SwitchCase(SimpleName:SUCCESS))(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.SUCCESS_ARCHIVED)))(BreakStatement)(SwitchCase(SimpleName:IGNORED))(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.IGNORED_ARCHIVED)))(BreakStatement)(SwitchCase(SimpleName:SUPERCEDED))(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.SUPERCEDED_ARCHIVED)))(BreakStatement)(SwitchCase(SimpleName:DUPLICATE))(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.DUPLICATE_ARCHIVED)))(BreakStatement)(SwitchCase(SimpleName:FAILURE))(ExpressionStatement(Assignment(QualifiedName:in.state)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileStates.FAILURE_ARCHIVED)))(BreakStatement)(SwitchCase)(ReturnStatement(SimpleName:in)))(ExpressionStatement(Assignment(QualifiedName:in.to_archive)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(QualifiedName:in.to_errors_archive)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:Db))(VariableDeclarationFragment(SimpleName:db)(MethodInvocation(SimpleName:getDb))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:begin)))(IfStatement(InfixExpression(QualifiedName:in.local_file_state_id)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:in.filename)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update_state))(SimpleName:setInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:in.state))(SimpleName:getId)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps_update_state))(SimpleName:setInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)(QualifiedName:in.local_file_state_id))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:upd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:executeUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ps_update_state)))))(IfStatement(InfixExpression(SimpleName:upd)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:in.filename)))))))(ExpressionStatement(MethodInvocation(SimpleName:updateMetadataInTx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))(ReturnStatement(SimpleName:in)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:rollback)))(ThrowStatement(SimpleName:e))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:db))(SimpleName:commitUnless)))))))))))