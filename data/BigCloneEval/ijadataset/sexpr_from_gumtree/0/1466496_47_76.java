(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(ArrayType(SimpleType(SimpleName:struct))(Dimension))(SimpleName:getPole)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:classIndex))(SimpleType(SimpleName:OperatorException))(Block(IfStatement(InfixExpression(SimpleName:classifier)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(ArrayCreation(ArrayType(SimpleType(SimpleName:struct))(Dimension(NumberLiteral:0)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:vectNumber)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:vectors)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifier))(SimpleName:getLearningInputVectors))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:inputs)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(NumberLiteral:0))(Dimension(NumberLiteral:0))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:outputs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifier))(SimpleName:getLearningOutputVectors))))(IfStatement(InfixExpression(QualifiedName:vectors.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:inputs)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(FieldAccess(ArrayAccess(SimpleName:vectors)(NumberLiteral:0))(SimpleName:length)))(Dimension(QualifiedName:vectors.length))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:vectors.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(FieldAccess(ArrayAccess(SimpleName:vectors)(NumberLiteral:0))(SimpleName:length)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:inputs)(SimpleName:j))(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:vectors)(SimpleName:i))(SimpleName:j))))))))(IfStatement(InfixExpression(QualifiedName:inputs.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:vectNumber)(ASSIGNMENT_OPERATOR:=)(QualifiedName:inputs.length)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:struct))(Dimension))(VariableDeclarationFragment(SimpleName:pole)(ArrayCreation(ArrayType(SimpleType(SimpleName:struct))(Dimension(SimpleName:vectNumber))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:inputs.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:pole)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:struct)))))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:pole)(SimpleName:i))(SimpleName:response))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classifier))(SimpleName:getOutputProbabilities)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:inputs)(SimpleName:i))))(SimpleName:classIndex))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:expectedOutput)(ArrayAccess(ArrayAccess(SimpleName:outputs)(SimpleName:classIndex))(SimpleName:i))))(AssertStatement(InfixExpression(InfixExpression(SimpleName:expectedOutput)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:expectedOutput)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))))(ExpressionStatement(Assignment(FieldAccess(ArrayAccess(SimpleName:pole)(SimpleName:i))(SimpleName:expected))(ASSIGNMENT_OPERATOR:=)(SimpleName:expectedOutput)))))(ReturnStatement(SimpleName:pole))))))