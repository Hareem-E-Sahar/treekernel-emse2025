(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:appendBinFile)(SingleVariableDeclaration(SimpleType(SimpleName:OutputStream))(SimpleName:out))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:inputFile))(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:key))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:encrypt))(SimpleType(SimpleName:FileNotFoundException))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:InvalidKeyException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedOutputStream))(VariableDeclarationFragment(SimpleName:bout)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(SimpleName:out))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:inputFile))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:4096))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:CipherAlgorithmName)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:CipherAlgorithmMode)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:CipherAlgorithmPadding)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:CryptoTransformation)(InfixExpression(SimpleName:CipherAlgorithmName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:CipherAlgorithmMode)(StringLiteral:<STR>)(SimpleName:CipherAlgorithmPadding))))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKeySpec))(VariableDeclarationFragment(SimpleName:ky)(ClassInstanceCreation(SimpleType(SimpleName:SecretKeySpec))(SimpleName:key)(SimpleName:CipherAlgorithmName))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:iv)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:16))))))(VariableDeclarationStatement(SimpleType(SimpleName:AlgorithmParameterSpec))(VariableDeclarationFragment(SimpleName:aps)(ClassInstanceCreation(SimpleType(SimpleName:IvParameterSpec))(SimpleName:iv))))(VariableDeclarationStatement(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cf)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CryptoTransformation)))))(IfStatement(SimpleName:encrypt)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.ENCRYPT_MODE)(SimpleName:ky)(SimpleName:aps))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.DECRYPT_MODE)(SimpleName:ky)(SimpleName:aps)))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bufPost)))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:buffer.length))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:bufPost)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:doFinal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:size))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalBlockSizeException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:BadPaddingException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:ex)))))))(Block(ExpressionStatement(Assignment(SimpleName:bufPost)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:size)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bout))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bufPost))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bout))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidAlgorithmParameterException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchPaddingException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:ex))))))))))