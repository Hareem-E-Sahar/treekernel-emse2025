(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:static)(PrimitiveType:void)(SimpleName:testSparseClusterArray)(Block(VariableDeclarationStatement(SimpleType(SimpleName:Random))(VariableDeclarationFragment(SimpleName:r)(ClassInstanceCreation(SimpleType(SimpleName:Random))(NumberLiteral:0))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:elem)(ClassInstanceCreation(SimpleType(SimpleName:Object)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:t1))(VariableDeclarationFragment(SimpleName:t2)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:t1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:SparseClusterArray))(SimpleType(SimpleName:Object)))(VariableDeclarationFragment(SimpleName:arr)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:SparseClusterArray))(SimpleType(SimpleName:Object))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:MAX_ROUNDS))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ref)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:MAX_T)))(INFIX_EXPRESSION_OPERATOR:<<)(SimpleName:S1))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:MAX_N))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:ref)(ASSIGNMENT_OPERATOR:|=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:MAX_N)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arr))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ref)(SimpleName:elem))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arr))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ref)))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i)))))))))(ExpressionStatement(Assignment(SimpleName:t2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arr))(SimpleName:cardinality))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:t2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:t1)))))))(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:t1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:e))(SimpleName:arr)(Block(ExpressionStatement(PostfixExpression(SimpleName:n)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(Assignment(SimpleName:t2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:n)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:t2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:t1)))))))))))