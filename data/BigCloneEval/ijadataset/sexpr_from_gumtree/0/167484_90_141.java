(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:makeXFoldCrossValidationSets)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:partitionCount))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:PairEntry)))(SimpleName:pairs))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:destinationPath))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:PairEntry)))(VariableDeclarationFragment(SimpleName:pairsCopy)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:PairEntry)))(SimpleName:pairs))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:partSize)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:ceil)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(CastExpression(PrimitiveType:double)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pairsCopy))(SimpleName:size)))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(CastExpression(PrimitiveType:double)(SimpleName:partitionCount)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Random))(VariableDeclarationFragment(SimpleName:rand)(ClassInstanceCreation(SimpleType(SimpleName:Random)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:PairEntry))))(VariableDeclarationFragment(SimpleName:partition)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:PairEntry)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:partNo)(NumberLiteral:0)))(InfixExpression(SimpleName:partNo)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:partitionCount))(PostfixExpression(SimpleName:partNo)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:PairEntry)))(VariableDeclarationFragment(SimpleName:part)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:PairEntry))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:partition))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:part))))(IfStatement(InfixExpression(SimpleName:partNo)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(SimpleName:partitionCount)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:part))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pairsCopy)))))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:partSize))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rand))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pairsCopy))(SimpleName:size))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:part))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pairsCopy))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pairsCopy))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:index))))))))))(ExpressionStatement(Assignment(SimpleName:destinationPath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TextRulerToolkit))(SimpleName:addTrailingSlashToPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destinationPath)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:partitionCount))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:foldDest)(InfixExpression(SimpleName:destinationPath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TextRulerToolkit))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:foldDest)))(SimpleName:mkdir))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:mkdir)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:mkdir)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:mkdir)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:mkdir)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:mkdir)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:mkdir)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:trainingWithTagsDir)(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:trainingWithoutTagsDir)(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:testingWithTagsDir)(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:testingWithoutTagsDir)(InfixExpression(SimpleName:foldDest)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:PairEntry))(SimpleName:pe))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:partition))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:srcFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:trainingDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:pe.trainingsFileName)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dstFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:testingWithTagsDir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:dstFile))))(ExpressionStatement(Assignment(SimpleName:srcFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:testDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:pe.testFileName)))))(ExpressionStatement(Assignment(SimpleName:dstFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:testingWithoutTagsDir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:dstFile))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:restI)(NumberLiteral:0)))(InfixExpression(SimpleName:restI)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:partitionCount))(PostfixExpression(SimpleName:restI)(POSTFIX_EXPRESSION_OPERATOR:++))(IfStatement(InfixExpression(SimpleName:restI)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:i))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:PairEntry))(SimpleName:pe))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:partition))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:restI)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:srcFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:trainingDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:pe.trainingsFileName)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dstFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:trainingWithTagsDir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:dstFile))))(ExpressionStatement(Assignment(SimpleName:srcFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:testDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:pe.testFileName)))))(ExpressionStatement(Assignment(SimpleName:dstFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:trainingWithoutTagsDir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcFile)(SimpleName:dstFile)))))))))))))))