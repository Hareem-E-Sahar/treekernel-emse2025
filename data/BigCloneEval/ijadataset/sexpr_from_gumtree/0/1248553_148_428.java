(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:newLine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:getCRLF))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Settings))(SimpleName:getFtpPasvMode))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:sock)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Socket))(SimpleName:host)(SimpleName:port))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sock))(SimpleName:setSoTimeout)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Settings))(SimpleName:getSocketTimeout))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:port)))))))))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:ssock)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ServerSocket))(SimpleName:port)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:port)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:toString))))))))(ExpressionStatement(Assignment(SimpleName:isThere)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ok)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:fOut)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedOutputStream))(VariableDeclarationFragment(SimpleName:bOut)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:fIn)(NullLiteral)))(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Settings))(SimpleName:getFtpPasvMode)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:retry)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(InfixExpression(PostfixExpression(SimpleName:retry)(POSTFIX_EXPRESSION_OPERATOR:++))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:5)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:sock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ssock))(SimpleName:setSoTimeout)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Settings.connectionTimeout))))(ExpressionStatement(Assignment(SimpleName:sock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ssock))(SimpleName:accept)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:sock)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:retry)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:5))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:finished)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ThrowStatement(SimpleName:e))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ssock))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(IfStatement(SimpleName:ok)(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(QualifiedName:Settings.bufferSize))))))(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:buflen)(NumberLiteral:0)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:GET)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:GETDIR))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:justStream))(Block(TryStatement(Block(IfStatement(SimpleName:resume)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:fOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fOut))(SimpleName:skipBytes)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:length))))))(ExpressionStatement(Assignment(SimpleName:buflen)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:length))))))(Block(IfStatement(InfixExpression(SimpleName:localfile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:localfile)(ASSIGNMENT_OPERATOR:=)(SimpleName:file)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f2)(ClassInstanceCreation(SimpleType(SimpleName:File))(QualifiedName:Settings.appHomeDir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f2))(SimpleName:mkdirs)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:localfile))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:delete)))))(ExpressionStatement(Assignment(SimpleName:bOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:localfile))(QualifiedName:Settings.bufferSize)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)))))(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))))(IfStatement(SimpleName:ok)(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sock))(SimpleName:getInputStream))(QualifiedName:Settings.bufferSize))))(IfStatement(SimpleName:justStream)(Block(ReturnStatement))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(SimpleName:ok)(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(SimpleName:buflen)))(IfStatement(InfixExpression(SimpleName:fOut)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:es))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fOut))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:finished)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:FAILED)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:read)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:read)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:es))(SimpleName:printStackTrace)))(ReturnStatement))))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:+=)(SimpleName:read)))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:newLine)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf2)(MethodInvocation(SimpleName:modifyGet)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:read)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf2)(NumberLiteral:0)(QualifiedName:buf2.length)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:type)(SimpleName:len))))(IfStatement(MethodInvocation(SimpleName:time))(Block))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:StreamTokenizer.TT_EOF))(Block(BreakStatement))))))(Block(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:es))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bOut))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:finished)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:FAILED)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:read)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:read)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:es))(SimpleName:printStackTrace)))(ReturnStatement))))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:+=)(SimpleName:read)))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:newLine)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf2)(MethodInvocation(SimpleName:modifyGet)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:read)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf2)(NumberLiteral:0)(QualifiedName:buf2.length)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:type)(SimpleName:len))))(IfStatement(MethodInvocation(SimpleName:time))(Block))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:StreamTokenizer.TT_EOF))(Block(BreakStatement)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bOut))(SimpleName:flush))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:FAILED)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PUT)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PUTDIR))))(Block(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fIn)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>))))(IfStatement(SimpleName:resume)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fIn))(SimpleName:skipBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:skiplen)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))))(IfStatement(SimpleName:ok)(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sock))(SimpleName:getOutputStream))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(SimpleName:ok)(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(SimpleName:skiplen)))(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:b)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf))))))(Block(ExpressionStatement(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fIn))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))))(ExpressionStatement(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:+=)(SimpleName:read)))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:newLine)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf2)(MethodInvocation(SimpleName:modifyPut)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(SimpleName:read)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf2)(NumberLiteral:0)(QualifiedName:buf2.length)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:read))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:type)(SimpleName:len))))(IfStatement(MethodInvocation(SimpleName:time))(Block))(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:StreamTokenizer.TT_EOF))(Block(BreakStatement)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:FAILED)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:out)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:bOut)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bOut))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bOut))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:fOut)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fOut))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))(TryStatement(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:justStream)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:fIn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fIn))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sock))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:toString))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Settings))(SimpleName:getFtpPasvMode)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ssock))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:toString))))))))))(ExpressionStatement(Assignment(SimpleName:finished)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(IfStatement(SimpleName:ok)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:FINISHED)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:fireProgressUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:FAILED)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))))