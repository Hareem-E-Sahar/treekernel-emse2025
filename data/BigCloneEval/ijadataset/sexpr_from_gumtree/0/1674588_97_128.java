(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:createLine)(SimpleType(SimpleName:LineUnavailableException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:m_line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:sourceFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_audioInputStream))(SimpleName:getFormat))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:toString))))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:targetFormat)(ClassInstanceCreation(SimpleType(SimpleName:AudioFormat))(QualifiedName:AudioFormat.Encoding.PCM_SIGNED)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getSampleRate))(NumberLiteral:16)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getChannels))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getSampleRate))(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:targetFormat)))))(ExpressionStatement(Assignment(SimpleName:m_encodedaudioInputStream)(ASSIGNMENT_OPERATOR:=)(SimpleName:m_audioInputStream)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:encodedLength)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_encodedaudioInputStream))(SimpleName:available)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:isOgg)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:true)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(SimpleName:forceOgg)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:m_audioInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AppletVorbisSPIWorkaround))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetFormat)(SimpleName:m_audioInputStream)))))(ExpressionStatement(Assignment(SimpleName:m_audioInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AppletMpegSPIWorkaround))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetFormat)(SimpleName:m_audioInputStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:audioFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_audioInputStream))(SimpleName:getFormat))))(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:info)(ClassInstanceCreation(SimpleType(QualifiedName:DataLine.Info))(TypeLiteral(SimpleType(SimpleName:SourceDataLine)))(SimpleName:audioFormat)(QualifiedName:AudioSystem.NOT_SPECIFIED))))(ExpressionStatement(Assignment(SimpleName:m_line)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SourceDataLine))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:info))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_line))(SimpleName:getFormat)))(SimpleName:toString))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Control))(Dimension))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_line))(SimpleName:getControls))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:p)(NumberLiteral:0)))(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:c.length))(PostfixExpression(SimpleName:p)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:c)(SimpleName:p)))(SimpleName:toString))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_line))(SimpleName:isControlSupported)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FloatControl.Type.MASTER_GAIN)))(Block(ExpressionStatement(Assignment(SimpleName:m_gainControl)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:FloatControl))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_line))(SimpleName:getControl)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FloatControl.Type.MASTER_GAIN))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_gainControl))(SimpleName:getMinimum))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_gainControl))(SimpleName:getMaximum))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_gainControl))(SimpleName:getPrecision))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_line))(SimpleName:isControlSupported)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FloatControl.Type.PAN)))(Block(ExpressionStatement(Assignment(SimpleName:m_panControl)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:FloatControl))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_line))(SimpleName:getControl)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:FloatControl.Type.PAN))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_panControl))(SimpleName:getMinimum))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_panControl))(SimpleName:getMaximum))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_panControl))(SimpleName:getPrecision))))))))))))))