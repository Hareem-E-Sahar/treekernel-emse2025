(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:File))(SimpleName:getFile)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:mappedLibName))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:toString))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:length))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:length)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dir)(MethodInvocation(SimpleName:getDeploymentDir))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dir)(SimpleName:mappedLibName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isFile))(ReturnStatement(SimpleName:f)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedXOutputStream))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Logger.global))(SimpleName:config)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)(StringLiteral:<STR>)(SimpleName:f)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedXOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Files))(SimpleName:createLockedOutputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f)(NumberLiteral:3)(QualifiedName:TimeUnit.SECONDS))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:transferFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:deleteOnExit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:deleteOnExit)))(ReturnStatement(SimpleName:f)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:Logger.global))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)(StringLiteral:<STR>)(SimpleName:f)(StringLiteral:<STR>))(SimpleName:ex))))(IfStatement(InfixExpression(SimpleName:f)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:delete))))(ThrowStatement(CastExpression(SimpleType(SimpleName:UnsatisfiedLinkError))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:UnsatisfiedLinkError))(StringLiteral:<STR>)))(SimpleName:initCause)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IO))(SimpleName:tryClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IO))(SimpleName:tryClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))))))))))