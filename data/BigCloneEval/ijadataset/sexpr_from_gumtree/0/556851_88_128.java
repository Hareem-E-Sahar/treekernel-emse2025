(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:receiveDataFromServer)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:writeToFileName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:delete)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:createNewFile))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block)))(IfStatement(InfixExpression(SimpleName:fileLength)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:10240))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:perLength)(InfixExpression(SimpleName:fileLength)(INFIX_EXPRESSION_OPERATOR:/)(CastExpression(PrimitiveType:long)(SimpleName:numberOfThreads)))))(ExpressionStatement(Assignment(SimpleName:threads)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(SimpleType(SimpleName:Thread))(Dimension(InfixExpression(SimpleName:numberOfThreads)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:tempstart)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:remainLen)(SimpleName:fileLength)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:numberOfThreads))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:remainLen)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:perLength)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tempstart)(StringLiteral:<STR>)(SimpleName:perLength)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:threads)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(QualifiedName:TransferThreadClient.Builder))))(SimpleName:setHostname)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hostname))))(SimpleName:setPort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:port))))(SimpleName:setRequiredFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requiredFileName))))(SimpleName:setStartPos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempstart))))(SimpleName:setTransferLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:perLength))))(SimpleName:setWriteToFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writeToFileName))))(SimpleName:setTransferLengthInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transferLengthInfo))))(SimpleName:build)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:threads)(SimpleName:i)))(SimpleName:start)))(ExpressionStatement(Assignment(SimpleName:tempstart)(ASSIGNMENT_OPERATOR:+=)(SimpleName:perLength)))(ExpressionStatement(Assignment(SimpleName:remainLen)(ASSIGNMENT_OPERATOR:-=)(SimpleName:perLength)))(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i)))))(IfStatement(InfixExpression(SimpleName:remainLen)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tempstart)(StringLiteral:<STR>)(SimpleName:remainLen)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:threads)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(QualifiedName:TransferThreadClient.Builder))))(SimpleName:setHostname)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hostname))))(SimpleName:setPort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:port))))(SimpleName:setRequiredFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requiredFileName))))(SimpleName:setStartPos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempstart))))(SimpleName:setTransferLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:remainLen))))(SimpleName:setWriteToFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writeToFileName))))(SimpleName:setTransferLengthInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transferLengthInfo))))(SimpleName:build)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:threads)(SimpleName:i)))(SimpleName:start))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Thread))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(QualifiedName:TransferThreadClient.Builder))))(SimpleName:setHostname)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hostname))))(SimpleName:setPort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:port))))(SimpleName:setRequiredFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:requiredFileName))))(SimpleName:setStartPos)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(SimpleName:setTransferLength)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileLength))))(SimpleName:setWriteToFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writeToFileName))))(SimpleName:setTransferLengthInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transferLengthInfo))))(SimpleName:build))))(SimpleName:start)))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:acks)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(ClassInstanceCreation(SimpleType(SimpleName:Acks))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:acks))(SimpleName:start)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:acks))(SimpleName:join))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ReturnStatement(SimpleName:TRANSFER_SUCCESS))))))