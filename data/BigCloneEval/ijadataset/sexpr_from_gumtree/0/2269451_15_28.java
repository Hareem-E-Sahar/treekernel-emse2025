(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:rename)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:File))(SimpleName:file))(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:ff)(MethodInvocation(SimpleName:getFile))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ff))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ff)(SimpleName:file)(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(SimpleName:deleteFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ff))))))(ExpressionStatement(MethodInvocation(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))