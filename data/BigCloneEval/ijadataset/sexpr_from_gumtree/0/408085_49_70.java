(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:FederationRequest))(SimpleName:discover)(SingleVariableDeclaration(SimpleType(SimpleName:InetAddress))(SimpleName:serviceProvider))(SimpleType(SimpleName:FederationServiceDiscoveryFailed))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:port)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FederationService))(SimpleName:getInstance)))(SimpleName:getFederatingPort))))(VariableDeclarationStatement(SimpleType(SimpleName:Socket))(VariableDeclarationFragment(SimpleName:sock)(ClassInstanceCreation(SimpleType(SimpleName:Socket))(SimpleName:serviceProvider)(SimpleName:port))))(VariableDeclarationStatement(SimpleType(SimpleName:SSLSocketFactory))(VariableDeclarationFragment(SimpleName:sockFactory)(CastExpression(SimpleType(SimpleName:SSLSocketFactory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SSLSocketFactory))(SimpleName:getDefault)))))(VariableDeclarationStatement(SimpleType(SimpleName:SSLSocket))(VariableDeclarationFragment(SimpleName:federatingSocket)(CastExpression(SimpleType(SimpleName:SSLSocket))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sockFactory))(SimpleName:createSocket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sock)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceProvider))(SimpleName:getHostAddress))(SimpleName:port)(BooleanLiteral:true))))))(VariableDeclarationStatement(SimpleType(SimpleName:SSLServerSocketFactory))(VariableDeclarationFragment(SimpleName:serverFactory)(CastExpression(SimpleType(SimpleName:SSLServerSocketFactory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SSLServerSocketFactory))(SimpleName:getDefault)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:federatingSocket))(SimpleName:setEnabledCipherSuites)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serverFactory))(SimpleName:getSupportedCipherSuites)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:federatingSocket))(SimpleName:getOutputStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:federatingSocket))(SimpleName:getInputStream))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:FederationRequestType.FILE_TRANSFER))(SimpleName:toString))(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:flush)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:responce)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:readLine))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FederationServiceMessageCodes))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:responce)))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:FederationServiceMessageCodes.SERVICE_AVAILABLE))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:responce))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FederationRequest))(SimpleName:federatingSocket)(SimpleName:reader)(SimpleName:writer)(QualifiedName:FederationRequestType.FILE_TRANSFER))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FederationServiceDiscoveryFailed))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:toString))))))))))))