(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:getDexClass)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:data))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fff)(ClassInstanceCreation(SimpleType(SimpleName:File))(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fff))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fff))(SimpleName:createNewFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:fff))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(QualifiedName:com.google.dex.file.DexFile))(VariableDeclarationFragment(SimpleName:outputDex)(ClassInstanceCreation(SimpleType(QualifiedName:com.google.dex.file.DexFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:CfOptions))(VariableDeclarationFragment(SimpleName:cf)(ClassInstanceCreation(SimpleType(SimpleName:CfOptions)))))(VariableDeclarationStatement(SimpleType(SimpleName:ClassDefItem))(VariableDeclarationFragment(SimpleName:clazz)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CfTranslator))(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:fixPath)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:data)(SimpleName:cf)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputDex))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clazz))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tmpdir)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:tmpdirpath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpdir))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpdir))(SimpleName:mkdir))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpdir))(SimpleName:isDirectory)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:apk)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:tmpdirpath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(SimpleName:name)(StringLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:apk))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:apk))(SimpleName:createNewFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zos)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:apk)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:classeszip)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classeszip))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputDex))(SimpleName:writeTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zos)(NullLiteral)(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:close)))(ExpressionStatement(MethodInvocation(SimpleName:getClassByName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:apppath)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:getClassByName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:apppath)(StringLiteral:<STR>))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(SimpleName:getClassByName)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:tmpdirpath)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(SimpleName:name)(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(SimpleName:getClassByName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:apppath)(StringLiteral:<STR>))))(ReturnStatement(SimpleName:c))))))