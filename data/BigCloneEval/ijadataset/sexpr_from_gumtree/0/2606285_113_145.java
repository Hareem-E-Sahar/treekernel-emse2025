(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:close)(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:WAITING))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dcc))(SimpleName:getSelectionKey))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block)(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:WAITING))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getPeerAddress))(StringLiteral:<STR>)(SimpleName:state)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dcc))(SimpleName:getChannel))))))(VariableDeclarationStatement(SimpleType(SimpleName:SelectionKey))(VariableDeclarationFragment(SimpleName:key)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dcc))(SimpleName:getSelectionKey))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:key)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:key))(SimpleName:isValid))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:key))(SimpleName:interestOps))))(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(SimpleName:checkSendQueue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dcc)))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:REQUESTING_PARTS))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Exception))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:Exception)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getPeerAddress))(StringLiteral:<STR>))(SimpleName:e)))))(IfStatement(InfixExpression(SimpleName:state)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:REQUESTING_STARTUP))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getPeerAddress))(StringLiteral:<STR>)(SimpleName:state)(StringLiteral:<STR>)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Collection))(VariableDeclarationFragment(SimpleName:taggedGapList)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taggedGaps))(SimpleName:getGaps))))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taggedGapList))(SimpleName:iterator))))(VariableDeclarationStatement(SimpleType(SimpleName:ArrayList))(VariableDeclarationFragment(SimpleName:removedgaps)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Gap))(VariableDeclarationFragment(SimpleName:gap)(CastExpression(SimpleType(SimpleName:Gap))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dcc))(SimpleName:getConnectionNumber))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gap))(SimpleName:getStart))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gap))(SimpleName:getEnd))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentDownload))(SimpleName:getUntaggedGaps)))(SimpleName:addGap)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gap))(SimpleName:getStart))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gap))(SimpleName:getEnd)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:removedgaps))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:gap))))))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:removedgaps))(SimpleName:isEmpty)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Gap))(VariableDeclarationFragment(SimpleName:gap)(CastExpression(SimpleType(SimpleName:Gap))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:removedgaps))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:removedgaps))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:taggedGaps))(SimpleName:removeGap)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gap))(SimpleName:getStart))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gap))(SimpleName:getEnd)))))))(ExpressionStatement(Assignment(SimpleName:closed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:dcc.source))(SimpleName:setActive)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dcc))(SimpleName:isConnected))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:dcc.source))(SimpleName:setNextRetry))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:dcc.source))(SimpleName:setNextRetry)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dContext))(SimpleName:getSourceRetryInterval))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000))))))))))))