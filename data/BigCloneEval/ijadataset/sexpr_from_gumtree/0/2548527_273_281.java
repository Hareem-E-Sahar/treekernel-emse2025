(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:JavaFileObject))(SimpleName:getFileObject)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:antlrOutput))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:grammarName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:type))(SimpleType(SimpleName:FileNotFoundException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:StringWriter)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:className)(InfixExpression(SimpleName:grammarName)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:type))))(VariableDeclarationStatement(SimpleType(SimpleName:Scanner))(VariableDeclarationFragment(SimpleName:scanner)(ClassInstanceCreation(SimpleType(SimpleName:Scanner))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:antlrOutput)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:className)))))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanner))(SimpleName:hasNextLine))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanner))(SimpleName:nextLine)))))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Constants.LS))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:SourceObject))(SimpleName:className)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:toString))))))))