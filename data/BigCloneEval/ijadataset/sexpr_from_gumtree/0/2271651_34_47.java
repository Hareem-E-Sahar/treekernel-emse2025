(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:next)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:hasNext)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NoSuchElementException))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:value)(InfixExpression(SimpleName:from)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rand))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:to)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:from)))))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:memory))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value)))(Block(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:value)))(IfStatement(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:to))(Block(ExpressionStatement(Assignment(SimpleName:value)(ASSIGNMENT_OPERATOR:=)(SimpleName:from)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:memory))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value)(SimpleName:value))))(ReturnStatement(SimpleName:value))))))