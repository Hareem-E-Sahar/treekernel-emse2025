(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:InputStream))(SimpleName:createInputStream)(SingleVariableDeclaration(SimpleType(SimpleName:FileInfo))(SimpleName:fi))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:MalformedURLException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:gzip)(InfixExpression(InfixExpression(QualifiedName:fi.fileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fi.fileName))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fi.fileName))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(IfStatement(InfixExpression(QualifiedName:fi.inputStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(QualifiedName:fi.inputStream)))(IfStatement(InfixExpression(InfixExpression(QualifiedName:fi.url)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fi.url))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:URL))(InfixExpression(QualifiedName:fi.url)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:fi.fileName))))(SimpleName:openStream))))(Block(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fi.directory))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:fi.directory))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Prefs.separator)))))(ExpressionStatement(Assignment(QualifiedName:fi.directory)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:Prefs.separator))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(QualifiedName:fi.directory)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:fi.fileName)))))(IfStatement(SimpleName:gzip)(ExpressionStatement(Assignment(QualifiedName:fi.compression)(ASSIGNMENT_OPERATOR:=)(QualifiedName:FileInfo.COMPRESSION_UNKNOWN))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:f)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:validateFileInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f)(SimpleName:fi)))))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:f))))))))(IfStatement(InfixExpression(SimpleName:is)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(QualifiedName:fi.compression)(INFIX_EXPRESSION_OPERATOR:>=)(QualifiedName:FileInfo.LZW))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessStream))(SimpleName:is))))(IfStatement(SimpleName:gzip)(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GZIPInputStream))(SimpleName:is)(NumberLiteral:50000))))))))(ReturnStatement(SimpleName:is))))))