(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:findInCumulativeProb)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:num))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:min)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max)(InfixExpression(QualifiedName:cumulativeProb.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ptr)))(WhileStatement(BooleanLiteral:true)(Block(ExpressionStatement(Assignment(SimpleName:ptr)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:max)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:min)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:>=)(ArrayAccess(SimpleName:cumulativeProb)(SimpleName:ptr)))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:max)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:min))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(ReturnStatement(SimpleName:max)))(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(SimpleName:ptr))))(IfStatement(InfixExpression(InfixExpression(SimpleName:ptr)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:num)(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:cumulativeProb)(InfixExpression(SimpleName:ptr)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(SimpleName:ptr))))(ReturnStatement(SimpleName:ptr))))))))))