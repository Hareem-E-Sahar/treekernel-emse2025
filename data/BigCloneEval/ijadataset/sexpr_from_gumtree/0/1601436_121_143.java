(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:changePlaylist)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:newM3UFileName))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:shuffle))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:rd)))(ExpressionStatement(MethodInvocation(SimpleName:terminatePlayer)))(ExpressionStatement(MethodInvocation(SimpleName:startPlayer)))(ExpressionStatement(MethodInvocation(SimpleName:getPlayerStatus)))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:playerState.random)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:shuffle))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(QualifiedName:playerState.random))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:shuffle))))(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:httpHostVal)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:connect)))(ExpressionStatement(Assignment(SimpleName:rd)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rd))(SimpleName:close)))))(ExpressionStatement(Assignment(SimpleName:newM3UFileName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newM3UFileName))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:URI))(VariableDeclarationFragment(SimpleName:uri)(ClassInstanceCreation(SimpleType(SimpleName:URI))(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:newM3UFileName))(NullLiteral))))(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:httpHostVal)(StringLiteral:<STR>)(SimpleName:uri)))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:connect)))(ExpressionStatement(Assignment(SimpleName:rd)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rd))(SimpleName:close)))(ExpressionStatement(MethodInvocation(SimpleName:getPlayerStatus)))))))