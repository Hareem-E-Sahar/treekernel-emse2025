(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:getDirectory)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:dir_name))(SingleVariableDeclaration(SimpleType(QualifiedName:java.util.zip.ZipOutputStream))(SimpleName:out))(SingleVariableDeclaration(SimpleType(QualifiedName:com.fujitsu.arcon.njs.interfaces.IncarnatedUser))(SimpleName:user))(SingleVariableDeclaration(SimpleType(QualifiedName:UspaceManager.Uspace))(SimpleName:us))(SimpleType(SimpleName:NJSException))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:TSIUnavailableException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:TSIConnection))(VariableDeclarationFragment(SimpleName:c)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:still_ok)(BooleanLiteral:true)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getTSIConnectionFactory)))(SimpleName:getTSIConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:user)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:command)(InfixExpression(MethodInvocation(SimpleName:makeTSIIdentityLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:us)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:dir_name)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:reply)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:reply)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:send)(METHOD_INVOCATION_ARGUMENTS(SimpleName:command))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:ioex)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reply))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:dead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:reply))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER_SIZE))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:root_dir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:root_length)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root_dir))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:file_name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine))))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file_name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file_name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:file_name))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:mode)(StringLiteral:<STR>)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:size))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:size))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:size))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(SimpleName:trim))))(ExpressionStatement(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:size))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:size))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(SimpleName:trim))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:num_bytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:size))))(SimpleName:longValue))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:m_mode)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:m_mode)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Byte))(SimpleName:parseByte)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mode)))))(ExpressionStatement(Assignment(SimpleName:file_name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file_name))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:root_length)))))(IfStatement(QualifiedName:logger.CHAT)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:chat)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file_name)(StringLiteral:<STR>)(SimpleName:num_bytes)(StringLiteral:<STR>)(ArrayAccess(SimpleName:m_mode)(NumberLiteral:0))(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:num_bytes)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:next_file)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:file_name))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:next_file))(SimpleName:setExtra)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m_mode))))(IfStatement(SimpleName:still_ok)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:next_file)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:this_block)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine)))))(SimpleName:intValue))))(DoStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:this_block))))(TryStatement(Block(IfStatement(SimpleName:still_ok)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:this_block))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(IfStatement(QualifiedName:logger.CHAT)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:chat)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:still_ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(ExpressionStatement(Assignment(SimpleName:this_block)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine)))))(SimpleName:intValue)))))(InfixExpression(SimpleName:this_block)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(IfStatement(SimpleName:still_ok)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry))))(ExpressionStatement(Assignment(SimpleName:file_name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:dead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:file_name)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:dead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:file_name)(StringLiteral:<STR>)(SimpleName:size))))))))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:next_file)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:file_name))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:next_file))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:num_bytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:next_file))(SimpleName:setExtra)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m_mode))))(IfStatement(SimpleName:still_ok)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:next_file)))))(DoStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:to_get)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:num_bytes)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:BUFFER_SIZE))(SimpleName:BUFFER_SIZE)(SimpleName:num_bytes))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:to_get))))(ExpressionStatement(Assignment(SimpleName:num_bytes)(ASSIGNMENT_OPERATOR:-=)(SimpleName:to_get)))(TryStatement(Block(IfStatement(SimpleName:still_ok)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:to_get))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(IfStatement(QualifiedName:logger.CHAT)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:chat)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:still_ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))(InfixExpression(SimpleName:num_bytes)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(IfStatement(SimpleName:still_ok)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry))))(ExpressionStatement(Assignment(SimpleName:file_name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:dead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:file_name)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:dead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>)(SimpleName:file_name)(StringLiteral:<STR>)(SimpleName:size)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getLine))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:done)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:still_ok))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getName))(StringLiteral:<STR>))))))))))