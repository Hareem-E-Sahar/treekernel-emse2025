(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:thenEnsureThatRepositoryMetadataDoesNotContainOldUrl)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:repositoryId))(SimpleType(SimpleName:AuthenticationException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpResponse))(VariableDeclarationFragment(SimpleName:response)(MethodInvocation(SimpleName:executeGetWithResponse)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:NEXUS_BASE_URL)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:SC_OK)(MethodInvocation(SimpleName:statusCode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:response))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:content)(MethodInvocation(SimpleName:gzipResponseContent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:response)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:content))))(ExpressionStatement(MethodInvocation(SimpleName:assertThat)(METHOD_INVOCATION_ARGUMENTS(SimpleName:content)(MethodInvocation(SimpleName:not)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:containsString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:repositoryId))))))))(ExpressionStatement(MethodInvocation(SimpleName:assertThat)(METHOD_INVOCATION_ARGUMENTS(SimpleName:content)(MethodInvocation(SimpleName:containsString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:assertThat)(METHOD_INVOCATION_ARGUMENTS(SimpleName:content)(MethodInvocation(SimpleName:containsString)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))