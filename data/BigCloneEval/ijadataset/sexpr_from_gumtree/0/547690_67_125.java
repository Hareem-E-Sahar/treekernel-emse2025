(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Sequence))(SimpleName:eval)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Sequence))(Dimension))(SimpleName:args))(SingleVariableDeclaration(SimpleType(SimpleName:Sequence))(SimpleName:contextSequence))(SimpleType(SimpleName:XPathException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:GrammarPool))(VariableDeclarationFragment(SimpleName:grammarpool)(CastExpression(SimpleType(SimpleName:GrammarPool))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:config))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:XMLReaderObjectFactory.GRAMMER_POOL))))))(IfStatement(MethodInvocation(SimpleName:isCalledAs)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Sequence))(VariableDeclarationFragment(SimpleName:result)(ClassInstanceCreation(SimpleType(SimpleName:ValueSequence)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:before)(MethodInvocation(SimpleName:countTotalNumberOfGrammar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grammarpool)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:before)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:clearGrammarPool)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grammarpool))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:after)(MethodInvocation(SimpleName:countTotalNumberOfGrammar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grammarpool)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:after)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:delta)(InfixExpression(SimpleName:before)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:after))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:IntegerValue))(SimpleName:delta)))))(ReturnStatement(SimpleName:result)))(IfStatement(MethodInvocation(SimpleName:isCalledAs)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MemTreeBuilder))(VariableDeclarationFragment(SimpleName:builder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getDocumentBuilder))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeImpl))(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(SimpleName:writeReport)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grammarpool)(SimpleName:builder)))))(ReturnStatement(SimpleName:result)))(IfStatement(MethodInvocation(SimpleName:isCalledAs)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:0)))(SimpleName:isEmpty))(ReturnStatement(QualifiedName:Sequence.EMPTY_SEQUENCE)))(VariableDeclarationStatement(SimpleType(SimpleName:XMLGrammarPreparser))(VariableDeclarationFragment(SimpleName:parser)(ClassInstanceCreation(SimpleType(SimpleName:XMLGrammarPreparser)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parser))(SimpleName:registerPreparser)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TYPE_XSD)(NullLiteral))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Grammar)))(VariableDeclarationFragment(SimpleName:allGrammars)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:Grammar))))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:SequenceIterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:0)))(SimpleName:iterate))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:nextItem)))(SimpleName:getStringValue))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)))))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:url)))(SimpleName:openStream))))(VariableDeclarationStatement(SimpleType(SimpleName:XMLInputSource))(VariableDeclarationFragment(SimpleName:xis)(ClassInstanceCreation(SimpleType(SimpleName:XMLInputSource))(NullLiteral)(SimpleName:url)(SimpleName:url)(SimpleName:is)(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:Grammar))(VariableDeclarationFragment(SimpleName:schema)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parser))(SimpleName:preparseGrammar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TYPE_XSD)(SimpleName:xis)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:allGrammars))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:schema)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:XPathException))(ThisExpression)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:XPathException))(ThisExpression)(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:XPathException))(ThisExpression)(SimpleName:ex))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:allGrammars))(SimpleName:size))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Grammar))(VariableDeclarationFragment(SimpleName:grammars)(Dimension)(ArrayCreation(ArrayType(SimpleType(SimpleName:Grammar))(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:allGrammars))(SimpleName:size)))))))(ExpressionStatement(Assignment(SimpleName:grammars)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:allGrammars))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(SimpleName:grammars)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:grammarpool))(SimpleName:cacheGrammars)(METHOD_INVOCATION_ARGUMENTS(SimpleName:TYPE_XSD)(SimpleName:grammars))))(VariableDeclarationStatement(SimpleType(SimpleName:ValueSequence))(VariableDeclarationFragment(SimpleName:result)(ClassInstanceCreation(SimpleType(SimpleName:ValueSequence)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Grammar))(SimpleName:one))(SimpleName:grammars)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:StringValue))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:one))(SimpleName:getGrammarDescription)))(SimpleName:getNamespace))))))))(ReturnStatement(SimpleName:result)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:XPathException))(ThisExpression)(StringLiteral:<STR>)))))))))))