(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:update)(Block(IfStatement(InfixExpression(QualifiedName:Fu.DEBUG)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FuLog))(SimpleName:isDebug)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FuLog))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:connection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nbTry_))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:connect)))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:wait_)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:InterruptedException))(SimpleName:_evt))(Block)))))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:isConnected_)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(Block(ExpressionStatement(Assignment(SimpleName:isConnected_)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:prop)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prop))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:version)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:prop))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(QualifiedName:Fu.DEBUG)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FuLog))(SimpleName:isDebug)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FuLog))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:version)))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:version)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:version))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:infos_.version)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(Assignment(SimpleName:isUptoDate_)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BuLib))(SimpleName:invokeLater)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(SimpleName:afficheDialogueForUpdate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:version))))))))))))(Block(ExpressionStatement(Assignment(SimpleName:isUptoDate_)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:_evt))(Block))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FuLib))(SimpleName:safeClose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))))))))