(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:Class))(SimpleName:evalToClass)(SingleVariableDeclaration(SimpleType(SimpleName:Compilation))(SimpleName:comp))(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SimpleType(SimpleName:SyntaxException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ModuleExp))(VariableDeclarationFragment(SimpleName:mexp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:getModule))))(VariableDeclarationStatement(SimpleType(SimpleName:SourceMessages))(VariableDeclarationFragment(SimpleName:messages)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:getMessages))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:comp.minfo))(SimpleName:loadByStages)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Compilation.COMPILED))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messages))(SimpleName:seenErrors))(ReturnStatement(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ArrayClassLoader))(VariableDeclarationFragment(SimpleName:loader)(QualifiedName:comp.loader)))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Path))(SimpleName:currentPath)))(SimpleName:toURL)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:setResourceContext)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.ZipOutputStream))(VariableDeclarationFragment(SimpleName:zout)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:dumpZipPrefix)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:zipname)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer))(SimpleName:dumpZipPrefix))))(ExpressionStatement(PostfixExpression(SimpleName:lastZipCounter)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(SimpleName:interactiveCounter)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:lastZipCounter))(ExpressionStatement(Assignment(SimpleName:lastZipCounter)(ASSIGNMENT_OPERATOR:=)(SimpleName:interactiveCounter))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipname))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lastZipCounter))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipname))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.FileOutputStream))(VariableDeclarationFragment(SimpleName:zfout)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipname))(SimpleName:toString)))))(ExpressionStatement(Assignment(SimpleName:zout)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.ZipOutputStream))(SimpleName:zfout))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:iClass)(NumberLiteral:0)))(InfixExpression(SimpleName:iClass)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:comp.numClasses))(PostfixExpression(SimpleName:iClass)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClassType))(VariableDeclarationFragment(SimpleName:clas)(ArrayAccess(QualifiedName:comp.classes)(SimpleName:iClass))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:className)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clas))(SimpleName:getName))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:classBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clas))(SimpleName:writeToArray))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:addClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:className)(SimpleName:classBytes))))(IfStatement(InfixExpression(SimpleName:zout)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:clname)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:className))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.ZipEntry))(VariableDeclarationFragment(SimpleName:zent)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.ZipEntry))(SimpleName:clname))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zent))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:classBytes.length))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.CRC32))(VariableDeclarationFragment(SimpleName:crc)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.CRC32)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:crc))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classBytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zent))(SimpleName:setCrc)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:crc))(SimpleName:getValue)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zent))(SimpleName:setMethod)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:java.util.zip.ZipEntry.STORED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zent))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classBytes))))))))(IfStatement(InfixExpression(SimpleName:zout)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:close)))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:clas)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ArrayClassLoader))(VariableDeclarationFragment(SimpleName:context)(SimpleName:loader)))(WhileStatement(InstanceofExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getParent))(SimpleType(SimpleName:ArrayClassLoader)))(ExpressionStatement(Assignment(SimpleName:context)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:ArrayClassLoader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getParent))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:iClass)(NumberLiteral:0)))(InfixExpression(SimpleName:iClass)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:comp.numClasses))(PostfixExpression(SimpleName:iClass)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClassType))(VariableDeclarationFragment(SimpleName:ctype)(ArrayAccess(QualifiedName:comp.classes)(SimpleName:iClass))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:cclass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:loadClass)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctype))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctype))(SimpleName:setReflectClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cclass))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctype))(SimpleName:setExisting)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(IfStatement(InfixExpression(SimpleName:iClass)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:clas)(ASSIGNMENT_OPERATOR:=)(SimpleName:cclass)))(IfStatement(InfixExpression(SimpleName:context)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:loader))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:addClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cclass))))))))(VariableDeclarationStatement(SimpleType(SimpleName:ModuleInfo))(VariableDeclarationFragment(SimpleName:minfo)(QualifiedName:comp.minfo)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:minfo))(SimpleName:setModuleClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clas))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:cleanupAfterCompilation)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ndeps)(QualifiedName:minfo.numDependencies)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idep)(NumberLiteral:0)))(InfixExpression(SimpleName:idep)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:ndeps))(PostfixExpression(SimpleName:idep)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ModuleInfo))(VariableDeclarationFragment(SimpleName:dep)(ArrayAccess(QualifiedName:minfo.dependencies)(SimpleName:idep))))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:dclass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dep))(SimpleName:getModuleClassRaw))))(IfStatement(InfixExpression(SimpleName:dclass)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:dclass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:evalToClass)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dep.comp)(NullLiteral))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:comp.loader))(SimpleName:addClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dclass))))))(ReturnStatement(SimpleName:clas)))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:WrappedException))(StringLiteral:<STR>)(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:WrappedException))(StringLiteral:<STR>)(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:comp))(SimpleName:getMessages)))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex))(SimpleName:ex))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SyntaxException))(SimpleName:messages))))))))))