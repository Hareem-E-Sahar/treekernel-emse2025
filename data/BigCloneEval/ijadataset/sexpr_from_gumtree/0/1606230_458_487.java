(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:createZipArchive)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:File))(Dimension))(SimpleName:afile))(Block(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:abyte0)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fileoutputstream)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:file))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zipoutputstream)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(SimpleName:fileoutputstream))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:afile.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(InfixExpression(InfixExpression(ArrayAccess(SimpleName:afile)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:afile)(SimpleName:i)))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:afile)(SimpleName:i)))(SimpleName:isDirectory))))(Block(ExpressionStatement(MethodInvocation(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:afile)(SimpleName:i)))(SimpleName:getName))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:zipentry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:afile)(SimpleName:i)))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipentry))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:afile)(SimpleName:i)))(SimpleName:lastModified)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipoutputstream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipentry))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fileinputstream)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ArrayAccess(SimpleName:afile)(SimpleName:i)))))(DoStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileinputstream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:abyte0)(NumberLiteral:0)(QualifiedName:abyte0.length)))))(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipoutputstream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:abyte0)(NumberLiteral:0)(SimpleName:j)))))(BooleanLiteral:true))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileinputstream))(SimpleName:close)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipoutputstream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileoutputstream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exception))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(SimpleName:setStatus)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exception))(SimpleName:getMessage)))))))))))))