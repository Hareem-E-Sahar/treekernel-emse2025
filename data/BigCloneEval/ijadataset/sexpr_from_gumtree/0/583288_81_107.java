(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:FrameworkProject))(SimpleName:createFrameworkProject)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:projectDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getFrameworkProjectsBase))(SimpleName:PROJECT))))(VariableDeclarationStatement(SimpleType(SimpleName:FrameworkProject))(VariableDeclarationFragment(SimpleName:project)(NullLiteral)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FrameworkProject))(SimpleName:createFileStructure)(METHOD_INVOCATION_ARGUMENTS(SimpleName:projectDir)(BooleanLiteral:true))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:CtlProjectMain))(VariableDeclarationFragment(SimpleName:setup)(ClassInstanceCreation(SimpleType(SimpleName:CtlProjectMain)))))(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:args)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(StringLiteral:<STR>)(SimpleName:PROJECT)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:setup))(SimpleName:parseArgs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:setup))(SimpleName:executeAction)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:templateBasedir)(ClassInstanceCreation(SimpleType(SimpleName:File))(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:modulesDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:projectDir)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modulesDir))(SimpleName:exists)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:CtlGenMain))(VariableDeclarationFragment(SimpleName:creator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CtlGenMain))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(SimpleName:templateBasedir)(SimpleName:modulesDir)))))(ExpressionStatement(Assignment(SimpleName:project)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getFrameworkInstance)))(SimpleName:getFrameworkProjectMgr)))(SimpleName:createFrameworkProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PROJECT)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FrameworkType))(VariableDeclarationFragment(SimpleName:mType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:createType)(METHOD_INVOCATION_ARGUMENTS(SimpleName:MODULE_NAME)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destNodesFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getEtcDir))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:testNodesFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(QualifiedName:TestNodeDispatchAction.TEST_NODES_XML))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFileStreams)(METHOD_INVOCATION_ARGUMENTS(SimpleName:testNodesFile)(SimpleName:destNodesFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:getMessage))))))))(ReturnStatement(SimpleName:project))))))