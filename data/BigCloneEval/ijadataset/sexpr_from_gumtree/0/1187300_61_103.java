(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:loadQueryProcessorFactories)(Block(ExpressionStatement(Assignment(SimpleName:qpFactoryMap)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:QueryProcessorFactoryIF))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Enumeration))(SimpleType(SimpleName:URL)))(VariableDeclarationFragment(SimpleName:resources)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:resources)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:QueryUtils))))(SimpleName:getClassLoader)))(SimpleName:getResources)(METHOD_INVOCATION_ARGUMENTS(SimpleName:RESOURCE_STRING))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e)))))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:resources)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:hasMoreElements)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:nextElement))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))(IfStatement(InfixExpression(SimpleName:is)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:rdr)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:is)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(TryStatement(Block(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rdr))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClassLoader))(VariableDeclarationFragment(SimpleName:classLoader)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:getContextClassLoader))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)(BooleanLiteral:true)(SimpleName:classLoader)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:QueryProcessorFactoryIF))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:QueryProcessorFactoryIF))(VariableDeclarationFragment(SimpleName:factory)(CastExpression(SimpleType(SimpleName:QueryProcessorFactoryIF))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:newInstance)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qpFactoryMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:factory))(SimpleName:getQueryLanguage)))(SimpleName:toUpperCase))(SimpleName:factory)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line)(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line)(StringLiteral:<STR>)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e)))))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qpFactoryMap))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DEFAULT_LANGUAGE))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qpFactoryMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DEFAULT_LANGUAGE)(ClassInstanceCreation(SimpleType(SimpleName:TologQueryProcessorFactory))))))))))))