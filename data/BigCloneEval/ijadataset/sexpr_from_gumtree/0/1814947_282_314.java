(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:File))(SimpleName:downloadURL)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MerlotDebug))(SimpleName:msg)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getFile))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:filename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:userPluginsDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(QualifiedName:XMLEditorSettings.USER_MERLOT_DIR)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:cache)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:userPluginsDir)(SimpleName:filename))))(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:userPluginsDir))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:userPluginsDir))(SimpleName:mkdirs)))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:connection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cache))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cache))(SimpleName:canRead)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:connect)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:remoteTimestamp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getLastModified))))(IfStatement(InfixExpression(InfixExpression(SimpleName:remoteTimestamp)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:remoteTimestamp)(INFIX_EXPRESSION_OPERATOR:>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cache))(SimpleName:lastModified))))(Block(ExpressionStatement(Assignment(SimpleName:cache)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:downloadContent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:connection)(SimpleName:cache))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MerlotDebug))(SimpleName:msg)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))))))))(Block(ExpressionStatement(Assignment(SimpleName:cache)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:downloadContent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:connection)(SimpleName:cache))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MerlotDebug))(SimpleName:exception)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex)))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:cache)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cache))(SimpleName:exists)))(Block(ReturnStatement(SimpleName:cache)))(Block(ReturnStatement(NullLiteral))))))))