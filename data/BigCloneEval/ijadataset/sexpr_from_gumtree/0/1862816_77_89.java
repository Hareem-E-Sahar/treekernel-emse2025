(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:stateLogic)(SingleVariableDeclaration(SimpleType(SimpleName:Module))(SimpleName:module))(SingleVariableDeclaration(SimpleType(SimpleName:StateMachine))(SimpleName:mach))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:declare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:memoryDec))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Wire))(VariableDeclarationFragment(SimpleName:oldTime)(ClassInstanceCreation(SimpleType(SimpleName:Wire))(StringLiteral:<STR>)(NumberLiteral:32))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Wire))(VariableDeclarationFragment(SimpleName:isPassThrough)(ClassInstanceCreation(SimpleType(SimpleName:Wire))(StringLiteral:<STR>)(NumberLiteral:1))))(VariableDeclarationStatement(Modifier:final)(SimpleType(QualifiedName:Compare.EQ))(VariableDeclarationFragment(SimpleName:ef)(ClassInstanceCreation(SimpleType(QualifiedName:Compare.EQ))(FieldAccess(ThisExpression)(SimpleName:readPointer))(FieldAccess(ThisExpression)(SimpleName:writePointer)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(QualifiedName:Logical.And))(VariableDeclarationFragment(SimpleName:simultaneous)(ClassInstanceCreation(SimpleType(QualifiedName:Logical.And))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mach))(SimpleName:getAllGoWire))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mach))(SimpleName:getAllDoneWire)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:state)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Assign.Continuous))(SimpleName:isPassThrough)(ClassInstanceCreation(SimpleType(QualifiedName:Logical.And))(SimpleName:ef)(ClassInstanceCreation(SimpleType(SimpleName:Group))(SimpleName:simultaneous)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:state)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Assign.Continuous))(SimpleName:oldTime)(ClassInstanceCreation(SimpleType(SimpleName:Conditional))(ClassInstanceCreation(SimpleType(SimpleName:Group))(SimpleName:isPassThrough))(FieldAccess(ThisExpression)(SimpleName:globalTime))(ClassInstanceCreation(SimpleType(SimpleName:MemoryElement))(FieldAccess(ThisExpression)(SimpleName:memory))(FieldAccess(ThisExpression)(SimpleName:readPointer))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:module))(SimpleName:state)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Assign.Continuous))(FieldAccess(ThisExpression)(SimpleName:cycles))(ClassInstanceCreation(SimpleType(QualifiedName:net.sf.openforge.verilog.model.Math.Subtract))(FieldAccess(ThisExpression)(SimpleName:globalTime))(SimpleName:oldTime))))))(ExpressionStatement(MethodInvocation(SimpleName:stateGlobalTimer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:module)(SimpleName:mach))))(ExpressionStatement(MethodInvocation(SimpleName:stateFifo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:module)(SimpleName:mach)(SimpleName:isPassThrough))))(ExpressionStatement(MethodInvocation(SimpleName:stateCapture)(METHOD_INVOCATION_ARGUMENTS(SimpleName:module)(SimpleName:mach))))))))