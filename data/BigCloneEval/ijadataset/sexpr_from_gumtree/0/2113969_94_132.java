(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:testLearningFromErlangTraceFile)(Block(VariableDeclarationStatement(SimpleType(SimpleName:QSMTool))(VariableDeclarationFragment(SimpleName:tool)(ClassInstanceCreation(SimpleType(SimpleName:QSMTool))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:runExperiment)(Block(ExpressionStatement(MethodInvocation(SimpleName:setSimpleConfiguration)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:learnerInitConfiguration.config)(SimpleName:active)(SimpleName:k))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:learnerInitConfiguration.config))(SimpleName:setErlangAlphabetAnyElements)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:EXPANSIONOFANY.ANY_WIBBLE))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ErlangModule))(SimpleName:loadModule)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:learnerInitConfiguration.config)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Helper))(SimpleName:throwUnchecked)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:learnerInitConfiguration.config))(SimpleName:getErlangModuleName)))(SimpleName:e)))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Label))))(VariableDeclarationFragment(SimpleName:Plus)(NullLiteral))(VariableDeclarationFragment(SimpleName:Minus)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:Plus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ErlangQSMOracle))(SimpleName:convertTracesToErl)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sPlus)(QualifiedName:learnerInitConfiguration.config)))))(ExpressionStatement(Assignment(SimpleName:Minus)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ErlangQSMOracle))(SimpleName:convertTracesToErl)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sMinus)(QualifiedName:learnerInitConfiguration.config)))))(VariableDeclarationStatement(SimpleType(SimpleName:RPNIUniversalLearner))(VariableDeclarationFragment(SimpleName:learner)(ClassInstanceCreation(SimpleType(SimpleName:ErlangOracleLearner))(NullLiteral)(SimpleName:learnerInitConfiguration))))(VariableDeclarationStatement(SimpleType(SimpleName:LearnerGraph))(VariableDeclarationFragment(SimpleName:outcome)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:learner))(SimpleName:learnMachine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:Plus)(SimpleName:Minus)))))(VariableDeclarationStatement(SimpleType(SimpleName:LearnerGraph))(VariableDeclarationFragment(SimpleName:expectedGraph)(ClassInstanceCreation(SimpleType(SimpleName:LearnerGraph))(QualifiedName:learnerInitConfiguration.config))))(VariableDeclarationStatement(SimpleType(SimpleName:Label))(VariableDeclarationFragment(SimpleName:lblInit)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AbstractLearnerGraph))(SimpleName:generateNewLabel)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ErlangLabel.missingFunction)(StringLiteral:<STR>))(QualifiedName:learnerInitConfiguration.config))))(VariableDeclarationFragment(SimpleName:lblLock)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AbstractLearnerGraph))(SimpleName:generateNewLabel)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ErlangLabel.missingFunction)(StringLiteral:<STR>))(QualifiedName:learnerInitConfiguration.config))))(VariableDeclarationFragment(SimpleName:lblUnlock)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AbstractLearnerGraph))(SimpleName:generateNewLabel)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ErlangLabel.missingFunction)(StringLiteral:<STR>))(QualifiedName:learnerInitConfiguration.config))))(VariableDeclarationFragment(SimpleName:lblCast)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AbstractLearnerGraph))(SimpleName:generateNewLabel)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ErlangLabel.missingFunction)(StringLiteral:<STR>))(QualifiedName:learnerInitConfiguration.config))))(VariableDeclarationFragment(SimpleName:lblRead)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AbstractLearnerGraph))(SimpleName:generateNewLabel)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ErlangLabel.missingFunction)(StringLiteral:<STR>))(QualifiedName:learnerInitConfiguration.config))))(VariableDeclarationFragment(SimpleName:lblWrite)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AbstractLearnerGraph))(SimpleName:generateNewLabel)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:ErlangLabel.missingFunction)(StringLiteral:<STR>))(QualifiedName:learnerInitConfiguration.config)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.paths))(SimpleName:augmentPTA)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Label))(Dimension))(ArrayInitializer(SimpleName:lblInit)(SimpleName:lblLock)))))(BooleanLiteral:true)(BooleanLiteral:false)(NullLiteral))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.paths))(SimpleName:augmentPTA)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Label))(Dimension))(ArrayInitializer(SimpleName:lblLock)))))(BooleanLiteral:false)(BooleanLiteral:false)(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:CmpVertex))(VariableDeclarationFragment(SimpleName:init)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:getInit)))(VariableDeclarationFragment(SimpleName:P1001)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:getVertex)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Label))(Dimension))(ArrayInitializer(SimpleName:lblInit))))))))(VariableDeclarationFragment(SimpleName:P1003)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:getVertex)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Label))(Dimension))(ArrayInitializer(SimpleName:lblInit)(SimpleName:lblLock))))))))(VariableDeclarationFragment(SimpleName:reject)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:getVertex)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Label))(Dimension))(ArrayInitializer(SimpleName:lblLock)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:init)))(SimpleName:lblWrite)(SimpleName:reject))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:init)))(SimpleName:lblCast)(SimpleName:reject))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:init)))(SimpleName:lblRead)(SimpleName:reject))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:init)))(SimpleName:lblUnlock)(SimpleName:reject))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:P1001)))(SimpleName:lblCast)(SimpleName:P1001))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:P1001)))(SimpleName:lblInit)(SimpleName:reject))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:P1001)))(SimpleName:lblUnlock)(SimpleName:reject))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:P1003)))(SimpleName:lblCast)(SimpleName:P1003))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expectedGraph))(SimpleName:addTransition)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:expectedGraph.transitionMatrix))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:P1003)))(SimpleName:lblLock)(SimpleName:reject))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:assertNull)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:WMethod))(SimpleName:checkM_and_colours)(METHOD_INVOCATION_ARGUMENTS(SimpleName:expectedGraph)(SimpleName:outcome)(QualifiedName:WMethod.VERTEX_COMPARISON_KIND.NONE))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tool))(SimpleName:loadConfig)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tool))(SimpleName:process)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tool))(SimpleName:runExperiment)))))))