(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ArrayType(PrimitiveType:char)(Dimension))(SimpleName:encodeToArray)(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:ba))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:padDouble)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:padSingle)(BooleanLiteral:false)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:source)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(NumberLiteral:3))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:result)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(NumberLiteral:4))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:char)(Dimension))(VariableDeclarationFragment(SimpleName:output)(ArrayCreation(ArrayType(PrimitiveType:char)(Dimension(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:ba.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:2)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:ba.length))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:3))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:source)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:ba)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(IfStatement(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:ba.length))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:source)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:ba)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff)))))(Block(ExpressionStatement(Assignment(SimpleName:padDouble)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:source)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:ba.length))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:source)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:ba)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff)))))(Block(ExpressionStatement(Assignment(SimpleName:padSingle)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:source)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(ExpressionStatement(MethodInvocation(SimpleName:split3to4)(METHOD_INVOCATION_ARGUMENTS(SimpleName:source)(SimpleName:result))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:output)(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:encodeSet)(ArrayAccess(SimpleName:result)(NumberLiteral:0)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:output)(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:encodeSet)(ArrayAccess(SimpleName:result)(NumberLiteral:1)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:output)(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(SimpleName:padDouble)(SimpleName:PADCHAR)(ArrayAccess(SimpleName:encodeSet)(ArrayAccess(SimpleName:result)(NumberLiteral:2))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:output)(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(SimpleName:padSingle)(SimpleName:PADCHAR)(ArrayAccess(SimpleName:encodeSet)(ArrayAccess(SimpleName:result)(NumberLiteral:3))))))))(ReturnStatement(SimpleName:output))))))