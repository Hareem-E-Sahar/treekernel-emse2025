(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:bootstrap)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:args)(StringLiteral:<STR>)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:loadLibrary)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rhome)(MethodInvocation(SimpleName:findR)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:rhome)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(SimpleName:isWin32)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(SimpleName:getenv)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:rhome)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:rhome)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:path)))))(ExpressionStatement(MethodInvocation(SimpleName:setenv)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:path))))))(ExpressionStatement(MethodInvocation(SimpleName:setREnv)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getenv)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(MethodInvocation(SimpleName:getenv)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isMac))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isWin32)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:stage)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:stage)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stage))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:jl)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:u2w)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jl))(SimpleName:exists))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jl))(SimpleName:toString))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jl))(SimpleName:toString))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:p)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:waitFor))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:re))(Block)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:needPkg)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rj)(MethodInvocation(SimpleName:findPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:rj)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:needPkg)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:needPkg)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:needPkg)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ipl)(MethodInvocation(SimpleName:findPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:ipl)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:needPkg)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:needPkg)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:needPkg)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:jgr)(MethodInvocation(SimpleName:findPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:jgr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:needPkg)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:needPkg)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:needPkg)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:needPkg)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isWin32))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isMac)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:needPkg)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:4))))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:execR)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:needPkg)(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:4))))))(ExpressionStatement(Assignment(SimpleName:rj)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:findPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:ipl)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:findPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:jgr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:findPackage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:rj)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:ipl)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:jgr)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:5))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:o)(Assignment(SimpleName:bootRJavaLoader)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createRJavaLoader)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rhome)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(StringLiteral:<STR>)))(BooleanLiteral:true))))))(ExpressionStatement(MethodInvocation(SimpleName:addClassPath)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:u2w)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:jgr)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(SimpleName:addClassPath)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:u2w)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:ipl)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:mainClass)(StringLiteral:<STR>)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:getClass)))(SimpleName:getMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension))(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:String)))(TypeLiteral(SimpleType(SimpleName:String)))(TypeLiteral(ArrayType(SimpleType(SimpleName:String))(Dimension)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:o)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:mainClass)(StringLiteral:<STR>)(SimpleName:args)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ie))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ie)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ie))(SimpleName:printStackTrace))))))))))