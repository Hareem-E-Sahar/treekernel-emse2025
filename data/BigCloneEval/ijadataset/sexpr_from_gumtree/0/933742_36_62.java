(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(ArrayType(PrimitiveType:int)(Dimension)(Dimension))(SimpleName:find)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:text))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:term))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:caseInsensitive))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:fuzzy))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(ArrayType(PrimitiveType:int)(Dimension)))(VariableDeclarationFragment(SimpleName:beginEnds)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(ArrayType(PrimitiveType:int)(Dimension))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:regexp)(StringLiteral:<STR>)))(IfStatement(SimpleName:fuzzy)(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:termArray)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:termElement))(SimpleName:termArray)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:regexp))(SimpleName:isEmpty)))(Block(ExpressionStatement(Assignment(SimpleName:regexp)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:regexp)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:quote)(METHOD_INVOCATION_ARGUMENTS(SimpleName:termElement))))))))(Block(ExpressionStatement(Assignment(SimpleName:regexp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:quote)(METHOD_INVOCATION_ARGUMENTS(SimpleName:term)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Pattern))(VariableDeclarationFragment(SimpleName:pattern)))(IfStatement(SimpleName:caseInsensitive)(Block(ExpressionStatement(Assignment(SimpleName:pattern)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:regexp)(QualifiedName:Pattern.CASE_INSENSITIVE))))))(Block(ExpressionStatement(Assignment(SimpleName:pattern)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:regexp)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:matcher)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pattern))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:text)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:find))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:beginEnd)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:start))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:matcher))(SimpleName:end))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:beginEnds))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:beginEnd))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:beginEnds))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(NumberLiteral:0))(Dimension(NumberLiteral:0)))))))))))