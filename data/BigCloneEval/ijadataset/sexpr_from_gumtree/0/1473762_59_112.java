(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:decompileClass)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:className))(SingleVariableDeclaration(SimpleType(SimpleName:ClassPath))(SimpleName:classPath))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:classPathStr))(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:destZip))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:destDir))(SingleVariableDeclaration(SimpleType(SimpleName:TabbedPrintWriter))(SimpleName:writer))(SingleVariableDeclaration(SimpleType(SimpleName:ImportHandler))(SimpleName:imports))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClassInfo))(VariableDeclarationFragment(SimpleName:clazz)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:clazz)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPath))(SimpleName:getClassInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:className))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className)(StringLiteral:<STR>)))))(ReturnStatement(BooleanLiteral:false)))))(IfStatement(MethodInvocation(SimpleName:skipClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clazz)))(ReturnStatement(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:className))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(QualifiedName:File.separatorChar)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:destZip)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destZip))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:filename))))))(IfStatement(InfixExpression(SimpleName:destDir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:destDir)(SimpleName:filename))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:directory)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getParent)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directory))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directory))(SimpleName:mkdirs))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directory))(SimpleName:getPath))(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:TabbedPrintWriter))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:file)))(SimpleName:imports)(BooleanLiteral:false)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:className))))(VariableDeclarationStatement(SimpleType(SimpleName:ClassAnalyzer))(VariableDeclarationFragment(SimpleName:clazzAna)(ClassInstanceCreation(SimpleType(SimpleName:ClassAnalyzer))(SimpleName:clazz)(SimpleName:imports))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clazzAna))(SimpleName:dumpJavaFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer))))(IfStatement(InfixExpression(SimpleName:destZip)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destZip))(SimpleName:closeEntry))))(IfStatement(InfixExpression(SimpleName:destDir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:gc)))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:classPathStr)(StringLiteral:<STR>)))))(ReturnStatement(BooleanLiteral:false))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassFormatException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GlobalOptions.err))))(ReturnStatement(BooleanLiteral:false))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GlobalOptions.err))))(ReturnStatement(BooleanLiteral:false))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RuntimeException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GlobalOptions.err))))(ReturnStatement(BooleanLiteral:false))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InternalError))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GlobalOptions.err))))(ReturnStatement(BooleanLiteral:false)))))))))