(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleName:MultipleGradientPaintContext)(SingleVariableDeclaration(SimpleType(SimpleName:ColorModel))(SimpleName:cm))(SingleVariableDeclaration(SimpleType(SimpleName:Rectangle))(SimpleName:deviceBounds))(SingleVariableDeclaration(SimpleType(SimpleName:Rectangle2D))(SimpleName:userBounds))(SingleVariableDeclaration(SimpleType(SimpleName:AffineTransform))(SimpleName:t))(SingleVariableDeclaration(SimpleType(SimpleName:RenderingHints))(SimpleName:hints))(SingleVariableDeclaration(ArrayType(PrimitiveType:float)(Dimension))(SimpleName:fractions))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Color))(Dimension))(SimpleName:colors))(SingleVariableDeclaration(SimpleType(QualifiedName:MultipleGradientPaint.CycleMethodEnum))(SimpleName:cycleMethod))(SingleVariableDeclaration(SimpleType(QualifiedName:MultipleGradientPaint.ColorSpaceEnum))(SimpleName:colorSpace))(SimpleType(SimpleName:NoninvertibleTransformException))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fixFirst)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:fixLast)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(QualifiedName:fractions.length)))(IfStatement(InfixExpression(ArrayAccess(SimpleName:fractions)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0f))(Block(ExpressionStatement(Assignment(SimpleName:fixFirst)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(PostfixExpression(SimpleName:len)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:fractions)(InfixExpression(QualifiedName:fractions.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:1.0f))(Block(ExpressionStatement(Assignment(SimpleName:fixLast)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(PostfixExpression(SimpleName:len)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:fractions.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(IfStatement(InfixExpression(ArrayAccess(SimpleName:fractions)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:fractions)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ExpressionStatement(PostfixExpression(SimpleName:len)(POSTFIX_EXPRESSION_OPERATOR:--)))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:fractions))(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(SimpleName:len))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Color))(Dimension))(VariableDeclarationFragment(SimpleName:loColors)(ArrayCreation(ArrayType(SimpleType(SimpleName:Color))(Dimension(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Color))(Dimension))(VariableDeclarationFragment(SimpleName:hiColors)(ArrayCreation(ArrayType(SimpleType(SimpleName:Color))(Dimension(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(SimpleName:normalizedIntervals)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(SimpleName:gradientUnderflow)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:colors)(NumberLiteral:0)))(SimpleName:getRGB))))(ExpressionStatement(Assignment(SimpleName:gradientOverflow)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:colors)(InfixExpression(QualifiedName:colors.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(SimpleName:getRGB))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(NumberLiteral:0)))(IfStatement(SimpleName:fixFirst)(Block(ExpressionStatement(Assignment(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:fractions))(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:loColors)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:colors)(NumberLiteral:0))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:hiColors)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:colors)(NumberLiteral:0))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:normalizedIntervals)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:fractions)(NumberLiteral:0))))(ExpressionStatement(PostfixExpression(SimpleName:idx)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:fractions.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:fractions)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:fractions)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:colors)(SimpleName:i)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:colors)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(Block(ExpressionStatement(Assignment(SimpleName:hasDiscontinuity)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ContinueStatement)))(ExpressionStatement(Assignment(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:fractions))(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:fractions)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:loColors)(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:colors)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:hiColors)(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:colors)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:normalizedIntervals)(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:fractions)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:fractions)(SimpleName:i)))))(ExpressionStatement(PostfixExpression(SimpleName:idx)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(Assignment(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:fractions))(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:fractions)(InfixExpression(QualifiedName:fractions.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(SimpleName:fixLast)(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:loColors)(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(Assignment(ArrayAccess(SimpleName:hiColors)(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:colors)(InfixExpression(QualifiedName:colors.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:normalizedIntervals)(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:fractions)(InfixExpression(QualifiedName:fractions.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(ExpressionStatement(PostfixExpression(SimpleName:idx)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:fractions))(SimpleName:idx))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))))(VariableDeclarationStatement(SimpleType(SimpleName:AffineTransform))(VariableDeclarationFragment(SimpleName:tInv)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:createInverse))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:m)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(NumberLiteral:6))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tInv))(SimpleName:getMatrix)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m))))(ExpressionStatement(Assignment(SimpleName:a00)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:m)(NumberLiteral:0)))))(ExpressionStatement(Assignment(SimpleName:a10)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:m)(NumberLiteral:1)))))(ExpressionStatement(Assignment(SimpleName:a01)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:m)(NumberLiteral:2)))))(ExpressionStatement(Assignment(SimpleName:a11)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:m)(NumberLiteral:3)))))(ExpressionStatement(Assignment(SimpleName:a02)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:m)(NumberLiteral:4)))))(ExpressionStatement(Assignment(SimpleName:a12)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:m)(NumberLiteral:5)))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:cycleMethod))(ASSIGNMENT_OPERATOR:=)(SimpleName:cycleMethod)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:colorSpace))(ASSIGNMENT_OPERATOR:=)(SimpleName:colorSpace)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cm))(SimpleName:getColorSpace))(INFIX_EXPRESSION_OPERATOR:==)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lrgbmodel_A))(SimpleName:getColorSpace)))(ExpressionStatement(Assignment(SimpleName:dataModel)(ASSIGNMENT_OPERATOR:=)(SimpleName:lrgbmodel_A)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cm))(SimpleName:getColorSpace))(INFIX_EXPRESSION_OPERATOR:==)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srgbmodel_A))(SimpleName:getColorSpace)))(ExpressionStatement(Assignment(SimpleName:dataModel)(ASSIGNMENT_OPERATOR:=)(SimpleName:srgbmodel_A)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:calculateGradientFractions)(METHOD_INVOCATION_ARGUMENTS(SimpleName:loColors)(SimpleName:hiColors))))(ExpressionStatement(Assignment(SimpleName:model)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GraphicsUtil))(SimpleName:coerceColorModel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataModel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cm))(SimpleName:isAlphaPremultiplied))))))))))