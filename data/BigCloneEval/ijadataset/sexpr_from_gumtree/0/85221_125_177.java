(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:createPatch)(Block(VariableDeclarationStatement(SimpleType(SimpleName:DirectoryManager))(VariableDeclarationFragment(SimpleName:s)(ClassInstanceCreation(SimpleType(SimpleName:DirectoryManager))(SimpleName:dirSource))))(VariableDeclarationStatement(SimpleType(SimpleName:DirectoryManager))(VariableDeclarationFragment(SimpleName:m)(ClassInstanceCreation(SimpleType(SimpleName:DirectoryManager))(SimpleName:dirModif))))(VariableDeclarationStatement(SimpleType(SimpleName:DirectoryManager))(VariableDeclarationFragment(SimpleName:d)(ClassInstanceCreation(SimpleType(SimpleName:DirectoryManager))(SimpleName:dirDest))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:res)(StringLiteral:<STR>)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:myWindow)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.progress))(SimpleName:setValue)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.progress))(SimpleName:setMaximum)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:calcNumFiles)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)(BooleanLiteral:false))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.info))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:skimThroughSource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)(SimpleName:m)(SimpleName:d))))(WhileStatement(InfixExpression(SimpleName:threadRunning)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:writeOnLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:threadRunning)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:500))))))(IfStatement(InfixExpression(SimpleName:myWindow)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.progress))(SimpleName:setValue)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.progress))(SimpleName:setMaximum)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:calcNumFiles)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)(BooleanLiteral:false))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.info))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:skimThroughMod)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)(SimpleName:m)(SimpleName:d)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:res)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e))))(ExpressionStatement(MethodInvocation(SimpleName:writeOnLog)(METHOD_INVOCATION_ARGUMENTS(SimpleName:res))))(ReturnStatement(SimpleName:res)))))(TryStatement(Block(WhileStatement(InfixExpression(SimpleName:threadRunning)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:writeOnLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:threadRunning)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:500)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:writeOnLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:threadRunning)(StringLiteral:<STR>)(SimpleName:e))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesToDelete))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md5File))(SimpleName:close)))(IfStatement(InfixExpression(SimpleName:myWindow)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.progress))(SimpleName:setValue)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.progress))(SimpleName:setMaximum)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:calcNumFiles)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)(BooleanLiteral:false))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.info))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipCreator))(VariableDeclarationFragment(SimpleName:z)(ClassInstanceCreation(SimpleType(SimpleName:ZipCreator))(ThisExpression)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dirDest))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:tempDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator))(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:zipName))(SimpleName:dirDest))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:zipCreated)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:z))(SimpleName:create))))(IfStatement(InfixExpression(SimpleName:myWindow)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:myWindow.info))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myWindow))(SimpleName:repaint)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:d))(SimpleName:deleteMe)))(IfStatement(SimpleName:zipCreated)(ExpressionStatement(Assignment(SimpleName:res)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dirDest))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:tempDir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator))(StringLiteral:<STR>)))(SimpleName:zipName)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:res)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(ReturnStatement(SimpleName:res))))))