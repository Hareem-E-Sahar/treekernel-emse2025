(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:InputStream))(SimpleName:openInputStream)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:path))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(IfStatement(InfixExpression(InfixExpression(SimpleName:resource)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resource))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileNotFoundException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:path)(StringLiteral:<STR>)(SimpleName:resource)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resource))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:temp_url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:resource))))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:org.fao.waicent.util.InputStreamWithLength))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp_url))(SimpleName:openStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp_url))(SimpleName:openConnection)))(SimpleName:getContentLength)))))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:path))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:temp_url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:path))(SimpleName:resource))))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:org.fao.waicent.util.InputStreamWithLength))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp_url))(SimpleName:openStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp_url))(SimpleName:openConnection)))(SimpleName:getContentLength)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ff)(MethodInvocation(SimpleName:getAbsoluteFilename)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:org.fao.waicent.util.InputStreamWithLength))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:ff))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:ff)))(SimpleName:length))))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resource))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resource))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipInputStream))(VariableDeclarationFragment(SimpleName:zin)(ClassInstanceCreation(SimpleType(SimpleName:ZipInputStream))(SimpleName:in))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zin))(SimpleName:getNextEntry)))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(SimpleName:zin)))))(ReturnStatement(SimpleName:in))))))