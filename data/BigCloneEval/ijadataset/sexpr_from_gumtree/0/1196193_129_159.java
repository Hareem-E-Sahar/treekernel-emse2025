(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:inverseCumulativeProbability)(SingleVariableDeclaration(Modifier:final)(PrimitiveType:double)(SimpleName:p))(SimpleType(SimpleName:MathException))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0.0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.0)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x0)(MethodInvocation(SimpleName:getDomainLowerBound)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x1)(MethodInvocation(SimpleName:getDomainUpperBound)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:pm)))(WhileStatement(InfixExpression(SimpleName:x0)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:x1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xm)(InfixExpression(SimpleName:x0)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x0)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(ExpressionStatement(Assignment(SimpleName:pm)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:cumulativeProbability)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xm)))))(IfStatement(InfixExpression(SimpleName:pm)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:p))(Block(IfStatement(InfixExpression(SimpleName:xm)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:x1))(Block(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:--)(SimpleName:x1))))(Block(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:xm))))))(Block(IfStatement(InfixExpression(SimpleName:xm)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:x0))(Block(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:x0))))(Block(ExpressionStatement(Assignment(SimpleName:x0)(ASSIGNMENT_OPERATOR:=)(SimpleName:xm)))))))))(ExpressionStatement(Assignment(SimpleName:pm)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:cumulativeProbability)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x0)))))(WhileStatement(InfixExpression(SimpleName:pm)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:p))(Block(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:--)(SimpleName:x0)))(ExpressionStatement(Assignment(SimpleName:pm)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:cumulativeProbability)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x0)))))))(ReturnStatement(SimpleName:x0))))))