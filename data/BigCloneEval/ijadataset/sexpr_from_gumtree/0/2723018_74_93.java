(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:applyXsltFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:xsltFileName))(SingleVariableDeclaration(SimpleType(SimpleName:StringWriter))(SimpleName:writer))(SingleVariableDeclaration(SimpleType(SimpleName:Result))(SimpleName:result))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:xsltUrl)(MethodInvocation(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xsltFileName)))))(IfStatement(InfixExpression(SimpleName:xsltUrl)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:severe)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:xsltFileName)(StringLiteral:<STR>)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:xsltFileName)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:xsltStream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xsltUrl))(SimpleName:openStream))))(VariableDeclarationStatement(SimpleType(SimpleName:Source))(VariableDeclarationFragment(SimpleName:xsltSource)(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(SimpleName:xsltStream))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:StringReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:getBuffer)))(SimpleName:toString)))))(VariableDeclarationStatement(SimpleType(SimpleName:TransformerFactory))(VariableDeclarationFragment(SimpleName:transFact)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TransformerFactory))(SimpleName:newInstance))))(VariableDeclarationStatement(SimpleType(SimpleName:Transformer))(VariableDeclarationFragment(SimpleName:trans)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transFact))(SimpleName:newTransformer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xsltSource)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trans))(SimpleName:setParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DateFormat))(SimpleName:getDateInstance)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:DateFormat.SHORT))))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trans))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(SimpleName:reader))(SimpleName:result))))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:freemind.main.Resources))(SimpleName:getInstance)))(SimpleName:logException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ReturnStatement(BooleanLiteral:false)))))))))