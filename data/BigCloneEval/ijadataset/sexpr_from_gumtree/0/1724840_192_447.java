(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:decrypt)(SingleVariableDeclaration(SimpleType(SimpleName:HashMap))(SimpleName:credentialsMap))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:input))(SimpleType(SimpleName:SkceWSException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:base64key)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:token)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:USE_ZIPINPUTSTREAM)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayInputStream))(VariableDeclarationFragment(SimpleName:bais)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:ctis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:xmlis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipInputStream))(VariableDeclarationFragment(SimpleName:zis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:algorithm)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:transform)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:hosturl)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:olddigest)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:digesttype)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xmlfilesize)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ctxtfilename)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:entryname)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:xmldoc)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKey))(VariableDeclarationFragment(SimpleName:sk)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:SecretKeyObject))(VariableDeclarationFragment(SimpleName:sko)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:ivbytes)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:IvParameterSpec))(VariableDeclarationFragment(SimpleName:ivspec)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Cipher))(VariableDeclarationFragment(SimpleName:cipher)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:inpf)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:input))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:input))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:isFile)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:input))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:canRead)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:input))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:input)))))))))(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:input))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:input))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:CUTOFF_SIZE))(Block(ExpressionStatement(Assignment(SimpleName:USE_ZIPINPUTSTREAM)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(ArrayCreation(ArrayType(PrimitiveType:long)(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:length))(SimpleName:CUTOFF_SIZE)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(ArrayCreation(ArrayType(PrimitiveType:long)(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:length))(SimpleName:CUTOFF_SIZE))))))))(IfStatement(SimpleName:USE_ZIPINPUTSTREAM)(Block(ExpressionStatement(Assignment(SimpleName:zis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipInputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:fis)(SimpleName:BUFFER_SIZE)))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:getNextEntry))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:entryname)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryname))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:XMLENC_FILE_EXTENSION)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:entryname))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(SimpleName:BUFFER_SIZE))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:data)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER_SIZE))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:BUFFER_SIZE)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:count))))))(ExpressionStatement(Assignment(SimpleName:xmldoc)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))))(BreakStatement)))))(ExpressionStatement(Assignment(SimpleName:bais)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:xmldoc))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:xmldoc.length)))(SimpleName:input))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zipfile)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(SimpleName:input))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Enumeration))(SimpleType(SimpleName:ZipEntry)))(VariableDeclarationFragment(SimpleName:entries)(CastExpression(ParameterizedType(SimpleType(SimpleName:Enumeration))(SimpleType(SimpleName:ZipEntry)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:entries)))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:hasMoreElements))(Block(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:nextElement))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:XMLENC_FILE_EXTENSION)))(Block(ExpressionStatement(Assignment(SimpleName:xmlfilesize)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getSize)))))(ExpressionStatement(Assignment(SimpleName:xmlis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))(SimpleName:BUFFER_SIZE)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CIPHERTEXT_FILE_EXTENSION)))(Block(ExpressionStatement(Assignment(SimpleName:ctxtfilename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))))(ExpressionStatement(Assignment(SimpleName:ctis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))(SimpleName:BUFFER_SIZE)))))))))(ExpressionStatement(Assignment(SimpleName:xmldoc)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(CastExpression(PrimitiveType:int)(SimpleName:xmlfilesize)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmlis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmldoc)))))(ExpressionStatement(Assignment(SimpleName:bais)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:xmldoc))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)))(SimpleName:input))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINE)(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilderFactory))(VariableDeclarationFragment(SimpleName:factory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DocumentBuilderFactory))(SimpleName:newInstance))))(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilder))(VariableDeclarationFragment(SimpleName:builder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:factory))(SimpleName:newDocumentBuilder))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais))))(VariableDeclarationStatement(SimpleType(SimpleName:XPath))(VariableDeclarationFragment(SimpleName:xpath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XPathFactory))(SimpleName:newInstance)))(SimpleName:newXPath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xpath))(SimpleName:setNamespaceContext)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:SKCENamespaceContext))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputSource))(VariableDeclarationFragment(SimpleName:is)(ClassInstanceCreation(SimpleType(SimpleName:InputSource))(SimpleName:bais))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:did)(MethodInvocation(SimpleName:getXPathElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:is)(SimpleName:xpath)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:did)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:did))))(VariableDeclarationStatement(SimpleType(SimpleName:Domain))(VariableDeclarationFragment(SimpleName:domain)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:credentialsMap)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:domain)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Domain))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:credentialsMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:did)))))))(IfStatement(InfixExpression(SimpleName:domain)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:username)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:domain))(SimpleName:getUsername))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:password)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:domain))(SimpleName:getPassword))))(ExpressionStatement(Assignment(SimpleName:algorithm)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getXPathAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:is)(SimpleName:xpath)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:algorithm))))(IfStatement(InfixExpression(SimpleName:algorithm)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:algorithm)(ASSIGNMENT_OPERATOR:=)(SimpleName:DEFAULT_ALGORITHM)))(ExpressionStatement(Assignment(SimpleName:transform)(ASSIGNMENT_OPERATOR:=)(SimpleName:DEFAULT_TRANSFORM)))(ExpressionStatement(Assignment(SimpleName:ivbytes)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:DEFAULT_IV_SIZE)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithm))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:cipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:AES_TRANSFORM)))))(ExpressionStatement(Assignment(SimpleName:transform)(ASSIGNMENT_OPERATOR:=)(SimpleName:AES_TRANSFORM)))(ExpressionStatement(Assignment(SimpleName:ivbytes)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:16)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algorithm))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:cipher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Cipher))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DESEDE_TRANSFORM)))))(ExpressionStatement(Assignment(SimpleName:transform)(ASSIGNMENT_OPERATOR:=)(SimpleName:DESEDE_TRANSFORM)))(ExpressionStatement(Assignment(SimpleName:ivbytes)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:8)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:algorithm))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:algorithm))))))))(ExpressionStatement(Assignment(SimpleName:token)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getXPathElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:is)(SimpleName:xpath)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:token))))(ExpressionStatement(Assignment(SimpleName:hosturl)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getXPathAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:is)(SimpleName:xpath)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:hosturl))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:uri)(MethodInvocation(SimpleName:getXPathAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:is)(SimpleName:xpath)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:uri))))(ExpressionStatement(Assignment(SimpleName:olddigest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getXPathElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:is)(SimpleName:xpath)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:digesttype)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getXPathAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bais)(SimpleName:is)(SimpleName:xpath)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(SimpleName:olddigest)(SimpleName:digesttype))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:baseUrl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(QualifiedName:com.strongauth.strongkeylite.web.EncryptionService))))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:baseUrl)(SimpleName:hosturl))))(VariableDeclarationStatement(SimpleType(SimpleName:EncryptionService))(VariableDeclarationFragment(SimpleName:cryptosvc)(ClassInstanceCreation(SimpleType(SimpleName:EncryptionService))(SimpleName:url))))(VariableDeclarationStatement(SimpleType(SimpleName:Encryption))(VariableDeclarationFragment(SimpleName:port)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cryptosvc))(SimpleName:getEncryptionPort))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:hosturl))))(ExpressionStatement(Assignment(SimpleName:base64key)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:port))(SimpleName:decrypt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:parseLong)(METHOD_INVOCATION_ARGUMENTS(SimpleName:did)))(SimpleName:username)(SimpleName:password)(SimpleName:token)))))(IfStatement(InfixExpression(SimpleName:base64key)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:enckey)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Base64))(SimpleName:decode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:base64key)))))(ExpressionStatement(Assignment(SimpleName:sk)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SecretKeySpec))(SimpleName:enckey)(SimpleName:algorithm))))(ExpressionStatement(Assignment(SimpleName:sko)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SecretKeyObject))(SimpleName:sk)(SimpleName:algorithm)(SimpleName:transform))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:putSymmetricKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:token)(SimpleName:sko))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:token))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:createUniqueDir)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ENGINE_OUT_FOLDER)(BooleanLiteral:true)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:target)(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:CommonWS.fs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uri))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uri))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CIPHERTEXT_FILE_EXTENSION))))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outf)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:target))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:target))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:target))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:target))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:getParentFile))))(IfStatement(InfixExpression(SimpleName:parent)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getFreeSpace))(INFIX_EXPRESSION_OPERATOR:<)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inpf))(SimpleName:length))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getFreeSpace)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:getFreeSpace)))))))))(IfStatement(SimpleName:USE_ZIPINPUTSTREAM)(Block(ExpressionStatement(Assignment(SimpleName:zis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipInputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:input))(SimpleName:BUFFER_SIZE)))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:getNextEntry))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:entryname)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryname))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CIPHERTEXT_FILE_EXTENSION)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:entryname))))(BreakStatement)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ivbytes)(NumberLiteral:0)(QualifiedName:ivbytes.length))))(ExpressionStatement(Assignment(SimpleName:ivspec)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:IvParameterSpec))(SimpleName:ivbytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(QualifiedName:ivbytes.length)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ivbytes)(NumberLiteral:0)(QualifiedName:ivbytes.length))))(ExpressionStatement(Assignment(SimpleName:ivspec)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:IvParameterSpec))(SimpleName:ivbytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(QualifiedName:ivbytes.length))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:init)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Cipher.DECRYPT_MODE)(SimpleName:sk)(SimpleName:ivspec))))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:digest)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digesttype))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:digest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digesttype))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:digest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:digesttype))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:total)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:data)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER_SIZE))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:plaintext)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:newdigest)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedOutputStream))(VariableDeclarationFragment(SimpleName:bos)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:outf))(SimpleName:BUFFER_SIZE))))(IfStatement(SimpleName:USE_ZIPINPUTSTREAM)(Block(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:plaintext)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:count)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:plaintext)(NumberLiteral:0)(QualifiedName:plaintext.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:plaintext))))(ExpressionStatement(Assignment(SimpleName:total)(ASSIGNMENT_OPERATOR:+=)(SimpleName:count))))))(Block(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ctis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:plaintext)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(SimpleName:count)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:plaintext)(NumberLiteral:0)(QualifiedName:plaintext.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:plaintext))))(ExpressionStatement(Assignment(SimpleName:total)(ASSIGNMENT_OPERATOR:+=)(SimpleName:count)))))))(ExpressionStatement(Assignment(SimpleName:plaintext)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cipher))(SimpleName:doFinal))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:plaintext))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bos))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bos))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:total))))(ExpressionStatement(Assignment(SimpleName:newdigest)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Base64))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:plaintext))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:olddigest))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newdigest))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:olddigest)(CharacterLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:newdigest))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:length))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:getName)))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:getAbsolutePath))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(StringLiteral:<STR>)(SimpleName:did))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:did)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SAXException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ParserConfigurationException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:BadPaddingException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalBlockSizeException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidAlgorithmParameterException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidKeyException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchPaddingException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:StrongKeyLiteException_Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:GeneralSecurityException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex)))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:fis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SkceWSException))(SimpleName:ex))))))))))))