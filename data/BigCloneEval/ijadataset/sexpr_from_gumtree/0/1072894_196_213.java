(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:note)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:nCommand))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:nKeyCode))(Block(IfStatement(InfixExpression(SimpleName:nKeyCode)(INFIX_EXPRESSION_OPERATOR:<=)(QualifiedName:m_anManualFromKeyCode.length))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nManual)(ArrayAccess(SimpleName:m_anManualFromKeyCode)(SimpleName:nKeyCode))))(IfStatement(InfixExpression(SimpleName:nManual)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ShortMessage))(VariableDeclarationFragment(SimpleName:sm)(ClassInstanceCreation(SimpleType(SimpleName:ShortMessage)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sm))(SimpleName:setMessage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nCommand)(MethodInvocation(SimpleName:getChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nManual)))(MethodInvocation(SimpleName:getNote)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nManual)(SimpleName:nKeyCode)))(MethodInvocation(SimpleName:getVelocity)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nManual)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvalidMidiDataException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getReceiver)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nManual))))(SimpleName:send)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sm)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nKeyCode))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nKeyCode)))))))))))