(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:write)(Block(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myFile))(SimpleName:getParentFile))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myFile))(SimpleName:getParentFile)))(SimpleName:mkdirs))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedWriter))(VariableDeclarationFragment(SimpleName:writer)))(IfStatement(MethodInvocation(SimpleName:isZip))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myFile))(SimpleName:exists))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(ArrayType(PrimitiveType:byte)(Dimension)))(VariableDeclarationFragment(SimpleName:entries)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedList))(ArrayType(PrimitiveType:byte)(Dimension))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:ZipEntry)))(VariableDeclarationFragment(SimpleName:headers)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:ZipEntry))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zf)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(SimpleName:myFile))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Enumeration))(WildcardType(SimpleType(SimpleName:ZipEntry))))(VariableDeclarationFragment(SimpleName:enumeration)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zf))(SimpleName:entries))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:enumeration))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:ze)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:enumeration))(SimpleName:nextElement))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:data)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ze))(SimpleName:getSize))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zf))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(QualifiedName:data.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:headers))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:myFile))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ListIterator))(SimpleType(SimpleName:ZipEntry)))(VariableDeclarationFragment(SimpleName:header_iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:headers))(SimpleName:listIterator))))(EnhancedForStatement(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:data))(SimpleName:entries)(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:ze)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:header_iter))(SimpleName:next))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ze))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(NumberLiteral:0)(QualifiedName:data.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry))))))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:myFile)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:myNameInZip)))))(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(SimpleName:out))))))(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:myFile))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:resultClass))(SimpleName:myResultClasses)(Block(IfStatement(InfixExpression(SimpleName:resultClass)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:resultClass)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:columns)(QualifiedName:myResultClasses.length)))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:LinkedList))(ArrayType(SimpleType(SimpleName:String))(Dimension)))(SimpleName:page))(SimpleName:myResults)(Block(EnhancedForStatement(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:row))(SimpleName:page)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:column)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:row)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:result))(SimpleName:row)(Block(IfStatement(InfixExpression(SimpleName:result)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:result)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:column))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:columns))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:column)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exc))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exc))))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))