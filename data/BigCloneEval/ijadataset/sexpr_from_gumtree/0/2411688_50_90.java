(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Constructor))(SimpleName:run)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:BeanletApplicationContext))))(SimpleName:getName)))))(VariableDeclarationStatement(SimpleType(SimpleName:ClassLoader))(VariableDeclarationFragment(SimpleName:loader)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:getContextClassLoader))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Enumeration))(SimpleType(SimpleName:URL)))(VariableDeclarationFragment(SimpleName:urls)))(IfStatement(InfixExpression(SimpleName:loader)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:urls)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:BeanletApplicationContext))))(SimpleName:getClassLoader)))(SimpleName:getResources)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path))))))(Block(ExpressionStatement(Assignment(SimpleName:urls)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:getResources)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urls))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urls))(SimpleName:nextElement))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:className)(NullLiteral)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:className)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:className))(SimpleName:trim))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(VariableDeclarationFragment(SimpleName:cls)))(IfStatement(InfixExpression(SimpleName:loader)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:cls)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))))(Block(ExpressionStatement(Assignment(SimpleName:cls)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)(BooleanLiteral:true)(SimpleName:loader)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cls))(SimpleName:getModifiers))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:BeanletApplicationContext))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cls)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Modifier))(SimpleName:isAbstract)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m))))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Modifier))(SimpleName:isInterface)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:constructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cls))(SimpleName:getDeclaredConstructor))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Modifier))(SimpleName:isPublic)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:getModifiers)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:setAccessible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))(ReturnStatement(SimpleName:constructor)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ClassCastException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cls))(SimpleName:getName)))))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:close)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BeanletApplicationException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))))))))