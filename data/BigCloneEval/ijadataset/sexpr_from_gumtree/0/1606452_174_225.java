(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:DataRecord))(SimpleName:addRecord)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:input))(SimpleType(SimpleName:DataStoreException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:temporary)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:temporary)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:newTemporaryFile))))(VariableDeclarationStatement(SimpleType(SimpleName:DataIdentifier))(VariableDeclarationFragment(SimpleName:tempId)(ClassInstanceCreation(SimpleType(SimpleName:DataIdentifier))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temporary))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(SimpleName:usesIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempId))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:length)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:digest)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:DIGEST)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:output)(ClassInstanceCreation(SimpleType(SimpleName:DigestOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:temporary))(SimpleName:digest))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copyLarge)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(SimpleName:output))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close)))))(VariableDeclarationStatement(SimpleType(SimpleName:DataIdentifier))(VariableDeclarationFragment(SimpleName:identifier)(ClassInstanceCreation(SimpleType(SimpleName:DataIdentifier))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:digest)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)))(SynchronizedStatement(ThisExpression)(Block(ExpressionStatement(MethodInvocation(SimpleName:usesIdentifier)(METHOD_INVOCATION_ARGUMENTS(SimpleName:identifier))))(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:identifier)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getParentFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:mkdirs)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temporary))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))(Block(ExpressionStatement(Assignment(SimpleName:temporary)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temporary))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)))))))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:now)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:getLastModified)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:now)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ACCESS_TIME_RESOLUTION)))(Block(ExpressionStatement(MethodInvocation(SimpleName:setLastModified)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(InfixExpression(SimpleName:now)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ACCESS_TIME_RESOLUTION)))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:length))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(SimpleName:DIGEST)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:file))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inUse))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempId))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FileDataRecord))(SimpleName:identifier)(SimpleName:file))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DataStoreException))(InfixExpression(SimpleName:DIGEST)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DataStoreException))(StringLiteral:<STR>)(SimpleName:e)))))(Block(IfStatement(InfixExpression(SimpleName:temporary)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temporary))(SimpleName:delete)))))))))))