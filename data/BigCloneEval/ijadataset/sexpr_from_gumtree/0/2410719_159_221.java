(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(Modifier:synchronized)(PrimitiveType:void)(SimpleName:doInitialise)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:EntryRetrievalService))(VariableDeclarationFragment(SimpleName:entryRetrievalService)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:UniProtJAPI.factory))(SimpleName:getEntryRetrievalService))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:UniProtEntry))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryRetrievalService))(SimpleName:getUniProtEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id)))))(IfStatement(InfixExpression(SimpleName:entry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:uniProtId)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getUniProtId)))(SimpleName:getValue))))(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getType))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ProteinDescription))(VariableDeclarationFragment(SimpleName:proteinDescription)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getProteinDescription))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proteinDescription))(SimpleName:getRecommendedName)))(SimpleName:getFields)))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:setName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CollectionUtils))(SimpleName:getFirst)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proteinDescription))(SimpleName:getRecommendedName)))(SimpleName:getFields)))))(SimpleName:getValue)))))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:Name)))(VariableDeclarationFragment(SimpleName:iterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proteinDescription))(SimpleName:getAlternativeNames)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:Field)))(VariableDeclarationFragment(SimpleName:iterator2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next)))(SimpleName:getFields)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator2))(SimpleName:hasNext))(Block(ExpressionStatement(MethodInvocation(SimpleName:addSynonym)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator2))(SimpleName:next)))(SimpleName:getValue)))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:DatabaseCrossReference))(SimpleName:crossReference))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getDatabaseCrossReferences))(Block(IfStatement(InstanceofExpression(SimpleName:crossReference)(SimpleType(SimpleName:GeneIdImpl)))(Block(ExpressionStatement(Assignment(SimpleName:geneId)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:GeneIdImpl))(SimpleName:crossReference))))(SimpleName:getDbAccession))))))))(ExpressionStatement(Assignment(SimpleName:organisms)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:TreeSet))(SimpleType(SimpleName:String))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:organisms))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getOrganism)))(SimpleName:getCommonName)))(SimpleName:getValue)))))(ExpressionStatement(Assignment(SimpleName:ncbiTaxonomyIds)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:TreeSet))(SimpleType(SimpleName:String))))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:NcbiTaxonomyId)))(VariableDeclarationFragment(SimpleName:iterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getNcbiTaxonomyIds)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:NcbiTaxonomyId))(VariableDeclarationFragment(SimpleName:ncbiTaxonomyId)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ncbiTaxonomyIds))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ncbiTaxonomyId))(SimpleName:getValue)))))))(ExpressionStatement(Assignment(SimpleName:compartmentGoTerms)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedHashSet))(SimpleType(SimpleName:OntologyTerm))))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Comment))(SimpleName:comment))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getComments))(Block(IfStatement(InstanceofExpression(SimpleName:comment)(SimpleType(SimpleName:SubcellularLocationComment)))(Block(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:SubcellularLocation))(SimpleName:subcellularLocation))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:SubcellularLocationComment))(SimpleName:comment))))(SimpleName:getSubcellularLocations))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SubcellularLocationValue))(VariableDeclarationFragment(SimpleName:locationValue)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:subcellularLocation))(SimpleName:getLocation))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:location)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:locationValue))(SimpleName:getValue))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:OntologyTerm))(VariableDeclarationFragment(SimpleName:compartmentGoTerm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:OntologyUtils))(SimpleName:getInstance)))(SimpleName:getOntologyTerm)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Ontology.GO)(SimpleName:location)))))(IfStatement(InfixExpression(SimpleName:compartmentGoTerm)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:compartmentGoTerms))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:compartmentGoTerm))))))))))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:DatabaseCrossReference))(SimpleName:databaseCrossReference))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getDatabaseCrossReferences)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:DatabaseType.GO)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Go))(VariableDeclarationFragment(SimpleName:goCrossReference)(CastExpression(SimpleType(SimpleName:Go))(SimpleName:databaseCrossReference))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:goCrossReference))(SimpleName:getOntologyType)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CELLULAR_COMPARTMENT)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:OntologyTerm))(VariableDeclarationFragment(SimpleName:goTerm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:OntologyUtils))(SimpleName:getInstance)))(SimpleName:getOntologyTerm)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Ontology.GO)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:goCrossReference))(SimpleName:getGoId)))(SimpleName:getValue))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:compartmentGoTerms))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:goTerm))))))))(ExpressionStatement(Assignment(SimpleName:sequence)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getSequence)))(SimpleName:getValue))))(ExpressionStatement(MethodInvocation(SimpleName:addSynonym)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id))))(ExpressionStatement(MethodInvocation(SimpleName:addSynonym)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name))))(ExpressionStatement(MethodInvocation(SimpleName:addSynonym)(METHOD_INVOCATION_ARGUMENTS(SimpleName:geneId))))(ExpressionStatement(MethodInvocation(SimpleName:addSynonym)(METHOD_INVOCATION_ARGUMENTS(SimpleName:uniProtId))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:id)(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:cathNodes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RegularExpressionUtils))(SimpleName:getMatches)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:cathNode))(SimpleName:cathNodes)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:OntologyTerm))(VariableDeclarationFragment(SimpleName:cathTerm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:OntologyUtils))(SimpleName:getInstance)))(SimpleName:getOntologyTerm)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Ontology.CATH)(SimpleName:cathNode)))))(IfStatement(InfixExpression(SimpleName:cathTerm)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:addXref)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cathTerm)(QualifiedName:CVTerm.Type.BIOLOGICAL_QUALIFIER)(QualifiedName:CVTerm.Qualifier.BQB_HAS_PROPERTY))))))))))))))