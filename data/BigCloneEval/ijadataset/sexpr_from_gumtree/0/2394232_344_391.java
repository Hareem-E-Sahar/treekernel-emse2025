(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:getFile)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:ProtocolException))(SimpleType(SimpleName:DigestException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:protocol))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleName:protocol)(SimpleType(SimpleName:FileReq))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))(SimpleName:channel))))(VariableDeclarationStatement(SimpleType(SimpleName:FileStart))(VariableDeclarationFragment(SimpleName:fileResp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:protocol))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel)(TypeLiteral(SimpleType(QualifiedName:Protocol.FileStart)))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tmpFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:envDir)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:FileManager.TMP_SUFFIX)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpFile))(SimpleName:exists))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:deleted)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpFile))(SimpleName:delete))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:deleted))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EnvironmentFailureException))(SimpleName:unexpectedState)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tmpFile)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteBuffer))(VariableDeclarationFragment(SimpleName:buffer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteBuffer))(SimpleName:allocate)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogFileFeeder.TRANSFER_BYTES)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:reset)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fileStream)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:tmpFile))))(TryStatement(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:bytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileResp))(SimpleName:getFileLength))))(InfixExpression(SimpleName:bytes)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:readSize)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogFileFeeder.TRANSFER_BYTES)(SimpleName:bytes))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:rewind)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:limit)(METHOD_INVOCATION_ARGUMENTS(SimpleName:readSize))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:actualBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channel))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(IfStatement(InfixExpression(SimpleName:actualBytes)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:readSize))))))(ExpressionStatement(Assignment(SimpleName:bytes)(ASSIGNMENT_OPERATOR:-=)(SimpleName:actualBytes)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:array))(NumberLiteral:0)(SimpleName:actualBytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:array))(NumberLiteral:0)(SimpleName:actualBytes))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileResp))(SimpleName:getFileLength))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileStream))(SimpleName:close)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileEnd))(VariableDeclarationFragment(SimpleName:fileEnd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:protocol))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel)(TypeLiteral(SimpleType(QualifiedName:Protocol.FileEnd)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:messageDigest))(SimpleName:digest))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileEnd))(SimpleName:getDigestSHA1)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warning)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DigestException))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(SimpleName:disposeObsoleteFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tmpFile)(StringLiteral:<STR>)(SimpleName:file)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:renamed)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpFile))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:renamed))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EnvironmentFailureException))(SimpleName:unexpectedState)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tmpFile)(StringLiteral:<STR>)(SimpleName:file)(StringLiteral:<STR>)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:setLastModified)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileResp))(SimpleName:getLastModifiedTime)))))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:EnvironmentFailureException))(SimpleName:unexpectedState)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Date))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileResp))(SimpleName:getLastModifiedTime)))(StringLiteral:<STR>)))))))))))