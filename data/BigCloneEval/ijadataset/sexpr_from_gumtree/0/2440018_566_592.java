(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:LogState))(SimpleName:readState)(SingleVariableDeclaration(SimpleType(SimpleName:PublicKey))(SimpleName:pkey))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start_us)(MethodInvocation(SimpleName:now_us))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:cached)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:LogState))(VariableDeclarationFragment(SimpleName:state)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:state_map))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pkey)))(Block(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:state_map))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pkey)))))(ExpressionStatement(Assignment(SimpleName:cached)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:key_prefix)(InfixExpression(SimpleName:root_dir)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(SimpleName:printPkey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pkey))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:key)(InfixExpression(SimpleName:key_prefix)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:key))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:exists))(Block(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:file)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:f)(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:BUG)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:key)(StringLiteral:<STR>)(SimpleName:e))))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fchannel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:open_writeable_files))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(SimpleName:fchannel))))(ExpressionStatement(Assignment(SimpleName:state)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:readState)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fchannel)))))(AssertStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:state_map))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pkey)(SimpleName:state)))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isInfoEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(SimpleName:cached)(StringLiteral:<STR>)(StringLiteral:<STR>)))(SimpleName:state)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(SimpleName:now_us))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start_us)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:1000.0)))(StringLiteral:<STR>))))))(ReturnStatement(SimpleName:state))))))