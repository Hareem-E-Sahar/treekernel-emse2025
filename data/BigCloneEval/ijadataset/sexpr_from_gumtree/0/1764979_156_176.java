(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(SimpleName:getLibraryPluginsList)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:pluginsDir))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:plugins)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:zipFiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pluginsDir))(SimpleName:listFiles)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileFilter))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:urlString)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:toURI)))(SimpleName:toURL))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:urlString))))(ReturnStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))(SimpleName:getContentLength))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getPath)))(SimpleName:e))))))))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:zipFile))(SimpleName:zipFiles)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:plugins))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getName)))))))(ReturnStatement(SimpleName:plugins))))))