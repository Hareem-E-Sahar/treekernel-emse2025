(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:getNextChangingElement)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:a0))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:isWhite))(SingleVariableDeclaration(ArrayType(PrimitiveType:int)(Dimension))(SimpleName:ret))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:pce)(FieldAccess(ThisExpression)(SimpleName:prevChangingElems))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ces)(FieldAccess(ThisExpression)(SimpleName:changingElemSize))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start)(ConditionalExpression(InfixExpression(SimpleName:lastChangingElement)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(InfixExpression(SimpleName:lastChangingElement)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(NumberLiteral:0))))(IfStatement(SimpleName:isWhite)(Block(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:&=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:~)(NumberLiteral:0x1)))))(Block(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:|=)(NumberLiteral:0x1)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(SimpleName:start)))(ForStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:ces))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:2))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:temp)(ArrayAccess(SimpleName:pce)(SimpleName:i))))(IfStatement(InfixExpression(SimpleName:temp)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:a0))(Block(ExpressionStatement(Assignment(SimpleName:lastChangingElement)(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ret)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:temp)))(BreakStatement)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:ces))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:ret)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:pce)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))))))