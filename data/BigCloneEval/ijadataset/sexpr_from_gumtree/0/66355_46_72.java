(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:DataTable))(SimpleName:generateDataTable)(SingleVariableDeclaration(SimpleType(SimpleName:Query))(SimpleName:query))(SingleVariableDeclaration(SimpleType(SimpleName:HttpServletRequest))(SimpleName:request))(SimpleType(SimpleName:DataSourceException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getParameter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:URL_PARAM_NAME)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isEmpty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DataSourceException))(QualifiedName:ReasonType.INVALID_REQUEST)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Reader))(VariableDeclarationFragment(SimpleName:reader)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:reader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:url)))(SimpleName:openStream)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DataSourceException))(QualifiedName:ReasonType.INVALID_REQUEST)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DataSourceException))(QualifiedName:ReasonType.INVALID_REQUEST)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)))))))(VariableDeclarationStatement(SimpleType(SimpleName:DataTable))(VariableDeclarationFragment(SimpleName:dataTable)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ULocale))(VariableDeclarationFragment(SimpleName:requestLocale)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DataSourceHelper))(SimpleName:getLocaleFromRequest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:dataTable)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CsvDataSourceHelper))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:reader)(NullLiteral)(BooleanLiteral:true)(SimpleName:requestLocale))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DataSourceException))(QualifiedName:ReasonType.INVALID_REQUEST)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)))))))(ReturnStatement(SimpleName:dataTable))))))