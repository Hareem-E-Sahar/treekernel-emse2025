(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:getEncodedKeyFrom)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:in))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(NumberLiteral:4096))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:4096))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:read))))))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toByteArray))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:asText)(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:buffer)(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:asText))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:BEGIN_PRIVATE_KEY)))))(IfStatement(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idxEnd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:asText))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:END_PRIVATE_KEY)))))(IfStatement(InfixExpression(SimpleName:idxEnd)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:END_PRIVATE_KEY))))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:nowhitespaces)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BEGIN_PRIVATE_KEY))(SimpleName:length)))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:idxEnd))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:c)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:asText))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Character))(SimpleName:isWhitespace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nowhitespaces))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Base64))(SimpleName:decode)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nowhitespaces))(SimpleName:toString))))))))(ReturnStatement(SimpleName:buffer))))))