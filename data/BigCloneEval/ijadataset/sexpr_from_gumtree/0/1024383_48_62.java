(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:InputStream))(SimpleName:OpenHttpConnection)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:strURL))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inputStream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:strURL))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:httpConn)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:conn))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpConn))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpConn))(SimpleName:connect)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpConn))(SimpleName:getResponseCode))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:HttpURLConnection.HTTP_OK))(Block(ExpressionStatement(Assignment(SimpleName:inputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpConn))(SimpleName:getInputStream)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))(ReturnStatement(SimpleName:inputStream))))))