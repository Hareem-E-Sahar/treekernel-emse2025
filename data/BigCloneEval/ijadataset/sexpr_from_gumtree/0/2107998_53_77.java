(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(Modifier:static)(SimpleType(SimpleName:SecretKey))(SimpleName:getKeyFromPassphrase)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:passphrase))(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:iv))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:keySize))(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleType(SimpleName:InvalidKeySpecException))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:passphraseBytes)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:passphraseBytes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:passphrase))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedEncodingException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Error))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:hash)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:key)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:keySize))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hashesSize)(InfixExpression(SimpleName:keySize)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xfffffff0))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:keySize)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xf)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:hashesSize)(ASSIGNMENT_OPERATOR:+=)(SimpleName:MD5_HASH_BYTES)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:hashes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:hashesSize))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:previous)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(NumberLiteral:0)))(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:MD5_HASH_BYTES)))(INFIX_EXPRESSION_OPERATOR:<=)(QualifiedName:hashes.length))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hash))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previous)(NumberLiteral:0)(QualifiedName:previous.length)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hash))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:passphraseBytes)(NumberLiteral:0)(QualifiedName:passphraseBytes.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hash))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:iv)(NumberLiteral:0)(QualifiedName:iv.length))))(ExpressionStatement(Assignment(SimpleName:previous)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hash))(SimpleName:digest))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previous)(NumberLiteral:0)(SimpleName:hashes)(SimpleName:index)(QualifiedName:previous.length))))(ExpressionStatement(Assignment(SimpleName:index)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:previous.length)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hashes)(NumberLiteral:0)(SimpleName:key)(NumberLiteral:0)(QualifiedName:key.length))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:SecretKeySpec))(SimpleName:key)(StringLiteral:<STR>)))))))