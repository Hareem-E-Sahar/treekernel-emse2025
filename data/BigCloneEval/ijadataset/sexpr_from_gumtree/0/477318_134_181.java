(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:getUrlDataAuth)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:url))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:username))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:password))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:ClientProtocolException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:reponse)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:DefaultHttpClient))(VariableDeclarationFragment(SimpleName:httpclient)(ClassInstanceCreation(SimpleType(SimpleName:DefaultHttpClient)))))(IfStatement(QualifiedName:Common.DEBUG)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:d)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Common.TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpGet))(VariableDeclarationFragment(SimpleName:httpget)(ClassInstanceCreation(SimpleType(SimpleName:HttpGet))(SimpleName:url))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpRequestInterceptor))(VariableDeclarationFragment(SimpleName:preemptiveAuth)(ClassInstanceCreation(SimpleType(SimpleName:HttpRequestInterceptor))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:process)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:HttpRequest))(SimpleName:request))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:HttpContext))(SimpleName:context))(SimpleType(SimpleName:HttpException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AuthState))(VariableDeclarationFragment(SimpleName:authState)(CastExpression(SimpleType(SimpleName:AuthState))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ClientContext.TARGET_AUTH_STATE))))))(VariableDeclarationStatement(SimpleType(SimpleName:CredentialsProvider))(VariableDeclarationFragment(SimpleName:credsProvider)(CastExpression(SimpleType(SimpleName:CredentialsProvider))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ClientContext.CREDS_PROVIDER))))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpHost))(VariableDeclarationFragment(SimpleName:targetHost)(CastExpression(SimpleType(SimpleName:HttpHost))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ExecutionContext.HTTP_TARGET_HOST))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:authState))(SimpleName:getAuthScheme))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AuthScope))(VariableDeclarationFragment(SimpleName:authScope)(ClassInstanceCreation(SimpleType(SimpleName:AuthScope))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetHost))(SimpleName:getHostName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetHost))(SimpleName:getPort)))))(VariableDeclarationStatement(SimpleType(SimpleName:Credentials))(VariableDeclarationFragment(SimpleName:creds)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:credsProvider))(SimpleName:getCredentials)(METHOD_INVOCATION_ARGUMENTS(SimpleName:authScope)))))(IfStatement(InfixExpression(SimpleName:creds)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:authState))(SimpleName:setAuthScheme)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BasicScheme))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:authState))(SimpleName:setCredentials)(METHOD_INVOCATION_ARGUMENTS(SimpleName:creds))))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:AuthScope))(VariableDeclarationFragment(SimpleName:authScope)(ClassInstanceCreation(SimpleType(SimpleName:AuthScope))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpget))(SimpleName:getURI)))(SimpleName:getHost))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpget))(SimpleName:getURI)))(SimpleName:getPort))(QualifiedName:AuthScope.ANY_REALM))))(VariableDeclarationStatement(SimpleType(SimpleName:UsernamePasswordCredentials))(VariableDeclarationFragment(SimpleName:userpass)(ClassInstanceCreation(SimpleType(SimpleName:UsernamePasswordCredentials))(SimpleName:username)(SimpleName:password))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpclient))(SimpleName:getCredentialsProvider)))(SimpleName:setCredentials)(METHOD_INVOCATION_ARGUMENTS(SimpleName:authScope)(SimpleName:userpass))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpclient))(SimpleName:addRequestInterceptor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:preemptiveAuth)(NumberLiteral:0))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpResponse))(VariableDeclarationFragment(SimpleName:response)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpclient))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpget)))))(IfStatement(QualifiedName:Common.DEBUG)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:i)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Common.TAG)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:getStatusLine)))(SimpleName:toString))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:getStatusLine)))(SimpleName:getStatusCode))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:200))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpEntity))(VariableDeclarationFragment(SimpleName:entity)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:getEntity))))(IfStatement(QualifiedName:Common.DEBUG)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:d)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Common.TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entity))(SimpleName:getContentLength)))))))(IfStatement(InfixExpression(SimpleName:entity)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:reponse)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Common))(SimpleName:convertStreamToString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entity))))))(Block(ExpressionStatement(Assignment(SimpleName:reponse)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:getStatusLine)))(SimpleName:toString)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClientProtocolException))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:ClientProtocolException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:getStatusLine)))(SimpleName:toString)))))(ThrowStatement(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClientProtocolException))(SimpleName:e))(Block(ThrowStatement(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(SimpleName:e)))))(IfStatement(QualifiedName:Common.DEBUG)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:i)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Common.TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:reponse))))))(ReturnStatement(SimpleName:reponse))))))