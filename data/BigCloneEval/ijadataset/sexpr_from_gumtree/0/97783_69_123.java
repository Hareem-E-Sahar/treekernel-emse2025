(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:run)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:runId))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:timeLimit))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:memoryLimit))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:input))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:output))(Block(ExpressionStatement(Assignment(SimpleName:timeWaste)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:memoryWaste)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(SimpleName:System_Error)))(ExpressionStatement(Assignment(SimpleName:process)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Timer))(VariableDeclarationFragment(SimpleName:timer)(ClassInstanceCreation(SimpleType(SimpleName:Timer)))))(VariableDeclarationStatement(SimpleType(SimpleName:TimerTask))(VariableDeclarationFragment(SimpleName:task)(ClassInstanceCreation(SimpleType(SimpleName:TimerTask))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:destroy)))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(SimpleName:Time_Limit_Exceeded)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Runtime))(VariableDeclarationFragment(SimpleName:runtime)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:before)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:runtime))(SimpleName:freeMemory))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:after)(SimpleName:before)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:process)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:runtime))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:RUN)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:runId)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:after)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:runtime))(SimpleName:freeMemory))))(ExpressionStatement(Assignment(SimpleName:memoryWaste)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:before)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:after))))(IfStatement(InfixExpression(SimpleName:memoryWaste)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:memoryLimit))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:destroy)))(ReturnStatement(SimpleName:Memory_Limit_Exceeded))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:stdIn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamHandler))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamHandler))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:getOutputStream))(SimpleName:stdIn))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:startTime)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:schedule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:task)(SimpleName:timeLimit))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:userOut)(MethodInvocation(SimpleName:getUserOut))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:waitFor)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:exitValue)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:exitValue))))(IfStatement(InfixExpression(InfixExpression(SimpleName:exitValue)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:exitValue)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:cancel)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:destroy)))(ReturnStatement(SimpleName:Runtime_Error))))(ExpressionStatement(Assignment(SimpleName:timeWaste)(ASSIGNMENT_OPERATOR:=)(SimpleName:timeLimit)))(IfStatement(InfixExpression(SimpleName:status)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:System_Error))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:task))(SimpleName:cancel)))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:endTime)(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(ExpressionStatement(Assignment(SimpleName:timeWaste)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:endTime))(SimpleName:getTime))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:startTime))(SimpleName:getTime)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Matcher))(SimpleName:matchDirectly)(METHOD_INVOCATION_ARGUMENTS(SimpleName:output)(SimpleName:userOut)))))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(SimpleName:result))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:runId)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:exitValue))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:destroy)))))(ReturnStatement(SimpleName:System_Error)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:destroy)))(ReturnStatement(SimpleName:status))))))