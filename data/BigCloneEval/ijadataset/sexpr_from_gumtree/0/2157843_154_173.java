(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:fromResource)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:resourceLocation))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:outputFile))(SingleVariableDeclaration(SimpleType(SimpleName:Hashtable))(SimpleName:variables))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:batchFile)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:batchFileChars)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:batchFileChars)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourceLoader))(SimpleName:instance)))(SimpleName:getBytesFromResourceLocation)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resourceLocation))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:resourceLocation)(StringLiteral:<STR>)))))(ReturnStatement(BooleanLiteral:false)))))(IfStatement(InfixExpression(SimpleName:batchFileChars)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(BooleanLiteral:false)))(Block(ExpressionStatement(Assignment(SimpleName:batchFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:batchFileChars)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringReader))(VariableDeclarationFragment(SimpleName:sreader)(ClassInstanceCreation(SimpleType(SimpleName:StringReader))(SimpleName:batchFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outputFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:outputFile))))(ExpressionStatement(MethodInvocation(SimpleName:createBatchFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sreader)(SimpleName:writer)(SimpleName:variables))))))(ReturnStatement(BooleanLiteral:true))))))