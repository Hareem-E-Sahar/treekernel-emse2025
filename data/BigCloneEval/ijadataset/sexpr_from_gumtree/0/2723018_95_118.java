(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:exportToOoWriter)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SingleVariableDeclaration(SimpleType(SimpleName:StringWriter))(SimpleName:writer))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:xslts))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:resultValue)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zipout)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:file)))))(VariableDeclarationStatement(SimpleType(SimpleName:Result))(VariableDeclarationFragment(SimpleName:result)(ClassInstanceCreation(SimpleType(SimpleName:StreamResult))(SimpleName:zipout))))(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:tokenizer)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:xslts)(StringLiteral:<STR>))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:hasMoreTokens))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:token)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:nextToken))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:token))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(QualifiedName:files.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(ArrayAccess(SimpleName:files)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipout))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:files)(NumberLiteral:0)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:files)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(SimpleName:files)(NumberLiteral:1))))))(ExpressionStatement(Assignment(SimpleName:resultValue)(ASSIGNMENT_OPERATOR:&=)(MethodInvocation(SimpleName:applyXsltFile)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:files)(NumberLiteral:0))(SimpleName:writer)(SimpleName:result))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:files)(NumberLiteral:0))(StringLiteral:<STR>)(ArrayAccess(SimpleName:files)(NumberLiteral:1))))))(ExpressionStatement(Assignment(SimpleName:resultValue)(ASSIGNMENT_OPERATOR:&=)(MethodInvocation(SimpleName:copyFromResource)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:files)(NumberLiteral:0))(SimpleName:zipout)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipout))(SimpleName:closeEntry)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipout))(SimpleName:close)))(ReturnStatement(SimpleName:resultValue))))))