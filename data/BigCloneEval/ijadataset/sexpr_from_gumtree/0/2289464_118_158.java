(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:parseTemplate)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:templateFile))(SingleVariableDeclaration(SimpleType(SimpleName:Map))(SimpleName:dataMap))(SimpleType(SimpleName:ContainerException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:templateFile))(SimpleName:getAbsolutePath)))(SimpleName:module))))(VariableDeclarationStatement(SimpleType(SimpleName:Reader))(VariableDeclarationFragment(SimpleName:reader)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:reader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:templateFile))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ContainerException))(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:targetDirectoryName)(ConditionalExpression(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(ArrayAccess(SimpleName:args)(NumberLiteral:1))(NullLiteral))))(IfStatement(InfixExpression(SimpleName:targetDirectoryName)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:targetDirectoryName)(ASSIGNMENT_OPERATOR:=)(SimpleName:target)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:targetDirectory)(InfixExpression(SimpleName:ofbizHome)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:targetDirectoryName)(ArrayAccess(SimpleName:args)(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetDirectory))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetDir))(SimpleName:exists)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:created)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetDir))(SimpleName:mkdirs))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:created))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ContainerException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:targetDirectory))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetDirectory))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:targetDirectory)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:targetDirectory)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:Writer))(VariableDeclarationFragment(SimpleName:writer)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(InfixExpression(SimpleName:targetDirectory)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:templateFile))(SimpleName:getName)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ContainerException))(SimpleName:e))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FreeMarkerWorker))(SimpleName:renderTemplate)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:templateFile))(SimpleName:getAbsolutePath))(SimpleName:reader)(SimpleName:dataMap)(SimpleName:writer)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ContainerException))(SimpleName:e))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ContainerException))(SimpleName:e))))))))))