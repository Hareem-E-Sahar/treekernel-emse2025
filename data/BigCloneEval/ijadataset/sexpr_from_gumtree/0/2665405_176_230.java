(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:IProject))(SimpleName:createCopyProject)(SingleVariableDeclaration(SimpleType(SimpleName:IProject))(SimpleName:project))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:pName))(SingleVariableDeclaration(SimpleType(SimpleName:IWorkspace))(SimpleName:ws))(SingleVariableDeclaration(SimpleType(SimpleName:IProgressMonitor))(SimpleName:pm))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pm))(SimpleName:beginTask)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NumberLiteral:1))))(VariableDeclarationStatement(SimpleType(SimpleName:IPath))(VariableDeclarationFragment(SimpleName:destination)(ClassInstanceCreation(SimpleType(SimpleName:Path))(SimpleName:pName))))(VariableDeclarationStatement(SimpleType(SimpleName:IJavaProject))(VariableDeclarationFragment(SimpleName:oldJavaproj)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JavaCore))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(SimpleName:project)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:IClasspathEntry))(Dimension))(VariableDeclarationFragment(SimpleName:classPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oldJavaproj))(SimpleName:getRawClasspath))))(VariableDeclarationStatement(SimpleType(SimpleName:IProject))(VariableDeclarationFragment(SimpleName:newProject)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ResourcesPlugin))(SimpleName:getWorkspace)))(SimpleName:getRoot)))(SimpleName:getProject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(NullLiteral))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:IProjectDescription))(VariableDeclarationFragment(SimpleName:desc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:getDescription))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:desc))(SimpleName:setNatureIds)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(QualifiedName:JavaCore.NATURE_ID))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:setDescription)(METHOD_INVOCATION_ARGUMENTS(SimpleName:desc)(NullLiteral))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:IClasspathEntry)))(VariableDeclarationFragment(SimpleName:newClassPath)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:IClasspathEntry))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:IClasspathEntry))(SimpleName:cEntry))(SimpleName:classPath)(Block(SwitchStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cEntry))(SimpleName:getEntryKind))(SwitchCase(QualifiedName:IClasspathEntry.CPE_SOURCE))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cEntry))(SimpleName:getPath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newClassPath))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:copySourceFolder)(METHOD_INVOCATION_ARGUMENTS(SimpleName:project)(SimpleName:newProject)(SimpleName:cEntry)(SimpleName:destination))))))(BreakStatement)(SwitchCase(QualifiedName:IClasspathEntry.CPE_LIBRARY))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cEntry))(SimpleName:getPath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newClassPath))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cEntry))))(BreakStatement)(SwitchCase(QualifiedName:IClasspathEntry.CPE_PROJECT))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cEntry))(SimpleName:getPath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newClassPath))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cEntry))))(BreakStatement)(SwitchCase(QualifiedName:IClasspathEntry.CPE_VARIABLE))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cEntry))(SimpleName:getPath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newClassPath))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cEntry))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cEntry))(SimpleName:getPath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newClassPath))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cEntry)))))))(ExpressionStatement(MethodInvocation(SimpleName:copyDir)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getLocation)))(SimpleName:toString))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:getLocation)))(SimpleName:toString))(StringLiteral:<STR>)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(AnonymousClassDeclaration(Initializer(Block(ExpressionStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:refreshLocal)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IResource.DEPTH_INFINITE)(SimpleName:pm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:build)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IncrementalProjectBuilder.AUTO_BUILD)(SimpleName:pm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:touch)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pm))))(VariableDeclarationStatement(SimpleType(SimpleName:IJavaProject))(VariableDeclarationFragment(SimpleName:javaproj)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JavaCore))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newProject)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaproj))(SimpleName:setOutputLocation)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Path))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newProject))(SimpleName:getName))(StringLiteral:<STR>)))(NullLiteral))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaproj))(SimpleName:setRawClasspath)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newClassPath))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:IClasspathEntry))(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newClassPath))(SimpleName:size)))))))(SimpleName:pm))))(VariableDeclarationStatement(SimpleType(SimpleName:Map))(VariableDeclarationFragment(SimpleName:opts)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:oldJavaproj))(SimpleName:getOptions)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaproj))(SimpleName:setOptions)(METHOD_INVOCATION_ARGUMENTS(SimpleName:opts))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaproj))(SimpleName:makeConsistent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pm))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaproj))(SimpleName:save)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pm)(BooleanLiteral:true))))(ReturnStatement(SimpleName:newProject))))))