(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:binarySearchWord)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:low))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:high))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:word))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:naik)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:turun)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start))(VariableDeclarationFragment(SimpleName:end)))(WhileStatement(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:high))(Block(ExpressionStatement(Assignment(SimpleName:mid)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:high)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:cariAwal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:cariAkhir)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:low))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:high)))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hasil)(MethodInvocation(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:array1)(SimpleName:start)(SimpleName:end)(SimpleName:word)))))(IfStatement(InfixExpression(SimpleName:hasil)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ReturnStatement(SimpleName:start)))(IfStatement(InfixExpression(SimpleName:hasil)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:3))))(ExpressionStatement(Assignment(SimpleName:naik)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:3))))(ExpressionStatement(Assignment(SimpleName:turun)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))))(IfStatement(InfixExpression(SimpleName:naik)(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:turun))(Block(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))