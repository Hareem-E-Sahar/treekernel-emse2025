(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:isUpToDate)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:File))(Dimension))(SimpleName:pSchemaFiles))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:File))(Dimension))(SimpleName:pBindingFiles))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:File))(Dimension))(SimpleName:pDependsFiles))(SingleVariableDeclaration(SimpleType(SimpleName:List))(SimpleName:pProducesList))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:FileSet))(Dimension))(VariableDeclarationFragment(SimpleName:myProduces)(MethodInvocation(SimpleName:getProduces))))(IfStatement(InfixExpression(QualifiedName:myProduces.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Project.MSG_VERBOSE))))(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:result)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:firstTarget)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:firstTargetFile)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:myProduces.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:dir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:myProduces)(SimpleName:i)))(SimpleName:getDir)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getProject))))))(IfStatement(InfixExpression(SimpleName:dir)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:dir)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getTarget))))(IfStatement(InfixExpression(SimpleName:dir)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:dir)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getProject)))(SimpleName:getBaseDir))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:myProduces)(SimpleName:i)))(SimpleName:setDir)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i)(StringLiteral:<STR>))(QualifiedName:Project.MSG_VERBOSE))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ContinueStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:DirectoryScanner))(VariableDeclarationFragment(SimpleName:scanner)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:myProduces)(SimpleName:i)))(SimpleName:getDirectoryScanner)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getProject))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanner))(SimpleName:scan)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanner))(SimpleName:getIncludedFiles))))(IfStatement(InfixExpression(QualifiedName:files.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i)(StringLiteral:<STR>))(QualifiedName:Project.MSG_VERBOSE))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dir)(ArrayAccess(SimpleName:files)(SimpleName:j))))(SimpleName:getAbsoluteFile))))(IfStatement(InfixExpression(SimpleName:pProducesList)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pProducesList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:l)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:lastModified))))(IfStatement(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:f)(StringLiteral:<STR>))(QualifiedName:Project.MSG_VERBOSE))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:firstTargetFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:firstTarget)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:l)))(Block(ExpressionStatement(Assignment(SimpleName:firstTargetFile)(ASSIGNMENT_OPERATOR:=)(SimpleName:f)))(ExpressionStatement(Assignment(SimpleName:firstTarget)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))))))))(IfStatement(MethodInvocation(SimpleName:isForce))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Project.MSG_VERBOSE))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:result))(Block(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:sourceFiles)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:pSchemaFiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:pSchemaFiles)(SimpleName:i)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:pBindingFiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:pBindingFiles)(SimpleName:i)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:pDependsFiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFiles))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:pDependsFiles)(SimpleName:i)))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:lastSource)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:lastSourceFile)(NullLiteral)))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFiles))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(CastExpression(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:l)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:lastModified))))(IfStatement(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:f)(StringLiteral:<STR>))(QualifiedName:Project.MSG_VERBOSE))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:lastSourceFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:lastSource)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l)))(Block(ExpressionStatement(Assignment(SimpleName:lastSource)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))(ExpressionStatement(Assignment(SimpleName:lastSourceFile)(ASSIGNMENT_OPERATOR:=)(SimpleName:f)))))))(IfStatement(InfixExpression(SimpleName:lastSourceFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Project.MSG_VERBOSE))))(ReturnStatement(BooleanLiteral:false))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:result))(Block(ReturnStatement(BooleanLiteral:false))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Generator))))(SimpleName:getClassLoader)))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Generator))))(SimpleName:getName)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:l)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))(SimpleName:getLastModified))))(IfStatement(InfixExpression(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:lastSource)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:l)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Project.MSG_DEBUG))))(ExpressionStatement(Assignment(SimpleName:lastSource)(ASSIGNMENT_OPERATOR:=)(SimpleName:l))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))(IfStatement(InfixExpression(SimpleName:lastSource)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:firstTarget))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lastSourceFile)(StringLiteral:<STR>)(SimpleName:firstTargetFile)(StringLiteral:<STR>))(QualifiedName:Project.MSG_VERBOSE))))(ReturnStatement(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Project.MSG_VERBOSE))))(ReturnStatement(BooleanLiteral:true))))))