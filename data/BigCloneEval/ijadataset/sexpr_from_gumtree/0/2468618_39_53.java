(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:int)(SimpleName:chopMonday)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:key))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:array)(Dimension))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:min)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max)(InfixExpression(QualifiedName:array.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:max))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:probe)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:max)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:key)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:array)(SimpleName:probe)))(Block(ReturnStatement(SimpleName:probe)))(IfStatement(InfixExpression(SimpleName:key)(INFIX_EXPRESSION_OPERATOR:>)(ArrayAccess(SimpleName:array)(SimpleName:probe)))(Block(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:probe)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:probe)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))