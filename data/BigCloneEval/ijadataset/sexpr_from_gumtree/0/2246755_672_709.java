(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:IVisualPart))(SimpleName:hittest)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:x))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:y))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:favorParent))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:margin)(ConditionalExpression(SimpleName:favorParent)(NumberLiteral:3)(NumberLiteral:0))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:element)(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_elements))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m_previousHittestElementIndex))))))(IfStatement(InfixExpression(SimpleName:element)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:element.m_vcp))(SimpleName:getBounds))))(IfStatement(InfixExpression(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:>=)(InfixExpression(QualifiedName:r.y)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:margin)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(InfixExpression(QualifiedName:r.y)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:r.height))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:margin))))(Block(ReturnStatement(QualifiedName:element.m_vcp)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:min)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_elements))(SimpleName:size))))(WhileStatement(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:max))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:max)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:min))(Block(BreakStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:element)(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_elements))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid))))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:element.m_vcp))(SimpleName:getBounds))))(IfStatement(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:r.y))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(SimpleName:mid))))(Block(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(SimpleName:mid)))))))(IfStatement(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:max))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:element)(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_elements))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:min))))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:element.m_vcp))(SimpleName:getBounds))))(IfStatement(InfixExpression(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:>=)(InfixExpression(QualifiedName:r.y)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:margin)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(InfixExpression(QualifiedName:r.y)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:r.height))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:margin))))(Block(ExpressionStatement(Assignment(SimpleName:m_previousHittestElementIndex)(ASSIGNMENT_OPERATOR:=)(SimpleName:min)))(ReturnStatement(QualifiedName:element.m_vcp))))))(ExpressionStatement(Assignment(SimpleName:m_previousHittestElementIndex)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ReturnStatement(NullLiteral))))))