(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:binaereSuche)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:LiIndex))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:ReIndex))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:element))(SingleVariableDeclaration(ArrayType(PrimitiveType:int)(Dimension))(SimpleName:array))(Block(IfStatement(InfixExpression(SimpleName:LiIndex)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:ReIndex))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(SimpleName:LiIndex)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:ReIndex))(Block(IfStatement(InfixExpression(SimpleName:element)(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:array)(SimpleName:LiIndex)))(Block(ReturnStatement(SimpleName:LiIndex)))(Block(ReturnStatement(InfixExpression(SimpleName:LiIndex)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:NeuLi))(VariableDeclarationFragment(SimpleName:NeuRe))(VariableDeclarationFragment(SimpleName:PivotIndex)))(ExpressionStatement(Assignment(SimpleName:PivotIndex)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:ReIndex)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:LiIndex)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:element)(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:array)(SimpleName:PivotIndex)))(Block(ExpressionStatement(Assignment(SimpleName:NeuLi)(ASSIGNMENT_OPERATOR:=)(SimpleName:LiIndex)))(ExpressionStatement(Assignment(SimpleName:NeuRe)(ASSIGNMENT_OPERATOR:=)(SimpleName:PivotIndex)))(ReturnStatement(MethodInvocation(SimpleName:binaereSuche)(METHOD_INVOCATION_ARGUMENTS(SimpleName:NeuLi)(SimpleName:NeuRe)(SimpleName:element)(SimpleName:array)))))(Block(ExpressionStatement(Assignment(SimpleName:NeuLi)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:PivotIndex)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:NeuRe)(ASSIGNMENT_OPERATOR:=)(SimpleName:ReIndex)))(ReturnStatement(MethodInvocation(SimpleName:binaereSuche)(METHOD_INVOCATION_ARGUMENTS(SimpleName:NeuLi)(SimpleName:NeuRe)(SimpleName:element)(SimpleName:array))))))))))))