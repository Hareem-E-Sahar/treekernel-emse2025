(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:Thread))(SimpleName:writeStdOut)(SingleVariableDeclaration(SimpleType(SimpleName:Process))(SimpleName:p))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:outputDirName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:outputFileName))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outputDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:outputDirName))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:isr)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInputStream)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:outfileName)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputDir))(SimpleName:getAbsolutePath))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:outputFileName))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:t_input)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileWriter))(VariableDeclarationFragment(SimpleName:fw)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fw)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:outfileName)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ioe))))(ReturnStatement))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytes)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:char)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:char)(Dimension(NumberLiteral:256))))))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(SimpleName:done)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:bytes)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))))))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:bytes)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:isr))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(IfStatement(InfixExpression(SimpleName:bytes)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fw))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:bytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fw))(SimpleName:flush))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignore))(Block(BreakStatement))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fw))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ioe))))(ReturnStatement))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t_input))(SimpleName:start)))(ReturnStatement(SimpleName:t_input))))))