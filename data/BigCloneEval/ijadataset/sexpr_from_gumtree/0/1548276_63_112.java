(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:StreamSource))(SimpleName:toStreamSource)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:source))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:encoding))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:asReader))(SimpleType(SimpleName:JSONSchemaException))(Block(ExpressionStatement(Assignment(SimpleName:encoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getEncoding)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encoding)))))(IfStatement(InfixExpression(InstanceofExpression(SimpleName:source)(SimpleType(SimpleName:URL)))(INFIX_EXPRESSION_OPERATOR:||)(InstanceofExpression(SimpleName:source)(SimpleType(SimpleName:URI))))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ConditionalExpression(ParenthesizedExpression(InstanceofExpression(SimpleName:source)(SimpleType(SimpleName:URL))))(CastExpression(SimpleType(SimpleName:URL))(SimpleName:source))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:URI))(SimpleName:source))))(SimpleName:toURL)))))(IfStatement(SimpleName:asReader)(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))(SimpleName:encoding)))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:muex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JSONSchemaException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source)(StringLiteral:<STR>)(SimpleName:muex))(SimpleName:muex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JSONSchemaException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source)(StringLiteral:<STR>)(SimpleName:ioex))(SimpleName:ioex)))))))(IfStatement(InstanceofExpression(SimpleName:source)(SimpleType(SimpleName:String)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(CastExpression(SimpleType(SimpleName:String))(SimpleName:source)))))(IfStatement(SimpleName:asReader)(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))(SimpleName:encoding)))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:muex))(Block(TryStatement(Block(IfStatement(SimpleName:asReader)(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utilities))(SimpleName:getReaderForResource)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(SimpleName:source))))(SimpleName:encoding))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:getContextClassLoader)))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(SimpleName:source)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:th))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JSONSchemaException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source)(StringLiteral:<STR>)(SimpleName:th))(SimpleName:th))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JSONSchemaException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source)(StringLiteral:<STR>)(SimpleName:ioex))(SimpleName:ioex)))))))(IfStatement(InfixExpression(InstanceofExpression(SimpleName:source)(SimpleType(SimpleName:File)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:File))(SimpleName:source))))(SimpleName:isFile)))(Block(TryStatement(Block(IfStatement(SimpleName:asReader)(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(CastExpression(SimpleType(SimpleName:File))(SimpleName:source)))(SimpleName:encoding)))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(CastExpression(SimpleType(SimpleName:File))(SimpleName:source))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JSONSchemaException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source)(StringLiteral:<STR>)(SimpleName:ioex))(SimpleName:ioex)))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JSONSchemaException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:source))))))))))))