(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sourceDirectory)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:args)(NumberLiteral:0)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDirectory))(SimpleName:isDirectory)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetDirectory)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:args)(NumberLiteral:1)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetDirectory))(SimpleName:isDirectory)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:localeKey)(ConditionalExpression(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(ArrayAccess(SimpleName:args)(NumberLiteral:2))(StringLiteral:<STR>))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:sourceFiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceDirectory))(SimpleName:list)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FilenameFilter))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:accept)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:matches)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:localeKey)(StringLiteral:<STR>)))))))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SimpleName:sourceFiles)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sourceFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:sourceDirectory)(SimpleName:name))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:sourceProperties)(MethodInvocation(SimpleName:readFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:targetFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetDirectory)(SimpleName:name))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetFile))(SimpleName:exists))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:targetProperties)(MethodInvocation(SimpleName:readFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetFile)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(ParameterizedType(SimpleType(SimpleName:Entry))(WildcardType)(WildcardType)))(VariableDeclarationFragment(SimpleName:missingProperties)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(ParameterizedType(SimpleType(SimpleName:Entry))(WildcardType)(WildcardType))))))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Entry))(WildcardType)(WildcardType))(SimpleName:entry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceProperties))(SimpleName:entrySet))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetProperties))(SimpleName:containsKey)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getKey)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:missingProperties))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:missingProperties))(SimpleName:isEmpty)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileWriter))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:targetFile)(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DateFormat))(SimpleName:getDateTimeInstance)))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date)))))(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Entry))(WildcardType)(WildcardType))(SimpleName:entry))(SimpleName:missingProperties)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getKey))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getValue))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileReader))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:sourceFile))))(VariableDeclarationStatement(SimpleType(SimpleName:FileWriter))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:targetFile))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:c))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))))))))))