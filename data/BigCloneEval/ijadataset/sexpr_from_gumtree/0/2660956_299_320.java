(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:storeClasses)(SingleVariableDeclaration(SimpleType(SimpleName:ZipOutputStream))(SimpleName:zip))(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(SimpleName:getChilds))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Identifier))(VariableDeclarationFragment(SimpleName:ident)(CastExpression(SimpleType(SimpleName:Identifier))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next)))))(IfStatement(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:Main.stripping)(INFIX_EXPRESSION_OPERATOR:&)(QualifiedName:Main.STRIP_UNREACH)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ident))(SimpleName:isReachable))))(Block(IfStatement(InfixExpression(QualifiedName:GlobalOptions.verboseLevel)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:4))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ident))(SimpleName:getFullName))(StringLiteral:<STR>))))))(ContinueStatement)))(IfStatement(InstanceofExpression(SimpleName:ident)(SimpleType(SimpleName:PackageIdentifier)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:PackageIdentifier))(SimpleName:ident))))(SimpleName:storeClasses)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zip))))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ident))(SimpleName:getFullAlias)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:filename)))))(VariableDeclarationStatement(SimpleType(SimpleName:DataOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:DataOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(SimpleName:zip)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:ClassIdentifier))(SimpleName:ident))))(SimpleName:storeClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:closeEntry))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:GlobalOptions.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ident))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GlobalOptions.err)))))))))))))))