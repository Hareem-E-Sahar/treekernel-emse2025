(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:test_digestLB$LILI)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MyMessageDigest1))(VariableDeclarationFragment(SimpleName:md)(ClassInstanceCreation(SimpleType(SimpleName:MyMessageDigest1))(StringLiteral:<STR>))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:b)(ArrayInitializer(NumberLiteral:1)(NumberLiteral:2)(NumberLiteral:3)(NumberLiteral:4)(NumberLiteral:5))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b)(NumberLiteral:2)(NumberLiteral:3))))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:md.runEngineDigest))))(ExpressionStatement(Assignment(SimpleName:md)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MyMessageDigest1)))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension))(ArrayInitializer(NumberLiteral:2)(NumberLiteral:4)(NumberLiteral:1)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(NumberLiteral:0)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(NumberLiteral:0)(InfixExpression(QualifiedName:bytes.length)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(QualifiedName:Integer.MAX_VALUE)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:offset)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:status)(NumberLiteral:33)))(ExpressionStatement(Assignment(SimpleName:md)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MyMessageDigest1))(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:int)(SimpleName:engineDigest)(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:arg0))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:arg1))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:arg2))(Block(ExpressionStatement(MethodInvocation(SimpleName:assertSame)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:bytes)(SimpleName:arg0))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:offset)(SimpleName:arg1))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:len)(SimpleName:arg2))))(ReturnStatement(SimpleName:status))))))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:status)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:md))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(SimpleName:offset)(SimpleName:len))))))))))