(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:long)(SimpleName:findNameExport)(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:exportAddress))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:exportsSize))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:hint))(Block(ExpressionStatement(MethodInvocation(SimpleName:loadExports)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exportAddress))))(IfStatement(InfixExpression(InfixExpression(SimpleName:hint)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:hint)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:exports.NumberOfFunctions)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:address)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:baseAddress)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:exports.AddressOfNames)(InfixExpression(NumberLiteral:4)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:hint)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nameAddress)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Memory))(SimpleName:mem_readd)(METHOD_INVOCATION_ARGUMENTS(SimpleName:address)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:baseAddress))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:possibleMatch)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:LittleEndianFile))(SimpleName:nameAddress)))(SimpleName:readCString))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:possibleMatch))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ordinal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Memory))(SimpleName:mem_readw)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:baseAddress)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:exports.AddressOfNameOrdinals)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:hint)))))))))(ReturnStatement(MethodInvocation(SimpleName:findOrdinalExport)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exportAddress)(SimpleName:exportsSize)(InfixExpression(SimpleName:ordinal)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:int)(QualifiedName:exports.Base))))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:min)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max)(InfixExpression(CastExpression(PrimitiveType:int)(QualifiedName:exports.NumberOfFunctions))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:max))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:res))(VariableDeclarationFragment(SimpleName:pos)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:max)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:address)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:baseAddress)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:exports.AddressOfNames)(InfixExpression(NumberLiteral:4)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:pos)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nameAddress)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Memory))(SimpleName:mem_readd)(METHOD_INVOCATION_ARGUMENTS(SimpleName:address)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:baseAddress))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:possibleMatch)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:LittleEndianFile))(SimpleName:nameAddress)))(SimpleName:readCString))))(IfStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:res)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:possibleMatch))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ordinal)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Memory))(SimpleName:mem_readw)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:baseAddress)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:exports.AddressOfNameOrdinals)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:pos)))))))))(ReturnStatement(MethodInvocation(SimpleName:findOrdinalExport)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exportAddress)(SimpleName:exportsSize)(InfixExpression(SimpleName:ordinal)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:int)(QualifiedName:exports.Base))))))))(IfStatement(InfixExpression(SimpleName:res)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ReturnStatement(NumberLiteral:0))))))