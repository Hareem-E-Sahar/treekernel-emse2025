(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:UnexpectedOption))(Block(VariableDeclarationStatement(SimpleType(SimpleName:OptionsParser))(VariableDeclarationFragment(SimpleName:o)(ClassInstanceCreation(SimpleType(SimpleName:OptionsParser)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:AddOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:AddOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:AddOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:AddOption)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:args)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))))(IfStatement(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:matched))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:packageName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:version)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:ToString)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(IfStatement(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:matched))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:packageName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:version)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:MacroEntry)))(VariableDeclarationFragment(SimpleName:vars)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:MacroEntry))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:verilog)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:errorCount)(NumberLiteral:0)))(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:file))(SimpleName:args)(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputParser))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:InputParser))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:errorCount)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:Parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vars)(SimpleName:verilog))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputParser))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:InputParser)))))(ExpressionStatement(Assignment(SimpleName:errorCount)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:Parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vars)(SimpleName:verilog)))))))(VariableDeclarationStatement(SimpleType(SimpleName:MacroEntry))(VariableDeclarationFragment(SimpleName:constantEntry)(ClassInstanceCreation(SimpleType(SimpleName:MacroEntry)))))(ExpressionStatement(Assignment(QualifiedName:constantEntry.print)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(QualifiedName:constantEntry.file)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(QualifiedName:constantEntry.line)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ExpressionStatement(Assignment(QualifiedName:constantEntry.comments)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:packageName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(TryStatement(Block(ExpressionStatement(Assignment(QualifiedName:constantEntry.expression)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Expression))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vars))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:constantEntry)))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:Exceptions.ParserError))(SimpleName:e))(Block)))(IfStatement(InfixExpression(SimpleName:errorCount)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:out)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:matched)))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(QualifiedName:System.out)))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:stringValue))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:stringValue))(StringLiteral:<STR>))))))))))(IfStatement(InfixExpression(SimpleName:out)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PrintStream))(VariableDeclarationFragment(SimpleName:outWriter)(ClassInstanceCreation(SimpleType(SimpleName:PrintStream))(SimpleName:out))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:output)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:date)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DateFormat))(SimpleName:getDateTimeInstance)))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date)))))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:packageName)(StringLiteral:<STR>)(SimpleName:version)(StringLiteral:<STR>)(SimpleName:date)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:matched)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:verilog))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:s))(SimpleName:verilog)(Block(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Expression)))(VariableDeclarationFragment(SimpleName:expList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Expression))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:key))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vars))(SimpleName:keySet))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:expList))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vars))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)))(SimpleName:expression)))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:variable))(ParenthesizedExpression(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:TreeSet))(SimpleType(SimpleName:String)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vars))(SimpleName:keySet))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MacroEntry))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vars))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:variable)))))(IfStatement(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:matched))(Block(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:variable)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:variable)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>))))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(QualifiedName:entry.print))(ContinueStatement))(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:entry.comments))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:entry.comments))(SimpleName:replaceAll)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:variable)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:variable)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:entry.expression))(SimpleName:Value)(METHOD_INVOCATION_ARGUMENTS(SimpleName:expList)))(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ExpressionError))(SimpleName:e))(Block(ExpressionStatement(PostfixExpression(SimpleName:errorCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:SetVariable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:variable))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))))))(IfStatement(InfixExpression(SimpleName:errorCount)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:errorCount)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:errorCount)))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outWriter))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:output))))))(TryStatement(Block(IfStatement(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o))(SimpleName:Get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(SimpleName:matched))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block))))))(Block(IfStatement(InfixExpression(SimpleName:errorCount)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:errorCount)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:errorCount)))(StringLiteral:<STR>)))))))))(IfStatement(InfixExpression(SimpleName:errorCount)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))))))