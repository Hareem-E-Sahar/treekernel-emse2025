(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(SynchronizedStatement(SimpleName:stateLock)(Block(IfStatement(SimpleName:started)(Block(ReturnStatement))(Block(ExpressionStatement(Assignment(SimpleName:started)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:running)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:bis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedOutputStream))(VariableDeclarationFragment(SimpleName:bos)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:br)(NullLiteral)))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:checkState)))(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:link)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:link)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:link))(SimpleName:connect))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ThrowStatement(SimpleName:e)))))(ExpressionStatement(MethodInvocation(SimpleName:checkState)))(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:length)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:link))(SimpleName:getContentLength))))(SynchronizedStatement(SimpleName:lengthLock)(Block(ExpressionStatement(Assignment(SimpleName:totalLength)(ASSIGNMENT_OPERATOR:=)(SimpleName:length)))))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(SimpleName:checkState)))(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:input)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:link))(SimpleName:getInputStream))))(IfStatement(InstanceofExpression(SimpleName:target)(SimpleType(SimpleName:File)))(Block(ExpressionStatement(Assignment(SimpleName:bis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:input)))))(IfStatement(InstanceofExpression(SimpleName:target)(SimpleType(SimpleName:StringBuilder)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:contentType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:link))(SimpleName:getContentType)))(SimpleName:toLowerCase)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Locale.ENGLISH)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:charset)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:contentType)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:find))(Block(ExpressionStatement(Assignment(SimpleName:charset)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:group)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:trim))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:charset)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:charset))(SimpleName:isEmpty))))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:br)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:input)(SimpleName:charset))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:br)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))))(IfStatement(InfixExpression(SimpleName:br)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:br)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:input)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ThrowStatement(SimpleName:e)))))(IfStatement(InstanceofExpression(SimpleName:target)(SimpleType(SimpleName:File)))(Block(ExpressionStatement(MethodInvocation(SimpleName:checkState)))(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(CastExpression(SimpleType(SimpleName:File))(SimpleName:target))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getParentFile))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:parent)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:exists))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:mkdirs)))))(ExpressionStatement(Assignment(SimpleName:bos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:f))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ThrowStatement(SimpleName:e)))))))(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(TryStatement(Block(IfStatement(InstanceofExpression(SimpleName:target)(SimpleType(SimpleName:File)))(Block(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:byteBuffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER_SIZE))))))(WhileStatement(BooleanLiteral:true)(Block(ExpressionStatement(MethodInvocation(SimpleName:checkState)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:byteCount)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:byteBuffer)(NumberLiteral:0)(SimpleName:BUFFER_SIZE)))))(IfStatement(InfixExpression(SimpleName:byteCount)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:byteBuffer)(NumberLiteral:0)(SimpleName:byteCount))))(SynchronizedStatement(SimpleName:lengthLock)(Block(ExpressionStatement(Assignment(SimpleName:downloadedLength)(ASSIGNMENT_OPERATOR:+=)(SimpleName:byteCount)))))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))))(IfStatement(InstanceofExpression(SimpleName:target)(SimpleType(SimpleName:StringBuilder)))(Block(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:char)(Dimension))(VariableDeclarationFragment(SimpleName:charBuffer)(ArrayCreation(ArrayType(PrimitiveType:char)(Dimension(SimpleName:BUFFER_SIZE))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:sb)(CastExpression(SimpleType(SimpleName:StringBuilder))(SimpleName:target))))(WhileStatement(BooleanLiteral:true)(Block(ExpressionStatement(MethodInvocation(SimpleName:checkState)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:charCount)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:charBuffer)(NumberLiteral:0)(SimpleName:BUFFER_SIZE)))))(IfStatement(InfixExpression(SimpleName:charCount)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:charBuffer)(NumberLiteral:0)(SimpleName:charCount))))(SynchronizedStatement(SimpleName:lengthLock)(Block(ExpressionStatement(Assignment(SimpleName:downloadedLength)(ASSIGNMENT_OPERATOR:+=)(SimpleName:charCount)))))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ThrowStatement(SimpleName:e)))))(ExpressionStatement(Assignment(SimpleName:progressString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:progressUpdated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:error)(ASSIGNMENT_OPERATOR:=)(SimpleName:e)))))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Closeable))(SimpleName:c))(ArrayCreation(ArrayType(SimpleType(SimpleName:Closeable))(Dimension))(ArrayInitializer(SimpleName:bis)(SimpleName:br)(SimpleName:bos)))(Block(IfStatement(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))))(SynchronizedStatement(SimpleName:stateLock)(Block(ExpressionStatement(Assignment(SimpleName:running)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:completed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))))