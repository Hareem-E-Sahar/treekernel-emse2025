(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:boolean)(SimpleName:setUploadStreams)(Block(TryStatement(Block(IfStatement(SimpleName:compression)(Block(ExpressionStatement(Assignment(SimpleName:fileTransferOutputStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GZIPOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:session))(SimpleName:getClient)))(SimpleName:getConnection)))(SimpleName:getFileTransferDataOutputStream))))))(Block(ExpressionStatement(Assignment(SimpleName:fileTransferOutputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:session))(SimpleName:getClient)))(SimpleName:getConnection)))(SimpleName:getFileTransferDataOutputStream))))))(IfStatement(SimpleName:resume)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileTransferRandomAccessFile))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(SimpleName:remoteFileSize))))))(ExpressionStatement(Assignment(SimpleName:fileTransferFileInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:newInputStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileTransferRandomAccessFile))(SimpleName:getChannel))))))(ReturnStatement(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileTransferOutputStream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e1))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileTransferFileInputStream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e1))(Block)))(ReturnStatement(BooleanLiteral:false)))))))))