(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:deployPluginJARs)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:devLibDir)(MethodInvocation(SimpleName:getDevLib))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:devLibDir))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:devLibDir))(SimpleName:mkdirs)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tmpDevLibDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getPluginTmpDir))(StringLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpDevLibDir))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteDirectory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpDevLibDir))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpDevLibDir))(SimpleName:mkdirs)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:newSourceJars)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:File))))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:PluginDescriptor))(SimpleName:pluginDescriptor))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getManager)))(SimpleName:getRegistry)))(SimpleName:getPluginDescriptors))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ExtensionPoint))(VariableDeclarationFragment(SimpleName:devLibExtensionPoint)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pluginDescriptor))(SimpleName:getExtensionPoint)(METHOD_INVOCATION_ARGUMENTS(SimpleName:EXTENSIONPOINT_DEVLIB)))))(IfStatement(InfixExpression(SimpleName:devLibExtensionPoint)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:sourceJars)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:File))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:ParameterDefinition))(SimpleName:parameterDefinition))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:devLibExtensionPoint))(SimpleName:getParameterDefinitions))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameterDefinition))(SimpleName:getId))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:defaultJARDirValue)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameterDefinition))(SimpleName:getDefaultValue))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:jarDir)(MethodInvocation(SimpleName:getFilePath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pluginDescriptor)(SimpleName:defaultJARDirValue)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarDir))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pluginDescriptor))(SimpleName:getUniqueId))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:defaultJARDirValue))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:sourceJarname))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarDir))(SimpleName:list)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:SuffixFileFilter))(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sourceJar)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarDir))(SimpleName:getPath))(SimpleName:sourceJarname))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceJars))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceJar)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:defaultJARValue)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameterDefinition))(SimpleName:getDefaultValue))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sourceJar)(MethodInvocation(SimpleName:getFilePath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pluginDescriptor)(SimpleName:defaultJARValue)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceJar))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceJar))(SimpleName:getPath))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pluginDescriptor))(SimpleName:getId)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceJars))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceJar))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:sourceJar))(SimpleName:sourceJars)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:extendedSourceJarname)(MethodInvocation(SimpleName:getExtendedJarname)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceJar))(SimpleName:getName))(SimpleName:pluginDescriptor)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:extendSourceJar)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:tmpDevLibDir)(SimpleName:extendedSourceJarname))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceJar)(SimpleName:extendSourceJar))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newSourceJars))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extendSourceJar))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:devLibDir))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteDirectory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:devLibDir))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:newSourceJar))(SimpleName:newSourceJars)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newSourceJar))(SimpleName:getPath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:moveFileToDirectory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newSourceJar)(SimpleName:devLibDir)(BooleanLiteral:true))))))))))