(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:ProgramMessageSymbol))(SimpleName:addProgramMessageSymbol)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:programID))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:bytecode))(SimpleType(SimpleName:AdaptationException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ProgramMessageSymbol))(VariableDeclarationFragment(SimpleName:programMessageSymbol)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Connection))(VariableDeclarationFragment(SimpleName:connection)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:PreparedStatement))(VariableDeclarationFragment(SimpleName:preparedStatement)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Statement))(VariableDeclarationFragment(SimpleName:statement)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ResultSet))(VariableDeclarationFragment(SimpleName:resultSet)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:bytecode))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:query)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DriverManager))(SimpleName:getConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CONN_STR)))))(ExpressionStatement(Assignment(SimpleName:preparedStatement)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:prepareStatement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:query)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:preparedStatement))(SimpleName:setInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(SimpleName:programID))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:preparedStatement))(SimpleName:setString)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)(SimpleName:name))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:preparedStatement))(SimpleName:setBinaryStream)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3)(SimpleName:stream)(QualifiedName:bytecode.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:programID)(StringLiteral:<STR>)(SimpleName:name)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:preparedStatement))(SimpleName:executeUpdate)))(ExpressionStatement(Assignment(SimpleName:statement)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:createStatement))))(ExpressionStatement(Assignment(SimpleName:query)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:programID)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:name)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:resultSet)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:statement))(SimpleName:executeQuery)(METHOD_INVOCATION_ARGUMENTS(SimpleName:query)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resultSet))(SimpleName:next)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:rollback)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:msg)(StringLiteral:<STR>)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg))))(EmptyStatement)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AdaptationException))(SimpleName:msg)))))(ExpressionStatement(Assignment(SimpleName:programMessageSymbol)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getProgramMessageSymbol)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resultSet)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:commit))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SQLException))(SimpleName:ex))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:rollback))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:msg)(StringLiteral:<STR>)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg)(SimpleName:ex))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AdaptationException))(SimpleName:msg)(SimpleName:ex)))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resultSet))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:preparedStatement))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:statement))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))))(ReturnStatement(SimpleName:programMessageSymbol))))))