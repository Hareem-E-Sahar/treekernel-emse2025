(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:InputStream))(SimpleName:transform)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:TransformerFactory))(VariableDeclarationFragment(SimpleName:tf)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:TransformerFactory))(SimpleName:newInstance))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:xsl_is)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:url_is)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:os)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:output)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:xsl_is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Classes))(SimpleName:getThreadClassLoader)))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getStylesheet))))))(ExpressionStatement(Assignment(SimpleName:url_is)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(ExpressionStatement(Assignment(SimpleName:os)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:Transformer))(VariableDeclarationFragment(SimpleName:tr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tf))(SimpleName:newTransformer)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(SimpleName:xsl_is))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tr))(SimpleName:transform)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:StreamSource))(SimpleName:url_is))(ClassInstanceCreation(SimpleType(SimpleName:StreamResult))(SimpleName:os)))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:toByteArray)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:TransformerConfigurationException))(SimpleName:tce))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tce))(SimpleName:getLocalizedMessage))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:TransformerException))(SimpleName:te))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:te))(SimpleName:getLocalizedMessage))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:os)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:url_is)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url_is))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:xsl_is)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xsl_is))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logService))(SimpleName:isEnabledFor)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogLevel.TRACE)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logService))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:LogLevel.TRACE)(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:output))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:output)))))))