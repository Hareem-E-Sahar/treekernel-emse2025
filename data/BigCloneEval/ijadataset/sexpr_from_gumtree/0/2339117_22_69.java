(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:final)(PrimitiveType:float)(SimpleName:getPairSimilarities)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:pText1))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:pText2))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:intersection)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:union)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cleanedText1)(SimpleName:pText1)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:cleanedText2)(SimpleName:pText2)))(VariableDeclarationStatement(ArrayType(PrimitiveType:char)(Dimension))(VariableDeclarationFragment(SimpleName:pairsArray1)(MethodInvocation(SimpleName:getPairs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cleanedText1)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pairsArray1Size)(QualifiedName:pairsArray1.length)))(VariableDeclarationStatement(ArrayType(PrimitiveType:char)(Dimension))(VariableDeclarationFragment(SimpleName:pairsArray2)(MethodInvocation(SimpleName:getPairs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cleanedText2)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pairsArray2Size)(QualifiedName:pairsArray2.length)))(ExpressionStatement(Assignment(SimpleName:union)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:pairsArray1Size)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:pairsArray2Size)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:union)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:union)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))))(IfStatement(MethodInvocation(SimpleName:isLoggingDebug))(Block(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:pairsArray1))))))(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:pairsArray2))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:pairsArray1.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:2))(Block(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:firstCharForArray1)(ArrayAccess(SimpleName:pairsArray1)(SimpleName:i))))(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:nextCharForArray1)(ArrayAccess(SimpleName:pairsArray1)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(IfStatement(MethodInvocation(SimpleName:isLoggingDebug))(Block(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:firstCharForArray1)(StringLiteral:<STR>)(SimpleName:nextCharForArray1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:pairsArray2.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:2))(Block(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:firstCharForArray2)(ArrayAccess(SimpleName:pairsArray2)(SimpleName:j))))(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:nextCharForArray2)(ArrayAccess(SimpleName:pairsArray2)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(IfStatement(MethodInvocation(SimpleName:isLoggingDebug))(Block(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:firstCharForArray2)(StringLiteral:<STR>)(SimpleName:nextCharForArray2)))))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:firstCharForArray1)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:firstCharForArray2))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:nextCharForArray1)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:nextCharForArray2)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:firstCharForArray2)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0xFF)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:nextCharForArray2)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0xFF)))(Block(ExpressionStatement(PostfixExpression(SimpleName:intersection)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:pairsArray2)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0xFF)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:pairsArray2)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0xFF)))(IfStatement(MethodInvocation(SimpleName:isLoggingDebug))(Block(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(BreakStatement)))))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:similarity)(CastExpression(PrimitiveType:float)(SimpleName:intersection))))(IfStatement(MethodInvocation(SimpleName:isLoggingDebug))(Block(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:union)))))(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:intersection)))))(ExpressionStatement(MethodInvocation(SimpleName:logDebug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:similarity)))))))(ReturnStatement(SimpleName:similarity))))))