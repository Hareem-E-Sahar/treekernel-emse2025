(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:getSimilarity)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:term1))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:term2))(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:similarity)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:term1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term1))(SimpleName:toLowerCase))))(ExpressionStatement(Assignment(SimpleName:term2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term2))(SimpleName:toLowerCase))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:term1_unique)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:term2_unique)(StringLiteral:<STR>)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:cterm))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term1))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:is_unique)(BooleanLiteral:true)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:cterm2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term2))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cterm2))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cterm)))(Block(ExpressionStatement(Assignment(SimpleName:is_unique)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(BreakStatement))))(IfStatement(InfixExpression(SimpleName:is_unique)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:isStopWord)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cterm)))))(ExpressionStatement(Assignment(SimpleName:term1_unique)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:cterm)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:cterm))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term2))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:is_unique)(BooleanLiteral:true)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:cterm2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term1))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cterm2))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cterm)))(Block(ExpressionStatement(Assignment(SimpleName:is_unique)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(BreakStatement))))(IfStatement(InfixExpression(SimpleName:is_unique)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:isStopWord)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cterm)))))(ExpressionStatement(Assignment(SimpleName:term2_unique)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(SimpleName:cterm)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term2_unique))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:term1_unique))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(NumberLiteral:0)))(TryStatement(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:float)(Dimension))(VariableDeclarationFragment(SimpleName:vec1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VectorUtils))(SimpleName:getNormalizedVector)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CompoundVectorBuilder))(SimpleName:getQueryVectorFromString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vecReader)(SimpleName:luceneUtils)(SimpleName:term1_unique)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:float)(Dimension))(VariableDeclarationFragment(SimpleName:vec2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VectorUtils))(SimpleName:getNormalizedVector)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CompoundVectorBuilder))(SimpleName:getQueryVectorFromString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vecReader)(SimpleName:luceneUtils)(SimpleName:term2_unique)))))))(ExpressionStatement(Assignment(SimpleName:similarity)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VectorUtils))(SimpleName:scalarProduct)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vec1)(SimpleName:vec2)))))(ExpressionStatement(Assignment(SimpleName:similarity)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:similarity)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:similarity)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.5))(ExpressionStatement(Assignment(SimpleName:similarity)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ReturnStatement(SimpleName:similarity))))))