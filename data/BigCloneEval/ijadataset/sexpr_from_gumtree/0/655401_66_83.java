(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:enqueue)(SingleVariableDeclaration(SimpleType(SimpleName:IElement))(SimpleName:req))(SimpleType(SimpleName:SinkException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AFileRequest))(VariableDeclarationFragment(SimpleName:areq)(CastExpression(SimpleType(SimpleName:AFileRequest))(SimpleName:req))))(IfStatement(SimpleName:closed)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:SinkClosedException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:readOnly)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InstanceofExpression(SimpleName:areq)(SimpleType(SimpleName:AFileWriteRequest)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BadElementException))(StringLiteral:<STR>)(SimpleName:areq)))))(ExpressionStatement(Assignment(QualifiedName:areq.afile)(ASSIGNMENT_OPERATOR:=)(SimpleName:afile)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:eventQ))(SimpleName:enqueue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:areq)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SinkException))(SimpleName:se))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InternalError))(StringLiteral:<STR>))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:eventQ))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tm))(SimpleName:fileReady)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))))))))