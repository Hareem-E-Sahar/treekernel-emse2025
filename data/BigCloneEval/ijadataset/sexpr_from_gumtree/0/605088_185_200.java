(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:double)(SimpleName:quantile)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:val))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:quantiles))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x1)(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:x2)(QualifiedName:quantiles.length)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(WhileStatement(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:x2))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:quantiles)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:val))(Block(BreakStatement))(IfStatement(InfixExpression(ArrayAccess(SimpleName:quantiles)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:val))(Block(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(SimpleName:i))))))(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))))(ReturnStatement(InfixExpression(ParenthesizedExpression(CastExpression(PrimitiveType:double)(SimpleName:i)))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(QualifiedName:quantiles.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))