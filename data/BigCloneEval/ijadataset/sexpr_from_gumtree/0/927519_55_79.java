(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:URLConnection))(SimpleName:getURLConnection)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:str))(Block(TryStatement(Block(IfStatement(SimpleName:isHttps)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(IfStatement(SimpleName:isProxy)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:proxyHost))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:proxyPort)))))))(Block(IfStatement(SimpleName:isProxy)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:proxyHost))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:proxyPort))))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:str))))(ReturnStatement(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:me))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:me))(SimpleName:printStackTrace)))(ReturnStatement(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ReturnStatement(NullLiteral)))))))))