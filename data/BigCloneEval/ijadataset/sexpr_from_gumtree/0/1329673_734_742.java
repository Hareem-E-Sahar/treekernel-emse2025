(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:static)(PrimitiveType:int)(SimpleName:mostSigFibonacci)(SingleVariableDeclaration(ArrayType(PrimitiveType:long)(Dimension))(SimpleName:fibs))(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:n))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:low)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:high)(InfixExpression(QualifiedName:fibs.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:high))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:high)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:fibs)(SimpleName:mid))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:mid)))(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:mid))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:fibs)(SimpleName:mid))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:n))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:mid)))(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(SimpleName:mid))))(ReturnStatement(SimpleName:mid))))))(ReturnStatement(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))