(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:File))(SimpleName:getJStockZipFile)(Block(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(SimpleName:getUserDefinedDatabaseFiles))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:FileEx)))(VariableDeclarationFragment(SimpleName:fileExs)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:FileEx))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleName:files)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:filename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(SimpleName:ex))))(ContinueStatement))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getApplicationVersionString))))))(IfStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ContinueStatement)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:output)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getApplicationVersionString)))(SimpleName:length))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:File.separator))(SimpleName:length)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileExs))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileEx))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:output))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:JStockOptions))(VariableDeclarationFragment(SimpleName:jStockOptions)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MainFrame))(SimpleName:getInstance)))(SimpleName:getJStockOptions))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:JStockOptions))(VariableDeclarationFragment(SimpleName:insensitiveJStockOptions)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jStockOptions))(SimpleName:insensitiveClone))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tempJStockOptions)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getJStockUUID))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempJStockOptions))(SimpleName:deleteOnExit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:org.yccheok.jstock.gui.Utils))(SimpleName:toXML)(METHOD_INVOCATION_ARGUMENTS(SimpleName:insensitiveJStockOptions)(SimpleName:tempJStockOptions))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileExs))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileEx))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempJStockOptions)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(SimpleName:ex)))))))(ExpressionStatement(MethodInvocation(SimpleName:getFileEx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileExs)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:getFileEx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileExs)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:getFileEx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileExs)(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Country))(SimpleName:country))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Country))(SimpleName:values))(Block(ExpressionStatement(MethodInvocation(SimpleName:getFileEx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileExs)(InfixExpression(SimpleName:country)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:getFileEx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileExs)(InfixExpression(SimpleName:country)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:getFileEx)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileExs)(InfixExpression(SimpleName:country)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:temp)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:temp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getJStockUUID))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:temp))(SimpleName:deleteOnExit)))(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:temp)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:FileEx))(SimpleName:fileEx))(SimpleName:fileExs)(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(QualifiedName:fileEx.input))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:zipEntryName)(QualifiedName:fileEx.output)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getZipEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipEntryName))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:len)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exp))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(SimpleName:exp))))(ContinueStatement)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:closeEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exp))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(SimpleName:exp))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))))(ReturnStatement(SimpleName:temp))))))