(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:findCodeDependencies)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:libPath))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:srcClazzes))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:libEntries)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:libPath)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:libPath)))(SimpleName:exists))))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:classFiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClazzUtil))(SimpleName:getClassFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:libPath)))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(ParameterizedType(QualifiedType(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:Entry))(SimpleType(SimpleName:String))))(VariableDeclarationFragment(SimpleName:srcIterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcClazzes))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcIterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(ParameterizedType(QualifiedType(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:Entry))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:srcEntry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcIterator))(SimpleName:next))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:fileToParse))(SimpleName:classFiles)(Block(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(QualifiedType(ParameterizedType(SimpleType(SimpleName:LibrarySet))(SimpleType(SimpleName:String)))(SimpleName:Entry))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:libEntry)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(QualifiedName:ClazzUtil.JarFileFilter))))(SimpleName:accept)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileToParse)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:JarFile))(VariableDeclarationFragment(SimpleName:jarFile)(ClassInstanceCreation(SimpleType(SimpleName:JarFile))(SimpleName:fileToParse))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getEntry)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcEntry))(SimpleName:toString))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:libEntry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libEntries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileToParse))(SimpleName:getAbsolutePath)))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileToParse))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:srcEntry))(SimpleName:toString))))(Block(ExpressionStatement(Assignment(SimpleName:libEntry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libEntries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileToParse))(SimpleName:getAbsolutePath)))))))))(IfStatement(InfixExpression(SimpleName:libEntry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:libEntry))(SimpleName:addClassReference)(METHOD_INVOCATION_ARGUMENTS(SimpleName:srcEntry)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileToParse)(StringLiteral:<STR>))))))))))))))(ReturnStatement(SimpleName:libEntries))))))