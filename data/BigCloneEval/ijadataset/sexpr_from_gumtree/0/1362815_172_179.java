(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:deleteFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:fileName))(SimpleType(SimpleName:SftpException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:deleteFlag)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getQueryMap)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:deleteFlag)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Boolean))(SimpleName:parseBoolean)(METHOD_INVOCATION_ARGUMENTS(SimpleName:deleteFlag))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:file)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getPath))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separatorChar)(SimpleName:fileName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:log)))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getHost))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getChannel)))(SimpleName:rm)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))))))))