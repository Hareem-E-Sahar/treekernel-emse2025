(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:InputStream))(SimpleName:getInputStream)(SimpleType(SimpleName:IOException))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:connection)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(IfStatement(InstanceofExpression(SimpleName:connection)(SimpleType(SimpleName:HttpURLConnection)))(ExpressionStatement(Assignment(SimpleName:responseCode)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:connection))))(SimpleName:getResponseCode)))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:responseCode)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:HttpURLConnection.HTTP_NOT_FOUND))(ExpressionStatement(Assignment(SimpleName:is)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getInputStream)))))(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ReturnStatement(SimpleName:is)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ConnectException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))(ThrowStatement(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))(SimpleName:e))))(ThrowStatement(SimpleName:e)))))))))