(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:audioPreload)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:u))(SimpleType(QualifiedName:javax.sound.sampled.UnsupportedAudioFileException))(SimpleType(QualifiedName:javax.sound.sampled.LineUnavailableException))(SimpleType(QualifiedName:java.io.IOException))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:javax.sound.sampled.AudioInputStream))(VariableDeclarationFragment(SimpleName:aii)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:javax.sound.sampled.AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:u)))))(VariableDeclarationStatement(SimpleType(QualifiedName:javax.sound.sampled.AudioFormat))(VariableDeclarationFragment(SimpleName:af)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aii))(SimpleName:getFormat))))(VariableDeclarationStatement(SimpleType(QualifiedName:javax.sound.sampled.AudioFormat))(VariableDeclarationFragment(SimpleName:finalFormat)(SimpleName:af)))(VariableDeclarationStatement(SimpleType(QualifiedName:javax.sound.sampled.AudioInputStream))(VariableDeclarationFragment(SimpleName:finalStream)(SimpleName:aii)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:u))(SimpleName:getPath)))(SimpleName:toLowerCase)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:u))(SimpleName:getPath)))(SimpleName:toLowerCase)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:baseFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:aii))(SimpleName:getFormat))))(ExpressionStatement(Assignment(SimpleName:finalFormat)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:AudioFormat))(QualifiedName:AudioFormat.Encoding.PCM_SIGNED)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getSampleRate))(NumberLiteral:16)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getChannels))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baseFormat))(SimpleName:getSampleRate))(BooleanLiteral:false))))(ExpressionStatement(Assignment(SimpleName:finalStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:finalFormat)(SimpleName:aii)))))))(VariableDeclarationStatement(SimpleType(QualifiedName:javax.sound.sampled.Clip))(VariableDeclarationFragment(SimpleName:cl)(CastExpression(SimpleType(QualifiedName:javax.sound.sampled.Clip))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:javax.sound.sampled.AudioSystem))(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:javax.sound.sampled.DataLine.Info))(TypeLiteral(SimpleType(QualifiedName:javax.sound.sampled.Clip)))(SimpleName:finalFormat)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cl))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:finalStream))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioPreloaded))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:u)(SimpleName:cl))))))))