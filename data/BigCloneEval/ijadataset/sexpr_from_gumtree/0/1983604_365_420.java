(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:testOpenIDSpike)(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:servletTester))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ServletTester)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:servletTester)))(SimpleName:addServlet)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:OpenIDConsumerServlet)))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:servletTester)))(SimpleName:addServlet)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:OpenIDIdentityServlet)))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:servletTester)))(SimpleName:addServlet)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:OpenIDProducerServlet)))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Security))(SimpleName:addProvider)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BouncyCastleProvider))))))(VariableDeclarationStatement(SimpleType(SimpleName:KeyPair))(VariableDeclarationFragment(SimpleName:keyPair)(MethodInvocation(SimpleName:generateKeyPair))))(VariableDeclarationStatement(SimpleType(SimpleName:DateTime))(VariableDeclarationFragment(SimpleName:notBefore)(ClassInstanceCreation(SimpleType(SimpleName:DateTime)))))(VariableDeclarationStatement(SimpleType(SimpleName:DateTime))(VariableDeclarationFragment(SimpleName:notAfter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:notBefore))(SimpleName:plusMonths)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(VariableDeclarationStatement(SimpleType(SimpleName:X509Certificate))(VariableDeclarationFragment(SimpleName:certificate)(MethodInvocation(SimpleName:generateSelfSignedCertificate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:keyPair)(StringLiteral:<STR>)(SimpleName:notBefore)(SimpleName:notAfter)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tmpP12File)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpP12File))(SimpleName:deleteOnExit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpP12File))(SimpleName:getAbsolutePath))))))(ExpressionStatement(MethodInvocation(SimpleName:persistKey)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmpP12File)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keyPair))(SimpleName:getPrivate))(SimpleName:certificate)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:toCharArray))(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:toCharArray)))))(VariableDeclarationStatement(SimpleType(SimpleName:SslSocketConnector))(VariableDeclarationFragment(SimpleName:sslSocketConnector)(ClassInstanceCreation(SimpleType(SimpleName:SslSocketConnector)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setKeystore)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpP12File))(SimpleName:getAbsolutePath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setTruststore)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpP12File))(SimpleName:getAbsolutePath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setTruststoreType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setKeystoreType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setPassword)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setKeyPassword)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setTrustPassword)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setMaxIdleTime)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:30000))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:sslPort)(MethodInvocation(SimpleName:getFreePort))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslSocketConnector))(SimpleName:setPort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sslPort))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:servletTester)))(SimpleName:getContext)))(SimpleName:getServer)))(SimpleName:addConnector)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sslSocketConnector))))(ExpressionStatement(Assignment(SimpleName:sslLocation)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sslPort))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:servletTester)))(SimpleName:start)))(ExpressionStatement(Assignment(SimpleName:location)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:servletTester)))(SimpleName:createSocketConnector)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:location)))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpClient))(VariableDeclarationFragment(SimpleName:httpClient)(ClassInstanceCreation(SimpleType(SimpleName:HttpClient)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpClient))(SimpleName:getParams)))(SimpleName:setParameter)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Boolean.TRUE))))(VariableDeclarationStatement(SimpleType(SimpleName:ProtocolSocketFactory))(VariableDeclarationFragment(SimpleName:protocolSocketFactory)(ClassInstanceCreation(SimpleType(SimpleName:MyProtocolSocketFactory))(SimpleName:certificate))))(VariableDeclarationStatement(SimpleType(SimpleName:Protocol))(VariableDeclarationFragment(SimpleName:myProtocol)(ClassInstanceCreation(SimpleType(SimpleName:Protocol))(StringLiteral:<STR>)(SimpleName:protocolSocketFactory)(SimpleName:sslPort))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Protocol))(SimpleName:registerProtocol)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:myProtocol))))(VariableDeclarationStatement(SimpleType(SimpleName:GetMethod))(VariableDeclarationFragment(SimpleName:getMethod)(ClassInstanceCreation(SimpleType(SimpleName:GetMethod))(InfixExpression(SimpleName:sslLocation)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:statusCode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpClient))(SimpleName:executeMethod)(METHOD_INVOCATION_ARGUMENTS(SimpleName:getMethod)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:statusCode)))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:HttpServletResponse.SC_OK)(SimpleName:statusCode))))(VariableDeclarationStatement(SimpleType(SimpleName:SessionHandler))(VariableDeclarationFragment(SimpleName:sessionHandler)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:servletTester)))(SimpleName:getContext)))(SimpleName:getSessionHandler))))(VariableDeclarationStatement(SimpleType(SimpleName:SessionManager))(VariableDeclarationFragment(SimpleName:sessionManager)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sessionHandler))(SimpleName:getSessionManager))))(VariableDeclarationStatement(SimpleType(SimpleName:HashSessionManager))(VariableDeclarationFragment(SimpleName:hashSessionManager)(CastExpression(SimpleType(SimpleName:HashSessionManager))(SimpleName:sessionManager))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hashSessionManager))(SimpleName:getSessions))))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hashSessionManager))(SimpleName:getSessions)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:HttpSession)))(VariableDeclarationFragment(SimpleName:sessionMap)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hashSessionManager))(SimpleName:getSessionMap))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sessionMap)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Entry))(SimpleType(SimpleName:String))(SimpleType(SimpleName:HttpSession)))(VariableDeclarationFragment(SimpleName:sessionEntry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sessionMap))(SimpleName:entrySet)))(SimpleName:iterator)))(SimpleName:next))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpSession))(VariableDeclarationFragment(SimpleName:httpSession)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sessionEntry))(SimpleName:getValue))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:userId)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpSession))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:OpenIDConsumerServlet.USER_ID_SESSION_ATTRIBUTE))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:userId)))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:sslLocation)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:userId))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:firstName)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpSession))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:OpenIDConsumerServlet.FIRST_NAME_SESSION_ATTRIBUTE))))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:firstName))))))))