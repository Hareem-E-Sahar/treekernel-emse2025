(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:NegExResult))(SimpleName:negCheck)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:sentence))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:phraseStart))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:phraseEnd))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:possibleNegations))(SimpleType(SimpleName:Exception))(Block(IfStatement(InfixExpression(SimpleName:phraseStart)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:phraseEnd))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:NegPhrase)))(VariableDeclarationFragment(SimpleName:negPhrases)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:NegPhrase))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:iRule)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sortedRules))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iRule))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rule)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iRule))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:Pattern))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:ruleTokens)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rule))(SimpleName:trim))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:typeString)(ArrayAccess(SimpleName:ruleTokens)(NumberLiteral:1))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:ruleMembers)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:ruleTokens)(NumberLiteral:0)))(SimpleName:trim)))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rule2)(StringLiteral:<STR>)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<=)(InfixExpression(QualifiedName:ruleMembers.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:ruleMembers)(SimpleName:i)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(IfStatement(InfixExpression(QualifiedName:ruleMembers.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:rule2)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:ruleMembers)(SimpleName:i)))))(Block(ExpressionStatement(Assignment(SimpleName:rule2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:rule2)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:ruleMembers)(SimpleName:i)))(SimpleName:trim))(StringLiteral:<STR>))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rule2))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:rule2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rule2))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rule2))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))))(ExpressionStatement(Assignment(SimpleName:rule2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rule2)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Pattern))(VariableDeclarationFragment(SimpleName:p2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Pattern))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rule2))(SimpleName:trim))))))(VariableDeclarationStatement(SimpleType(SimpleName:Matcher))(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p2))(SimpleName:matcher)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sentence)))))(WhileStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:find))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:true))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:type)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typeString))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NegPhrase.PSEU))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typeString))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NegPhrase.PREN))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typeString))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NegPhrase.PREP))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typeString))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NegPhrase.POST))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typeString))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NegPhrase.POSP))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:typeString))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NegPhrase.CONJ))))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:negPhraseStart)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:start))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:group)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(SimpleName:length)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:negPhraseEnd)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:end))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:group)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:3))))(SimpleName:length)))))(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:negPhrase)(ClassInstanceCreation(SimpleType(SimpleName:NegPhrase))(SimpleName:negPhraseStart)(SimpleName:negPhraseEnd)(SimpleName:type)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:group)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:negPhrase))))))))(VariableDeclarationStatement(SimpleType(SimpleName:NegExResult))(VariableDeclarationFragment(SimpleName:result)(ClassInstanceCreation(SimpleType(SimpleName:NegExResult)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setResult)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NegExResult.NOT_NEGATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:negPhrases)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Comparator))(SimpleType(SimpleName:NegPhrase)))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:int)(SimpleName:compare)(SingleVariableDeclaration(SimpleType(SimpleName:NegPhrase))(SimpleName:o1))(SingleVariableDeclaration(SimpleType(SimpleName:NegPhrase))(SimpleName:o2))(Block(ReturnStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o1))(SimpleName:getEnd))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o2))(SimpleName:getEnd)))))))))))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:inNegation)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:trigger)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:negPhrase)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:NegPhrase.PREN))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getEnd))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:phraseStart)))(Block(ExpressionStatement(Assignment(SimpleName:inNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(SimpleName:negPhrase)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegPhrase.PREN))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getEnd))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:phraseStart)))(Block(ExpressionStatement(Assignment(SimpleName:inNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getEnd))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:phraseStart))(Block(BreakStatement)))))(IfStatement(SimpleName:inNegation)(Block(AssertStatement(InfixExpression(SimpleName:trigger)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setResult)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NegExResult.NEGATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setTrigger)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trigger)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getResult))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegExResult.NEGATED))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:inPossibleNegation)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:trigger)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:negPhrase)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:NegPhrase.PREP))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getEnd))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:phraseStart)))(Block(ExpressionStatement(Assignment(SimpleName:inPossibleNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(SimpleName:negPhrase)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegPhrase.PREP))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getEnd))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:phraseStart)))(Block(ExpressionStatement(Assignment(SimpleName:inPossibleNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getEnd))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:phraseStart))(Block(BreakStatement)))))(IfStatement(SimpleName:inPossibleNegation)(Block(AssertStatement(InfixExpression(SimpleName:trigger)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setResult)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NegExResult.POSSIBLY_NEGATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setTrigger)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trigger))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Collections))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:negPhrases)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Comparator))(SimpleType(SimpleName:NegPhrase)))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:int)(SimpleName:compare)(SingleVariableDeclaration(SimpleType(SimpleName:NegPhrase))(SimpleName:o1))(SingleVariableDeclaration(SimpleType(SimpleName:NegPhrase))(SimpleName:o2))(Block(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o1))(SimpleName:getStart))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:o2))(SimpleName:getStart)))))))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getResult))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegExResult.NEGATED))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:inNegation)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:trigger)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:negPhrase)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:NegPhrase.POST))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getStart))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:phraseEnd)))(Block(ExpressionStatement(Assignment(SimpleName:inNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(SimpleName:negPhrase)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegPhrase.POST))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getStart))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:phraseEnd)))(Block(ExpressionStatement(Assignment(SimpleName:inNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getStart))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:phraseEnd))(Block(BreakStatement)))))(IfStatement(SimpleName:inNegation)(Block(AssertStatement(InfixExpression(SimpleName:trigger)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setResult)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NegExResult.NEGATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setTrigger)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trigger))))))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getResult))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegExResult.NEGATED))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getResult))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegExResult.POSSIBLY_NEGATED)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:inPossibleNegation)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:trigger)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NegPhrase))(VariableDeclarationFragment(SimpleName:negPhrase)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrases))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:NegPhrase.POSP))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getStart))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:phraseEnd)))(Block(ExpressionStatement(Assignment(SimpleName:inPossibleNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(SimpleName:negPhrase)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getType))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:NegPhrase.POSP))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getStart))(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:phraseEnd)))(Block(ExpressionStatement(Assignment(SimpleName:inPossibleNegation)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:trigger)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:negPhrase))(SimpleName:getStart))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:phraseEnd))(Block(BreakStatement)))))(IfStatement(SimpleName:inPossibleNegation)(Block(AssertStatement(InfixExpression(SimpleName:trigger)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setResult)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NegExResult.POSSIBLY_NEGATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:setTrigger)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trigger))))))))(ReturnStatement(SimpleName:result))))))