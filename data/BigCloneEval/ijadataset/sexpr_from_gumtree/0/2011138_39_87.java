(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:Transform3D))(SimpleName:getTransform)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x1))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x2))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:y1))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:y2))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:z1))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:z2))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Transform3D))(VariableDeclarationFragment(SimpleName:transform)(ClassInstanceCreation(SimpleType(SimpleName:Transform3D)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:cx)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:cy)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:cz)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:z1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:z2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:Vector3d))(VariableDeclarationFragment(SimpleName:vector)(ClassInstanceCreation(SimpleType(SimpleName:Vector3d))(SimpleName:cx)(SimpleName:cy)(SimpleName:cz))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transform))(SimpleName:setTranslation)(METHOD_INVOCATION_ARGUMENTS(SimpleName:vector))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:dx)(CastExpression(PrimitiveType:double)(ParenthesizedExpression(InfixExpression(SimpleName:x2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x1))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:dy)(CastExpression(PrimitiveType:double)(ParenthesizedExpression(InfixExpression(SimpleName:y2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y1))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:dz)(CastExpression(PrimitiveType:double)(ParenthesizedExpression(InfixExpression(SimpleName:z2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:z1))))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:s)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sqrt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dx))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:dy)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dy)))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:dz)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dz))))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:rotZ)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))))(IfStatement(InfixExpression(SimpleName:dy)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:Math.PI)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:rotZ)))))))(IfStatement(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dx)))(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dy)))))))))(IfStatement(InfixExpression(SimpleName:dy)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:Math.PI)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rotZ)))))(Block(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(QualifiedName:Math.PI)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:rotZ)))))))(Block(IfStatement(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:rotZ))))))))))))(ExpressionStatement(Assignment(SimpleName:rotZ)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:rotZ))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:degrees)(InfixExpression(SimpleName:rotZ)(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(NumberLiteral:180d)(INFIX_EXPRESSION_OPERATOR:/)(QualifiedName:Math.PI))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:rotX)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:z2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:cz))))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(NumberLiteral:0.5)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sqrt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dx))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:dy)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dy))))))))))))(ExpressionStatement(Assignment(SimpleName:rotX)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:rotX))))(IfStatement(InfixExpression(InfixExpression(SimpleName:z2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:cz))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rotX)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:rotX))))))(ExpressionStatement(Assignment(SimpleName:degrees)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:rotX)(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(NumberLiteral:180d)(INFIX_EXPRESSION_OPERATOR:/)(QualifiedName:Math.PI))))))(VariableDeclarationStatement(SimpleType(SimpleName:Transform3D))(VariableDeclarationFragment(SimpleName:rotationZ)(ClassInstanceCreation(SimpleType(SimpleName:Transform3D)))))(VariableDeclarationStatement(SimpleType(SimpleName:Transform3D))(VariableDeclarationFragment(SimpleName:rotationX)(ClassInstanceCreation(SimpleType(SimpleName:Transform3D)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rotationZ))(SimpleName:rotZ)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rotZ))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rotationX))(SimpleName:rotX)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rotX))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transform))(SimpleName:mul)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rotationZ))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transform))(SimpleName:mul)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rotationX))))(ReturnStatement(SimpleName:transform))))))