(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:NFRule))(SimpleName:findNormalRule)(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:number))(Block(IfStatement(SimpleName:isFractionRuleSet)(Block(ReturnStatement(MethodInvocation(SimpleName:findFractionRuleSetRule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:number))))))(IfStatement(InfixExpression(SimpleName:number)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(IfStatement(InfixExpression(SimpleName:negativeNumberRule)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(SimpleName:negativeNumberRule)))(Block(ExpressionStatement(Assignment(SimpleName:number)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:number))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hi)(QualifiedName:rules.length)))(IfStatement(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(WhileStatement(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:hi))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hi)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:rules)(SimpleName:mid)))(SimpleName:getBaseValue))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:number))(Block(ReturnStatement(ArrayAccess(SimpleName:rules)(SimpleName:mid))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:rules)(SimpleName:mid)))(SimpleName:getBaseValue))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:number))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(SimpleName:mid))))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:NFRule))(VariableDeclarationFragment(SimpleName:result)(ArrayAccess(SimpleName:rules)(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:shouldRollBack)(METHOD_INVOCATION_ARGUMENTS(SimpleName:number)))(Block(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:rules)(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2)))))))(ReturnStatement(SimpleName:result))))(ReturnStatement(ArrayAccess(SimpleName:fractionRules)(NumberLiteral:2)))))))