(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:readers)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:0))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:writers)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:2))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:runTimeSeconds)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:3))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ReentrantReadWriteLock))(VariableDeclarationFragment(SimpleName:lock)(ClassInstanceCreation(SimpleType(SimpleName:ReentrantReadWriteLock))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:1)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:TestThread)))(VariableDeclarationFragment(SimpleName:threads)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:TestThread))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:readers))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:TestThread))(VariableDeclarationFragment(SimpleName:t)(ClassInstanceCreation(SimpleType(SimpleName:TestThread))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:cStop))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:readLock)))(SimpleName:lock)))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:value)(SimpleName:cSharedValue)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:again)(SimpleName:cSharedValue)))(IfStatement(InfixExpression(SimpleName:again)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:value))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:AssertionError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:again)(StringLiteral:<STR>)(SimpleName:value))))))(ExpressionStatement(PostfixExpression(SimpleName:mReadCount)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:readLock)))(SimpleName:unlock)))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threads))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:start)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:writers))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:TestThread))(VariableDeclarationFragment(SimpleName:t)(ClassInstanceCreation(SimpleType(SimpleName:TestThread))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:cStop))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:writeLock)))(SimpleName:lock)))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:value)(SimpleName:cSharedValue)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:value))))(AssertStatement(ParenthesizedExpression(InfixExpression(SimpleName:cSharedValue)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:value))))(ExpressionStatement(Assignment(SimpleName:cSharedValue)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ExpressionStatement(PostfixExpression(SimpleName:mAdjustCount)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lock))(SimpleName:writeLock)))(SimpleName:unlock)))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:threads))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:start)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:1000L)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:runTimeSeconds)))))(ExpressionStatement(Assignment(SimpleName:cStop)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:TestThread))(SimpleName:t))(SimpleName:threads)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:join)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:reads)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:TestThread))(SimpleName:t))(SimpleName:threads)(Block(ExpressionStatement(Assignment(SimpleName:reads)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:t.mReadCount)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:expected)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:TestThread))(SimpleName:t))(SimpleName:threads)(Block(ExpressionStatement(Assignment(SimpleName:expected)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:t.mAdjustCount)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:reads)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:expected)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:cSharedValue)))))(IfStatement(InfixExpression(SimpleName:expected)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:cSharedValue))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:TestThread))(SimpleName:t))(SimpleName:threads)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:t.mReadCount)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:t.mAdjustCount)))))))))))