(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:T))(SimpleName:parse)(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.String))(SimpleName:lexical))(Block(IfStatement(InfixExpression(SimpleName:lexical)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))(StringLiteral:<STR>))))(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(SimpleType(SimpleName:T)))(VariableDeclarationFragment(SimpleName:cst)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getJavaClass)))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String)))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cst))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:mayTrim)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexical)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))))))))))