(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Boolean))(SimpleName:call)(SimpleType(SimpleName:ComponentInvocationException))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(WildcardType(SimpleType(SimpleName:AbstractComponent))))(VariableDeclarationFragment(SimpleName:constructor)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:constructor)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:HashMap))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SecurityException))(SimpleName:e1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ComponentInvocationException))(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ComponentInvocationException))(StringLiteral:<STR>))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(FieldAccess(ThisExpression)(SimpleName:invokeCount)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IComponent))(VariableDeclarationFragment(SimpleName:proc)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:proc)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:spaces)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ComponentInvocationException))(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ComponentInvocationException))(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ComponentInvocationException))(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:call)))))(ReturnStatement(BooleanLiteral:true))))))