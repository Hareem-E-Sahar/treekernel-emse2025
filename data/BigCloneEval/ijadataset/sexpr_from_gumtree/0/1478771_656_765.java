(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:handleSocketOp)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:obj))(SingleVariableDeclaration(SimpleType(SimpleName:STUNTSelector))(SimpleName:sel))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:STUNTSocket))(VariableDeclarationFragment(SimpleName:so)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:STUNTServerSocket))(VariableDeclarationFragment(SimpleName:ss)(NullLiteral)))(IfStatement(InstanceofExpression(SimpleName:obj)(SimpleType(SimpleName:STUNTSocket)))(ExpressionStatement(Assignment(SimpleName:so)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:STUNTSocket))(SimpleName:obj)))))(IfStatement(InstanceofExpression(SimpleName:obj)(SimpleType(SimpleName:STUNTServerSocket)))(ExpressionStatement(Assignment(SimpleName:ss)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:STUNTServerSocket))(SimpleName:obj)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:bsock)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bsock))(SimpleName:isConnected))(Block(ExpressionStatement(Assignment(SimpleName:fsock)(ASSIGNMENT_OPERATOR:=)(SimpleName:bsock)))(ExpressionStatement(Assignment(SimpleName:bsock)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(SimpleName:closeSocket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ASOCK))))(ExpressionStatement(MethodInvocation(SimpleName:verifyConnected)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fsock))))(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(SimpleName:isActive)(QualifiedName:State.A_ECHO)(QualifiedName:State.P_ECHO)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:ss)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:ss)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:psock)))(Block(ExpressionStatement(Assignment(SimpleName:fsock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:psock))(SimpleName:accept))))(IfStatement(InfixExpression(SimpleName:fsock)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:closeSocket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PSOCK))))(ExpressionStatement(MethodInvocation(SimpleName:verifyConnected)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fsock))))(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(SimpleName:isActive)(QualifiedName:State.A_ECHO)(QualifiedName:State.P_ECHO)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))(SwitchStatement(SimpleName:mState)(SwitchCase(SimpleName:P_ST1))(SwitchCase(SimpleName:P_ST2))(SwitchCase(SimpleName:A_INV_ACKD))(SwitchCase(SimpleName:P_CB_RCVD))(IfStatement(InfixExpression(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:bsock)))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bsock))(SimpleName:isConnected)))(Block(ExpressionStatement(MethodInvocation(SimpleName:closeSocket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:BSOCK))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:mState)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:State.P_CB_RCVD))(ExpressionStatement(MethodInvocation(SimpleName:abort)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:SocketTimeoutException))(StringLiteral:<STR>))))))))(ReturnStatement))))(SwitchStatement(SimpleName:mState)(SwitchCase(SimpleName:P_ST1))(SwitchCase(SimpleName:A_ST1))(IfStatement(InfixExpression(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:asock)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:asock))(SimpleName:isConnected))(Block(ExpressionStatement(Assignment(SimpleName:iaddr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:asock.s))(SimpleName:getLocalSocketAddress))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:eaddrs)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:InetSocketAddress))(MethodInvocation(SimpleName:readOne)(METHOD_INVOCATION_ARGUMENTS(SimpleName:asock))))))(ExpressionStatement(Assignment(SimpleName:asock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNBConnSock)(METHOD_INVOCATION_ARGUMENTS(SimpleName:iaddr)(ArrayAccess(SimpleName:responders)(NumberLiteral:1))(SimpleName:sel)(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(SimpleName:isActive)(QualifiedName:State.A_ST2)(QualifiedName:State.P_ST2)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:iaddr)(StringLiteral:<STR>)(ArrayAccess(SimpleName:eaddrs)(NumberLiteral:0))(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:abort)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:UnknownHostException))(StringLiteral:<STR>)))))))))(BreakStatement)(SwitchCase(SimpleName:P_ST2))(SwitchCase(SimpleName:A_ST2))(IfStatement(InfixExpression(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:asock)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:asock))(SimpleName:isConnected))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:eaddrs)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:InetSocketAddress))(MethodInvocation(SimpleName:readOne)(METHOD_INVOCATION_ARGUMENTS(SimpleName:asock))))))(ExpressionStatement(Assignment(SimpleName:asock)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:psock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNBLstnSock)(METHOD_INVOCATION_ARGUMENTS(SimpleName:iaddr)(SimpleName:sel)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:iaddr)(StringLiteral:<STR>)(ArrayAccess(SimpleName:eaddrs)(NumberLiteral:1))(StringLiteral:<STR>)))))(IfStatement(SimpleName:isActive)(Block(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:State.A_INV_SENT))))(ExpressionStatement(MethodInvocation(SimpleName:send)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stuntState))(SimpleName:invite)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:predict)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:State.P_INV_ACKD))))(ExpressionStatement(MethodInvocation(SimpleName:send)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stuntState))(SimpleName:accept)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:predict)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:abort)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:UnknownHostException))(StringLiteral:<STR>)))))))))(BreakStatement)(SwitchCase(SimpleName:P_ECHO))(SwitchCase(SimpleName:A_ECHO))(IfStatement(InfixExpression(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:fsock)))(Block(ExpressionStatement(MethodInvocation(SimpleName:writeInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fsock)(InfixExpression(MethodInvocation(SimpleName:readInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fsock)))(INFIX_EXPRESSION_OPERATOR:^)(SimpleName:STUNT_MAGIC)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:id))(SimpleName:hashCode))))))(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(ConditionalExpression(SimpleName:isActive)(QualifiedName:State.A_DONE)(QualifiedName:State.P_DONE)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(BreakStatement)(SwitchCase(SimpleName:P_DONE))(SwitchCase(SimpleName:A_DONE))(IfStatement(InfixExpression(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:fsock)))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(SimpleName:readInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fsock)))(INFIX_EXPRESSION_OPERATOR:^)(SimpleName:STUNT_MAGIC)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dst))(SimpleName:hashCode))))(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:nonce))(Block(ExpressionStatement(MethodInvocation(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:State.STOP))))(ExpressionStatement(Assignment(SimpleName:established)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fsock))(SimpleName:stopSelect)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:abort)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ProtocolException))(StringLiteral:<STR>)))))))))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:fine)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:obj))(SimpleName:toString))))))(IfStatement(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:so))(SimpleName:close)))(IfStatement(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:fsock))(ExpressionStatement(Assignment(SimpleName:fsock)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:asock))(ExpressionStatement(Assignment(SimpleName:asock)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:so)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:bsock))(ExpressionStatement(Assignment(SimpleName:bsock)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))))(IfStatement(InfixExpression(SimpleName:ss)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ss))(SimpleName:close)))(IfStatement(InfixExpression(SimpleName:ss)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:psock))(ExpressionStatement(Assignment(SimpleName:psock)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(BreakStatement))))))