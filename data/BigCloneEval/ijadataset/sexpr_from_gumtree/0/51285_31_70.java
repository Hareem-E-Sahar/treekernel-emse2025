(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:process)(SingleVariableDeclaration(SimpleType(SimpleName:ProcessorContext))(SimpleName:context))(SimpleType(SimpleName:InterruptedException))(SimpleType(SimpleName:ProcessorException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:RenderedOp))(VariableDeclarationFragment(SimpleName:im)(CastExpression(SimpleType(SimpleName:RenderedOp))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:Guid)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(QualifiedName:PNGEncodeParam.RGB))(VariableDeclarationFragment(SimpleName:encPar)(ClassInstanceCreation(SimpleType(QualifiedName:PNGEncodeParam.RGB)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encPar))(SimpleName:setTransparentRGB)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension))(ArrayInitializer(NumberLiteral:0)(NumberLiteral:0)(NumberLiteral:0))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tmpFile)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:tmpFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:tmpFile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ParameterBlock))(VariableDeclarationFragment(SimpleName:pb)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:ParameterBlock)))))(SimpleName:addSource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:im))))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out))))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encPar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JAI))(SimpleName:create)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:pb)(NullLiteral))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:tmpFile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:XFile))(VariableDeclarationFragment(SimpleName:xfile)(ClassInstanceCreation(SimpleType(SimpleName:XFile))(SimpleName:path))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:XFileOutputStream))(VariableDeclarationFragment(SimpleName:xout)(ClassInstanceCreation(SimpleType(SimpleName:XFileOutputStream))(SimpleName:xfile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(QualifiedName:com.luzan.common.nfs.s3.XFileExtensionAccessor))(VariableDeclarationFragment(SimpleName:xfa)(ParenthesizedExpression(CastExpression(SimpleType(QualifiedName:com.luzan.common.nfs.s3.XFileExtensionAccessor))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xfile))(SimpleName:getExtensionAccessor))))))(IfStatement(InfixExpression(SimpleName:xfa)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xfa))(SimpleName:setMimeType)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xfa))(SimpleName:setContentLength)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpFile))(SimpleName:length)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:xout))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xout))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xout))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:path)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProcessorException))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProcessorException))(SimpleName:e)))))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:tmpFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpFile))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tmpFile))(SimpleName:delete)))))))(ReturnStatement(InfixExpression(QualifiedName:TaskState.STATE_MO_START)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:TaskState.STATE_ENCODE)))))))