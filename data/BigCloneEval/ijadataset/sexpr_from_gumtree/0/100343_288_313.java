(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:analyzePixels)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)(QualifiedName:pixels.length)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nPix)(InfixExpression(SimpleName:len)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:3))))(ExpressionStatement(Assignment(SimpleName:indexedPixels)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:nPix))))))(VariableDeclarationStatement(SimpleType(SimpleName:NeuQuant))(VariableDeclarationFragment(SimpleName:nq)(ClassInstanceCreation(SimpleType(SimpleName:NeuQuant))(SimpleName:pixels)(SimpleName:len)(SimpleName:sample))))(ExpressionStatement(Assignment(SimpleName:colorTab)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nq))(SimpleName:process))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:colorTab.length))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:3))(Block(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:temp)(ArrayAccess(SimpleName:colorTab)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:colorTab)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:colorTab)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:colorTab)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))(ASSIGNMENT_OPERATOR:=)(SimpleName:temp)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:usedEntry)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:3)))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nPix))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nq))(SimpleName:map)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ArrayAccess(SimpleName:pixels)(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))(InfixExpression(ArrayAccess(SimpleName:pixels)(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))(InfixExpression(ArrayAccess(SimpleName:pixels)(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:usedEntry)(SimpleName:index))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:indexedPixels)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(SimpleName:index))))))(ExpressionStatement(Assignment(SimpleName:pixels)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:colorDepth)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:8)))(ExpressionStatement(Assignment(SimpleName:palSize)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:7)))(IfStatement(InfixExpression(SimpleName:transparent)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:transIndex)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:findClosest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:transparent)))))))))))