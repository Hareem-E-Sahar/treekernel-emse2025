(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:LispObject))(SimpleName:execute)(SingleVariableDeclaration(SimpleType(SimpleName:LispObject))(SimpleName:first))(SingleVariableDeclaration(SimpleType(SimpleName:LispObject))(SimpleName:second))(SimpleType(SimpleName:ConditionThrowable))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Pathname))(VariableDeclarationFragment(SimpleName:zipfilePathname)(MethodInvocation(SimpleName:coerceToPathname)(METHOD_INVOCATION_ARGUMENTS(SimpleName:first)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:4096))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:zipfileNamestring)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfilePathname))(SimpleName:getNamestring))))(IfStatement(InfixExpression(SimpleName:zipfileNamestring)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:SimpleError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfilePathname))(SimpleName:writeToString))))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:zipfileNamestring)))))(VariableDeclarationStatement(SimpleType(SimpleName:LispObject))(VariableDeclarationFragment(SimpleName:list)(SimpleName:second)))(WhileStatement(InfixExpression(SimpleName:list)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:NIL))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Pathname))(VariableDeclarationFragment(SimpleName:pathname)(MethodInvocation(SimpleName:coerceToPathname)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:CAR))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:namestring)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pathname))(SimpleName:getNamestring))))(IfStatement(InfixExpression(SimpleName:namestring)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:zipfile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:zipfileNamestring))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:delete)))(ReturnStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:SimpleError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pathname))(SimpleName:writeToString)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:namestring))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:n)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:list)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:CDR))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ReturnStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:LispError))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))(ReturnStatement(SimpleName:zipfilePathname))))))