(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:get)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:value))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0.0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1.0)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:minCell)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:maxCell)(InfixExpression(QualifiedName:lo_end.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:maxCell)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:minCell))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:checkCell)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxCell)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:minCell)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:cellValue)(ArrayAccess(SimpleName:lo_end)(SimpleName:checkCell))))(IfStatement(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:cellValue))(Block(ExpressionStatement(Assignment(SimpleName:maxCell)(ASSIGNMENT_OPERATOR:=)(SimpleName:checkCell))))(Block(ExpressionStatement(Assignment(SimpleName:minCell)(ASSIGNMENT_OPERATOR:=)(SimpleName:checkCell)))))))(ReturnStatement(SimpleName:minCell))))))