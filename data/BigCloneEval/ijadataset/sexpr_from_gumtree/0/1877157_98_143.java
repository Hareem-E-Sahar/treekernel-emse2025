(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:calculateIsParalog)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:BaseTreeNode))(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String))))(SimpleName:innerSets))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(SimpleName:parentOuterSet))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:outerSet)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:String)))(SimpleName:parentOuterSet))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isRoot)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:BaseTreeNode))(SimpleName:sibling))(QualifiedName:parent.children)(Block(IfStatement(InfixExpression(ThisExpression)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:sibling))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:siblingInnerSet)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:innerSets))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sibling)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outerSet))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:siblingInnerSet)))))))))(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isTerminal)))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:BaseTreeNode))(SimpleName:ch))(SimpleName:children)(Block(VariableDeclarationStatement(SimpleType(SimpleName:PTreeNode))(VariableDeclarationFragment(SimpleName:child)(CastExpression(SimpleType(SimpleName:PTreeNode))(SimpleName:ch))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:child))(SimpleName:calculateIsParalog)(METHOD_INVOCATION_ARGUMENTS(SimpleName:innerSets)(SimpleName:outerSet))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:children))(SimpleName:size))))(ExpressionStatement(Assignment(SimpleName:nodeType)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NodeType.unknown)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PTreeNode))(VariableDeclarationFragment(SimpleName:child1)(CastExpression(SimpleType(SimpleName:PTreeNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:children))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:set1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:innerSets))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:child1)))))(IfStatement(InfixExpression(SimpleName:set1)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ContinueStatement))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PTreeNode))(VariableDeclarationFragment(SimpleName:child2)(CastExpression(SimpleType(SimpleName:PTreeNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:children))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:set2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:innerSets))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:child2)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:test)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:String)))(SimpleName:set1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:test))(SimpleName:retainAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:set2))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:test))(SimpleName:isEmpty))(Block(IfStatement(InfixExpression(SimpleName:nodeType)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:NodeType.unknown))(ExpressionStatement(Assignment(SimpleName:nodeType)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NodeType.speciation)))(ExpressionStatement(Assignment(SimpleName:nodeType)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NodeType.both)))))(Block(IfStatement(InfixExpression(SimpleName:nodeType)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:NodeType.unknown))(ExpressionStatement(Assignment(SimpleName:nodeType)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NodeType.duplication)))(ExpressionStatement(Assignment(SimpleName:nodeType)(ASSIGNMENT_OPERATOR:=)(QualifiedName:NodeType.both))))))))))))(ExpressionStatement(MethodInvocation(SimpleName:matchSpecies)(METHOD_INVOCATION_ARGUMENTS(SimpleName:innerSets))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isTerminal)))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:BaseTreeNode))(SimpleName:ch))(SimpleName:children)(Block(VariableDeclarationStatement(SimpleType(SimpleName:PTreeNode))(VariableDeclarationFragment(SimpleName:child)(CastExpression(SimpleType(SimpleName:PTreeNode))(SimpleName:ch))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:maxlen)(InfixExpression(SimpleName:maxage)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:child.minage))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:minlen)(InfixExpression(SimpleName:minage)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:child.maxage))))(ExpressionStatement(Assignment(QualifiedName:child.length)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxlen)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:minlen)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:innerSet)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:innerSets))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outerSet))(SimpleName:retainAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:innerSet))))(ExpressionStatement(Assignment(SimpleName:isParalog)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outerSet))(SimpleName:isEmpty)))))))))