(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:FileOutputStream))(SimpleName:create)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:InterruptedException))(Block(IfStatement(InfixExpression(SimpleName:out)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:file)(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:lock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:getChannel)))(SimpleName:tryLock))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(WhileStatement(InfixExpression(SimpleName:lock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:lock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:getChannel)))(SimpleName:tryLock))))(IfStatement(InfixExpression(SimpleName:acquireLockTimeout)(INFIX_EXPRESSION_OPERATOR:>)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))))))))))(ReturnStatement(SimpleName:out))))))