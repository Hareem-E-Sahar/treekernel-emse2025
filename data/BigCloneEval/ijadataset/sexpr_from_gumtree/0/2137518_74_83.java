(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:indexOfSegment)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:x))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:minX))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:maxX)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IndexOutOfBoundsException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lowIdx)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:highIdx)(InfixExpression(SimpleName:segmentCount)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:lowIdx)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:highIdx))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lowIdx)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:highIdx)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:pointX)(SimpleName:idx)))(ExpressionStatement(Assignment(SimpleName:highIdx)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(IfStatement(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(SimpleName:pointX)(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ReturnStatement(SimpleName:idx))(ExpressionStatement(Assignment(SimpleName:lowIdx)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:idx)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x)(StringLiteral:<STR>))))))))