(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:consume)(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hookedUp))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:faucetTemplate)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:XformationException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(SwitchStatement(SimpleName:type)(SwitchCase(SimpleName:File))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:outputStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:path)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:XformationException))(StringLiteral:<STR>)(SimpleName:e))))))(BreakStatement)(SwitchCase(SimpleName:Stream))(BreakStatement))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hookedUp))(Block(IfStatement(InstanceofExpression(SimpleName:faucetTemplate)(SimpleType(SimpleName:IPipelineItem)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:IPipelineItem))(SimpleName:faucetTemplate))))(SimpleName:consume)(METHOD_INVOCATION_ARGUMENTS(ThisExpression))))))))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(NumberLiteral:8)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1024)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:counter)(NumberLiteral:0)))(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(SimpleType(SimpleName:DequePayload))(VariableDeclarationFragment(SimpleName:payload)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:payload)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:deque))(SimpleName:takeFirst)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:ie))(Block)))(IfStatement(InfixExpression(SimpleName:payload)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))(VariableDeclarationStatement(SimpleType(SimpleName:IFaucet))(VariableDeclarationFragment(SimpleName:faucet)(QualifiedName:payload.faucet)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inputStream)(QualifiedName:payload.inputStream)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isTraceEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:inputStream)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:inputStream)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isTraceEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:inputStream)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(PostfixExpression(SimpleName:counter)(POSTFIX_EXPRESSION_OPERATOR:++))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isTraceEnabled))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:readInput)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ByteArrayUtil))(SimpleName:getHexDump)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:count)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:readInput)(StringLiteral:<STR>)(SimpleName:inputStream)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:count))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:faucet))(SimpleName:dispose)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:faucetTemplate))(SimpleName:dispose))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:ioe))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:XformationException))(StringLiteral:<STR>)(SimpleName:ioe))))))))))