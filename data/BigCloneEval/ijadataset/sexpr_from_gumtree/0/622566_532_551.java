(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:closeStartTag)(SimpleType(SimpleName:IOException))(Block(IfStatement(SimpleName:finished)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getLocation)))))))(IfStatement(SimpleName:seenBracket)(Block(ExpressionStatement(Assignment(SimpleName:seenBracket)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:seenBracketBracket)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(IfStatement(InfixExpression(SimpleName:startTagIncomplete)(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:setPrefixCalled))(Block(IfStatement(SimpleName:setPrefixCalled)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getLocation)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:startTagIncomplete))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getLocation)))))))(ExpressionStatement(MethodInvocation(SimpleName:writeNamespaceDeclarations)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:elNamespaceCount)(SimpleName:depth))(ASSIGNMENT_OPERATOR:=)(SimpleName:namespaceEnd)))(ExpressionStatement(Assignment(SimpleName:startTagIncomplete)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))))