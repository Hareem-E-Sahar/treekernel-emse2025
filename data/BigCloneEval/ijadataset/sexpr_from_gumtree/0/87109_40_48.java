(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:doGetBuffer)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:maxLen))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(SimpleName:mMode)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:FileRef.FILEMODE_WRITE))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:end)(InfixExpression(SimpleName:mPos)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maxLen))))(IfStatement(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:mBuffer.length))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(QualifiedName:mBuffer.length))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:result)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:mPos)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:mPos)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:end))(PostfixExpression(SimpleName:mPos)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:result)(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++)))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:mBuffer)(SimpleName:mPos)))))(ReturnStatement(SimpleName:result))))))