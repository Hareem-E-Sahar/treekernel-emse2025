(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:sha2)(SingleVariableDeclaration(SingleVariableDeclaration(VARARGS_TYPE(SimpleType(SimpleName:String)))(SimpleName:data)))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:digest)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:32))))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:buffer)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:s))(SimpleName:data)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s))))))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:sha256)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:sha256)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:ex))(Block(AssertStatement(BooleanLiteral:false)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sha256))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:toString)))(SimpleName:getBytes)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sha256))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digest)(NumberLiteral:0)(QualifiedName:digest.length)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:DigestException))(SimpleName:ex))(Block(AssertStatement(BooleanLiteral:false)))))(ReturnStatement(SimpleName:digest))))))