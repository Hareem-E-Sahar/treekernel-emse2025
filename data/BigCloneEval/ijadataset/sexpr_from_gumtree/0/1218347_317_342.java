(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:InputStream))(SimpleName:getStreamWithMarkReset)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:stream))(SimpleType(SimpleName:IOException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:markSupported))(Block(ReturnStatement(SimpleName:stream))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:output)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:available)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:2048))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:read))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:toByteArray)))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignored))(Block)))(IfStatement(InfixExpression(SimpleName:output)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignored))(Block)))))))))))