(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:gUnitTestResult))(SimpleName:runLexer)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:lexerName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:testRuleName))(SingleVariableDeclaration(SimpleType(SimpleName:gUnitTestInput))(SimpleName:testInput))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:CharStream))(VariableDeclarationFragment(SimpleName:input)))(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:lexer)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:PrintStream))(VariableDeclarationFragment(SimpleName:ps)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:PrintStream))(VariableDeclarationFragment(SimpleName:ps2)(NullLiteral)))(TryStatement(Block(IfStatement(QualifiedName:testInput.inputIsFile)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filePath)(QualifiedName:testInput.testInput)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:testInputFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:filePath))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testInputFile))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:grammarInfo))(SimpleName:getHeader))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ExpressionStatement(Assignment(SimpleName:testInputFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:grammarInfo))(SimpleName:getHeader)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))))(QualifiedName:testInput.testInput))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testInputFile))(SimpleName:exists))(ExpressionStatement(Assignment(SimpleName:filePath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testInputFile))(SimpleName:getCanonicalPath)))))))(ExpressionStatement(Assignment(SimpleName:input)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ANTLRFileStream))(SimpleName:filePath)))))(Block(ExpressionStatement(Assignment(SimpleName:input)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ANTLRStringStream))(QualifiedName:testInput.testInput))))))(ExpressionStatement(Assignment(SimpleName:lexer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:classForName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexerName)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Class))(Dimension))(VariableDeclarationFragment(SimpleName:lexArgTypes)(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension))(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:CharStream)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:lexConstructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexer))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexArgTypes)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:lexArgs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:input)))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:lexObj)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexConstructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexArgs)))))(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:ruleName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexer))(SimpleName:getMethod)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:testRuleName))(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension(NumberLiteral:0))))))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:err)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(Assignment(SimpleName:ps)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PrintStream))(SimpleName:out))))(ExpressionStatement(Assignment(SimpleName:ps2)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PrintStream))(SimpleName:err))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setOut)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ps))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setErr)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ps2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ruleName))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexObj)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(NumberLiteral:0)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:ruleName2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexer))(SimpleName:getMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension(NumberLiteral:0))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:currentIndex)(CastExpression(SimpleType(SimpleName:Integer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ruleName2))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lexObj)(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension(NumberLiteral:0)))))))))(IfStatement(InfixExpression(SimpleName:currentIndex)(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:size)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps2))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentIndex)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:toString)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:gUnitTestResult))(VariableDeclarationFragment(SimpleName:testResult)(ClassInstanceCreation(SimpleType(SimpleName:gUnitTestResult))(BooleanLiteral:false)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:toString))(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:testResult))(SimpleName:setError)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:err))(SimpleName:toString)))))(ReturnStatement(SimpleName:testResult))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:stdout)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toString)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:stdout)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:toString))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:gUnitTestResult))(BooleanLiteral:true)(SimpleName:stdout)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ReturnStatement(MethodInvocation(SimpleName:getTestExceptionResult)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SecurityException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:e))(Block(ReturnStatement(MethodInvocation(SimpleName:getTestExceptionResult)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:ps)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps))(SimpleName:close))))(IfStatement(InfixExpression(SimpleName:ps2)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ps2))(SimpleName:close))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setOut)(METHOD_INVOCATION_ARGUMENTS(SimpleName:console))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:setErr)(METHOD_INVOCATION_ARGUMENTS(SimpleName:consoleErr)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(StringLiteral:<STR>)))))))