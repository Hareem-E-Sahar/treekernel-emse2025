(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(Modifier:static)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:TestDecoratorFactory)))(SimpleName:parseDecorators)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:decorators))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:TestDecoratorFactory)))(VariableDeclarationFragment(SimpleName:result)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:TestDecoratorFactory))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:toParse)(SimpleName:decorators)))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:decorators)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:decorators))))(Block(ReturnStatement(SimpleName:result))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:toParse)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(Assignment(SimpleName:toParse)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:decoratorClassName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:toParse))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Class))(VariableDeclarationFragment(SimpleName:decoratorClass)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:decoratorClassName)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:decoratorConstructor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoratorClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:WrappedSuiteTestDecorator)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:WrappedSuiteTestDecorator))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:decoratorClass))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:decoratorClassName)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:TestDecoratorFactory))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:WrappedSuiteTestDecorator))(SimpleName:decorateTest)(SingleVariableDeclaration(SimpleType(SimpleName:Test))(SimpleName:test))(Block(TryStatement(Block(ReturnStatement(CastExpression(SimpleType(SimpleName:WrappedSuiteTestDecorator))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoratorConstructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:test))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoratorConstructor))(SimpleName:getDeclaringClass)))(SimpleName:getName))(StringLiteral:<STR>))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoratorConstructor))(SimpleName:getDeclaringClass)))(SimpleName:getName))(StringLiteral:<STR>))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:decoratorConstructor))(SimpleName:getDeclaringClass)))(SimpleName:getName))(StringLiteral:<STR>))(SimpleName:e))))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:decoratorClassName)(StringLiteral:<STR>))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:decoratorClassName)(StringLiteral:<STR>))(SimpleName:e))))))))(ReturnStatement(SimpleName:result))))))