(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:Clip))(SimpleName:loadSound)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:soundStream))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:stream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Clip))(VariableDeclarationFragment(SimpleName:clip)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:soundStream)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:soundStream)(NumberLiteral:2048)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:signal)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Debug.ERROR)(ThisExpression)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex)))))(ReturnStatement(NullLiteral)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:format)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getEncoding))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioFormat.Encoding.ULAW)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getEncoding))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:AudioFormat.Encoding.ALAW))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:tmp)(ClassInstanceCreation(SimpleType(QualifiedName:javax.sound.sampled.AudioFormat))(QualifiedName:AudioFormat.Encoding.PCM_SIGNED)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleRate))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getSampleSizeInBits))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getChannels))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getFrameSize))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getFrameRate))(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tmp)(SimpleName:stream)))))(ExpressionStatement(Assignment(SimpleName:format)(ASSIGNMENT_OPERATOR:=)(SimpleName:tmp)))))(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:info)(ClassInstanceCreation(SimpleType(QualifiedName:DataLine.Info))(TypeLiteral(SimpleType(QualifiedName:javax.sound.sampled.Clip)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFormat))(ParenthesizedExpression(InfixExpression(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:getFrameLength)))(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:format))(SimpleName:getFrameSize)))))))(ExpressionStatement(Assignment(SimpleName:clip)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:Clip))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:info))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clip))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stream)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:signal)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Debug.ERROR)(ThisExpression)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex)))))(ReturnStatement(NullLiteral)))))(ReturnStatement(SimpleName:clip))))))