(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:write)(Block(TryStatement(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(FieldAccess(ThisExpression)(SimpleName:useCompression)))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:out))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(FieldAccess(ThisExpression)(SimpleName:outFilename)))(StringLiteral:<STR>))))))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:outFilename))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:outFilename)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:outFilename)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:4))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zipOut)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(InfixExpression(FieldAccess(ThisExpression)(SimpleName:outFilename))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:out))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(SimpleName:zipOut)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:ze)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(FieldAccess(ThisExpression)(SimpleName:outFilename))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ze))(SimpleName:setMethod)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ZipEntry.DEFLATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:writeXMLDeclaration)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:out)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:offset)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:offsetString)(StringLiteral:<STR>)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:kml)))(SimpleName:writeKML)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:out))(FieldAccess(ThisExpression)(SimpleName:xmlNS))(SimpleName:offset)(SimpleName:offsetString)(FieldAccess(ThisExpression)(SimpleName:xmlNS)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:out)))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:out)))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))