(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:static)(SimpleType(SimpleName:Object))(SimpleName:constructObject)(SingleVariableDeclaration(SimpleType(SimpleName:Class))(SimpleName:clas))(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:args))(SimpleType(SimpleName:ReflectError))(SimpleType(SimpleName:InvocationTargetException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clas))(SimpleName:isInterface))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ReflectError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:clas)))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:obj)(NullLiteral)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Class))(Dimension))(VariableDeclarationFragment(SimpleName:types)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Types))(SimpleName:getTypes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)))))(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:con)(NullLiteral)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Constructor))(Dimension))(VariableDeclarationFragment(SimpleName:constructors)(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Capabilities))(SimpleName:haveAccessibility))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clas))(SimpleName:getDeclaredConstructors))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clas))(SimpleName:getConstructors)))))(IfStatement(QualifiedName:Interpreter.DEBUG)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Interpreter))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:clas))))))(ExpressionStatement(Assignment(SimpleName:con)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:findMostSpecificConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:types)(SimpleName:constructors)))))(IfStatement(InfixExpression(SimpleName:con)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(MethodInvocation(SimpleName:cantFindConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clas)(SimpleName:types)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isPublic)(METHOD_INVOCATION_ARGUMENTS(SimpleName:con))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ReflectManager))(SimpleName:RMSetAccessible)(METHOD_INVOCATION_ARGUMENTS(SimpleName:con)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UtilEvalError))(SimpleName:e))(Block))))(ExpressionStatement(Assignment(SimpleName:args)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Primitive))(SimpleName:unwrap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:obj)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:args))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ReflectError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:clas)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ReflectError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ReflectError))(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:obj)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ReflectError))(StringLiteral:<STR>))))(ReturnStatement(SimpleName:obj))))))