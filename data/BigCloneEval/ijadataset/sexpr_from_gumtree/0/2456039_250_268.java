(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:operationComplete)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelFuture))(SimpleName:cf))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:completedIn)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:writeTime))))(IfStatement(InfixExpression(SimpleName:completedIn)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1000))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:completedIn))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:delayToUse)(InfixExpression(SimpleName:delay)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:completedIn))))(IfStatement(InfixExpression(SimpleName:delayToUse)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:RtmpConfig.TIMER_TICK_SIZE))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:newTimeout)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:TimerTask))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SingleVariableDeclaration(SimpleType(SimpleName:Timeout))(SimpleName:timeout))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:fireMessageReceived)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:future))(SimpleName:getChannel))(SimpleName:writeNext))))))))(SimpleName:delayToUse)(QualifiedName:TimeUnit.MILLISECONDS)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:fireMessageReceived)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:future))(SimpleName:getChannel))(SimpleName:writeNext))))))))))