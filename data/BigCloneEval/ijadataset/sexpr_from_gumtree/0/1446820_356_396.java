(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:boolean)(SimpleName:renameTo)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:path))(SimpleType(SimpleName:CommandAbstractException))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isExternal))(Block(ReturnStatement(SuperMethodInvocation(SimpleName:renameTo)(SimpleName:path)))))(ExpressionStatement(MethodInvocation(SimpleName:checkIdentify)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isReady))(Block(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(SimpleName:getTrueFile))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canRead))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:newFile)(MethodInvocation(SimpleName:getFileFromPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newFile))(SimpleName:getParentFile)))(SimpleName:canWrite))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newFile))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fileOutputStream)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fileOutputStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:newFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newFile))(SimpleName:getName)))(SimpleName:e))))(ReturnStatement(BooleanLiteral:false)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fileChannelOut)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileOutputStream))(SimpleName:getChannel))))(IfStatement(MethodInvocation(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileChannelOut)))(Block(ExpressionStatement(MethodInvocation(SimpleName:delete))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileChannelOut))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:newFile))))(ReturnStatement(BooleanLiteral:false))))))(ExpressionStatement(Assignment(SimpleName:currentFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getRelativePath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newFile)))))(ExpressionStatement(Assignment(SimpleName:isExternal)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(Assignment(SimpleName:isReady)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ReturnStatement(BooleanLiteral:true))))))(ReturnStatement(BooleanLiteral:false))))))