(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:InputStream))(SimpleName:convert)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o))(Block(IfStatement(InfixExpression(SimpleName:o)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(NullLiteral))))(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:InputStream)))(Block(ReturnStatement(CastExpression(SimpleType(SimpleName:InputStream))(SimpleName:o)))))(TryStatement(Block(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:File)))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(CastExpression(SimpleType(SimpleName:File))(SimpleName:o))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:URL_CONVERTER))(SimpleName:convert)(METHOD_INVOCATION_ARGUMENTS(SimpleName:o)))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.SEVERE)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(SimpleName:ex)))))))(ReturnStatement(NullLiteral))))))