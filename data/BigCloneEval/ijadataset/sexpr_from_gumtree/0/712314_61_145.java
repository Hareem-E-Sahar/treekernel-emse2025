(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:perform)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(SingleVariableDeclaration(SimpleType(SimpleName:CommandArguments))(SimpleName:arguments))(SimpleType(SimpleName:CommandException))(SimpleType(SimpleName:MissingArgumentsException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PrintWriter))(VariableDeclarationFragment(SimpleName:writer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getWriter))))(VariableDeclarationStatement(SimpleType(SimpleName:DebuggingContext))(VariableDeclarationFragment(SimpleName:dc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getDebuggingContext))))(VariableDeclarationStatement(SimpleType(SimpleName:ThreadReference))(VariableDeclarationFragment(SimpleName:thread)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dc))(SimpleName:getThread))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:frame)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dc))(SimpleName:getFrame))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start)(NumberLiteral:0)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:peek))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:nextToken)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:hasMoreTokens)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MissingArgumentsException)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:nfe))(Block)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:end)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:peek))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:nextToken)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:hasMoreTokens)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MissingArgumentsException)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:nfe))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:returnAsIs)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:expr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arguments))(SimpleName:rest))))(VariableDeclarationStatement(SimpleType(SimpleName:Evaluator))(VariableDeclarationFragment(SimpleName:eval)(ClassInstanceCreation(SimpleType(SimpleName:Evaluator))(SimpleName:expr))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:o)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:o)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:eval))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:thread)(SimpleName:frame))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:EvaluationException))(SimpleName:ee))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CommandException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NbBundle))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getClass))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ee))(SimpleName:getMessage)))))))))(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:ArrayReference)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:printArray)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:ArrayReference))(SimpleName:o))(SimpleName:start)(SimpleName:end)(SimpleName:thread)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CommandException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))(SimpleName:e)))))))(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:ObjectReference)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isaCollection)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isaMap)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:ObjectReference))(VariableDeclarationFragment(SimpleName:or)(CastExpression(SimpleType(SimpleName:ObjectReference))(SimpleName:o))))(VariableDeclarationStatement(SimpleType(SimpleName:ReferenceType))(VariableDeclarationFragment(SimpleName:rt)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:or))(SimpleName:referenceType))))(IfStatement(InstanceofExpression(SimpleName:rt)(SimpleType(SimpleName:ClassType)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClassType))(VariableDeclarationFragment(SimpleName:ct)(CastExpression(SimpleType(SimpleName:ClassType))(SimpleName:rt))))(VariableDeclarationStatement(SimpleType(SimpleName:List))(VariableDeclarationFragment(SimpleName:interfaces)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ct))(SimpleName:allInterfaces))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:interfaces))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:interfaces))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ReferenceType))(VariableDeclarationFragment(SimpleName:intf)(CastExpression(SimpleType(SimpleName:ReferenceType))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:intf))(SimpleName:name))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:isaCollection)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:isaMap)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement))))))))))(IfStatement(SimpleName:isaCollection)(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:printCollection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:or)(SimpleName:start)(SimpleName:end)(SimpleName:thread)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CommandException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))(SimpleName:e)))))))(IfStatement(SimpleName:isaMap)(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CommandException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NbBundle))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getClass))(StringLiteral:<STR>)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:printMap)(METHOD_INVOCATION_ARGUMENTS(SimpleName:or)(SimpleName:thread)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CommandException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))(SimpleName:e)))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CommandException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NbBundle))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getClass))(StringLiteral:<STR>)))))))))(IfStatement(InfixExpression(SimpleName:o)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NbBundle))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getClass))(StringLiteral:<STR>)))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CommandException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NbBundle))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getClass))(StringLiteral:<STR>)))))))))))))