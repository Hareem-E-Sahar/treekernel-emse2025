(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:writeArchive)(SingleVariableDeclaration(SimpleType(SimpleName:LWMap))(SimpleName:map))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:archive))(SimpleType(QualifiedName:java.io.IOException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:archive)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:label)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archive))(SimpleName:getName))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:mapName)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:label))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:VueUtil.VueArchiveExtension)))(ExpressionStatement(Assignment(SimpleName:mapName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:label))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:label))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:4))))))(ExpressionStatement(Assignment(SimpleName:mapName)(ASSIGNMENT_OPERATOR:=)(SimpleName:label))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dirName)(InfixExpression(SimpleName:mapName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:Resource)))(VariableDeclarationFragment(SimpleName:uniqueResources)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:map))(SimpleName:getAllUniqueResources))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:PropertyEntry)))(VariableDeclarationFragment(SimpleName:manifest)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Item)))(VariableDeclarationFragment(SimpleName:items)(ClassInstanceCreation(SimpleType(SimpleName:ArrayList)))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:uniqueEntryNames)(ClassInstanceCreation(SimpleType(SimpleName:HashSet)))))(ExpressionStatement(Assignment(QualifiedName:Archive.UniqueNameFailsafeCount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Resource))(SimpleName:r))(SimpleName:uniqueResources)(Block(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:sourceFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:getActiveDataFile))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:description)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(QualifiedName:DEBUG.Enabled)(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:getSpec)))))))(IfStatement(InfixExpression(SimpleName:sourceFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:description)))))(ContinueStatement))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFile))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sourceFile)(StringLiteral:<STR>)(SimpleName:r)))))(ContinueStatement))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:packageEntryName)(MethodInvocation(SimpleName:generatePackageFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:r)(SimpleName:uniqueEntryNames)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:dirName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:packageEntryName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Archive))(SimpleName:setComment)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:SPEC_KEY)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:getSpec))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Item))(VariableDeclarationFragment(SimpleName:item)(ClassInstanceCreation(SimpleType(SimpleName:Item))(SimpleName:entry)(SimpleName:r)(SimpleName:sourceFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:items))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:item))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:manifest))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:PropertyEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:getSpec))(SimpleName:packageEntryName)))))(IfStatement(QualifiedName:DEBUG.Enabled)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:item)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:tags)(METHOD_INVOCATION_ARGUMENTS(SimpleName:r))))(SimpleName:t)))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zos)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:archive))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:mapEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(InfixExpression(SimpleName:dirName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:mapName)(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:comment)(InfixExpression(SimpleName:MAP_ARCHIVE_KEY)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:Date)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:VUE))(SimpleName:getName))(StringLiteral:<STR>)(QualifiedName:Version.AllInfo)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:items))(SimpleName:size))(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Archive))(SimpleName:setComment)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mapEntry)(SimpleName:comment))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mapEntry))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Writer))(VariableDeclarationFragment(SimpleName:mapOut)(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(SimpleName:zos))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:map))(SimpleName:setArchiveManifest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:manifest))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ActionUtil))(SimpleName:marshallMapToWriter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:map)(SimpleName:mapOut)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:t)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:map))(SimpleName:setArchiveManifest)(METHOD_INVOCATION_ARGUMENTS(NullLiteral))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Item))(SimpleName:item))(SimpleName:items)(Block(IfStatement(QualifiedName:DEBUG.Enabled)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:item)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:item.entry))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:item.entry))))(ExpressionStatement(MethodInvocation(SimpleName:copyBytesToZip)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:item.dataFile)(SimpleName:zos)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:item))(SimpleName:t)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:archive)))))))))