(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:Transcription))(SimpleName:fabriqueTranscription)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:fNoir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:fBraille))(SingleVariableDeclaration(SimpleType(SimpleName:GestionnaireErreur))(SimpleName:g))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:reverse))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Transcription))(VariableDeclarationFragment(SimpleName:retour)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Convertisseur))(VariableDeclarationFragment(SimpleName:c)))(VariableDeclarationStatement(SimpleType(SimpleName:Presentateur))(VariableDeclarationFragment(SimpleName:p)))(VariableDeclarationStatement(SimpleType(SimpleName:Transcodeur))(VariableDeclarationFragment(SimpleName:t)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:noirEncoding)(ConditionalExpression(ParenthesizedExpression(SimpleName:reverse))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getNoirEncoding)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:brailleEncoding)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getBrailleEncoding))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:tableBraille)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getTableBraille))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sourceMimeType)(StringLiteral:<STR>)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fNoir))(QualifiedName:Nat.LOG_SILENCIEUX))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:fNoir))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:urlCon)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:br)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlCon))(SimpleName:getInputStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:ftmp)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fTempHtml))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedWriter))(VariableDeclarationFragment(SimpleName:bw)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:ftmp))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ligne)(StringLiteral:<STR>)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:ligne)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bw))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ligne))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bw))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fNoir)(ASSIGNMENT_OPERATOR:=)(SimpleName:fTempHtml))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_SILENCIEUX))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_SILENCIEUX)))))))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(SimpleName:verifFichier)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fNoir))(SimpleName:g)))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:reverse)))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:reverse)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(SimpleName:verifFichier)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fBraille))(SimpleName:g)))))(Block(IfStatement(SimpleName:reverse)(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noirEncoding)(StringLiteral:<STR>))(QualifiedName:Nat.LOG_NORMAL)))))(Block(ExpressionStatement(Assignment(SimpleName:noirEncoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:trouveEncodingSource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fNoir)(SimpleName:g)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:noirEncoding)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:noirEncoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:defaultCharset)))(SimpleName:name))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noirEncoding)(StringLiteral:<STR>))(QualifiedName:Nat.LOG_NORMAL)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noirEncoding)(StringLiteral:<STR>))(QualifiedName:Nat.LOG_NORMAL))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileToolKit))(SimpleName:convertBrailleFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fBraille)(SimpleName:fTempTan)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getUserBrailleTableFolder))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getInstallFolder))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getBrailleEncoding))(StringLiteral:<STR>)(SimpleName:g))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurTan))(SimpleName:fTempTan)(SimpleName:fTempXML)(CharacterLiteral:<STR>))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:brailleEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:noirEncoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:defaultCharset)))(SimpleName:name)))))(Block(ExpressionStatement(Assignment(SimpleName:noirEncoding)(ASSIGNMENT_OPERATOR:=)(SimpleName:brailleEncoding)))))))(ExpressionStatement(Assignment(SimpleName:t)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:TranscodeurNormal))(SimpleName:fTempXML)(SimpleName:fTempXML2)(StringLiteral:<STR>)(SimpleName:g))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:setSens)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:p)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PresentateurSans))(SimpleName:g)(SimpleName:noirEncoding)(SimpleName:fTempXML2)(SimpleName:fNoir)(SimpleName:tableBraille))))(ExpressionStatement(Assignment(SimpleName:retour)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Transcription))(SimpleName:g)(SimpleName:c)(SimpleName:t)(SimpleName:p)))))(Block(ExpressionStatement(Assignment(SimpleName:sourceMimeType)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:trouveMimeTypeSource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fNoir)(SimpleName:g)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sourceMimeType))(QualifiedName:Nat.LOG_NORMAL))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceMimeType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noirEncoding)(StringLiteral:<STR>))(QualifiedName:Nat.LOG_NORMAL)))))(Block(ExpressionStatement(Assignment(SimpleName:noirEncoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:trouveEncodingSource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fNoir)(SimpleName:g)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:noirEncoding)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:noirEncoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:defaultCharset)))(SimpleName:name))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noirEncoding)(StringLiteral:<STR>))(QualifiedName:Nat.LOG_NORMAL)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:noirEncoding)(StringLiteral:<STR>))(QualifiedName:Nat.LOG_NORMAL))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getTraiterMaths))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getTraiterMusique)))(Block(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurTexteMixte))(SimpleName:fNoir)(SimpleName:fTempXML)(SimpleName:noirEncoding)))))(Block(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurTexte))(SimpleName:fNoir)(SimpleName:fTempXML)(SimpleName:noirEncoding)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceMimeType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurOpenOffice))(SimpleName:fNoir)(SimpleName:fTempXML)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceMimeType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurXML))(SimpleName:fNoir)(SimpleName:fTempXML)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurXML))(SimpleName:fNoir)(SimpleName:fTempXML)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceMimeType))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurSans))(SimpleName:fNoir)(SimpleName:fTempXML)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ConvertisseurXML))(SimpleName:fNoir)(SimpleName:fTempXML)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Convertisseur2ODT))(SimpleName:fNoir)(SimpleName:fTempXML))))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:brailleEncoding))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:noirEncoding))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:brailleEncoding)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:defaultCharset)))(SimpleName:name)))))(Block(ExpressionStatement(Assignment(SimpleName:brailleEncoding)(ASSIGNMENT_OPERATOR:=)(SimpleName:noirEncoding)))))))(ExpressionStatement(Assignment(SimpleName:p)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PresentateurMEP))(SimpleName:g)(SimpleName:brailleEncoding)(SimpleName:fTempXML2)(SimpleName:fBraille)(SimpleName:tableBraille))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getDicoCoup))))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getUserTempFolder))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(SimpleName:exists))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getDicoCoup)))(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HyphenationToolkit))(SimpleName:fabriqueDicoNat)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ConfigNat))(SimpleName:getCurrentConfig)))(SimpleName:getDicoCoup))(SimpleName:xslHyphen)(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fNoir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:afficheMessage)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:Nat.LOG_NORMAL))))(ExpressionStatement(Assignment(SimpleName:t)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:TranscodeurSans))(SimpleName:fTempXML)(SimpleName:fTempXML2)(StringLiteral:<STR>)(SimpleName:g)))))(Block(ExpressionStatement(Assignment(SimpleName:t)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:TranscodeurNormal))(SimpleName:fTempXML)(SimpleName:fTempXML2)(StringLiteral:<STR>)(SimpleName:g))))))(ExpressionStatement(Assignment(SimpleName:retour)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Transcription))(SimpleName:g)(SimpleName:c)(SimpleName:t)(SimpleName:p))))))))(ReturnStatement(SimpleName:retour))))))