(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:getSignatureAttribute)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:obj))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Method))(VariableDeclarationFragment(SimpleName:method)))(TryStatement(Block(IfStatement(InstanceofExpression(SimpleName:obj)(SimpleType(SimpleName:AccessibleObject)))(Block(ExpressionStatement(Assignment(SimpleName:method)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:AccessibleObject))))(SimpleName:getDeclaredMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(Block(ExpressionStatement(Assignment(SimpleName:method)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Class))))(SimpleName:getDeclaredMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:method))(SimpleName:setAccessible)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:printStackTrace)))(ReturnStatement(StringLiteral:<STR>)))))(TryStatement(Block(ReturnStatement(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:method))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(SimpleName:obj))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:ex)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:ex))))))))))