(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SimpleType(SimpleName:String))(SimpleName:runScript)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:scriptName))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:data)(StringLiteral:<STR>)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getCodeBase)))(SimpleName:toString))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:scriptName)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:buffIn)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:in))))(DoStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:temp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffIn))(SimpleName:read))))(IfStatement(InfixExpression(SimpleName:temp)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(BreakStatement))(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:data)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(PrimitiveType:char)(SimpleName:temp))))))(BooleanLiteral:true)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))))(ReturnStatement(SimpleName:data))))))