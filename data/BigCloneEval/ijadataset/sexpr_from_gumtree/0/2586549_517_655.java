(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:execute)(SimpleType(SimpleName:BuildException))(Block(IfStatement(SimpleName:usedMatchingTask)(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(ConditionalExpression(SimpleName:quiet)(QualifiedName:Project.MSG_VERBOSE)(SimpleName:verbosity)))))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:file)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:dir)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesets))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:rcs)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:quiet)(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:failonerror))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(MethodInvocation(SimpleName:getLocation))))))(IfStatement(InfixExpression(SimpleName:file)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)(StringLiteral:<STR>))(ConditionalExpression(SimpleName:quiet)(QualifiedName:Project.MSG_VERBOSE)(SimpleName:verbosity))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:delete)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath)))))))))))(IfStatement(MethodInvocation(SimpleName:isDanglingSymlink)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))(ConditionalExpression(SimpleName:quiet)(QualifiedName:Project.MSG_VERBOSE)(SimpleName:verbosity)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:delete)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath)))))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))(ConditionalExpression(SimpleName:quiet)(QualifiedName:Project.MSG_VERBOSE)(SimpleName:verbosity))))))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:dir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:usedMatchingTask)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:isDirectory)))(Block(IfStatement(InfixExpression(SimpleName:verbosity)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Project.MSG_VERBOSE))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:getAbsolutePath))))))))(ExpressionStatement(MethodInvocation(SimpleName:removeDir)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir)))))(IfStatement(MethodInvocation(SimpleName:isDanglingSymlink)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:getAbsolutePath))(StringLiteral:<STR>))(ConditionalExpression(SimpleName:quiet)(QualifiedName:Project.MSG_VERBOSE)(SimpleName:verbosity)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:delete)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir))))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:getAbsolutePath)))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Resources))(VariableDeclarationFragment(SimpleName:resourcesToDelete)(ClassInstanceCreation(SimpleType(SimpleName:Resources)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesToDelete))(SimpleName:setProject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getProject)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesToDelete))(SimpleName:setCache)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(SimpleName:Resources))(VariableDeclarationFragment(SimpleName:filesetDirs)(ClassInstanceCreation(SimpleType(SimpleName:Resources)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesetDirs))(SimpleName:setProject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getProject)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesetDirs))(SimpleName:setCache)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(SimpleName:FileSet))(VariableDeclarationFragment(SimpleName:implicit)(NullLiteral)))(IfStatement(InfixExpression(InfixExpression(SimpleName:usedMatchingTask)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:dir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dir))(SimpleName:isDirectory)))(Block(ExpressionStatement(Assignment(SimpleName:implicit)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getImplicitFileSet))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:implicit))(SimpleName:setProject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getProject)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesets))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:implicit))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesets))(SimpleName:size))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileSet))(VariableDeclarationFragment(SimpleName:fs)(CastExpression(SimpleType(SimpleName:FileSet))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesets))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fs))(SimpleName:getProject))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(QualifiedName:Project.MSG_VERBOSE))))(ExpressionStatement(Assignment(SimpleName:fs)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:FileSet))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fs))(SimpleName:clone)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fs))(SimpleName:setProject)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getProject)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fsDir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fs))(SimpleName:getDir))))(IfStatement(InfixExpression(SimpleName:fsDir)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fsDir))(SimpleName:isDirectory)))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fsDir))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DirectoryScanner))(VariableDeclarationFragment(SimpleName:ds)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fs))(SimpleName:getDirectoryScanner))))(VariableDeclarationStatement(Modifier:final)(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ds))(SimpleName:getIncludedFiles))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesToDelete))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ResourceCollection))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:isFilesystemOnly)(Block(ReturnStatement(BooleanLiteral:true))))(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:size)(Block(ReturnStatement(QualifiedName:files.length))))(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Iterator))(SimpleName:iterator)(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FileResourceIterator))(MethodInvocation(SimpleName:getProject))(SimpleName:fsDir)(SimpleName:files))))))))))(IfStatement(SimpleName:includeEmpty)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesetDirs))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ReverseDirs))(MethodInvocation(SimpleName:getProject))(SimpleName:fsDir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ds))(SimpleName:getIncludedDirectories))))))))(IfStatement(SimpleName:removeNotFollowedSymlinks)(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ds))(SimpleName:getNotFollowedSymlinks))))(IfStatement(InfixExpression(QualifiedName:n.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:links)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension(QualifiedName:n.length))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:arraycopy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)(NumberLiteral:0)(SimpleName:links)(NumberLiteral:0)(QualifiedName:n.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:sort)(METHOD_INVOCATION_ARGUMENTS(SimpleName:links)(QualifiedName:ReverseDirs.REVERSE))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(NumberLiteral:0)))(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:links.length))(PostfixExpression(SimpleName:l)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SYMLINK_UTILS))(SimpleName:deleteSymbolicLink)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:links)(SimpleName:l)))(ThisExpression)))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ex))))))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesToDelete))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filesetDirs))))(IfStatement(InfixExpression(SimpleName:rcs)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Restrict))(VariableDeclarationFragment(SimpleName:exists)(ClassInstanceCreation(SimpleType(SimpleName:Restrict)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exists))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:EXISTS))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exists))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rcs))))(VariableDeclarationStatement(SimpleType(SimpleName:Sort))(VariableDeclarationFragment(SimpleName:s)(ClassInstanceCreation(SimpleType(SimpleName:Sort)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:REVERSE_FILESYSTEM))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:exists))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesToDelete))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s))))))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesToDelete))(SimpleName:isFilesystemOnly))(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resourcesToDelete))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Resource))(VariableDeclarationFragment(SimpleName:r)(CastExpression(SimpleType(SimpleName:Resource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:FileProvider))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:as)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:FileProvider))))))))(SimpleName:getFile))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:exists)))(Block(ContinueStatement)))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isDirectory))))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:list))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:f))(SimpleName:verbosity))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:delete)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f))))(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:failonerror))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:isDirectory))(StringLiteral:<STR>)(StringLiteral:<STR>)))(SimpleName:f))))))))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:getTaskName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:handle)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))))(Block(IfStatement(InfixExpression(SimpleName:implicit)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filesets))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:implicit))))))))))))