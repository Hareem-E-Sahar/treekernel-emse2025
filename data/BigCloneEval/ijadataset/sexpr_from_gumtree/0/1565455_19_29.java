(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:add)(SingleVariableDeclaration(SimpleType(SimpleName:JHumSymbol))(SimpleName:s))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:diff))(Block(IfStatement(InfixExpression(MethodInvocation(SimpleName:getMaxX))(INFIX_EXPRESSION_OPERATOR:<=)(QualifiedName:s.x))(ReturnStatement(MethodInvocation(SimpleName:addOrSet)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:size))(SimpleName:s)(SimpleName:diff)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:inf)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:sup)(InfixExpression(MethodInvocation(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:inf)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:sup))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:center)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:inf)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sup)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(QualifiedName:s.x)(INFIX_EXPRESSION_OPERATOR:>=)(FieldAccess(MethodInvocation(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:center)))(SimpleName:x)))(ExpressionStatement(Assignment(SimpleName:inf)(ASSIGNMENT_OPERATOR:=)(SimpleName:center)))(ExpressionStatement(Assignment(SimpleName:sup)(ASSIGNMENT_OPERATOR:=)(SimpleName:center))))))(IfStatement(InfixExpression(FieldAccess(MethodInvocation(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inf)))(SimpleName:x))(INFIX_EXPRESSION_OPERATOR:>=)(QualifiedName:s.x))(ExpressionStatement(MethodInvocation(SimpleName:addOrSet)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inf)(SimpleName:s)(SimpleName:diff))))(ExpressionStatement(MethodInvocation(SimpleName:addOrSet)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:inf)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:s)(SimpleName:diff)))))(ReturnStatement(BooleanLiteral:true))))))