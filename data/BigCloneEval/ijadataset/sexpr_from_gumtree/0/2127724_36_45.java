(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:_divideGo)(SingleVariableDeclaration(ArrayType(PrimitiveType:int)(Dimension))(SimpleName:input))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:start))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:end))(Block(IfStatement(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:end))(Block(ReturnStatement(NumberLiteral:0))))(IfStatement(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:end))(Block(ReturnStatement(MethodInvocation(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(ArrayAccess(SimpleName:input)(SimpleName:start)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:m)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:start)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ReturnStatement(MethodInvocation(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(SimpleName:toLeftMaxSum)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(SimpleName:start)(SimpleName:m)))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:toRightMaxSum)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:end))))(MethodInvocation(SimpleName:_divideGo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(SimpleName:start)(SimpleName:m)))(MethodInvocation(SimpleName:_divideGo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:end))))))))))