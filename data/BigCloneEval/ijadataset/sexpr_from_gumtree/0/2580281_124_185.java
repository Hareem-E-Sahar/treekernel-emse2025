(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:HttpResponse))(SimpleName:forwardRequest)(SingleVariableDeclaration(SimpleType(SimpleName:HttpRequest))(SimpleName:request))(SingleVariableDeclaration(SimpleType(SimpleName:HttpResponse))(SimpleName:response))(SingleVariableDeclaration(SimpleType(SimpleName:HttpContext))(SimpleName:context))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:httpproc))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procBuilder))(SimpleName:build))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getRequestLine)))(SimpleName:getUri))))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:loop)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CHECK_INFINITE_LOOP)))))(IfStatement(InfixExpression(SimpleName:loop)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:setAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:CHECK_INFINITE_LOOP)(QualifiedName:Boolean.TRUE)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ServiceUnavailableException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Socket))(VariableDeclarationFragment(SimpleName:outsocket)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ReverseUrl))(VariableDeclarationFragment(SimpleName:reverseUrl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceUrl))(SimpleName:getReverseUrl))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:reverseUrl)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ServiceUnavailableException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:setAttribute)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:reverseUrl))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ReverseUtils))(SimpleName:setXForwardedFor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request)(SimpleName:context))))(ExpressionStatement(Assignment(SimpleName:outsocket)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:socketFactory))(SimpleName:createSocket))))(VariableDeclarationStatement(SimpleType(SimpleName:InetAddress))(VariableDeclarationFragment(SimpleName:remoteAddress)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InetAddress))(SimpleName:getByName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:getTargetAddress)))(SimpleName:getHostName))))))(VariableDeclarationStatement(SimpleType(SimpleName:InetSocketAddress))(VariableDeclarationFragment(SimpleName:remote)(ClassInstanceCreation(SimpleType(SimpleName:InetSocketAddress))(SimpleName:remoteAddress)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:getTargetAddress)))(SimpleName:getPort)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:socketFactory))(SimpleName:connectSocket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outsocket)(SimpleName:remote)(NullLiteral)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:buildParams)))))(VariableDeclarationStatement(SimpleType(SimpleName:DefaultHttpClientConnection))(VariableDeclarationFragment(SimpleName:conn)(ClassInstanceCreation(SimpleType(SimpleName:DefaultHttpClientConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:bind)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outsocket)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:buildParams)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isTraceEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outsocket))(SimpleName:getInetAddress))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:request)))))))(VariableDeclarationStatement(SimpleType(SimpleName:ReverseHttpRequest))(VariableDeclarationFragment(SimpleName:targetRequest)(NullLiteral)))(IfStatement(InstanceofExpression(SimpleName:request)(SimpleType(SimpleName:HttpEntityEnclosingRequest)))(Block(ExpressionStatement(Assignment(SimpleName:targetRequest)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ReverseHttpEntityEnclosingRequest))(SimpleName:request)(SimpleName:context)(SimpleName:reverseUrl)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:getReverseUrl)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getRequestLine)))(SimpleName:getUri))))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NotFoundException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:BasicRequestLine))(VariableDeclarationFragment(SimpleName:line)(ClassInstanceCreation(SimpleType(SimpleName:BasicRequestLine))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getRequestLine)))(SimpleName:getMethod))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:toString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getRequestLine)))(SimpleName:getProtocolVersion)))))(ExpressionStatement(Assignment(SimpleName:targetRequest)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ReverseHttpRequest))(SimpleName:line)(SimpleName:reverseUrl))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetRequest))(SimpleName:setRequest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request)(SimpleName:context))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:countUp)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ReverseUtils))(SimpleName:setReverseProxyAuthorization)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetRequest)(SimpleName:context)(SimpleName:proxyAuthorizationHeader))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpexecutor))(SimpleName:preProcess)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetRequest)(SimpleName:httpproc)(SimpleName:context))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpResponse))(VariableDeclarationFragment(SimpleName:targetResponse)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpexecutor))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetRequest)(SimpleName:conn)(SimpleName:context)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpexecutor))(SimpleName:postProcess)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetResponse)(SimpleName:httpproc)(SimpleName:context))))(ReturnStatement(SimpleName:targetResponse)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:countDown)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:getReverse))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:getActiveConnections)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SocketException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ServiceUnavailableException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:BasicHttpStatus.SC_GATEWAY_TIMEOUT))(SimpleName:getReasonPhrase))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reverseUrl))(SimpleName:getReverse)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RuntimeException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request)(SimpleName:response)(SimpleName:e))))(ReturnStatement(SimpleName:response))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:handleException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request)(SimpleName:response)(SimpleName:e))))(ReturnStatement(SimpleName:response)))))))))