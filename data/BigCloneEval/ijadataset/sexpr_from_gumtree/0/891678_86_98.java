(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:openDataTypeFile)(SimpleType(SimpleName:UnsupportedEncodingException))(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(Assignment(SimpleName:dataTypeFileName)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:dataTypeFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dataTypeFileName))))(ExpressionStatement(Assignment(SimpleName:dataTypeFis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:dataTypeFile))))(ExpressionStatement(Assignment(SimpleName:dataTypeIsr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:dataTypeFis)(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:ex))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassLoader))(SimpleName:getSystemResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dataTypeFileName)))))(ExpressionStatement(Assignment(SimpleName:dataTypeIs)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:dataTypeIsr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:dataTypeIs)(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:dataTypeReader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(SimpleName:dataTypeIsr))))))))