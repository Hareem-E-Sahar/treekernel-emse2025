(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:getExplanation)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:word))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:max)(MethodInvocation(SimpleName:getWordNum))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:w)(StringLiteral:<STR>)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Location))(VariableDeclarationFragment(SimpleName:l)(ClassInstanceCreation(SimpleType(SimpleName:Location)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:exp)(NullLiteral)))(WhileStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:max))(Block(ExpressionStatement(Assignment(SimpleName:mid)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:max)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:w)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getWord)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)(SimpleName:l)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:w))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:word)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:w))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:word)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(BreakStatement))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(QualifiedName:l.size))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:dz)))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:l.offset))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:dz)))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(QualifiedName:l.size)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:last_error)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:exp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString)))))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:buffer)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:exp)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:exp)))))(Block(ExpressionStatement(Assignment(SimpleName:exp)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:buffer)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:last_error)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ReturnStatement(InfixExpression(SimpleName:w)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:exp)))))))