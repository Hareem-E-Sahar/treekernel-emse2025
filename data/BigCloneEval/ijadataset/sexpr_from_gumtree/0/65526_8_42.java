(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(IfStatement(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:zipname))(VariableDeclarationFragment(SimpleName:source)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:0)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:zipname)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:source)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:0)))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:args)(NumberLiteral:0)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:3)))))))(Block(ExpressionStatement(Assignment(SimpleName:zipname)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:args)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:source)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(NumberLiteral:0))))))(VariableDeclarationStatement(SimpleType(SimpleName:GZIPInputStream))(VariableDeclarationFragment(SimpleName:zipin)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:zipname))))(ExpressionStatement(Assignment(SimpleName:zipin)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GZIPInputStream))(SimpleName:in)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:zipname)(StringLiteral:<STR>)))))(ReturnStatement))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:sChunk))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:source))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:length)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipin))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:sChunk)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:length)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ArrayAccess(SimpleName:args)(NumberLiteral:0))(StringLiteral:<STR>))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipin))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))))