(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testJCsvWriter)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:f)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ExpressionStatement(MethodInvocation(SimpleName:assertNotNull)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f))))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension)(Dimension))(VariableDeclarationFragment(SimpleName:tests)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(NumberLiteral:15))(Dimension(NumberLiteral:20))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(QualifiedName:tests.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(FieldAccess(ArrayAccess(SimpleName:tests)(SimpleName:i))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:tests)(SimpleName:i))(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:random))))))))(VariableDeclarationStatement(SimpleType(SimpleName:CsvWriter))(VariableDeclarationFragment(SimpleName:writer)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CsvWriter))(SimpleName:f))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tests.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(FieldAccess(ArrayAccess(SimpleName:tests)(SimpleName:i))(SimpleName:length)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:appendDouble)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(ArrayAccess(SimpleName:tests)(SimpleName:i))(SimpleName:j)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:newLine))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e1))(SimpleName:printStackTrace)))))(Block(IfStatement(InfixExpression(SimpleName:writer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e2))(SimpleName:printStackTrace))))))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:CsvDoubleReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:CsvDoubleReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:f)))))(IfStatement(InfixExpression(SimpleName:writer)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:setSep)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:getSepChar)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:TDoubleArrayList))(VariableDeclarationFragment(SimpleName:l)(ClassInstanceCreation(SimpleType(SimpleName:TDoubleArrayList)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:idx)(NumberLiteral:0)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:readLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l)))(Block(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:toNativeArray))(ArrayAccess(SimpleName:tests)(PostfixExpression(SimpleName:idx)(POSTFIX_EXPRESSION_OPERATOR:++))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e2))(SimpleName:printStackTrace))))))(IfStatement(InfixExpression(SimpleName:f)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:delete))))))))