(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:handleEvent)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:HttpProxyEvent))(SimpleName:event))(SingleVariableDeclaration(SimpleType(SimpleName:HttpProxyEventCallback))(SimpleName:callback))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:callback))(ASSIGNMENT_OPERATOR:=)(SimpleName:callback)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getType))(StringLiteral:<STR>)(MethodInvocation(SimpleName:hashCode))))))))(TryStatement(Block(SwitchStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getType))(SwitchCase(SimpleName:RECV_HTTP_REQUEST))(SwitchCase(SimpleName:RECV_HTTPS_REQUEST))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:channel))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpRequest))(VariableDeclarationFragment(SimpleName:request)(CastExpression(SimpleType(SimpleName:HttpRequest))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getSource)))))(ExpressionStatement(Assignment(SimpleName:proxyHttpVer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getProtocolVersion))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:originalProxyEvent))(ASSIGNMENT_OPERATOR:=)(SimpleName:event)))(ExpressionStatement(Assignment(SimpleName:ishttps)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getType)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:HttpProxyEventType.RECV_HTTPS_REQUEST)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getMethod)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:HttpMethod.CONNECT)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:request)))))))(ExpressionStatement(Assignment(SimpleName:httpspath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getHeader)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:httpspath)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:httpspath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:request))(SimpleName:getUri))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:httpshost)(SimpleName:httpspath)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:httpsport)(StringLiteral:<STR>)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpspath))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:httpshost)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpspath))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpspath))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ExpressionStatement(Assignment(SimpleName:httpsport)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpspath))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpspath))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ExpressionStatement(Assignment(SimpleName:sslContext)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClientUtils))(SimpleName:getFakeSSLContext)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpshost)(SimpleName:httpsport)))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpResponse))(VariableDeclarationFragment(SimpleName:response)(ClassInstanceCreation(SimpleType(SimpleName:DefaultHttpResponse))(SimpleName:proxyHttpVer)(QualifiedName:HttpResponseStatus.OK))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getChannel)))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:response))))(SimpleName:addListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ChannelFutureListener))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:operationComplete)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelFuture))(SimpleName:future))(SimpleType(SimpleName:Exception))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getChannel)))(SimpleName:getPipeline)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InetSocketAddress))(VariableDeclarationFragment(SimpleName:remote)(CastExpression(SimpleType(SimpleName:InetSocketAddress))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getChannel)))(SimpleName:getRemoteAddress)))))(VariableDeclarationStatement(SimpleType(SimpleName:SSLEngine))(VariableDeclarationFragment(SimpleName:engine)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sslContext))(SimpleName:createSSLEngine)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:remote))(SimpleName:getAddress)))(SimpleName:getHostAddress))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:remote))(SimpleName:getPort))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:engine))(SimpleName:setUseClientMode)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getChannel)))(SimpleName:getPipeline)))(SimpleName:addBefore)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:SslHandler))(SimpleName:engine)))))))))))))))(Block(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:selector))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpResponse))(VariableDeclarationFragment(SimpleName:res)(ClassInstanceCreation(SimpleType(SimpleName:DefaultHttpResponse))(QualifiedName:HttpVersion.HTTP_1_0)(QualifiedName:HttpResponseStatus.SERVICE_UNAVAILABLE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getChannel)))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:res))))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:forwardRequest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:buildForwardRequest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request)))))(ExpressionStatement(MethodInvocation(SimpleName:asyncFetch)(METHOD_INVOCATION_ARGUMENTS(SimpleName:forwardRequest))))))(BreakStatement))(SwitchCase(SimpleName:RECV_HTTP_CHUNK))(SwitchCase(SimpleName:RECV_HTTPS_CHUNK))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpChunk))(VariableDeclarationFragment(SimpleName:chunk)(CastExpression(SimpleType(SimpleName:HttpChunk))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:event))(SimpleName:getSource)))))(SynchronizedStatement(SimpleName:chunkedBodys)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chunkedBodys))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chunk))(SimpleName:getContent)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:chunkedBodys))(SimpleName:notify)))))(BreakStatement))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))))))