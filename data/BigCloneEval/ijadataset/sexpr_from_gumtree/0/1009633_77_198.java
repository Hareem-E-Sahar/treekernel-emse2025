(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:processZip)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:zipFile))(SimpleType(SimpleName:ZipException))(SimpleType(SimpleName:IOException))(Block(IfStatement(SimpleName:verbose)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getPath)))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zip)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(SimpleName:zipFile))))(ExpressionStatement(MethodInvocation(SimpleName:initialize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zip))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:extension)(ConditionalExpression(SimpleName:unpacking)(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tempDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getWorkingDirectory))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getName))))))(VariableDeclarationStatement(SimpleType(SimpleName:JarProcessor))(VariableDeclarationFragment(SimpleName:processor)(ClassInstanceCreation(SimpleType(SimpleName:JarProcessor)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:setVerbose)(METHOD_INVOCATION_ARGUMENTS(SimpleName:verbose))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:setProcessAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:processAll))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:setWorkingDirectory)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempDir))(SimpleName:getCanonicalPath)))))(IfStatement(SimpleName:unpacking)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:addProcessStep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:unpackStep))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:outputFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getWorkingDirectory))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getParentFile))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:exists)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:mkdirs))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zipOut)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:outputFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:Enumeration))(VariableDeclarationFragment(SimpleName:entries)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:entries))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:hasMoreElements))(Block(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(CastExpression(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:nextElement)))))(InfixExpression(SimpleName:entry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:hasMoreElements))(CastExpression(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:nextElement)))(NullLiteral)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:entryStream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:pack)(InfixExpression(SimpleName:packing)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:packExclusions))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:sign)(InfixExpression(SimpleName:signing)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:signExclusions))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:repack)(InfixExpression(SimpleName:repacking)(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:packExclusions))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:extractedFile)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extension)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:pack)(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:sign)(SimpleName:repack)(SimpleName:unpacking))))(Block(ExpressionStatement(Assignment(SimpleName:extractedFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:tempDir)(SimpleName:name))))(ExpressionStatement(Assignment(SimpleName:parent)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractedFile))(SimpleName:getParentFile))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:exists)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parent))(SimpleName:mkdirs))))(IfStatement(SimpleName:verbose)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:extracted)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:extractedFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:transferStreams)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entryStream)(SimpleName:extracted)(BooleanLiteral:true))))(ExpressionStatement(Assignment(SimpleName:entryStream)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:skip)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:shouldSkipJar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extractedFile)(SimpleName:processAll)(SimpleName:verbose)))))(IfStatement(SimpleName:skip)(Block(ExpressionStatement(Assignment(SimpleName:entryStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:extractedFile))))(IfStatement(SimpleName:verbose)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))))(Block(IfStatement(SimpleName:unpacking)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:processJar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extractedFile)))))(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractedFile))(SimpleName:getName)))(SimpleName:length)))))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:getName)))))(ExpressionStatement(Assignment(SimpleName:extractedFile)(ASSIGNMENT_OPERATOR:=)(SimpleName:result))))(Block(IfStatement(InfixExpression(SimpleName:repack)(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:sign))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:clearProcessSteps)))(IfStatement(SimpleName:repack)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:addProcessStep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:packUnpackStep)))))(IfStatement(SimpleName:sign)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:addProcessStep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:signStep)))))(ExpressionStatement(Assignment(SimpleName:extractedFile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:processJar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extractedFile)))))))(IfStatement(SimpleName:pack)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:clearProcessSteps)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:addProcessStep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:packStep))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:modifiedFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processor))(SimpleName:processJar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extractedFile)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modifiedFile))(SimpleName:exists))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:newName)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractedFile))(SimpleName:getName)))(SimpleName:length)))))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modifiedFile))(SimpleName:getName)))))(IfStatement(SimpleName:verbose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:newName)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getPath))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:zipEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:newName))))(ExpressionStatement(Assignment(SimpleName:entryStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:modifiedFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:zipEntry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:transferStreams)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entryStream)(SimpleName:zipOut)(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryStream))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:clear)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modifiedFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entryStream))))(IfStatement(SimpleName:verbose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modifiedFile))(SimpleName:getPath))(StringLiteral:<STR>))))))))))(ExpressionStatement(Assignment(SimpleName:entryStream)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(IfStatement(SimpleName:verbose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modifiedFile))(SimpleName:getPath))(StringLiteral:<STR>))))))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractedFile))(SimpleName:exists))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:entryStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:extractedFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(IfStatement(SimpleName:verbose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extractedFile))(SimpleName:getPath))(StringLiteral:<STR>))))))))))))(IfStatement(InfixExpression(SimpleName:verbose)(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:entryStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getPath))))))))))))(IfStatement(InfixExpression(SimpleName:entryStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:newEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:name))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newEntry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:transferStreams)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entryStream)(SimpleName:zipOut)(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:closeEntry))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ZipException))(SimpleName:e))(Block(IfStatement(SimpleName:verbose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:getName))(StringLiteral:<STR>))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entryStream))(SimpleName:close)))))(IfStatement(InfixExpression(SimpleName:extractedFile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:clear)(METHOD_INVOCATION_ARGUMENTS(SimpleName:extractedFile)))))(IfStatement(SimpleName:verbose)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getPath))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:finalFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getWorkingDirectory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getName)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:finalFile))(SimpleName:exists))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:finalFile))(SimpleName:delete))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:renameTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:finalFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:clear)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tempDir))))))))