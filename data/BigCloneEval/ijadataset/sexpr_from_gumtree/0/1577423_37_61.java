(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>)))(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Document))(VariableDeclarationFragment(SimpleName:document)(ClassInstanceCreation(SimpleType(SimpleName:Document)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:os)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:RESULT))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PdfWriter))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:document)(SimpleName:os))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:open)))(VariableDeclarationStatement(SimpleType(SimpleName:Session))(VariableDeclarationFragment(SimpleName:session)(CastExpression(SimpleType(SimpleName:Session))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MySessionFactory))(SimpleName:currentSession)))))(VariableDeclarationStatement(SimpleType(SimpleName:Query))(VariableDeclarationFragment(SimpleName:q)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:session))(SimpleName:createQuery)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(QualifiedName:java.util.List))(SimpleType(SimpleName:Date)))(VariableDeclarationFragment(SimpleName:days)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:q))(SimpleName:list))))(VariableDeclarationStatement(SimpleType(SimpleName:Query))(VariableDeclarationFragment(SimpleName:query)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:session))(SimpleName:createQuery)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Date))(SimpleName:day))(SimpleName:days)(Block(VariableDeclarationStatement(SimpleType(SimpleName:GregorianCalendar))(VariableDeclarationFragment(SimpleName:gc)(ClassInstanceCreation(SimpleType(SimpleName:GregorianCalendar)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gc))(SimpleName:setTime)(METHOD_INVOCATION_ARGUMENTS(SimpleName:day))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gc))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:GregorianCalendar.YEAR)))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:YEAR))(ContinueStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getTable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:query)(SimpleName:day))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:newPage)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:DocumentException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))))))