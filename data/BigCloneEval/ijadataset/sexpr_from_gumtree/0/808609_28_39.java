(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:LogEvent)))(SimpleName:parse)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(SimpleType(SimpleName:ProgressIndicatorNeutral))(VariableDeclarationFragment(SimpleName:myProgressMonitor)(MethodInvocation(SimpleName:getProgressMonitor))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:LogEvent)))(VariableDeclarationFragment(SimpleName:l)(SuperMethodInvocation(SimpleName:parse)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myProgressMonitor))(SimpleName:worked)(METHOD_INVOCATION_ARGUMENTS(SimpleName:toBeWorked))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:end)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start)))(StringLiteral:<STR>)))))))(ReturnStatement(SimpleName:l))))))