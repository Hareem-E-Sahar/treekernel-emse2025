(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:boolean)(SimpleName:saveImpl)(SingleVariableDeclaration(SimpleType(SimpleName:Document))(SimpleName:content))(SingleVariableDeclaration(SimpleType(SimpleName:OutputStream))(SimpleName:out))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zos)(NullLiteral)))(IfStatement(InstanceofExpression(SimpleName:out)(SimpleType(SimpleName:ZipOutputStream)))(ExpressionStatement(Assignment(SimpleName:zos)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:ZipOutputStream))(SimpleName:out))))(ExpressionStatement(Assignment(SimpleName:zos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(SimpleName:out)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:partEntry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:CONTENT_TYPES_PART_NAME))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:partEntry))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:outTemp)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamHelper))(SimpleName:saveXmlInStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:content)(SimpleName:out))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:ins)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outTemp))(SimpleName:toByteArray)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buff)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(QualifiedName:ZipHelper.READ_WRITE_FILE_BUFFER_SIZE))))))(WhileStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ins))(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:resultRead)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ins))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buff)))))(IfStatement(InfixExpression(SimpleName:resultRead)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(BreakStatement))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buff)(NumberLiteral:0)(SimpleName:resultRead))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:closeEntry))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:CONTENT_TYPES_PART_NAME)(StringLiteral:<STR>))(SimpleName:ioe))))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))