(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:setUp)(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:setUp)))(ExpressionStatement(Assignment(SimpleName:journalDirectory)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createTempDirectory)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:archiveDirectory)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createTempDirectory)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:lockRequestFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:journalDirectory))(SimpleName:getPath))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockRequestFile))(SimpleName:delete)))(ExpressionStatement(Assignment(SimpleName:lockAcceptedFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:journalDirectory))(SimpleName:getPath))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockAcceptedFile))(SimpleName:delete)))(ExpressionStatement(Assignment(SimpleName:server)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MockServerForJournalTesting))(SimpleName:DUMMY_HASH_VALUE))))(ExpressionStatement(Assignment(SimpleName:parameters)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashMap)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_JOURNAL_RECOVERY_LOG_CLASSNAME)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_JOURNAL_READER_CLASSNAME)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_JOURNAL_DIRECTORY)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:journalDirectory))(SimpleName:getPath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_ARCHIVE_DIRECTORY)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archiveDirectory))(SimpleName:getPath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_FOLLOW_POLLING_INTERVAL)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_JOURNAL_FILENAME_PREFIX)(SimpleName:JOURNAL_FILENAME_PREFIX))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_LOCK_REQUESTED_FILENAME)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockRequestFile))(SimpleName:getPath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PARAMETER_LOCK_ACCEPTED_FILENAME)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lockAcceptedFile))(SimpleName:getPath)))))(ExpressionStatement(Assignment(SimpleName:delegate)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MockManagementDelegateForJournalTesting)))))(ExpressionStatement(Assignment(SimpleName:initialNumberOfThreads)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getNumberOfCurrentThreads))))))))