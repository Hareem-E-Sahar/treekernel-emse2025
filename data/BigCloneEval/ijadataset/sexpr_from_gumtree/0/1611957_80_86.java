(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:RatPoly))(SimpleName:differentiate)(Block(IfStatement(InfixExpression(SimpleName:deg)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(SimpleName:ZERO)))(VariableDeclarationStatement(SimpleType(SimpleName:RatPoly))(VariableDeclarationFragment(SimpleName:deriv)(ClassInstanceCreation(SimpleType(SimpleName:RatPoly))(QualifiedName:BigRational.ZERO)(InfixExpression(SimpleName:deg)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:deg))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:deriv.coef)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:coef)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(SimpleName:times)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BigRational))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ExpressionStatement(Assignment(QualifiedName:deriv.deg)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:deriv))(SimpleName:degree))))(ReturnStatement(SimpleName:deriv))))))