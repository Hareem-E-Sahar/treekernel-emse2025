(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:getDescription)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:id))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:recursive))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(SimpleName:processed))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(SimpleName:translate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:idList)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processed))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id))))(IfStatement(InfixExpression(SimpleName:path)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:+=)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(ExpressionStatement(Assignment(SimpleName:idList)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:streamContent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)(SimpleName:recursive))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mOut))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:id)(StringLiteral:<STR>))))))))(Block(IfStatement(InfixExpression(SimpleName:mHigherAuthority)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:buffer)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:url)(InfixExpression(SimpleName:mHigherAuthority)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getURLParameters)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:urlSource)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:url))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:con)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlSource))(SimpleName:openConnection))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:stream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:con))(SimpleName:getInputStream))))(ExpressionStatement(Assignment(SimpleName:idList)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:streamContent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stream)(SimpleName:recursive))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mOut))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:id)(StringLiteral:<STR>)))))))))(IfStatement(InfixExpression(SimpleName:idList)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:item))(SimpleName:idList)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mOut))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:igpp.util.Text))(SimpleName:isInList)(METHOD_INVOCATION_ARGUMENTS(SimpleName:item)(SimpleName:processed))))(Block(ExpressionStatement(MethodInvocation(SimpleName:getDescription)(METHOD_INVOCATION_ARGUMENTS(SimpleName:item)(SimpleName:recursive)(SimpleName:processed))))))))))))))