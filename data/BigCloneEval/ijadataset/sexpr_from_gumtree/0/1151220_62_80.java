(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:readGZippedBytes)(SingleVariableDeclaration(SimpleType(SimpleName:TupleInput))(SimpleName:in))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:is_compressed)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readBoolean))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:array)(Dimension)(MethodInvocation(SimpleName:readBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)))))(IfStatement(InfixExpression(SimpleName:array)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:is_compressed))(Block(ReturnStatement(SimpleName:array))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayInputStream))(VariableDeclarationFragment(SimpleName:bais)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayInputStream))(SimpleName:array))))(VariableDeclarationStatement(SimpleType(SimpleName:GZIPInputStream))(VariableDeclarationFragment(SimpleName:gzin)(ClassInstanceCreation(SimpleType(SimpleName:GZIPInputStream))(SimpleName:bais))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(QualifiedName:array.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copyTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:gzin)(SimpleName:baos))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:gzin))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bais))(SimpleName:close)))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:err))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:err))))))))))