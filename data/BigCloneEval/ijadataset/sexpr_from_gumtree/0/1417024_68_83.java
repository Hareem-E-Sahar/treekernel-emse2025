(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:crossOver)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:ao))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:bo))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:a1o))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:b1o))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Gene))(VariableDeclarationFragment(SimpleName:a)(CastExpression(SimpleType(SimpleName:Gene))(SimpleName:ao))))(VariableDeclarationStatement(SimpleType(SimpleName:Gene))(VariableDeclarationFragment(SimpleName:b)(CastExpression(SimpleType(SimpleName:Gene))(SimpleName:bo))))(VariableDeclarationStatement(SimpleType(SimpleName:Gene))(VariableDeclarationFragment(SimpleName:a1)(CastExpression(SimpleType(SimpleName:Gene))(SimpleName:a1o))))(VariableDeclarationStatement(SimpleType(SimpleName:Gene))(VariableDeclarationFragment(SimpleName:b1)(CastExpression(SimpleType(SimpleName:Gene))(SimpleName:b1o))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:point)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MyRandom))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:bitsPerGene)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:bitsPerGene))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:point))(Block(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:a1.bits)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:a.bits)(SimpleName:j))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:b1.bits)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:b.bits)(SimpleName:j)))))(Block(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:a1.bits)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:b.bits)(SimpleName:j))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:b1.bits)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:a.bits)(SimpleName:j))))))))))))