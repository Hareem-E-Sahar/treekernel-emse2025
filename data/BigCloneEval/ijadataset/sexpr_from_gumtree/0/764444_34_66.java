(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:InputStream))(SimpleName:getStream)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:fileName))(SimpleType(SimpleName:AbstractZemucanException))(Block(IfStatement(InfixExpression(SimpleName:fileName)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileNotDefinedException))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inputStream)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ClassLoader))(VariableDeclarationFragment(SimpleName:loader)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ClassLoader))(SimpleName:getSystemClassLoader))))(IfStatement(InfixExpression(SimpleName:loader)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName))))))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IOException))(SimpleName:exception))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CorruptFileException))(SimpleName:exception)))))))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fileName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:inputStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file)))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(QualifiedName:java.io.FileNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:name.angoca.zemucan.tools.file.FileNotFoundException))(SimpleName:fileName)(SimpleName:e)))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:name.angoca.zemucan.tools.file.FileNotFoundException))(SimpleName:fileName)))))))))(AssertStatement(InfixExpression(SimpleName:inputStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(ReturnStatement(SimpleName:inputStream))))))