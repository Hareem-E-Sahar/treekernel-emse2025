(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:performWarmupOperations)(SingleVariableDeclaration(SimpleType(SimpleName:CacheWrapper))(SimpleName:w))(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:wrapper))(ASSIGNMENT_OPERATOR:=)(SimpleName:w)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(CastExpression(SimpleType(SimpleName:Integer))(SimpleName:operationCount))(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Thread))(Dimension))(VariableDeclarationFragment(SimpleName:warmupThreads)(ArrayCreation(ArrayType(SimpleType(SimpleName:Thread))(Dimension(SimpleName:WARMUP_THREADS))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AtomicInteger))(VariableDeclarationFragment(SimpleName:writes)(ClassInstanceCreation(SimpleType(SimpleName:AtomicInteger))(NumberLiteral:0))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:AtomicInteger))(VariableDeclarationFragment(SimpleName:reads)(ClassInstanceCreation(SimpleType(SimpleName:AtomicInteger))(NumberLiteral:0))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Random))(VariableDeclarationFragment(SimpleName:r)(ClassInstanceCreation(SimpleType(SimpleName:Random)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:WARMUP_THREADS))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:threadId)(SimpleName:i)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:warmupThreads)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(WhileStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writes))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:operationCount))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reads))(SimpleName:get))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:operationCount)))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isGet)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:r))(SimpleName:nextInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:operationId)))(IfStatement(SimpleName:isGet)(Block(IfStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:operationId)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reads))(SimpleName:getAndIncrement))))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:operationCount))(ExpressionStatement(MethodInvocation(SimpleName:doGet)(METHOD_INVOCATION_ARGUMENTS(SimpleName:operationId)(SimpleName:threadId))))))(Block(IfStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:operationId)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writes))(SimpleName:getAndIncrement))))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:operationCount))(ExpressionStatement(MethodInvocation(SimpleName:doPut)(METHOD_INVOCATION_ARGUMENTS(SimpleName:operationId)(SimpleName:threadId)))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:warmupThreads)(SimpleName:i)))(SimpleName:start)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Thread))(SimpleName:t))(SimpleName:warmupThreads)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:t))(SimpleName:join))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))