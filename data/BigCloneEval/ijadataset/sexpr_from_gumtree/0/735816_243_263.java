(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(ParameterizedType(SimpleType(SimpleName:Future))(SimpleType(SimpleName:Link)))(SimpleName:beginLink)(SingleVariableDeclaration(SimpleType(SimpleName:InetSocketAddress))(SimpleName:address))(Block(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:FuturePackage))(SimpleType(SimpleName:Link)))(VariableDeclarationFragment(SimpleName:fp)))(IfStatement(InfixExpression(SimpleName:address)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:fp)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Futures))(SimpleName:newFuturePackage))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fp))(SimpleName:getManager)))(SimpleName:completeFuture)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Link))(NullLiteral))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ChannelFuture))(VariableDeclarationFragment(SimpleName:cf)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cbs))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(SimpleName:address)))))(VariableDeclarationStatement(SimpleType(SimpleName:LinkChannelHandler))(VariableDeclarationFragment(SimpleName:lch)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:getChannel)))(SimpleName:getPipeline)))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:LinkChannelHandler)))))))(ExpressionStatement(Assignment(SimpleName:fp)(ASSIGNMENT_OPERATOR:=)(QualifiedName:lch.connectfp)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:addListener)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ChannelFutureListener))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:operationComplete)(SingleVariableDeclaration(SimpleType(SimpleName:ChannelFuture))(SimpleName:arg0))(SimpleType(SimpleName:Exception))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg0))(SimpleName:isSuccess)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fp))(SimpleName:getManager)))(SimpleName:cancelFuture)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arg0))(SimpleName:getCause))))))))))))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fp))(SimpleName:getFuture)))))))