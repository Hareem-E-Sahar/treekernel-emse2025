(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:Image))(SimpleName:readImage)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SingleVariableDeclaration(SimpleType(SimpleName:ImageMimeType))(SimpleName:type))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:page))(SimpleType(SimpleName:IOException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:javaNativeSupport))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ImageIO))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(IfStatement(InfixExpression(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ImageMimeType.DJVU))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ImageMimeType.VNDDJVU))))(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ImageMimeType.XDJVU)))))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:com.lizardtech.djvu.Document))(VariableDeclarationFragment(SimpleName:doc)(ClassInstanceCreation(SimpleType(QualifiedName:com.lizardtech.djvu.Document))(SimpleName:url))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:doc))(SimpleName:setAsync)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:DjVuPage))(Dimension))(VariableDeclarationFragment(SimpleName:p)(ArrayCreation(ArrayType(SimpleType(SimpleName:DjVuPage))(Dimension(NumberLiteral:1))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:doc))(SimpleName:size))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:page)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:page)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:size))))(Block(ExpressionStatement(Assignment(SimpleName:page)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:p)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:doc))(SimpleName:getPage)(METHOD_INVOCATION_ARGUMENTS(SimpleName:page)(NumberLiteral:1)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:p)(NumberLiteral:0)))(SimpleName:setAsync)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(VariableDeclarationStatement(SimpleType(SimpleName:DjVuImage))(VariableDeclarationFragment(SimpleName:djvuImage)(ClassInstanceCreation(SimpleType(SimpleName:DjVuImage))(SimpleName:p)(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(SimpleName:Rectangle))(VariableDeclarationFragment(SimpleName:pageBounds)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:djvuImage))(SimpleName:getPageBounds)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Image))(Dimension))(VariableDeclarationFragment(SimpleName:images)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:djvuImage))(SimpleName:getImage)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:JPanel)))(ClassInstanceCreation(SimpleType(SimpleName:Rectangle))(QualifiedName:pageBounds.width)(QualifiedName:pageBounds.height))))))(IfStatement(InfixExpression(QualifiedName:images.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Image))(VariableDeclarationFragment(SimpleName:img)(ArrayAccess(SimpleName:images)(NumberLiteral:0))))(ReturnStatement(SimpleName:img)))(ReturnStatement(NullLiteral))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ImageMimeType.PDF)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:PDDocument))(VariableDeclarationFragment(SimpleName:document)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:document)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:PDDocument))(SimpleName:load)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:resolution)(NumberLiteral:96)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(WildcardType))(VariableDeclarationFragment(SimpleName:pages)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:getDocumentCatalog)))(SimpleName:getAllPages))))(VariableDeclarationStatement(SimpleType(SimpleName:PDPage))(VariableDeclarationFragment(SimpleName:pdPage)(CastExpression(SimpleType(SimpleName:PDPage))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pages))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:page))))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedImage))(VariableDeclarationFragment(SimpleName:image)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:pdPage))(SimpleName:convertToImage)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:BufferedImage.TYPE_INT_RGB)(SimpleName:resolution)))))(ReturnStatement(SimpleName:image)))(Block(IfStatement(InfixExpression(SimpleName:document)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:close))))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getValue))(StringLiteral:<STR>)))))))))))