(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:findTerm)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:_term))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:low)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:high)(SimpleName:numberOfLexiconEntries)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:compareStrings)))(IfStatement(SimpleName:USE_HASH)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:firstChar)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_term))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:boundaries)(CastExpression(ArrayType(PrimitiveType:int)(Dimension))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:map))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:firstChar))))))(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:boundaries)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:boundaries)(NumberLiteral:1))))))(TryStatement(Block(WhileStatement(InfixExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:low))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:low)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexiconFile))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(CastExpression(PrimitiveType:long)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:*)(CastExpression(PrimitiveType:long)(SimpleName:lexiconEntryLength))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lexiconFile))(SimpleName:readFully)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:lexiconEntryLength))))(ExpressionStatement(Assignment(SimpleName:term)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:buffer)(NumberLiteral:0)(QualifiedName:ApplicationSetup.STRING_BYTE_LENGTH)))(SimpleName:trim))))(IfStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:compareStrings)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_term))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:term)))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))(IfStatement(InfixExpression(SimpleName:compareStrings)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))(Block(ExpressionStatement(MethodInvocation(SimpleName:seekEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(ReturnStatement(BooleanLiteral:true))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:fatal)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ioe))))))))(IfStatement(InfixExpression(SimpleName:high)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:numberOfLexiconEntries))(ReturnStatement(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(SimpleName:seekEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:high))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_term))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:term)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(BooleanLiteral:true)))(ReturnStatement(BooleanLiteral:false))))))