(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:lock)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:tmpdir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:mFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:tmpdir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:mFileOs)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:mFile))))(ExpressionStatement(Assignment(SimpleName:mLock)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mFileOs))(SimpleName:getChannel)))(SimpleName:tryLock))))(IfStatement(InfixExpression(SimpleName:mLock)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ReturnStatement(BooleanLiteral:true)))(Block(ReturnStatement(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e1))(Block(ReturnStatement(BooleanLiteral:false))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(ReturnStatement(BooleanLiteral:false)))))))))