(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:copyTo)(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.File))(SimpleName:source))(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.File))(SimpleName:dest))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.FileInputStream))(VariableDeclarationFragment(SimpleName:inputStream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.nio.channels.FileChannel))(VariableDeclarationFragment(SimpleName:sourceChannel)(NullLiteral)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.FileOutputStream))(VariableDeclarationFragment(SimpleName:outputStream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.nio.channels.FileChannel))(VariableDeclarationFragment(SimpleName:destChannel)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:length))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:bufferSize)(NumberLiteral:1024)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:bufferSize))(ExpressionStatement(Assignment(SimpleName:bufferSize)(ASSIGNMENT_OPERATOR:=)(SimpleName:size))))(VariableDeclarationStatement(SimpleType(SimpleName:Exception))(VariableDeclarationFragment(SimpleName:exception)(NullLiteral)))(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dest))(SimpleName:createNewFile))))(ExpressionStatement(Assignment(SimpleName:inputStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileInputStream))(SimpleName:source))))(ExpressionStatement(Assignment(SimpleName:sourceChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputStream))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:outputStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.FileOutputStream))(SimpleName:dest))))(ExpressionStatement(Assignment(SimpleName:destChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:getChannel))))(WhileStatement(InfixExpression(SimpleName:count)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(ExpressionStatement(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceChannel))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:count)(SimpleName:bufferSize)(SimpleName:destChannel)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:exception)(ASSIGNMENT_OPERATOR:=)(SimpleName:e)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:closeFileChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceChannel))))(ExpressionStatement(MethodInvocation(SimpleName:closeFileChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destChannel))))))(IfStatement(InfixExpression(SimpleName:exception)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ThrowStatement(SimpleName:exception)))))))