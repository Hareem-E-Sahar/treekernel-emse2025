(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:sendLargePostRequest)(SingleVariableDeclaration(Modifier:final)(PrimitiveType:int)(SimpleName:size))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:encodedData)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:URLEncoder))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:WebCastellumFilter.DEFAULT_CHARACTER_ENCODING)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:URLEncoder))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:WebCastellumFilter.DEFAULT_CHARACTER_ENCODING))))))(ExpressionStatement(Assignment(SimpleName:encodedData)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:URLEncoder))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(QualifiedName:WebCastellumFilter.DEFAULT_CHARACTER_ENCODING)))(StringLiteral:<STR>)(MethodInvocation(SimpleName:createTestdata)(METHOD_INVOCATION_ARGUMENTS(SimpleName:size))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:end)))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:connection)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:url)))(SimpleName:openConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setDoOutput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setDoInput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setFollowRedirects)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setInstanceFollowRedirects)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:setRequestProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:encodedData))(SimpleName:length))))))(VariableDeclarationStatement(SimpleType(SimpleName:DataOutputStream))(VariableDeclarationFragment(SimpleName:output)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:reader)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DataOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:writeBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:encodedData))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:flush)))(ExpressionStatement(Assignment(SimpleName:reader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getInputStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))))(Block(IfStatement(InfixExpression(SimpleName:output)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignored))(Block)))))(IfStatement(InfixExpression(SimpleName:reader)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ignored))(Block)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start)))(StringLiteral:<STR>)))))))))