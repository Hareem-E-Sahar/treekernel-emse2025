(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:outputCapture)(SingleVariableDeclaration(SimpleType(SimpleName:AlsaMixerElement))(SimpleName:element))(Block(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:isCaptureMono))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nChannel)(QualifiedName:AlsaMixerElement.SND_MIXER_SCHN_FRONT_LEFT)))(InfixExpression(SimpleName:nChannel)(INFIX_EXPRESSION_OPERATOR:<=)(QualifiedName:AlsaMixerElement.SND_MIXER_SCHN_WOOFER))(PostfixExpression(SimpleName:nChannel)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AlsaMixerElement))(SimpleName:getChannelName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nChannel)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCaptureChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nChannel)))))))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCommonVolume))))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCaptureVolume))))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCaptureVolumeJoined))))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCommonSwitch))))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCaptureSwitch))))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCaptureSwitchJoinded))))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCaptureSwitchExclusive))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:hasCaptureSwitchExclusive))(Block(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:element))(SimpleName:getCaptureGroup))))))))))))