(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:int)(SimpleName:findTheLargestPalindromeProductOfTwo3DigitNumbers2)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:palindrome)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:a)(NumberLiteral:9)))(InfixExpression(SimpleName:a)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(PostfixExpression(SimpleName:a)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)(NumberLiteral:9)))(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(PostfixExpression(SimpleName:b)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)(NumberLiteral:9)))(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(PostfixExpression(SimpleName:c)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(ExpressionStatement(Assignment(SimpleName:palindrome)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(InfixExpression(NumberLiteral:100001)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:a))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:10010)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:b)))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(NumberLiteral:1100)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:c)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:90)))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:10))(PostfixExpression(SimpleName:k)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:palindrome)(INFIX_EXPRESSION_OPERATOR:%)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(InfixExpression(SimpleName:palindrome)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:k)(NumberLiteral:11))))(IfStatement(InfixExpression(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:100))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:999)))(Block(ReturnStatement(SimpleName:palindrome))))))))))))))(ReturnStatement(SimpleName:palindrome))))))