(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:evaluateSong)(SingleVariableDeclaration(SimpleType(SimpleName:Song))(SimpleName:song))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:score)(NumberLiteral:8.0d)))(VariableDeclarationStatement(ArrayType(SimpleType(QualifiedName:Track.AbsoluteNote))(Dimension))(VariableDeclarationFragment(SimpleName:notes)(ArrayCreation(ArrayType(SimpleType(QualifiedName:Track.AbsoluteNote))(Dimension(NumberLiteral:8))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:a)(NumberLiteral:0)))(InfixExpression(SimpleName:a)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:song))(SimpleName:getNumberOfTracks)))(PostfixExpression(SimpleName:a)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:song))(SimpleName:getTrack)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a))))(SimpleName:getNumberOfNotes))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:8))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:song))(SimpleName:getTrack)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a))))(SimpleName:getNumberOfNotes))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:song))(SimpleName:getInstrument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:100))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:song))(SimpleName:getTrack)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a))))(SimpleName:getAbsoluteIterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:notes)(NumberLiteral:7))(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(QualifiedName:Track.AbsoluteNote))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next)))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:notes)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:input)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(NumberLiteral:8))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)(NumberLiteral:0)))(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:7))(PostfixExpression(SimpleName:b)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:input)(SimpleName:b))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:notes)(SimpleName:b)))(SimpleName:getHeight))(INFIX_EXPRESSION_OPERATOR:-)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:notes)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(SimpleName:getHeight))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:16.0d)))))(ExpressionStatement(Assignment(SimpleName:score)(ASSIGNMENT_OPERATOR:+=)(ArrayAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:neuralNetwork))(SimpleName:simulate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)))(NumberLiteral:0))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)(NumberLiteral:0)))(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:7))(PostfixExpression(SimpleName:b)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:notes)(SimpleName:b))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:notes)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))))))(ReturnStatement(SimpleName:score))))))