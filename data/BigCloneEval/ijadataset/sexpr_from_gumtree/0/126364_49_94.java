(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:CheckAvailabilityResult))(SimpleName:execute)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CheckAvailabilityAction))(SimpleName:action))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ExecutionContext))(SimpleName:context))(SimpleType(SimpleName:ActionException))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:isDebugEnabled))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:serverName)(NullLiteral)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:getServerId))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:CheckAvailability.FEDORA_ID))(Block(ExpressionStatement(Assignment(SimpleName:serverName)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:getServerId))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:CheckAvailability.KRAMERIUS_ID))(Block(ExpressionStatement(Assignment(SimpleName:serverName)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:serverName)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ServerUtils))(SimpleName:checkExpiredSession)(METHOD_INVOCATION_ARGUMENTS(SimpleName:httpSessionProvider))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:status)(BooleanLiteral:true)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:url)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:usr)(StringLiteral:<STR>)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pass)(StringLiteral:<STR>)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:getServerId))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:CheckAvailability.FEDORA_ID))(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getFedoraHost))))(ExpressionStatement(Assignment(SimpleName:usr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getFedoraLogin))))(ExpressionStatement(Assignment(SimpleName:pass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getFedoraPassword)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:action))(SimpleName:getServerId))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:CheckAvailability.KRAMERIUS_ID))(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:configuration))(SimpleName:getKrameriusHost))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:SOME_STATIC_KRAMERIUS_PAGE)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ActionException))(StringLiteral:<STR>))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:con)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:RESTHelper))(SimpleName:openConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)(SimpleName:usr)(SimpleName:pass)(BooleanLiteral:false)))))(IfStatement(InstanceofExpression(SimpleName:con)(SimpleType(SimpleName:HttpURLConnection)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:httpConnection)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:con))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:resp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpConnection))(SimpleName:getResponseCode))))(IfStatement(InfixExpression(InfixExpression(SimpleName:resp)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:200))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:resp)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:308)))(Block(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpConnection))(SimpleName:getResponseCode)))))))))(Block(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:CheckAvailabilityResult))(SimpleName:status)(SimpleName:url)))))))