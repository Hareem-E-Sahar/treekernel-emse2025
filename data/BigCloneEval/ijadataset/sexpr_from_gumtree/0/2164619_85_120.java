(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:double)(SimpleName:consume)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:result))(SimpleType(SimpleName:InkMLComplianceException))(Block(SwitchStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(SwitchCase(CharacterLiteral:<STR>))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:hasLastValue)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InkMLComplianceException))(StringLiteral:<STR>)))))(ReturnStatement(MethodInvocation(SimpleName:getValueForPoint)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getLastValue)))))(SwitchCase(CharacterLiteral:<STR>))(SwitchCase(CharacterLiteral:<STR>))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getChannel)))(SimpleName:isIntermittent)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InkMLComplianceException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getChannel)))(SimpleName:getName)))(SimpleName:toString))(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>)))(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:unsetLastValue)))(ReturnStatement(QualifiedName:Double.NaN))(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NumberFormatter.State.EXPLICIT))))(SwitchCase(CharacterLiteral:<STR>))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NumberFormatter.State.FIRST_O))))))(SwitchCase(CharacterLiteral:<STR>))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getChannel)))(SimpleName:isIntermittent))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InkMLComplianceException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:==)(CharacterLiteral:<STR>))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:getState))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:NumberFormatter.State.EXPLICIT))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InkMLComplianceException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:setState)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:NumberFormatter.State.SECOND_O))))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:result))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(SwitchCase)(ReturnStatement(MethodInvocation(SimpleName:getValueForPoint)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:parseDouble)(METHOD_INVOCATION_ARGUMENTS(SimpleName:result)))))))))))