(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:writeRandomFile)(SingleVariableDeclaration(SimpleType(SimpleName:OutputStream))(SimpleName:stream))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:fileLength))(SingleVariableDeclaration(SimpleType(SimpleName:Random))(SimpleName:randBytes))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DigestOutputStream))(VariableDeclarationFragment(SimpleName:digestStreamWrapper)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:digestStreamWrapper)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:DigestOutputStream))(SimpleName:stream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:severe)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUF_SIZE))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:elapsed)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nextBufSize)(NumberLiteral:0)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:probFlush)(NumberLiteral:.3)))(WhileStatement(InfixExpression(SimpleName:elapsed)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:fileLength))(Block(ExpressionStatement(Assignment(SimpleName:nextBufSize)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:fileLength)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:elapsed)))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:BUF_SIZE)))(SimpleName:BUF_SIZE)(ParenthesizedExpression(InfixExpression(SimpleName:fileLength)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:elapsed))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:randBytes))(SimpleName:nextBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digestStreamWrapper))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(NumberLiteral:0)(SimpleName:nextBufSize))))(ExpressionStatement(Assignment(SimpleName:elapsed)(ASSIGNMENT_OPERATOR:+=)(SimpleName:nextBufSize)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:randBytes))(SimpleName:nextDouble))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:probFlush))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:elapsed)(StringLiteral:<STR>)(SimpleName:fileLength)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digestStreamWrapper))(SimpleName:flush)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digestStreamWrapper))(SimpleName:close)))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digestStreamWrapper))(SimpleName:getMessageDigest)))(SimpleName:digest)))))))