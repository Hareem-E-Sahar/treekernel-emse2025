(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:getFingerPrint)(SingleVariableDeclaration(SimpleType(SimpleName:Certificate))(SimpleName:c))(Block(IfStatement(InfixExpression(QualifiedName:Logging.SHOW_INFO)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:sb)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:ba)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:ba)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ALGORITHM))))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:getEncoded)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(IfStatement(InfixExpression(QualifiedName:Logging.SHOW_INFO)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO)(StringLiteral:<STR>)(SimpleName:e)))))))))(IfStatement(InfixExpression(SimpleName:ba)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:sb)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:b)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:ba.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:b)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:ba)(SimpleName:i))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CHAR_MAP)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xf0)))(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:4))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:CHAR_MAP)(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xf))))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(QualifiedName:ba.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fp)(ConditionalExpression(InfixExpression(SimpleName:sb)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:toString))(NullLiteral))))(IfStatement(InfixExpression(QualifiedName:Logging.SHOW_INFO)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:isLoggable)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fp)))))))(ReturnStatement(SimpleName:fp))))))