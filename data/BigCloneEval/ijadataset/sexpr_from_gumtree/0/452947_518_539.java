(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(PrimitiveType:void)(SimpleName:discontinuity)(SingleVariableDeclaration(SimpleType(QualifiedName:Point2D.Float))(SimpleName:p1))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:t1))(SingleVariableDeclaration(SimpleType(QualifiedName:Point2D.Float))(SimpleName:p2))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:t2))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:depth))(SingleVariableDeclaration(SimpleType(SimpleName:Function))(SimpleName:xFunc))(SingleVariableDeclaration(SimpleType(SimpleName:Function))(SimpleName:yFunc))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:MAXDEPTH))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:p1.x)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:p2.x))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:p1.y)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:p2.y))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2)))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:p1))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p1)))))(IfStatement(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:MAXDEPTH))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Point2D.Float))(QualifiedName:Float.MIN_VALUE)(NumberLiteral:0))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:points))(SimpleName:addElement)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p2))))(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:t)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:t1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:t2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(QualifiedName:Point2D.Float))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(SimpleName:eval)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)(SimpleName:case3x)(SimpleName:case3y)(SimpleName:xFunc)(SimpleName:yFunc)))))(IfStatement(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:becomesUndefined)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p1)(SimpleName:t1)(SimpleName:p)(SimpleName:t)(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:xFunc)(SimpleName:yFunc))))(ExpressionStatement(MethodInvocation(SimpleName:becomesDefined)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p)(SimpleName:t)(SimpleName:p2)(SimpleName:t2)(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:xFunc)(SimpleName:yFunc)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:case3x))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:case1x)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:case3y))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:case1y))))(Block(ExpressionStatement(MethodInvocation(SimpleName:discontinuity)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p)(SimpleName:t)(SimpleName:p2)(SimpleName:t2)(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:xFunc)(SimpleName:yFunc)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:case3x))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:case2x)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:case3y))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:case2y))))(Block(ExpressionStatement(MethodInvocation(SimpleName:discontinuity)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p1)(SimpleName:t1)(SimpleName:p)(SimpleName:t)(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:xFunc)(SimpleName:yFunc)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:discontinuity)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p1)(SimpleName:t1)(SimpleName:p)(SimpleName:t)(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))(SimpleName:xFunc)(SimpleName:yFunc))))(ExpressionStatement(MethodInvocation(SimpleName:discontinuity)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p)(SimpleName:t)(SimpleName:p2)(SimpleName:t2)(InfixExpression(SimpleName:depth)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))(SimpleName:xFunc)(SimpleName:yFunc))))))))))))