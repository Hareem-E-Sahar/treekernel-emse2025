(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:fft)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Datensatz))(SimpleName:d))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:invert))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mit2))(VariableDeclarationFragment(SimpleName:iter))(VariableDeclarationFragment(SimpleName:irem))(VariableDeclarationFragment(SimpleName:it))(VariableDeclarationFragment(SimpleName:it2))(VariableDeclarationFragment(SimpleName:nxp))(VariableDeclarationFragment(SimpleName:nxp2))(VariableDeclarationFragment(SimpleName:m))(VariableDeclarationFragment(SimpleName:mxp))(VariableDeclarationFragment(SimpleName:j1))(VariableDeclarationFragment(SimpleName:j2))(VariableDeclarationFragment(SimpleName:k))(VariableDeclarationFragment(SimpleName:n))(VariableDeclarationFragment(SimpleName:i))(VariableDeclarationFragment(SimpleName:j)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:wre))(VariableDeclarationFragment(SimpleName:wim))(VariableDeclarationFragment(SimpleName:tre))(VariableDeclarationFragment(SimpleName:tim)))(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(QualifiedName:d.xre.length)))(ForStatement(Assignment(SimpleName:iter)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(Assignment(SimpleName:irem)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))(InfixExpression(SimpleName:irem)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Assignment(SimpleName:irem)(ASSIGNMENT_OPERATOR:/=)(NumberLiteral:2))(PostfixExpression(SimpleName:iter)(POSTFIX_EXPRESSION_OPERATOR:++))(EmptyStatement))(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:dimension))(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:n))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:ini_fft)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)(SimpleName:iter)))))(ForStatement(Assignment(SimpleName:it)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(Assignment(SimpleName:nxp2)(ASSIGNMENT_OPERATOR:=)(SimpleName:n))(Assignment(SimpleName:it2)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))(InfixExpression(SimpleName:it)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:iter))(PostfixExpression(SimpleName:it)(POSTFIX_EXPRESSION_OPERATOR:++))(Assignment(SimpleName:it2)(ASSIGNMENT_OPERATOR:*=)(NumberLiteral:2))(Block(ExpressionStatement(Assignment(SimpleName:nxp)(ASSIGNMENT_OPERATOR:=)(SimpleName:nxp2)))(ExpressionStatement(Assignment(SimpleName:nxp2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:nxp)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ForStatement(Assignment(SimpleName:m)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(Assignment(SimpleName:mit2)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nxp2))(PostfixExpression(SimpleName:m)(POSTFIX_EXPRESSION_OPERATOR:++))(Assignment(SimpleName:mit2)(ASSIGNMENT_OPERATOR:+=)(SimpleName:it2))(Block(ExpressionStatement(Assignment(SimpleName:wre)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:cosinus))(SimpleName:mit2))))(ExpressionStatement(Assignment(SimpleName:wim)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(SimpleName:invert)(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:sinus))(SimpleName:mit2))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:sinus))(SimpleName:mit2))))))(ForStatement(Assignment(SimpleName:mxp)(ASSIGNMENT_OPERATOR:=)(SimpleName:nxp))(Assignment(SimpleName:j1)(ASSIGNMENT_OPERATOR:=)(SimpleName:m))(InfixExpression(SimpleName:mxp)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:n))(Assignment(SimpleName:mxp)(ASSIGNMENT_OPERATOR:+=)(SimpleName:nxp))(Assignment(SimpleName:j1)(ASSIGNMENT_OPERATOR:+=)(SimpleName:nxp))(Block(ExpressionStatement(Assignment(SimpleName:j2)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:j1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nxp2))))(ExpressionStatement(Assignment(SimpleName:tre)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(QualifiedName:d.xre)(SimpleName:j1))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(QualifiedName:d.xre)(SimpleName:j2)))))(ExpressionStatement(Assignment(SimpleName:tim)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(QualifiedName:d.xim)(SimpleName:j1))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(QualifiedName:d.xim)(SimpleName:j2)))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xre)(SimpleName:j1))(ASSIGNMENT_OPERATOR:+=)(ArrayAccess(QualifiedName:d.xre)(SimpleName:j2))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xre)(SimpleName:j2))(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:tre)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:wre))(INFIX_EXPRESSION_OPERATOR:-)(InfixExpression(SimpleName:tim)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:wim)))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xim)(SimpleName:j1))(ASSIGNMENT_OPERATOR:+=)(ArrayAccess(QualifiedName:d.xim)(SimpleName:j2))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xim)(SimpleName:j2))(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:tre)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:wim))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:tim)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:wre)))))))))))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:j))(Block(ExpressionStatement(Assignment(SimpleName:tre)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:d.xre)(SimpleName:j))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xre)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:d.xre)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xre)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(SimpleName:tre)))(ExpressionStatement(Assignment(SimpleName:tim)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:d.xim)(SimpleName:j))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xim)(SimpleName:j))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:d.xim)(SimpleName:i))))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xim)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(SimpleName:tim)))))(ExpressionStatement(Assignment(SimpleName:k)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(WhileStatement(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:j))(Block(ExpressionStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:-=)(SimpleName:k)))(ExpressionStatement(Assignment(SimpleName:k)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))))(ExpressionStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:+=)(SimpleName:k)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:invert))(ForStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xre)(SimpleName:i))(ASSIGNMENT_OPERATOR:/=)(SimpleName:n)))(ExpressionStatement(Assignment(ArrayAccess(QualifiedName:d.xim)(SimpleName:i))(ASSIGNMENT_OPERATOR:/=)(SimpleName:n))))))))))