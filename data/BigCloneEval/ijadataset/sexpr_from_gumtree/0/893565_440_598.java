(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(SimpleType(SimpleName:Process))(SimpleName:createProcess)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:localHostAddress))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:port))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:classPathList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pathSeparator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Object)))(VariableDeclarationFragment(SimpleName:referenceList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:Object))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:optionalReferenceList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:NativeSwing))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:NativeInterface))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:optionalReferenceList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:optionalReferenceList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:optionalReference))(SimpleName:optionalReferenceList)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:NativeInterface))))(SimpleName:getClassLoader)))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:optionalReference)))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:optionalReference))))))))(VariableDeclarationStatement(ArrayType(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(Dimension))(VariableDeclarationFragment(SimpleName:nativeClassPathReferenceClasses)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nativeInterfaceConfiguration))(SimpleName:getNativeClassPathReferenceClasses))))(IfStatement(InfixExpression(SimpleName:nativeClassPathReferenceClasses)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceList))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nativeClassPathReferenceClasses))))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:nativeClassPathReferenceResources)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nativeInterfaceConfiguration))(SimpleName:getNativeClassPathReferenceResources))))(IfStatement(InfixExpression(SimpleName:nativeClassPathReferenceResources)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:referenceList))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:asList)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nativeClassPathReferenceResources))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isProxyClassLoaderUsed)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Boolean))(SimpleName:parseBoolean)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isProxyClassLoaderUsed))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:o))(SimpleName:referenceList)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:clazzClassPath)))(IfStatement(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:Class)))(Block(ExpressionStatement(Assignment(SimpleName:clazzClassPath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getClassPathFile)(METHOD_INVOCATION_ARGUMENTS(CastExpression(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:o)))))))(Block(ExpressionStatement(Assignment(SimpleName:clazzClassPath)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getClassPathFile)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(SimpleName:o))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:NativeInterface))))(SimpleName:getClassLoader)))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(SimpleName:o))))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:o))))))))(ExpressionStatement(Assignment(SimpleName:clazzClassPath)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(InstanceofExpression(SimpleName:o)(SimpleType(SimpleName:Class)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getClassPathFile)(METHOD_INVOCATION_ARGUMENTS(CastExpression(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:o))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:getClassPathFile)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(SimpleName:String))(SimpleName:o)))))))(IfStatement(InfixExpression(SimpleName:clazzClassPath)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clazzClassPath))(SimpleName:getAbsolutePath))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPathList))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPathList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:path)))))))(Block(ExpressionStatement(Assignment(SimpleName:isProxyClassLoaderUsed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))(IfStatement(SimpleName:isProxyClassLoaderUsed)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPathList))(SimpleName:clear)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:classPathFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:deleteAll)(METHOD_INVOCATION_ARGUMENTS(SimpleName:classPathFile))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:classPath)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:NetworkURLClassLoader))))(SimpleName:getName)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:mainClassFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:classPathFile)(SimpleName:classPath))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mainClassFile))(SimpleName:getParentFile)))(SimpleName:mkdirs)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mainClassFile))(SimpleName:exists)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedOutputStream))(VariableDeclarationFragment(SimpleName:out)(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:mainClassFile)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:NativeInterface))))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:classPath)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:bytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)))(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:bytes)(NumberLiteral:0)(SimpleName:n)))(Block))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mainClassFile))(SimpleName:deleteOnExit)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPathList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPathFile))(SimpleName:getAbsolutePath)))))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:sb)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPathList))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pathSeparator))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:classPathList))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:javaHome)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:candidateBinaries)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:javaHome)(StringLiteral:<STR>)))(SimpleName:getAbsolutePath))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(StringLiteral:<STR>)))(SimpleName:getAbsolutePath))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:p)(NullLiteral)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:argList)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(NullLiteral))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:peerVMParams)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nativeInterfaceConfiguration))(SimpleName:getPeerVMParams))))(IfStatement(InfixExpression(SimpleName:peerVMParams)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:param))(SimpleName:peerVMParams)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:param))))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:flags)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension))(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:flag))(SimpleName:flags)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Boolean))(SimpleName:parseBoolean)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(SimpleName:flag)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:flag)(StringLiteral:<STR>)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:localHostAddress)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:toString)))))(IfStatement(SimpleName:isProxyClassLoaderUsed)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:NetworkURLClassLoader))))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:WebServer))(SimpleName:getDefaultWebServer)))(SimpleName:getClassPathResourceURL)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:NativeInterface))))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:valueOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:port))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:javaVersion)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:javaVersion)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaVersion))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isTryingAppletCompatibility)(BooleanLiteral:true)))(IfStatement(InfixExpression(SimpleName:peerVMParams)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:peerVMParam))(SimpleName:peerVMParams)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:peerVMParam))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:isTryingAppletCompatibility)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(BreakStatement)))))))(IfStatement(SimpleName:isTryingAppletCompatibility)(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:deploymentFiles)(ArrayCreation(ArrayType(SimpleType(SimpleName:File))(Dimension))(ArrayInitializer(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:javaHome)(StringLiteral:<STR>))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:javaHome)(StringLiteral:<STR>))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:javaHome)(StringLiteral:<STR>))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:argListX)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:String))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argListX))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:candidateBinaries)(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:sbX)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:deploymentFiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbX))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pathSeparator))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:deploymentFile)(ArrayAccess(SimpleName:deploymentFiles)(SimpleName:i))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:deploymentFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbX))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:deploymentFile))(SimpleName:getAbsolutePath)))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sbX))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argListX))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sbX)(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argListX))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sbX)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argListX))(SimpleName:addAll)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:subList)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:size)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Boolean))(SimpleName:parseBoolean)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argListX))(SimpleName:toArray))))))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:p)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:ProcessBuilder))(SimpleName:argListX)))(SimpleName:start)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))))(IfStatement(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:candidateBinary))(SimpleName:candidateBinaries)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:set)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:candidateBinary))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Boolean))(SimpleName:parseBoolean)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Arrays))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:argList))(SimpleName:toArray))))))))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:p)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:ProcessBuilder))(SimpleName:argList)))(SimpleName:start))))(BreakStatement))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))))(IfStatement(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(StringLiteral:<STR>)))))(ReturnStatement(SimpleName:p))))))