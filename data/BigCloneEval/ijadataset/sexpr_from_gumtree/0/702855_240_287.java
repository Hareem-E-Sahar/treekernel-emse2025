(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testGetManifest)(SimpleType(SimpleName:Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Support_Resources))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resources)(NullLiteral)(SimpleName:JAR1))))(VariableDeclarationStatement(SimpleType(SimpleName:JarFile))(VariableDeclarationFragment(SimpleName:jarFile)(ClassInstanceCreation(SimpleType(SimpleName:JarFile))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:resources)(SimpleName:JAR1)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:JAR1_ENTRY1)))))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))))(ExpressionStatement(MethodInvocation(SimpleName:assertNotNull)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getManifest)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Support_Resources))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resources)(NullLiteral)(SimpleName:JAR2))))(ExpressionStatement(Assignment(SimpleName:jarFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JarFile))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:resources)(SimpleName:JAR2)))))(ExpressionStatement(MethodInvocation(SimpleName:assertNull)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getManifest)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Support_Resources))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resources)(NullLiteral)(SimpleName:JAR3))))(ExpressionStatement(Assignment(SimpleName:jarFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JarFile))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:resources)(SimpleName:JAR3)))))(ExpressionStatement(MethodInvocation(SimpleName:assertNotNull)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:getManifest)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarFile))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:Manifest))(VariableDeclarationFragment(SimpleName:manifest)(ClassInstanceCreation(SimpleType(SimpleName:Manifest)))))(VariableDeclarationStatement(SimpleType(SimpleName:Attributes))(VariableDeclarationFragment(SimpleName:attributes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:manifest))(SimpleName:getMainAttributes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attributes))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(QualifiedName:Attributes.Name))(StringLiteral:<STR>))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:manOut)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:manifest))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:manOut))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:manBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:manOut))(SimpleName:toByteArray))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Support_PlatformFile))(SimpleName:getNewPlatformFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:JarOutputStream))(VariableDeclarationFragment(SimpleName:jarOut)(ClassInstanceCreation(SimpleType(SimpleName:JarOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(QualifiedName:JarFile.MANIFEST_NAME))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:manBytes.length))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:manBytes))))(ExpressionStatement(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarOut))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:65))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jarOut))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(SimpleName:JarFile))(VariableDeclarationFragment(SimpleName:jar)(ClassInstanceCreation(SimpleType(SimpleName:JarFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(SimpleName:assertNotNull)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jar))(SimpleName:getManifest)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jar))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:delete)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Support_Resources))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resources)(NullLiteral)(SimpleName:JAR2))))(VariableDeclarationStatement(SimpleType(SimpleName:JarFile))(VariableDeclarationFragment(SimpleName:jF)(ClassInstanceCreation(SimpleType(SimpleName:JarFile))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:resources)(SimpleName:JAR2)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jF))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:jF))(SimpleName:getManifest)))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalStateException))(SimpleName:ise))(Block)))))))