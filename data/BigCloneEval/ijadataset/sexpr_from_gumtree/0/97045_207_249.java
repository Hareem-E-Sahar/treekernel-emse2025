(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:boolean)(SimpleName:processAttachment)(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:res))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AttachmentPart))(VariableDeclarationFragment(SimpleName:at)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:res)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(BooleanLiteral:false))(IfStatement(InstanceofExpression(SimpleName:res)(SimpleType(SimpleName:AttachmentPart)))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:ok)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:at)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:AttachmentPart))(SimpleName:res))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:attachments))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(SimpleName:at))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:cont)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(QualifiedName:javax.activation.DataHandler))(VariableDeclarationFragment(SimpleName:dh)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:at))(SimpleName:getDataHandler))))(VariableDeclarationStatement(SimpleType(QualifiedName:javax.activation.DataSource))(VariableDeclarationFragment(SimpleName:ds)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dh))(SimpleName:getDataSource))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ds))(SimpleName:getInputStream))))(IfStatement(InfixExpression(SimpleName:doxmlstream)(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ds))(SimpleName:getContentType)))))(ExpressionStatement(Assignment(SimpleName:cont)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(QualifiedName:javax.xml.transform.stream.StreamSource))(SimpleName:is))))(ExpressionStatement(Assignment(SimpleName:cont)(ASSIGNMENT_OPERATOR:=)(SimpleName:is)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:dx))(Block(IfStatement(SimpleName:debug)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dx))(SimpleName:printStackTrace))))(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))))(IfStatement(InstanceofExpression(SimpleName:cont)(SimpleType(SimpleName:String)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:String))(SimpleName:cont))))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:ok)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cont)))))(IfStatement(InstanceofExpression(SimpleName:cont)(SimpleType(QualifiedName:javax.xml.transform.Source)))(Block(ExpressionStatement(MethodInvocation(SimpleName:processXmlSource)(METHOD_INVOCATION_ARGUMENTS(CastExpression(SimpleType(QualifiedName:javax.xml.transform.Source))(SimpleName:cont))))))(IfStatement(InstanceofExpression(SimpleName:cont)(SimpleType(QualifiedName:java.io.InputStream)))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.InputStream))(VariableDeclarationFragment(SimpleName:ins)(CastExpression(SimpleType(QualifiedName:java.io.InputStream))(SimpleName:cont))))(IfStatement(InfixExpression(SimpleName:pipe)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:pipe)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:pipesize)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ins))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pipe)))))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pipe)(NumberLiteral:0)(SimpleName:len)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ins))(SimpleName:close))))(Block(IfStatement(InfixExpression(SimpleName:cont)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cont))(SimpleName:getClass)))(SimpleName:getName)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cont))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:at))(SimpleName:dispose)))(ReturnStatement(SimpleName:ok)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:err)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:e)))))(IfStatement(InfixExpression(SimpleName:at)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:at))(SimpleName:dispose))))(ReturnStatement(BooleanLiteral:false)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:res))))(ReturnStatement(BooleanLiteral:true)))))))))