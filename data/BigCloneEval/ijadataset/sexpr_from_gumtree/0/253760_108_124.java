(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:String))(SimpleName:fetchHtml)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:connection)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isNotBlank)(METHOD_INVOCATION_ARGUMENTS(SimpleName:proxyHost)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:proxyPort)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Proxy))(VariableDeclarationFragment(SimpleName:proxy)(ClassInstanceCreation(SimpleType(SimpleName:Proxy))(QualifiedName:Proxy.Type.HTTP)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:InetSocketAddress))(SimpleName:createUnresolved)(METHOD_INVOCATION_ARGUMENTS(SimpleName:proxyHost)(SimpleName:proxyPort))))))(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:proxy))))))(Block(ExpressionStatement(Assignment(SimpleName:connection)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))))(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:content)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:connection))(SimpleName:getContent))))(IfStatement(InstanceofExpression(SimpleName:content)(SimpleType(SimpleName:InputStream)))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:InputStream))))(SimpleName:cast)(METHOD_INVOCATION_ARGUMENTS(SimpleName:content)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:msg)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:content))(SimpleName:getClass)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:msg))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(SimpleName:msg)))))))))