(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:runCommandLine)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:ParseException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:CronInterval))(VariableDeclarationFragment(SimpleName:c)(ClassInstanceCreation(SimpleType(SimpleName:CronInterval))(ArrayAccess(SimpleName:args)(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:DateFormat))(VariableDeclarationFragment(SimpleName:df)(ClassInstanceCreation(SimpleType(SimpleName:SimpleDateFormat))(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:arg1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:df))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:1))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:loopCount)(ConditionalExpression(ParenthesizedExpression(InfixExpression(QualifiedName:args.length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:args)(NumberLiteral:2))))(NumberLiteral:1))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:c))(SimpleName:iterator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg1)))))(InfixExpression(SimpleName:loopCount)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(PostfixExpression(SimpleName:loopCount)(POSTFIX_EXPRESSION_OPERATOR:--))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Date))(VariableDeclarationFragment(SimpleName:d)(CastExpression(SimpleType(SimpleName:Date))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:loopCount)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:df))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)))))))))))))