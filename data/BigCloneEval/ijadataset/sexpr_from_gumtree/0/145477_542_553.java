(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(QualifiedName:org.xml.sax.InputSource))(SimpleName:resolveEntity)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:publicId))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:systemId))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CONFIG_PUBLIC))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:publicId)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:dtdurl)(MethodInvocation(SimpleName:parseURL)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(QualifiedName:org.xml.sax.InputSource))(VariableDeclarationFragment(SimpleName:is)(ClassInstanceCreation(SimpleType(QualifiedName:org.xml.sax.InputSource))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dtdurl))(SimpleName:toString)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:setByteStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dtdurl))(SimpleName:openStream))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:ex))(Block)))(ReturnStatement(SimpleName:is))))(ReturnStatement(NullLiteral))))))