(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:scatterGather)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:feederThread)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Feeder))(VariableDeclarationFragment(SimpleName:feeder)(ClassInstanceCreation(SimpleType(SimpleName:Feeder)))))(ForStatement(Block(IfStatement(SimpleName:shouldTerminate)(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:numEntriesSent)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:MAX_ENTRIES_TO_FEED))(Block(BreakStatement)))(IfStatement(MethodInvocation(SimpleName:isSpaceAboveHighWaterMark))(Block(ForStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:pause)(METHOD_INVOCATION_ARGUMENTS(SimpleName:RETRY_INTERVAL_MILLIS))))(IfStatement(MethodInvocation(SimpleName:isSpaceBelowLowWaterMark))(Block(BreakStatement)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:feeder))(SimpleName:process))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ExpressionStatement(MethodInvocation(SimpleName:pause)(METHOD_INVOCATION_ARGUMENTS(SimpleName:RETRY_INTERVAL_MILLIS))))(ContinueStatement))))(ExpressionStatement(PostfixExpression(SimpleName:numEntriesSent)(POSTFIX_EXPRESSION_OPERATOR:++))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:writerThread)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:WriteProcessor))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:WriteProcessor)))))(ForStatement(Block(IfStatement(SimpleName:shouldTerminate)(Block(BreakStatement)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:process))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ExpressionStatement(MethodInvocation(SimpleName:pause)(METHOD_INVOCATION_ARGUMENTS(SimpleName:RETRY_INTERVAL_MILLIS))))(ContinueStatement))))(ExpressionStatement(PostfixExpression(SimpleName:numEntriesReceived)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:destroy))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:addShutdownHook)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Thread))(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(Assignment(SimpleName:shouldTerminate)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:feederThread))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writerThread))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:feederThread))(SimpleName:join)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writerThread))(SimpleName:join)))))))