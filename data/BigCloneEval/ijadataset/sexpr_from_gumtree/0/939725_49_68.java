(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:jsFunction_extract)(SingleVariableDeclaration(SimpleType(SimpleName:ScriptableFile))(SimpleName:outputFile))(SimpleType(SimpleName:IOException))(SimpleType(SimpleName:FileSystemException))(SimpleType(SimpleName:ArchiveException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:is)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:jsFunction_createInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:output)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFile))(SimpleName:jsFunction_createOutputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedInputStream))(VariableDeclarationFragment(SimpleName:buf)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(SimpleName:is))))(VariableDeclarationStatement(SimpleType(SimpleName:ArchiveInputStream))(VariableDeclarationFragment(SimpleName:input)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ScriptableZipArchive))(SimpleName:getFactory)))(SimpleName:createArchiveInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(TryStatement(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(WhileStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getNextEntry))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(SimpleName:count)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:offset))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:input)(SimpleName:output))))(BreakStatement)))(ExpressionStatement(PostfixExpression(SimpleName:count)(POSTFIX_EXPRESSION_OPERATOR:++))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:close)))))))))