(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:exportProject)(SingleVariableDeclaration(SimpleType(SimpleName:IProject))(SimpleName:project))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Shell))(VariableDeclarationFragment(SimpleName:shell)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Display))(SimpleName:getCurrent)))(SimpleName:getActiveShell))))(VariableDeclarationStatement(SimpleType(SimpleName:IFolder))(VariableDeclarationFragment(SimpleName:outputFolder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BaseProjectHelper))(SimpleName:getOutputFolder)(METHOD_INVOCATION_ARGUMENTS(SimpleName:project)))))(IfStatement(InfixExpression(SimpleName:outputFolder)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IPath))(VariableDeclarationFragment(SimpleName:binLocation)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFolder))(SimpleName:getLocation))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fileName)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:AndroidConstants.DOT_ANDROID_PACKAGE))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:binLocation))(SimpleName:toOSString))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:fileName)))))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile))(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDialog))(SimpleName:openError)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Display))(SimpleName:getCurrent)))(SimpleName:getActiveShell))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getPath)))))))(ReturnStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:FileDialog))(VariableDeclarationFragment(SimpleName:fileDialog)(ClassInstanceCreation(SimpleType(SimpleName:FileDialog))(SimpleName:shell)(QualifiedName:SWT.SAVE))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileDialog))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileDialog))(SimpleName:setFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:saveLocation)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileDialog))(SimpleName:open))))(IfStatement(InfixExpression(SimpleName:saveLocation)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipInputStream))(VariableDeclarationFragment(SimpleName:zis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zos)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:input)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:output)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:input)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:zis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipInputStream))(SimpleName:input))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:saveFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:saveLocation))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:saveFile))))(ExpressionStatement(Assignment(SimpleName:zos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(SimpleName:output)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(IfStatement(InfixExpression(SimpleName:zis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDialog))(SimpleName:openError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shell)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getPath)))))))(ReturnStatement))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:4096))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:entry)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:getNextEntry))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:isDirectory))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ContinueStatement)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:newEntry)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getMethod))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:JarEntry.STORED))(Block(ExpressionStatement(Assignment(SimpleName:newEntry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JarEntry))(SimpleName:entry)))))(Block(ExpressionStatement(Assignment(SimpleName:newEntry)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:JarEntry))(SimpleName:name))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newEntry))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:count)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:count))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:closeEntry))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDialog))(SimpleName:openError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shell)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getName))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zos))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zis))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDialog))(SimpleName:openWarning)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shell)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>))(SimpleName:saveLocation)))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDialog))(SimpleName:openError)(METHOD_INVOCATION_ARGUMENTS(SimpleName:shell)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:project))(SimpleName:getName)))))))))))))