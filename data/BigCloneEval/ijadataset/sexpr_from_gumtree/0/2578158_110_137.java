(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:MapInfo))(SimpleName:loadLocalMapData)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:fileName))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MapInfo))(VariableDeclarationFragment(SimpleName:info)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapCacheLocal))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:info)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:info))(SimpleName:getContent))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:bufferedreader)))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:fetchUrl)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:localMapContextUrl)(SimpleName:fileName))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:urlconnection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fetchUrl))(SimpleName:openConnection))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlconnection))(SimpleName:getContentEncoding))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:bufferedreader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlconnection))(SimpleName:getInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlconnection))(SimpleName:getContentEncoding)))))))(Block(ExpressionStatement(Assignment(SimpleName:bufferedreader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlconnection))(SimpleName:getInputStream))(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:mapContent)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder)))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bufferedreader))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapContent))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapContent))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:info))(SimpleName:setContent)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapContent))(SimpleName:toString)))))(VariableDeclarationStatement(SimpleType(SimpleName:GameMapImplementation))(VariableDeclarationFragment(SimpleName:gameMap)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GameMapImplementation))(SimpleName:createFromMapInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:info))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:_ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fileName)))))))(ReturnStatement(SimpleName:info))))))