(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:CanonFlopDetail))(SimpleName:containing)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:turnCanon))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hi)(InfixExpression(QualifiedName:Flop.CANONS)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:hi))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lo)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(VariableDeclarationStatement(SimpleType(SimpleName:CanonRange))(VariableDeclarationFragment(SimpleName:turnRange)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DETAILS))(SimpleName:getTurnRange)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:turnRange))(SimpleName:from))(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:turnCanon))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:turnRange))(SimpleName:toInclusive))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:turnCanon))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(Block(ReturnStatement(MethodInvocation(SimpleName:lookup)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))))))(ReturnStatement(NullLiteral))))))