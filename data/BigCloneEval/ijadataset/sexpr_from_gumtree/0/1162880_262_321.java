(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:zipProblemData)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:outputFile))(SingleVariableDeclaration(SimpleType(SimpleName:Problem))(SimpleName:problem))(SimpleType(SimpleName:PersistenceException))(SimpleType(SimpleName:JudgeServerErrorException))(SimpleType(SimpleName:ProblemDataErrorException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:zipOut)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:outputFile)))))(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Reference)))(VariableDeclarationFragment(SimpleName:inputFiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:referenceDAO)))(SimpleName:getProblemReferences)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:problem))(SimpleName:getId))(QualifiedName:ReferenceType.INPUT)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Reference)))(VariableDeclarationFragment(SimpleName:outputFiles)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:referenceDAO)))(SimpleName:getProblemReferences)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:problem))(SimpleName:getId))(QualifiedName:ReferenceType.OUTPUT)))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputFiles))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:!=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFiles))(SimpleName:size)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputFiles))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFiles))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:problem))(SimpleName:getId)))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Reference))(SimpleName:input))(SimpleName:inputFiles)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getContent))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getId)))))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Reference))(SimpleName:output))(SimpleName:outputFiles)(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:getContent))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:getId)))))))))(VariableDeclarationStatement(SimpleType(SimpleName:Reference))(VariableDeclarationFragment(SimpleName:specialJudge)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:problem))(SimpleName:isChecker))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Reference)))(VariableDeclarationFragment(SimpleName:specialJudges)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:referenceDAO)))(SimpleName:getProblemReferences)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:problem))(SimpleName:getId))(QualifiedName:ReferenceType.CHECKER_SOURCE)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudges))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:problem))(SimpleName:getId)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudges))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:problem))(SimpleName:getId)))))))(ExpressionStatement(Assignment(SimpleName:specialJudge)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudges))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:contentType)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudge))(SimpleName:getContentType))))(IfStatement(InfixExpression(SimpleName:contentType)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudge))(SimpleName:getId)))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:content)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudge))(SimpleName:getContent))))(IfStatement(InfixExpression(SimpleName:content)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudge))(SimpleName:getId)))))))(IfStatement(InfixExpression(QualifiedName:content.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ProblemDataErrorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudge))(SimpleName:getId)))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputFiles))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CopyUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inputFiles))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(SimpleName:getContent))(SimpleName:zipOut))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFiles))(SimpleName:size)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CopyUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputFiles))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(SimpleName:getContent))(SimpleName:zipOut))))))(IfStatement(InfixExpression(SimpleName:specialJudge)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:String))(SimpleName:format)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudge))(SimpleName:getContentType))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CopyUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:specialJudge))(SimpleName:getContent))(SimpleName:zipOut)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipOut))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:JudgeServerErrorException))(StringLiteral:<STR>)(SimpleName:e))))))))))