(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:TravResult))(SimpleName:searchToLeafPos)(SingleVariableDeclaration(SimpleType(SimpleName:StructuralIdentifier))(SimpleName:key))(SingleVariableDeclaration(SimpleType(SimpleName:BTreeNode))(SimpleName:currentRoot))(Block(VariableDeclarationStatement(SimpleType(SimpleName:BTreeNode))(VariableDeclarationFragment(SimpleName:node)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:currentRoot))(SimpleName:getBTreeNode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)))))(WhileStatement(InstanceofExpression(SimpleName:node)(SimpleType(SimpleName:InternalNode)))(Block(ExpressionStatement(Assignment(SimpleName:node)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:getBTreeNode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Leaf))(VariableDeclarationFragment(SimpleName:leaf)(CastExpression(SimpleType(SimpleName:Leaf))(SimpleName:node))))(VariableDeclarationStatement(SimpleType(SimpleName:Vector))(VariableDeclarationFragment(SimpleName:keys)(QualifiedName:leaf.entries.keys)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keys))(SimpleName:size))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:m)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:r)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:prevm)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:prevprevm)(NumberLiteral:0)))(WhileStatement(InfixExpression(InfixExpression(InfixExpression(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keys))(SimpleName:size)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:prevm)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:m)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:prevprevm)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:m)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StructuralIdentifier))(VariableDeclarationFragment(SimpleName:mdid)(CastExpression(SimpleType(SimpleName:StructuralIdentifier))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:keys))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:posC)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mdid))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)))))(IfStatement(InfixExpression(SimpleName:posC)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:prevprevm)(ASSIGNMENT_OPERATOR:=)(SimpleName:prevm)))(ExpressionStatement(Assignment(SimpleName:prevm)(ASSIGNMENT_OPERATOR:=)(SimpleName:m)))(ExpressionStatement(Assignment(SimpleName:l)(ASSIGNMENT_OPERATOR:=)(SimpleName:m))))(IfStatement(InfixExpression(SimpleName:posC)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:prevprevm)(ASSIGNMENT_OPERATOR:=)(SimpleName:prevm)))(ExpressionStatement(Assignment(SimpleName:prevm)(ASSIGNMENT_OPERATOR:=)(SimpleName:m)))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(SimpleName:m))))(Block(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:TravResult))(SimpleName:leaf)(SimpleName:m)(BooleanLiteral:true))))))(ExpressionStatement(Assignment(SimpleName:m)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:r)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:TravResult))(SimpleName:leaf)(SimpleName:m)(BooleanLiteral:false)))))))