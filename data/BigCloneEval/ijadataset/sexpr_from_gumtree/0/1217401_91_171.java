(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:doWork)(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:500)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))(ReturnStatement))))(ExpressionStatement(Assignment(SimpleName:dt)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:chunksize)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:Fs))))(ExpressionStatement(Assignment(SimpleName:fftCQ)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FFTConstantQ))(SimpleName:Fs)(SimpleName:minF)(SimpleName:maxF)(SimpleName:binsPerOctave)(SimpleName:thresh)(SimpleName:spread))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:fftsize)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fftCQ))(SimpleName:getFFTSize))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:freq)(Dimension)(QualifiedName:fftCQ.freqs)))(SynchronizedStatement(ThisExpression)(Block(ExpressionStatement(Assignment(SimpleName:freqArray)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(QualifiedName:freq.length))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:freq.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:freqArray)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ArrayAccess(SimpleName:freq)(SimpleName:i)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:fftsize)(StringLiteral:<STR>)(SimpleName:chunksize)))))(ExpressionStatement(Assignment(SimpleName:nBin)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fftCQ))(SimpleName:getNumberOfOutputBands))))(ExpressionStatement(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:sizeInChunks)(SimpleName:nBin))))(ExpressionStatement(Assignment(SimpleName:dPhaseFreqHz)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(SimpleName:sizeInChunks))(Dimension(SimpleName:nBin))))))(ExpressionStatement(Assignment(SimpleName:magnArray)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(SimpleName:sizeInChunks))(Dimension(SimpleName:nBin))))))(ExpressionStatement(Assignment(SimpleName:phaseArray)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:float)(Dimension(SimpleName:sizeInChunks))(Dimension(SimpleName:nBin))))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:twoPI)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:Math.PI))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:dPhaRef)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:nBin))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nBin))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dPhaRef)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(InfixExpression(SimpleName:twoPI)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:freq)(SimpleName:i))(SimpleName:dt)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:fftOut)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(InfixExpression(SimpleName:nBin)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:fftIn)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:fftsize))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:input)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:fftsize))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:testF)(InfixExpression(SimpleName:minF)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ch)(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nRead)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:AudioBuffer))(VariableDeclarationFragment(SimpleName:buffer)(ClassInstanceCreation(SimpleType(SimpleName:AudioBuffer))(StringLiteral:<STR>)(SimpleName:ch)(SimpleName:chunksize)(NumberLiteral:44100))))(ExpressionStatement(Assignment(SimpleName:chunkPtr)(ASSIGNMENT_OPERATOR:=)(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:fftsize))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:chunksize)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:chunkStartInSamples)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))(DoStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:interrupted))(Block(ReturnStatement)))(IfStatement(InfixExpression(SimpleName:fftsize)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:chunksize))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:fftsize)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:chunksize)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:input)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:input)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:chunksize))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:makeSilence)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:processAudio)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer))))(ExpressionStatement(Assignment(SimpleName:nRead)(ASSIGNMENT_OPERATOR:+=)(SimpleName:chunksize)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:left)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:getChannel)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(InfixExpression(SimpleName:fftsize)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:chunksize)))(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:fftsize))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:input)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:left)(SimpleName:j))))))(IfStatement(InfixExpression(SimpleName:chunkPtr)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:chunkPtr)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:chunkStartInSamples)(ASSIGNMENT_OPERATOR:+=)(SimpleName:chunksize)))(ContinueStatement)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:fftsize))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:fftIn)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:input)(SimpleName:i))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fftCQ))(SimpleName:calc)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fftIn)(SimpleName:fftOut))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nBin))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:real)(ArrayAccess(SimpleName:fftOut)(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:i)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:imag)(ArrayAccess(SimpleName:fftOut)(InfixExpression(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:magnArray)(SimpleName:chunkPtr))(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sqrt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(SimpleName:real)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:real))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:imag)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:imag))))))))(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:phaseArray)(SimpleName:chunkPtr))(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan2)(METHOD_INVOCATION_ARGUMENTS(SimpleName:imag)(SimpleName:real))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:phaLast)))(IfStatement(InfixExpression(SimpleName:chunkPtr)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:phaLast)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:phaseArray)(InfixExpression(SimpleName:chunkPtr)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(SimpleName:i)))))(Block(ExpressionStatement(Assignment(SimpleName:phaLast)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0.0)))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:dpha)(InfixExpression(ArrayAccess(ArrayAccess(SimpleName:phaseArray)(SimpleName:chunkPtr))(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:phaLast))))(ExpressionStatement(Assignment(SimpleName:dpha)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(ParenthesizedExpression(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(InfixExpression(ArrayAccess(SimpleName:dPhaRef)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:dpha))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:Math.PI))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:twoPI)))(INFIX_EXPRESSION_OPERATOR:%)(SimpleName:twoPI))(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:Math.PI))))))(ExpressionStatement(Assignment(ArrayAccess(ArrayAccess(SimpleName:dPhaseFreqHz)(SimpleName:chunkPtr))(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:float)(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:freq)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:dpha)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:twoPI)(SimpleName:dt)))))))))(ExpressionStatement(MethodInvocation(SimpleName:notifyMoreDataObservers)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:magnArray)(SimpleName:chunkPtr)))))(ExpressionStatement(PostfixExpression(SimpleName:chunkPtr)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(SimpleName:chunkPtr)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:sizeInChunks))(ExpressionStatement(Assignment(SimpleName:chunkPtr)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(BooleanLiteral:true))))))