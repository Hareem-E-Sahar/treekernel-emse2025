(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:resolve)(Block(IfStatement(SimpleName:isBroken)(Block(ReturnStatement)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:ang12)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan2)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:particle2.position.y)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:particle1.position.y))(InfixExpression(QualifiedName:particle2.position.x)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:particle1.position.x)))))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:ang23)(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan2)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:particle3.position.y)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:particle2.position.y))(InfixExpression(QualifiedName:particle3.position.x)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:particle2.position.x)))))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:angDiff)(InfixExpression(SimpleName:ang12)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:ang23))))(WhileStatement(InfixExpression(SimpleName:angDiff)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:MathUtil.PI))(Block(ExpressionStatement(Assignment(SimpleName:angDiff)(ASSIGNMENT_OPERATOR:-=)(QualifiedName:MathUtil.TWO_PI)))))(WhileStatement(InfixExpression(SimpleName:angDiff)(INFIX_EXPRESSION_OPERATOR:<)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(QualifiedName:MathUtil.PI)))(Block(ExpressionStatement(Assignment(SimpleName:angDiff)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:MathUtil.TWO_PI)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:sumInvMass)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:particle1))(SimpleName:getInvMass))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:particle2))(SimpleName:getInvMass)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:mult1)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:particle1))(SimpleName:getInvMass))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:sumInvMass))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:mult2)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:particle2))(SimpleName:getInvMass))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:sumInvMass))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:angChange)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:lowMid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxAngle)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:minAngle)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:highMid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxAngle)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:minAngle)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:breakAng)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxBreakAngle)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:minBreakAngle)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:newDiff)(InfixExpression(SimpleName:highMid)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:angDiff))))(WhileStatement(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:MathUtil.PI))(Block(ExpressionStatement(Assignment(SimpleName:newDiff)(ASSIGNMENT_OPERATOR:-=)(QualifiedName:MathUtil.TWO_PI)))))(WhileStatement(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:<)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(QualifiedName:MathUtil.PI)))(Block(ExpressionStatement(Assignment(SimpleName:newDiff)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:MathUtil.TWO_PI)))))(IfStatement(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:lowMid))(Block(IfStatement(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:breakAng))(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:diff)(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:breakAng))))(ExpressionStatement(Assignment(SimpleName:isBroken)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:angChange)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lowMid)))))(IfStatement(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:<)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:lowMid)))(Block(IfStatement(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:<)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:breakAng)))(Block(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:diff2)(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:breakAng))))(ExpressionStatement(Assignment(SimpleName:isBroken)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ReturnStatement)))(ExpressionStatement(Assignment(SimpleName:angChange)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:newDiff)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lowMid)))))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:finalAng)(InfixExpression(InfixExpression(SimpleName:angChange)(INFIX_EXPRESSION_OPERATOR:*)(FieldAccess(ThisExpression)(SimpleName:stiffness)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ang12))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:displaceX)(InfixExpression(QualifiedName:particle1.position.x)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:particle2.position.x)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:particle1.position.x)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:mult1)))))(VariableDeclarationStatement(PrimitiveType:float)(VariableDeclarationFragment(SimpleName:displaceY)(InfixExpression(QualifiedName:particle1.position.y)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:particle2.position.y)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:particle1.position.y)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:mult1)))))(ExpressionStatement(Assignment(QualifiedName:particle1.position.x)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:displaceX)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:cos)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:finalAng)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:MathUtil.PI)))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:restLength)(SimpleName:mult1)))))(ExpressionStatement(Assignment(QualifiedName:particle1.position.y)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:displaceY)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sin)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:finalAng)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:MathUtil.PI)))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:restLength)(SimpleName:mult1)))))(ExpressionStatement(Assignment(QualifiedName:particle2.position.x)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:displaceX)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:cos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:finalAng))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:restLength)(SimpleName:mult2)))))(ExpressionStatement(Assignment(QualifiedName:particle2.position.y)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:displaceY)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(CastExpression(PrimitiveType:float)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sin)(METHOD_INVOCATION_ARGUMENTS(SimpleName:finalAng))))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:restLength)(SimpleName:mult2)))))))))