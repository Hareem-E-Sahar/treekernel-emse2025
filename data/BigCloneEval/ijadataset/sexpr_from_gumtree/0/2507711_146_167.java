(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Lock))(SimpleName:lockItem)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:itemId))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:writeLock))(Block(SynchronizedStatement(SimpleName:itemLockMap)(Block(IfStatement(InfixExpression(SimpleName:repositoryLock)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:LockMapEntry))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(SimpleName:getLockMapEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:itemId)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:checkLocks)))(VariableDeclarationStatement(SimpleType(SimpleName:Lock))(VariableDeclarationFragment(SimpleName:lock)(ClassInstanceCreation(SimpleType(SimpleName:DefaultLock))(SimpleName:itemId)(SimpleName:lockIdSalt)(PostfixExpression(SimpleName:nextLockId)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(SimpleName:writeLock)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:isLocked))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RepositoryLockException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:lockForWriting)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lock)))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:isWriteLocked))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RepositoryLockException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:lockForReading)(METHOD_INVOCATION_ARGUMENTS(SimpleName:lock))))))(ReturnStatement(SimpleName:lock))))))))