(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:start)(SimpleType(SimpleName:ExpectJException))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:process))(SimpleName:start)))(IfStatement(InfixExpression(SimpleName:tm)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tm))(SimpleName:startTimer))))(ExpressionStatement(Assignment(SimpleName:readSystemOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PipedInputStream)))))(ExpressionStatement(Assignment(SimpleName:writeSystemOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PipedOutputStream))(SimpleName:readSystemOut))))(ExpressionStatement(Assignment(SimpleName:processOutToSystemOut)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StreamPiper))(QualifiedName:System.out)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:process.process))(SimpleName:getInputStream))(SimpleName:writeSystemOut))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processOutToSystemOut))(SimpleName:start)))(ExpressionStatement(Assignment(SimpleName:readSystemErr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PipedInputStream)))))(ExpressionStatement(Assignment(SimpleName:writeSystemErr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PipedOutputStream))(SimpleName:readSystemErr))))(ExpressionStatement(Assignment(SimpleName:processErrToSystemErr)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StreamPiper))(QualifiedName:System.err)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:process.process))(SimpleName:getErrorStream))(SimpleName:writeSystemErr))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:processErrToSystemErr))(SimpleName:start))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exp))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ExpectJException))(StringLiteral:<STR>)(SimpleName:exp))))))))))