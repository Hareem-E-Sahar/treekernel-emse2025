(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:generateHash)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:value))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:hashingAlgorithm)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:digest)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:digest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:hashingAlgorithm))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hashingAlgorithm)(StringLiteral:<STR>))(SimpleName:e))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Charset))(VariableDeclarationFragment(SimpleName:charset)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Charset))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:hashInBytes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:value))(SimpleName:getBytes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:charset)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:buf)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:hashInBytes.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:halfByte)(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:hashInBytes)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:>>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:twoHalfs)(NumberLiteral:0)))(DoStatement(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(NumberLiteral:0)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:halfByte)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:halfByte)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:9))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:char)(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:halfByte))))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buf))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(CastExpression(PrimitiveType:char)(ParenthesizedExpression(InfixExpression(CharacterLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(SimpleName:halfByte)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:10)))))))))))(ExpressionStatement(Assignment(SimpleName:halfByte)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:hashInBytes)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F)))))(InfixExpression(PostfixExpression(SimpleName:twoHalfs)(POSTFIX_EXPRESSION_OPERATOR:++))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1)))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buf))(SimpleName:toString)))))))