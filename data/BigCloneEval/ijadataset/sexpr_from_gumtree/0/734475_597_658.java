(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:bjwflate_deflopt_gz)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:caption))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:src))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dst))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:splitSize))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:noprep))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:splitSize)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:zip)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getParentFile))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(TryStatement(Block(TryStatement(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:cmds)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension(ConditionalExpression(SimpleName:noprep)(NumberLiteral:5)(NumberLiteral:4)))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:cmds)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:BASE_DIR)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:cmds)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(IfStatement(SimpleName:noprep)(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:cmds)(NumberLiteral:2))(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:cmds)(ConditionalExpression(SimpleName:noprep)(NumberLiteral:3)(NumberLiteral:2)))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:getAbsolutePath))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:cmds)(ConditionalExpression(SimpleName:noprep)(NumberLiteral:4)(NumberLiteral:3)))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getAbsolutePath))))(ExpressionStatement(MethodInvocation(SimpleName:HighLevelSleep)(METHOD_INVOCATION_ARGUMENTS(SimpleName:EXEC_DELAY))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:proc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cmds)(NullLiteral)))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:stdout)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:stderr)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Streams))(SimpleName:asynchronousTransfer)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:getInputStream))(SimpleName:stdout))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Streams))(SimpleName:asynchronousTransfer)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:getErrorStream))(SimpleName:stderr))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SimpleCountDownLatch))(VariableDeclarationFragment(SimpleName:latch)(ClassInstanceCreation(SimpleType(SimpleName:SimpleCountDownLatch)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:Thread))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:latch))(SimpleName:await)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:destroy))))))))))(SimpleName:start)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:exit)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:proc))(SimpleName:waitFor))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:latch))(SimpleName:countDown)))(IfStatement(InfixExpression(SimpleName:splitSize)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:4))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:caption)(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stderr))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Text))(SimpleName:utf8)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stdout))(SimpleName:toByteArray))))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Text))(SimpleName:utf8)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stderr))(SimpleName:toByteArray))))(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(SimpleName:exit)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:exit)(StringLiteral:<STR>)))))))(IfStatement(InfixExpression(SimpleName:exit)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ReturnStatement(BooleanLiteral:false)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exc))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exc))(SimpleName:getClass)))(SimpleName:getName))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exc))(SimpleName:printStackTrace)))(ReturnStatement(BooleanLiteral:false)))))(Block)(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:zip2gz)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:zip))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:dst))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exc))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exc))(SimpleName:getClass)))(SimpleName:getName))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exc))(SimpleName:printStackTrace)))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zip))(SimpleName:delete)))))))))