(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testWithoutFormatMerged)(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:outText)(MethodInvocation(SimpleName:readwriteText)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(BooleanLiteral:true)))))(IfStatement(SimpleName:VERBOSE)(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:outText))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outText))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))))(ExpressionStatement(MethodInvocation(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outText))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))))))))