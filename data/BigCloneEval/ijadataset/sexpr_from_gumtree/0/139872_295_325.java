(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(Modifier:final)(SimpleType(SimpleName:Object))(SimpleName:copyValueFromString)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Class))(WildcardType))(SimpleName:destClass))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:strV))(SimpleType(SimpleName:IllegalArgumentException))(SimpleType(SimpleName:SecurityException))(SimpleType(SimpleName:InstantiationException))(SimpleType(SimpleName:IllegalAccessException))(SimpleType(SimpleName:InvocationTargetException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:dest)(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StringUtils))(SimpleName:isBlank)(METHOD_INVOCATION_ARGUMENTS(SimpleName:strV))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(QualifiedName:java.lang.String))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destClass)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:dest)(ASSIGNMENT_OPERATOR:=)(SimpleName:strV))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(QualifiedName:java.sql.Timestamp))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destClass)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(QualifiedName:java.util.Date))))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destClass))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destClass)))))(ExpressionStatement(Assignment(SimpleName:dest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:DateConverter))))(SimpleName:convert)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destClass)(SimpleName:strV))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:dest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destClass))(SimpleName:newInstance))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:BeanUtilsEx))(SimpleName:copyProperties)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dest)(SimpleName:strV)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:dest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:String))))))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:strV))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:ex))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:dest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destClass))(SimpleName:getMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:String))))))(SimpleName:invoke)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(SimpleName:strV))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e2))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destClass)(StringLiteral:<STR>))(SimpleName:e))))))))))))))))))(ReturnStatement(SimpleName:dest))))))