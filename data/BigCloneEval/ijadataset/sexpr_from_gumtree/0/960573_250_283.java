(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:double)(SimpleName:searchMaximumFromFunctionFromX)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:xStart))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:incrFactor))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:Point2D)))(SimpleName:helpObject))(SingleVariableDeclaration(SimpleType(SimpleName:FunctionFromX))(SimpleName:functionFromX))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x1))(VariableDeclarationFragment(SimpleName:x2))(VariableDeclarationFragment(SimpleName:xTest)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y1))(VariableDeclarationFragment(SimpleName:y2))(VariableDeclarationFragment(SimpleName:yTest)))(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:xTest)(ASSIGNMENT_OPERATOR:=)(SimpleName:xStart)))))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:y2)(ASSIGNMENT_OPERATOR:=)(Assignment(SimpleName:yTest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:functionFromX))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xTest)(SimpleName:helpObject)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1000000))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:xTest)(ASSIGNMENT_OPERATOR:*=)(SimpleName:incrFactor)))(ExpressionStatement(Assignment(SimpleName:yTest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:functionFromX))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xTest)(SimpleName:helpObject)))))(IfStatement(InfixExpression(SimpleName:yTest)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:y1))(Block(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:xTest)))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(SimpleName:yTest)))(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(SimpleName:x1)))(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:xTest)))(ExpressionStatement(Assignment(SimpleName:y2)(ASSIGNMENT_OPERATOR:=)(SimpleName:y1)))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(SimpleName:yTest)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1000000))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:xTest)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:yTest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:functionFromX))(SimpleName:execute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xTest)(SimpleName:helpObject)))))(IfStatement(InfixExpression(SimpleName:y2)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:y1))(Block(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:xTest)))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(SimpleName:yTest))))(Block(ExpressionStatement(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(SimpleName:xTest)))(ExpressionStatement(Assignment(SimpleName:y2)(ASSIGNMENT_OPERATOR:=)(SimpleName:yTest)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:10))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:abs)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:y2)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y1))))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1.0E-12)))(Block(BreakStatement)))))(ReturnStatement(SimpleName:xTest))))))