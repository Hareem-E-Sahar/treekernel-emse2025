(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:createClass)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:className))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:outdir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:newClassName))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:notAll))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outdir))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:File.separator))))(ExpressionStatement(Assignment(SimpleName:outdir)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:outdir)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:cf)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:className))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:outname)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:cis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Hashtable))(VariableDeclarationFragment(SimpleName:fileList)(MethodInvocation(SimpleName:createFileList)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:canRead)))(Block(IfStatement(InfixExpression(SimpleName:newClassName)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:outname)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:outdir)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cf))(SimpleName:getName)))))(ExpressionStatement(Assignment(SimpleName:outname)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:outdir)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:newClassName)(StringLiteral:<STR>)))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:cis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:className)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showMessageDialog)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className)(StringLiteral:<STR>)(SimpleName:e))(StringLiteral:<STR>)(QualifiedName:JOptionPane.ERROR_MESSAGE))))(ReturnStatement))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:zipFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:outname))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:exists))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Object))(Dimension))(VariableDeclarationFragment(SimpleName:options)(ArrayInitializer(StringLiteral:<STR>)(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:answer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showOptionDialog)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outname)(StringLiteral:<STR>))(StringLiteral:<STR>)(QualifiedName:JOptionPane.DEFAULT_OPTION)(QualifiedName:JOptionPane.WARNING_MESSAGE)(NullLiteral)(SimpleName:options)(ArrayAccess(SimpleName:options)(NumberLiteral:0))))))(IfStatement(InfixExpression(SimpleName:answer)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(ReturnStatement))))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:exists))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:delete))))(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:rf)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:outname)(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:SeekableOutputStream))(VariableDeclarationFragment(SimpleName:os)(ClassInstanceCreation(SimpleType(SimpleName:SeekableOutputStream))(SimpleName:rf))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:prio)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:getPriority))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:setPriority)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Thread.MIN_PRIORITY))))(ExpressionStatement(MethodInvocation(SimpleName:writeZip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:os)(SimpleName:fileList)(SimpleName:cis)(SimpleName:newClassName)(SimpleName:notAll))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread)))(SimpleName:setPriority)(METHOD_INVOCATION_ARGUMENTS(SimpleName:prio))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showMessageDialog)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outname)(StringLiteral:<STR>)(SimpleName:e))(StringLiteral:<STR>)(QualifiedName:JOptionPane.ERROR_MESSAGE))))(ReturnStatement)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JOptionPane))(SimpleName:showMessageDialog)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:className))(StringLiteral:<STR>)(QualifiedName:JOptionPane.ERROR_MESSAGE))))(ReturnStatement)))))))