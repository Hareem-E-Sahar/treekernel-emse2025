(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:copyFile)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:source_name))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:dest_name))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:source_file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:source_name))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destination_file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dest_name))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:source)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:destination)(NullLiteral)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bytes_read)))(TryStatement(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:isFile))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:source_name)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source_file))(SimpleName:canRead)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(SimpleName:source_name)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:exists))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:isFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DataInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:DataInputStream))(QualifiedName:System.in))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:response)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination_file))(SimpleName:canWrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(SimpleName:dest_name)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:dest_name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:flush)))(ExpressionStatement(Assignment(SimpleName:response)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:readLine))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(SimpleName:dest_name))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parentdir)(MethodInvocation(SimpleName:parent)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destination_file)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentdir))(SimpleName:exists)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(SimpleName:dest_name)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentdir))(SimpleName:canWrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileCopyException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:QZ.PHRASES))(SimpleName:getPhrase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)(SimpleName:dest_name)))))))(ExpressionStatement(Assignment(SimpleName:source)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:source_file))))(ExpressionStatement(Assignment(SimpleName:destination)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destination_file))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(WhileStatement(BooleanLiteral:true)(Block(ExpressionStatement(Assignment(SimpleName:bytes_read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(IfStatement(InfixExpression(SimpleName:bytes_read)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:bytes_read)))))))(Block(IfStatement(InfixExpression(SimpleName:source)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(EmptyStatement)))))(IfStatement(InfixExpression(SimpleName:destination)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(EmptyStatement)))))))))))