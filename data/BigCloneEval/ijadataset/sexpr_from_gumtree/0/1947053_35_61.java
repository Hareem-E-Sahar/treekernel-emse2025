(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:NonThreadedEchoHandler)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:delay))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:syncFlush))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:writeTofile))(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:delay))(ASSIGNMENT_OPERATOR:=)(SimpleName:delay)))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:syncFlush))(ASSIGNMENT_OPERATOR:=)(SimpleName:syncFlush)))(IfStatement(SimpleName:writeTofile)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tempFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempFile))(SimpleName:deleteOnExit)))(ExpressionStatement(Assignment(SimpleName:fc)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:File))(SimpleName:createTempFile)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)))(StringLiteral:<STR>)))(SimpleName:getChannel))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tempFile))(SimpleName:getAbsolutePath))))))))(VariableDeclarationStatement(SimpleType(SimpleName:TimerTask))(VariableDeclarationFragment(SimpleName:task)(ClassInstanceCreation(SimpleType(SimpleName:TimerTask))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:rate)(MethodInvocation(SimpleName:printRate))))(IfStatement(InfixExpression(SimpleName:fc)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:rate)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fc))(SimpleName:position))(StringLiteral:<STR>))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rate)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ignore))(Block)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:schedule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:task)(SimpleName:PRINT_PERIOD)(SimpleName:PRINT_PERIOD))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DataConverter))(SimpleName:toFormatedDuration)(METHOD_INVOCATION_ARGUMENTS(SimpleName:PRINT_PERIOD)))))))))))