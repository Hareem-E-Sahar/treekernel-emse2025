(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:loadUpdateDescriptors)(SimpleType(SimpleName:XMLException))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URI))(VariableDeclarationFragment(SimpleName:urlDoc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:resolve)(METHOD_INVOCATION_ARGUMENTS(SimpleName:updateDoc)))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:conn)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlDoc))(SimpleName:toURL)))(SimpleName:openConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setDoInput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:updates))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLUtils))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(CastExpression(SimpleType(SimpleName:InputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getContent))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:disconnect)))(ExpressionStatement(Assignment(SimpleName:moduleUpdatesCache)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:UpdateId))(SimpleType(SimpleName:ModuleUpdateDescriptor)))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Node)))(VariableDeclarationFragment(SimpleName:lst)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLUtils))(SimpleName:findChildren)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:updates)))(SimpleName:getFirstChild))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lst))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement)))(TryStatement(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:bundle))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MessageRepository))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Locale))(SimpleName:getDefault))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:toURL))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Node))(VariableDeclarationFragment(SimpleName:n)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:moduleName)))(VariableDeclarationStatement(SimpleType(SimpleName:Module))(VariableDeclarationFragment(SimpleName:module)))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:Node)))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lst))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next))))(ExpressionStatement(Assignment(SimpleName:moduleName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLUtils))(SimpleName:findAttribute)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)(StringLiteral:<STR>))))(SimpleName:getValue))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Node)))(VariableDeclarationFragment(SimpleName:lst1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLUtils))(SimpleName:findChildren)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)(StringLiteral:<STR>)))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:Node)))(VariableDeclarationFragment(SimpleName:iter1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:lst1))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter1))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter1))(SimpleName:next))))(VariableDeclarationStatement(SimpleType(SimpleName:ModuleUpdateDescriptor))(VariableDeclarationFragment(SimpleName:mud)(ClassInstanceCreation(SimpleType(SimpleName:ModuleUpdateDescriptor))(SimpleName:moduleName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mud))(SimpleName:fromXML)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n))))(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:bundle))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mud))(SimpleName:setUpdateDescription)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:bundle)))(SimpleName:getMessage)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mud))(SimpleName:getUpdateDescription)))))))))(ExpressionStatement(Assignment(SimpleName:module)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getRegisteredModule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:moduleName)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:module)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mud))(SimpleName:isForModule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:module))))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:UpdateId))(SimpleType(SimpleName:ModuleUpdateDescriptor)))(VariableDeclarationFragment(SimpleName:m)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:moduleUpdatesCache))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:moduleName)))))(IfStatement(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:m)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:UpdateId))(SimpleType(SimpleName:ModuleUpdateDescriptor))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:moduleUpdatesCache))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:moduleName)(SimpleName:m))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mud))(SimpleName:getUpdateId))(SimpleName:mud))))))))))))))