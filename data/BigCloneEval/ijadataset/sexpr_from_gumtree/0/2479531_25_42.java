(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:String))(SimpleName:encryptPassword)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:strOriginal))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strOriginal))(SimpleName:isEmpty))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:m_bCanEncrypt)))(ReturnStatement(ParenthesizedExpression(SimpleName:strOriginal))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:nEnc)(NullLiteral)))(TryStatement(Block(SynchronizedStatement(SimpleName:m_passwordEncryptor)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_passwordEncryptor))(SimpleName:reset)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:originalSalted)(InfixExpression(SimpleName:strOriginal)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:m_strPasswordSalt))))(ExpressionStatement(Assignment(SimpleName:nEnc)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_passwordEncryptor))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:originalSalted))(SimpleName:getBytes))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:1)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:m_fnEncryptionRepeat))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:nEnc)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_passwordEncryptor))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nEnc)))))))))(ReturnStatement(ParenthesizedExpression(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:nEnc)(StringLiteral:<STR>)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:m_bCanEncrypt)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ReturnStatement(ParenthesizedExpression(SimpleName:strOriginal))))))))))