(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:String))(SimpleName:getChannelLink)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:myLink)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mChannelLink))(SimpleName:getText)))(SimpleName:toString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:d)(METHOD_INVOCATION_ARGUMENTS(SimpleName:_TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:myLink)))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:myLink)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myLink))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myLink))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(ExpressionStatement(Assignment(SimpleName:myLink)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:myLink))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Log))(SimpleName:d)(METHOD_INVOCATION_ARGUMENTS(SimpleName:_TAG)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:myLink)))))))(ReturnStatement(SimpleName:myLink))))))