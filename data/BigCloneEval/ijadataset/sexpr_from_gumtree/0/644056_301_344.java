(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:getHashNoNio)(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:in))(SingleVariableDeclaration(SimpleType(SimpleName:DigestAlgo))(SimpleName:algo))(SingleVariableDeclaration(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:buf))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Checksum))(VariableDeclarationFragment(SimpleName:checksum)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(NumberLiteral:0)))(SwitchStatement(SimpleName:algo)(SwitchCase(SimpleName:ADLER32))(ExpressionStatement(Assignment(SimpleName:checksum)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Adler32)))))(SwitchCase(SimpleName:CRC32))(IfStatement(InfixExpression(SimpleName:checksum)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:checksum)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:CRC32)))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:checksum))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:size))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Long))(SimpleName:toOctalString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:checksum))(SimpleName:getValue)))))(SimpleName:getBytes))))(ExpressionStatement(Assignment(SimpleName:checksum)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(BreakStatement)(SwitchCase(SimpleName:MD5))(SwitchCase(SimpleName:MD2))(SwitchCase(SimpleName:SHA1))(SwitchCase(SimpleName:SHA256))(SwitchCase(SimpleName:SHA384))(SwitchCase(SimpleName:SHA512))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:algoname)(QualifiedName:algo.name)))(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:digest)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:digest)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:algoname))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(SimpleName:algo)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(SimpleName:e))))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:size))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:buf)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:digest))))(ExpressionStatement(Assignment(SimpleName:digest)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(BreakStatement)(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(QualifiedName:algo.name)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(ReturnStatement(SimpleName:buf))))))