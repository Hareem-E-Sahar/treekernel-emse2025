(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IProgressMonitor))(SimpleName:monitor))(SimpleType(SimpleName:InvocationTargetException))(Block(VariableDeclarationStatement(SimpleType(QualifiedName:uk.ac.reload.diva.util.IProgressMonitor))(VariableDeclarationFragment(SimpleName:divaMonitor)(ClassInstanceCreation(SimpleType(QualifiedName:uk.ac.reload.diva.util.IProgressMonitor))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:setNote)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:monitor))(SimpleName:subTask)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name)))))))(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:isCanceled)(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:monitor))(SimpleName:isCanceled)))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:close)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:monitor))(SimpleName:done)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:monitor))(SimpleName:setTaskName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:srcfiles.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:src)(ClassInstanceCreation(SimpleType(SimpleName:File))(ArrayAccess(SimpleName:srcfiles)(SimpleName:i)))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:tgt)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:targetParentFolder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getName)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tgt))))(Block(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:isDirectory))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFolder)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:tgt)(SimpleName:divaMonitor)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:monitor))(SimpleName:subTask)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(SimpleName:tgt)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ex))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:InvocationTargetException))(SimpleName:ex))))))))))))))