(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:Raindrop)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:aURI))(SimpleType(SimpleName:StartupException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilderFactory))(VariableDeclarationFragment(SimpleName:dbFactory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DocumentBuilderFactory))(SimpleName:newInstance))))(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:root)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:DocumentBuilder))(VariableDeclarationFragment(SimpleName:builder)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dbFactory))(SimpleName:newDocumentBuilder))))(VariableDeclarationStatement(SimpleType(SimpleName:Document))(VariableDeclarationFragment(SimpleName:document)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:builder))(SimpleName:parse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:aURI)))))(ExpressionStatement(Assignment(SimpleName:root)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:document))(SimpleName:getDocumentElement)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ParserConfigurationException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aURI))(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:StartupException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aURI))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SAXException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aURI))(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:StartupException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aURI))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aURI))(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:StartupException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aURI))(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:ResponseTimeMonitorThread))(VariableDeclarationFragment(SimpleName:rtMonitorThread)(ClassInstanceCreation(SimpleType(SimpleName:ResponseTimeMonitorThread)))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:rtMonitorThreadT)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(SimpleName:rtMonitorThread))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rtMonitorThreadT))(SimpleName:setDaemon)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rtMonitorThreadT))(SimpleName:start)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:threadPoolUpdate)(NumberLiteral:1000)))(ExpressionStatement(Assignment(SimpleName:manager)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StageManager))(SimpleName:threadPoolUpdate))))(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:createNIO))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.FINER)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:StartupException))(StringLiteral:<STR>)(SimpleName:e))))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeList))(VariableDeclarationFragment(SimpleName:admissionControllerNodes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:getElementsByTagName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:admissionControllerNodes))(SimpleName:getLength))))))(ExpressionStatement(Assignment(SimpleName:admissionControllers)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:createAdmissionControllers)(METHOD_INVOCATION_ARGUMENTS(SimpleName:admissionControllerNodes)))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeList))(VariableDeclarationFragment(SimpleName:stages)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:getElementsByTagName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stages))(SimpleName:getLength))))))(ExpressionStatement(MethodInvocation(SimpleName:createStages)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stages)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rtMonitorThread))(SimpleName:getChannel)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stages))(SimpleName:getLength))))))(ExpressionStatement(MethodInvocation(SimpleName:initialiseStages)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stages))))))))