(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:Factorization)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:n))(Block(IfStatement(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:p))(SimpleName:PRIMES)(Block(IfStatement(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:n))(Block(BreakStatement)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:exp)(NumberLiteral:0)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:%)(SimpleName:p))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:exp)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:n)(ASSIGNMENT_OPERATOR:/=)(SimpleName:p)))))(IfStatement(InfixExpression(SimpleName:exp)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:factors))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p)(SimpleName:exp))))))))(IfStatement(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:1))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:factors))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:n)(NumberLiteral:1))))))))))