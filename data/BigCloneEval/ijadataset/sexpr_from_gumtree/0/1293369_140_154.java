(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:testDigestionWithFilter)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sequenceString)(StringLiteral:<STR>)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Peptide))(VariableDeclarationFragment(SimpleName:sequence)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(QualifiedName:Peptide.Builder))(SimpleName:sequenceString)))(SimpleName:build))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Transformer))(SimpleType(SimpleName:DigestedPeptide))(SimpleType(SimpleName:Integer)))(VariableDeclarationFragment(SimpleName:digestLength)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:Transformer))(SimpleType(SimpleName:DigestedPeptide))(SimpleType(SimpleName:Integer)))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Integer))(SimpleName:transform)(SingleVariableDeclaration(SimpleType(SimpleName:DigestedPeptide))(SimpleName:digest))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digest))(SimpleName:length)))))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Condition))(SimpleType(SimpleName:DigestedPeptide)))(VariableDeclarationFragment(SimpleName:cond)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(ParameterizedType(SimpleType(QualifiedName:ConditionImpl.Builder))(SimpleType(SimpleName:DigestedPeptide))(SimpleType(SimpleName:Integer)))(NumberLiteral:8)))(SimpleName:accessor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:digestLength))))(SimpleName:operator)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:OperatorLowerThan))(SimpleName:newInstance)))))(SimpleName:build))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digester))(SimpleName:setCondition)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cond))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digester))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sequence))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Assert))(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:digester))(SimpleName:getDigests)))(SimpleName:size)))))))))