(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:mirrorSelectedVerticesVertically)(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:min)(QualifiedName:Double.MAX_VALUE))(VariableDeclarationFragment(SimpleName:max)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(QualifiedName:Double.MAX_VALUE))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Vertex))(SimpleName:vertex))(SimpleName:selected)(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vertex))(SimpleName:getX))))(ExpressionStatement(Assignment(SimpleName:max)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(SimpleName:max)(SimpleName:x)))))(ExpressionStatement(Assignment(SimpleName:min)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:min)(METHOD_INVOCATION_ARGUMENTS(SimpleName:min)(SimpleName:x)))))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:center)(InfixExpression(SimpleName:min)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:max)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:min)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Vertex))(SimpleName:vertex))(SimpleName:selected)(Block(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vertex))(SimpleName:getX))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:offset)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:center)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:x)))(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:vertex))(SimpleName:setX)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:offset)))))))(ExpressionStatement(MethodInvocation(SimpleName:triangulate)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))))))