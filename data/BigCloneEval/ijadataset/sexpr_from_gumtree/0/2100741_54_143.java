(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:createGraphic)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:graphicFormat))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:width))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:height))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:treeFileName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:graphicFileName))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:bufferedReader)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:treeFileName)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bufferedReader))(SimpleName:readLine))))(WhileStatement(InfixExpression(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bufferedReader))(SimpleName:readLine))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:bufferedReader))(SimpleName:close)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isNexus)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:toUpperCase)))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Reader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:treeFileName))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Object)))(VariableDeclarationFragment(SimpleName:settings)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashMap))(SimpleType(SimpleName:String))(SimpleType(SimpleName:Object))))))(VariableDeclarationStatement(SimpleType(SimpleName:ExtendedTreeViewer))(VariableDeclarationFragment(SimpleName:treeViewer)(ClassInstanceCreation(SimpleType(SimpleName:ExtendedTreeViewer)))))(VariableDeclarationStatement(SimpleType(SimpleName:ControlPalette))(VariableDeclarationFragment(SimpleName:controlPalette)(ClassInstanceCreation(SimpleType(SimpleName:BasicControlPalette))(NumberLiteral:200)(QualifiedName:BasicControlPalette.DisplayMode.ONLY_ONE_OPEN))))(VariableDeclarationStatement(SimpleType(SimpleName:FigTreePanel))(VariableDeclarationFragment(SimpleName:figTreePanel)(ClassInstanceCreation(SimpleType(SimpleName:FigTreePanel))(NullLiteral)(SimpleName:treeViewer)(SimpleName:controlPalette))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:controlPalette))(SimpleName:getSettings)(METHOD_INVOCATION_ARGUMENTS(SimpleName:settings))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Tree)))(VariableDeclarationFragment(SimpleName:trees)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:Tree))))))(IfStatement(SimpleName:isNexus)(Block(VariableDeclarationStatement(SimpleType(SimpleName:FigTreeNexusImporter))(VariableDeclarationFragment(SimpleName:importer)(ClassInstanceCreation(SimpleType(SimpleName:FigTreeNexusImporter))(SimpleName:reader))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trees))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:importer))(SimpleName:importNextTree)))))(WhileStatement(BooleanLiteral:true)(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:importer))(SimpleName:findNextBlock)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:importer))(SimpleName:getNextBlockName)))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:importer))(SimpleName:parseFigTreeBlock)(METHOD_INVOCATION_ARGUMENTS(SimpleName:settings)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:EOFException))(SimpleName:ex))(Block(BreakStatement)))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:NewickImporter))(VariableDeclarationFragment(SimpleName:importer)(ClassInstanceCreation(SimpleType(SimpleName:NewickImporter))(SimpleName:reader)(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trees))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:importer))(SimpleName:importNextTree)))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:trees))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ImportException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:treeViewer))(SimpleName:setTrees)(METHOD_INVOCATION_ARGUMENTS(SimpleName:trees))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:controlPalette))(SimpleName:setSettings)(METHOD_INVOCATION_ARGUMENTS(SimpleName:settings))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:treeViewer))(SimpleName:getContentPane)))(SimpleName:setSize)(METHOD_INVOCATION_ARGUMENTS(SimpleName:width)(SimpleName:height))))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:stream)))(IfStatement(InfixExpression(SimpleName:graphicFileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:graphicFileName)))))(Block(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(QualifiedName:System.out)))))(VariableDeclarationStatement(SimpleType(SimpleName:Properties))(VariableDeclarationFragment(SimpleName:p)(ClassInstanceCreation(SimpleType(SimpleName:Properties)))))(VariableDeclarationStatement(SimpleType(SimpleName:VectorGraphics))(VariableDeclarationFragment(SimpleName:g)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graphicFormat))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:graphicFileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:graphicFileName)))))))(ExpressionStatement(Assignment(SimpleName:g)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PDFGraphics2D))(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:width)(SimpleName:height))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graphicFormat))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:graphicFileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:graphicFileName)))))))(ExpressionStatement(Assignment(SimpleName:g)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PSGraphics2D))(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:width)(SimpleName:height))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graphicFormat))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:graphicFileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:graphicFileName)))))))(ExpressionStatement(Assignment(SimpleName:g)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:EMFGraphics2D))(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:width)(SimpleName:height))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graphicFormat))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:graphicFileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:graphicFileName)))))))(ExpressionStatement(Assignment(SimpleName:g)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SVGGraphics2D))(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:width)(SimpleName:height))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graphicFormat))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:graphicFileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:graphicFileName)))))))(ExpressionStatement(Assignment(SimpleName:g)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SWFGraphics2D))(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:width)(SimpleName:height))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:graphicFormat))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(IfStatement(InfixExpression(SimpleName:graphicFileName)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:graphicFileName)))))))(ExpressionStatement(Assignment(SimpleName:g)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GIFGraphics2D))(SimpleName:stream)(ClassInstanceCreation(SimpleType(SimpleName:Dimension))(SimpleName:width)(SimpleName:height))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(StringLiteral:<STR>))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:setProperties)(METHOD_INVOCATION_ARGUMENTS(SimpleName:p))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:startExport)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:treeViewer))(SimpleName:getContentPane)))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:g))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:endExport))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ImportException))(SimpleName:ie))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ie))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ioe)))))))))))