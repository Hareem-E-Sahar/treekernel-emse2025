(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:copyQualityModelsToFramework)(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(MethodInvocation(SimpleName:deleteQualityModelsFromFramework)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:fwRepo)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getFrameworkQualityModelRepoDirectory)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fwRepo))(SimpleName:isDirectory)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fwRepo))(SimpleName:canWrite))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fwRepo))(SimpleName:getAbsolutePath))))))(IfStatement(InfixExpression(MethodInvocation(SimpleName:getQualityModelDir))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:qualityModelDir)(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(SimpleName:getQualityModelDir)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qualityModelDir))(SimpleName:isDirectory)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getQualityModelDir))(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:model))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qualityModelDir))(SimpleName:listFiles))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:isDirectory))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AuxFiles))(SimpleName:doesDirContainFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fwRepo)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:getName))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:getName))(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:modelInRepo)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fwRepo))(SimpleName:getAbsoluteFile))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelInRepo))(SimpleName:mkdir)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:modelFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:model))(SimpleName:listFiles))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelFile))(SimpleName:isDirectory)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AuxFiles))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modelFile)(SimpleName:modelInRepo)))))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:modelFlag)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelInRepo))(SimpleName:getAbsoluteFile))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:File.separator)(SimpleName:FLAG_FILE_NAME)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modelFlag))(SimpleName:createNewFile)))))))))))))