(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:doBinarySearch)(Block(ExpressionStatement(MethodInvocation(SimpleName:callGC)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:gCount)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:loops)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:dLoopCount)(InfixExpression(InfixExpression(SimpleName:opt_loopCount)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:3000))(INFIX_EXPRESSION_OPERATOR:/)(ParenthesizedExpression(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:tests.length)))(INFIX_EXPRESSION_OPERATOR:/)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:10))))(INFIX_EXPRESSION_OPERATOR:*)(QualifiedName:tests.length))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:startTime)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:elapsedTime)(NumberLiteral:0)))(IfStatement(SimpleName:opt_usekeys)(Block(ExpressionStatement(Assignment(SimpleName:dLoopCount)(ASSIGNMENT_OPERATOR:*=)(NumberLiteral:5)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:adj_loopCount)(CastExpression(PrimitiveType:int)(SimpleName:dLoopCount))))(IfStatement(InfixExpression(SimpleName:adj_loopCount)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(Block(ExpressionStatement(Assignment(SimpleName:adj_loopCount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))))(ForStatement(Block(IfStatement(SimpleName:opt_strcmp)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:startTime)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ForStatement(Assignment(SimpleName:loops)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:loops)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:adj_loopCount))(PostfixExpression(SimpleName:loops)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tests.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hi)(InfixExpression(QualifiedName:tests.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:guess)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ForStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newGuess)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lo)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:newGuess)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:guess))(Block(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:guess)(ASSIGNMENT_OPERATOR:=)(SimpleName:newGuess)))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:tests)(SimpleName:j)))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:guess))))))(ExpressionStatement(PostfixExpression(SimpleName:gCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess))))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess)))))))))))(ExpressionStatement(Assignment(SimpleName:elapsedTime)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:startTime))))(BreakStatement)))(IfStatement(SimpleName:opt_strcmpCPO)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:startTime)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ForStatement(Assignment(SimpleName:loops)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:loops)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:adj_loopCount))(PostfixExpression(SimpleName:loops)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tests.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hi)(InfixExpression(QualifiedName:tests.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:guess)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ForStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newGuess)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lo)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:newGuess)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:guess))(Block(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:guess)(ASSIGNMENT_OPERATOR:=)(SimpleName:newGuess)))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:com.ibm.icu.text.Normalizer))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:j))(ArrayAccess(SimpleName:tests)(SimpleName:guess))(QualifiedName:Normalizer.COMPARE_CODE_POINT_ORDER)))))(ExpressionStatement(PostfixExpression(SimpleName:gCount)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess))))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess)))))))))))(ExpressionStatement(Assignment(SimpleName:elapsedTime)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:startTime))))(BreakStatement)))(IfStatement(SimpleName:opt_icu)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:startTime)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ForStatement(Assignment(SimpleName:loops)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:loops)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:adj_loopCount))(PostfixExpression(SimpleName:loops)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tests.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hi)(InfixExpression(QualifiedName:tests.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:guess)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ForStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newGuess)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lo)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:newGuess)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:guess))(Block(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:guess)(ASSIGNMENT_OPERATOR:=)(SimpleName:newGuess)))(IfStatement(SimpleName:opt_usekeys)(Block(VariableDeclarationStatement(SimpleType(QualifiedName:com.ibm.icu.text.CollationKey))(VariableDeclarationFragment(SimpleName:sortKey1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:icuCol))(SimpleName:getCollationKey)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:j))))))(VariableDeclarationStatement(SimpleType(QualifiedName:com.ibm.icu.text.CollationKey))(VariableDeclarationFragment(SimpleName:sortKey2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:icuCol))(SimpleName:getCollationKey)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:guess))))))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sortKey1))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sortKey2)))))(ExpressionStatement(PostfixExpression(SimpleName:gCount)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:icuCol))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:j))(ArrayAccess(SimpleName:tests)(SimpleName:guess))))))(ExpressionStatement(PostfixExpression(SimpleName:gCount)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess))))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess)))))))))))(ExpressionStatement(Assignment(SimpleName:elapsedTime)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:startTime))))(BreakStatement)))(IfStatement(SimpleName:opt_java)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:startTime)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ForStatement(Assignment(SimpleName:loops)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0))(InfixExpression(SimpleName:loops)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:adj_loopCount))(PostfixExpression(SimpleName:loops)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:tests.length))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hi)(InfixExpression(QualifiedName:tests.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:guess)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ForStatement(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:newGuess)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hi)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:lo)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:newGuess)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:guess))(Block(BreakStatement)))(ExpressionStatement(Assignment(SimpleName:guess)(ASSIGNMENT_OPERATOR:=)(SimpleName:newGuess)))(IfStatement(SimpleName:opt_usekeys)(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.text.CollationKey))(VariableDeclarationFragment(SimpleName:sortKey1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaCol))(SimpleName:getCollationKey)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:j))))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.text.CollationKey))(VariableDeclarationFragment(SimpleName:sortKey2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaCol))(SimpleName:getCollationKey)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:guess))))))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sortKey1))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sortKey2)))))(ExpressionStatement(PostfixExpression(SimpleName:gCount)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:javaCol))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:tests)(SimpleName:j))(ArrayAccess(SimpleName:tests)(SimpleName:guess))))))(ExpressionStatement(PostfixExpression(SimpleName:gCount)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(BreakStatement)))(IfStatement(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess))))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(SimpleName:guess)))))))))))(ExpressionStatement(Assignment(SimpleName:elapsedTime)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:startTime))))(BreakStatement)))(BreakStatement)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ns)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(InfixExpression(CastExpression(PrimitiveType:float)(ParenthesizedExpression(NumberLiteral:1000000)))(INFIX_EXPRESSION_OPERATOR:*)(CastExpression(PrimitiveType:float)(SimpleName:elapsedTime)))(INFIX_EXPRESSION_OPERATOR:/)(CastExpression(PrimitiveType:float)(SimpleName:gCount)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:opt_terse))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:gCount)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:gCount)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:loops))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ns))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ns))))))))))