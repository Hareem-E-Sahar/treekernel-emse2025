(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:deleteRecursive)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:fileName))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:tryOnly))(SimpleType(SimpleName:SQLException))(Block(ExpressionStatement(Assignment(SimpleName:fileName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:translateFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:isDirectory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:list)(MethodInvocation(SimpleName:listFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:list)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:list.length)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(SimpleName:deleteRecursive)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:list)(SimpleName:i))(SimpleName:tryOnly))))))))(IfStatement(SimpleName:tryOnly)(Block(ExpressionStatement(MethodInvocation(SimpleName:tryDelete)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:delete)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fileName))))))))))