(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:boolean)(SimpleName:extract)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:f))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:folder))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Enumeration))(VariableDeclarationFragment(SimpleName:entries)))(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zipFile)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:zipFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ZipFile))(SimpleName:f))))(ExpressionStatement(Assignment(SimpleName:entries)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getEntries))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipArchiveEntry))(VariableDeclarationFragment(SimpleName:entry)(CastExpression(SimpleType(SimpleName:ZipArchiveEntry))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:nextElement)))))(IfStatement(InfixExpression(SimpleName:entry)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ContinueStatement))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(InfixExpression(SimpleName:folder)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:getName)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entry))(SimpleName:isDirectory)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:parent)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destFile))(SimpleName:getParent))))(IfStatement(InfixExpression(SimpleName:parent)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:parentFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:parent))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentFile))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parentFile))(SimpleName:mkdirs)))))))(ExpressionStatement(MethodInvocation(SimpleName:copyInputStream)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))(ClassInstanceCreation(SimpleType(SimpleName:BufferedOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destFile))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFile))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ioe))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:errMsg))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:getMessage))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Malgn))(SimpleName:errorLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ioe))(SimpleName:getMessage))))))(ReturnStatement(BooleanLiteral:false)))))(ReturnStatement(BooleanLiteral:true))))))