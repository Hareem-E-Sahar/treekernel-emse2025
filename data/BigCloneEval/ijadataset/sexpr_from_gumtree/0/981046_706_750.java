(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:fileCopy)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:src))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:dest))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IOException))(VariableDeclarationFragment(SimpleName:xforward)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fcin)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:fcout)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:src))))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:dest))))(ExpressionStatement(Assignment(SimpleName:fcin)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:getChannel))))(ExpressionStatement(Assignment(SimpleName:fcout)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:getChannel))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:MB32)(InfixExpression(NumberLiteral:32)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1024)(NumberLiteral:1024))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcin))(SimpleName:size))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:position)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:position)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(Block(ExpressionStatement(Assignment(SimpleName:position)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcin))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:position)(SimpleName:MB32)(SimpleName:fcout))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:xio))(Block(ExpressionStatement(Assignment(SimpleName:xforward)(ASSIGNMENT_OPERATOR:=)(SimpleName:xio)))))(Block(IfStatement(InfixExpression(SimpleName:fis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:xio))(Block))))(IfStatement(InfixExpression(SimpleName:fos)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:xio))(Block))))(IfStatement(InfixExpression(InfixExpression(SimpleName:fcin)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcin))(SimpleName:isOpen)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcin))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fcin)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:xio))(Block))))(IfStatement(InfixExpression(InfixExpression(SimpleName:fcout)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcout))(SimpleName:isOpen)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fcout))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:fcout)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:xio))(Block))))))(IfStatement(InfixExpression(SimpleName:xforward)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ThrowStatement(SimpleName:xforward))))))))