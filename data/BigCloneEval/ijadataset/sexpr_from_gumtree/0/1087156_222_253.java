(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:mouseClicked)(SingleVariableDeclaration(SimpleType(SimpleName:MouseEvent))(SimpleName:e))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getClickCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(Block(IfStatement(InfixExpression(SimpleName:scanOn)(INFIX_EXPRESSION_OPERATOR:==)(BooleanLiteral:false))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:scanValue)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Double))(SimpleName:parseDouble)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:valueText))(SimpleName:getText)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NumberFormatException))(SimpleName:exc))(Block)))(ExpressionStatement(MethodInvocation(SimpleName:setCurrentValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:scanValue))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:containersCreated)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:measuredValuesV))(SimpleName:size))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MeasuredValue))(VariableDeclarationFragment(SimpleName:mv_tmp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:measuredValuesV))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:mv_tmp)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mv_tmp))(SimpleName:getNumberOfDataContainers))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mv_tmp))(SimpleName:createNewDataContainer)))(ExpressionStatement(Assignment(SimpleName:containersCreated)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(IfStatement(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanVariable))(SimpleName:getChannelRB))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mv_tmp))(SimpleName:getNumberOfDataContainersRB))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mv_tmp))(SimpleName:createNewDataContainerRB)))))))))(IfStatement(SimpleName:containersCreated)(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newSetOfDataListenersV))(SimpleName:size))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:newSetOfDataListenersV))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i))))(SimpleName:actionPerformed)(METHOD_INVOCATION_ARGUMENTS(SimpleName:newSetOfDataAction))))))))(ExpressionStatement(MethodInvocation(SimpleName:measure)(METHOD_INVOCATION_ARGUMENTS(SimpleName:scanValue)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Toolkit))(SimpleName:getDefaultToolkit)))(SimpleName:beep)))(ExpressionStatement(MethodInvocation(SimpleName:setCurrentValue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:scanValue))))))))))))