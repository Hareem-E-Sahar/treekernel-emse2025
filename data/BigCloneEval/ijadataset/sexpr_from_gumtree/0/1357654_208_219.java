(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:String))(SimpleName:fillVelocityTemplate)(SingleVariableDeclaration(SimpleType(SimpleName:Reader))(SimpleName:reader))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:StringWriter)))))(VariableDeclarationStatement(SimpleType(SimpleName:VelocityContext))(VariableDeclarationFragment(SimpleName:ctx)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:velocityContextProvider))(SimpleName:getVelocityContext))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isOk)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Velocity))(SimpleName:evaluate)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ctx)(SimpleName:writer)(SimpleName:VELOCITY_LOG4J_APPENDER_NAME)(SimpleName:reader)))))(ExpressionStatement(MethodInvocation(SimpleName:isTrue)(METHOD_INVOCATION_ARGUMENTS(SimpleName:isOk))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:close)))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:toString))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(MethodInvocation(SimpleName:createRuntimeException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e)))))))))))