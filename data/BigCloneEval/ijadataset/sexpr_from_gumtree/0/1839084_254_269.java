(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:int)(SimpleName:dichotoLookAfter)(SingleVariableDeclaration(PrimitiveType:long)(SimpleName:key))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:g))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:d))(Block(IfStatement(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:d))(Block(IfStatement(InfixExpression(SimpleName:key)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(FieldAccess(ThisExpression)(SimpleName:keys))(SimpleName:g)))(Block(ReturnStatement(SimpleName:g))))(IfStatement(InfixExpression(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:key)(INFIX_EXPRESSION_OPERATOR:==)(ArrayAccess(SimpleName:keys)(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ReturnStatement(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(ReturnStatement(SimpleName:g))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:m)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:g)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(IfStatement(InfixExpression(SimpleName:key)(INFIX_EXPRESSION_OPERATOR:<=)(ArrayAccess(SimpleName:keys)(SimpleName:m)))(Block(ReturnStatement(MethodInvocation(SimpleName:dichotoLookAfter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(SimpleName:g)(SimpleName:m))))))(ReturnStatement(MethodInvocation(SimpleName:dichotoLookAfter)(METHOD_INVOCATION_ARGUMENTS(SimpleName:key)(InfixExpression(SimpleName:m)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:d))))))))