(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:_commit)(SingleVariableDeclaration(Modifier:final)(PrimitiveType:boolean)(SimpleName:finishChosen))(SimpleType(SimpleName:CommitStepException))(Block(IfStatement(SimpleName:finishChosen)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Runnable))(VariableDeclarationFragment(SimpleName:runnableProcess)(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ProgressIndicator))(VariableDeclarationFragment(SimpleName:progressIndicator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProgressManager))(SimpleName:getInstance)))(SimpleName:getProgressIndicator))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:zipFileName)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipFileNameField))(SimpleName:getText))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String))))(VariableDeclarationFragment(SimpleName:rawFilesToZip)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:QuickZipHelper))(SimpleName:getFilesStructureToZip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myProject)(SimpleName:mySelectedFragments)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:totalFilesAndFolders)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(SimpleName:loopData))(SimpleName:rawFilesToZip)(Block(ExpressionStatement(Assignment(SimpleName:totalFilesAndFolders)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loopData))(SimpleName:size))))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:outputStream)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:zipFileName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:setMethod)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:ZipOutputStream.DEFLATED))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:setComment)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:filesZipped)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:String)))(SimpleName:loopData))(SimpleName:rawFilesToZip)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:firstEntryProcessed)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:prefixLengthToSkip)(NumberLiteral:0)))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:loopFileName))(SimpleName:loopData)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progressIndicator))(SimpleName:setFraction)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(InfixExpression(NumberLiteral:1.0)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:filesZipped)))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:totalFilesAndFolders)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:progressIndicator))(SimpleName:setText2)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:QuickZipBundle))(SimpleName:message)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:loopFileName))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:firstEntryProcessed))(Block(ExpressionStatement(Assignment(SimpleName:prefixLengthToSkip)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loopFileName))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(ExpressionStatement(Assignment(SimpleName:firstEntryProcessed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:loopFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:loopFileName))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loopFile))(SimpleName:isFile))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:zipEntryPath)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loopFileName))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:prefixLengthToSkip)))))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:zipEntryPath)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:loopInputStream)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:loopFile))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:len)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:len)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loopInputStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:len))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loopInputStream))(SimpleName:close)))))))(ExpressionStatement(PostfixExpression(SimpleName:filesZipped)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outputStream))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Messages))(SimpleName:showErrorDialog)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myProject)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage))(StringLiteral:<STR>)))))))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:progressTitle)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:QuickZipBundle))(SimpleName:message)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ProgressManager))(SimpleName:getInstance)))(SimpleName:runProcessWithProgressSynchronously)(METHOD_INVOCATION_ARGUMENTS(SimpleName:runnableProcess)(SimpleName:progressTitle)(BooleanLiteral:false)(SimpleName:myProject))))))))))