(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:compile)(SingleVariableDeclaration(SimpleType(SimpleName:CompilerContext))(SimpleName:context))(SimpleType(SimpleName:CompileException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Lolcode))(VariableDeclarationFragment(SimpleName:compiler)(ClassInstanceCreation(SimpleType(SimpleName:Lolcode)))))(VariableDeclarationStatement(SimpleType(SimpleName:StringWriter))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:StringWriter)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:input)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getFile)))(SimpleName:getContents))))(WhileStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:available))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:read)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:compiler))(SimpleName:compile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:toString))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getFile)))(SimpleName:getRawLocation)))(SimpleName:removeFileExtension)))(SimpleName:addFileExtension)(METHOD_INVOCATION_ARGUMENTS(SimpleName:COMPILED_EXTENSION))))(SimpleName:toFile))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:createNewFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:compiler))(SimpleName:serialize)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getFile)))(SimpleName:getProject)))(SimpleName:refreshLocal)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IResource.DEPTH_INFINITE)(NullLiteral))))(VariableDeclarationStatement(SimpleType(SimpleName:IFile))(VariableDeclarationFragment(SimpleName:compiledFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getFile)))(SimpleName:getProject)))(SimpleName:getFile)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getFile)))(SimpleName:getProjectRelativePath)))(SimpleName:removeFileExtension)))(SimpleName:addFileExtension)(METHOD_INVOCATION_ARGUMENTS(SimpleName:COMPILED_EXTENSION)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:compiledFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:compiledFile))(SimpleName:setDerived)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:addError)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:compiler))(SimpleName:getErrorLine))(NumberLiteral:0)(StringLiteral:<STR>)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:CompileException))(SimpleName:e))))))))))