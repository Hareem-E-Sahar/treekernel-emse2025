(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:runGrey)(SingleVariableDeclaration(SimpleType(SimpleName:SegmentImageData))(SimpleName:sourceData))(SingleVariableDeclaration(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(SimpleName:dest))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:sourceData)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:sourceData.data)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SWT))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SWT.ERROR_CANNOT_BE_ZERO))))(ReturnStatement(BooleanLiteral:false))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(InfixExpression(QualifiedName:sourceData.bpp)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:3))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(QualifiedName:sourceData.bpp)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:4)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SWT))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:SWT.ERROR_INVALID_ARGUMENT))))(ReturnStatement(BooleanLiteral:false))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:scanLineEnd)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:step)(QualifiedName:sourceData.bpp)))(IfStatement(InfixExpression(QualifiedName:sourceData.pad)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:scanLineEnd)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(QualifiedName:sourceData.start)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:sourceData.scanLineLength))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:step))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:gs)(QualifiedName:sourceData.greenShift)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:bs)(QualifiedName:sourceData.blueShift)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:rs)(QualifiedName:sourceData.redShift)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:r))(VariableDeclarationFragment(SimpleName:g))(VariableDeclarationFragment(SimpleName:b))(VariableDeclarationFragment(SimpleName:gray)))(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:source)(QualifiedName:sourceData.data)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:length)(InfixExpression(QualifiedName:sourceData.length)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:sourceData.pad))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(QualifiedName:sourceData.start)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:length))(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(SimpleName:step))(Block(ExpressionStatement(Assignment(SimpleName:b)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:source)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:rs)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(ExpressionStatement(Assignment(SimpleName:g)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:source)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:gs)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(ExpressionStatement(Assignment(SimpleName:r)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:source)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:bs)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(ExpressionStatement(Assignment(SimpleName:gray)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(ArrayAccess(SimpleName:greenGrey)(ParenthesizedExpression(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff)))))(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ArrayAccess(SimpleName:blueGrey)(ParenthesizedExpression(InfixExpression(SimpleName:g)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff)))))(ParenthesizedExpression(ArrayAccess(SimpleName:redGrey)(ParenthesizedExpression(InfixExpression(SimpleName:r)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff)))))))))(ExpressionStatement(Assignment(SimpleName:gray)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(InfixExpression(SimpleName:gray)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:255))(NumberLiteral:255)(SimpleName:gray))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:dest)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(Assignment(ArrayAccess(SimpleName:dest)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(Assignment(ArrayAccess(SimpleName:dest)(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(SimpleName:gray))))))(IfStatement(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:scanLineEnd))(Block(ExpressionStatement(Assignment(SimpleName:scanLineEnd)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(QualifiedName:sourceData.scanLineLength)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:sourceData.pad))))(ExpressionStatement(Assignment(SimpleName:i)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:sourceData.pad)))))))(ReturnStatement(BooleanLiteral:true))))))