(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:writeTrack)(SingleVariableDeclaration(SimpleType(SimpleName:TGTrack))(SimpleName:track))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:header)(NumberLiteral:0)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:isSolo))(Block(ExpressionStatement(Assignment(SimpleName:header)(ASSIGNMENT_OPERATOR:|=)(SimpleName:TRACK_SOLO)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:isMute))(Block(ExpressionStatement(Assignment(SimpleName:header)(ASSIGNMENT_OPERATOR:|=)(SimpleName:TRACK_MUTE)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getLyrics)))(SimpleName:isEmpty)))(Block(ExpressionStatement(Assignment(SimpleName:header)(ASSIGNMENT_OPERATOR:|=)(SimpleName:TRACK_LYRICS)))))(ExpressionStatement(MethodInvocation(SimpleName:writeHeader)(METHOD_INVOCATION_ARGUMENTS(SimpleName:header))))(ExpressionStatement(MethodInvocation(SimpleName:writeUnsignedByteString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(SimpleName:writeChannel)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getChannel)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getSong))(SimpleName:track))))))(VariableDeclarationStatement(SimpleType(SimpleName:TGMeasure))(VariableDeclarationFragment(SimpleName:lastMeasure)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:measures)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getMeasures))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:measures))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:TGMeasure))(VariableDeclarationFragment(SimpleName:measure)(CastExpression(SimpleType(SimpleName:TGMeasure))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:measures))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(SimpleName:writeMeasure)(METHOD_INVOCATION_ARGUMENTS(SimpleName:measure)(SimpleName:lastMeasure))))(ExpressionStatement(Assignment(SimpleName:lastMeasure)(ASSIGNMENT_OPERATOR:=)(SimpleName:measure)))))(ExpressionStatement(MethodInvocation(SimpleName:writeByte)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getStrings)))(SimpleName:size)))))(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:stringIt)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getStrings)))(SimpleName:iterator))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stringIt))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:TGString))(VariableDeclarationFragment(SimpleName:string)(CastExpression(SimpleType(SimpleName:TGString))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stringIt))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(SimpleName:writeInstrumentString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:string))))))(ExpressionStatement(MethodInvocation(SimpleName:writeByte)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getOffset))(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:TGTrack.MIN_OFFSET)))))(ExpressionStatement(MethodInvocation(SimpleName:writeRGBColor)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getColor)))))(IfStatement(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:header)(INFIX_EXPRESSION_OPERATOR:&)(SimpleName:TRACK_LYRICS)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(Block(ExpressionStatement(MethodInvocation(SimpleName:writeLyrics)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:track))(SimpleName:getLyrics)))))))))))