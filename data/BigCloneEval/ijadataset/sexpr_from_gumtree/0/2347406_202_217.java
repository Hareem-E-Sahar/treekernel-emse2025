(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:Node))(SimpleName:move)(SingleVariableDeclaration(SimpleType(SimpleName:Node))(SimpleName:destNode))(SimpleType(SimpleName:MoveException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:SshNode))(VariableDeclarationFragment(SimpleName:dest)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InstanceofExpression(SimpleName:destNode)(SimpleType(SimpleName:SshNode)))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MoveException))(ThisExpression)(SimpleName:destNode)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:dest)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SshNode))(SimpleName:destNode))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getChannel)))(SimpleName:rename)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:escape)(METHOD_INVOCATION_ARGUMENTS(SimpleName:slashPath)))(MethodInvocation(SimpleName:escape)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:dest.slashPath)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SftpException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MoveException))(ThisExpression)(SimpleName:dest)(StringLiteral:<STR>)(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:JSchException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MoveException))(ThisExpression)(SimpleName:dest)(StringLiteral:<STR>)(SimpleName:e))))))(ReturnStatement(SimpleName:dest))))))