(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:String))(SimpleName:fetchInterproNameFromInterproNameHandler)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:id))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:interproHandler)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:stream)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:stream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(ExpressionStatement(Assignment(SimpleName:interproHandler)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InterproNameHandler))(SimpleName:stream)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:interproHandler)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:InterproNameHandler))(MethodInvocation(SimpleName:getFileByResources)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(TypeLiteral(SimpleType(SimpleName:InterproNameHandler)))))))))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:interproHandler))(SimpleName:getNameById)(METHOD_INVOCATION_ARGUMENTS(SimpleName:id)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NameNotFoundException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:id)(StringLiteral:<STR>)))))(ReturnStatement(NullLiteral)))))))))