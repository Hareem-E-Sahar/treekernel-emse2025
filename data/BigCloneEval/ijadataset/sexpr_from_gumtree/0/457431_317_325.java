(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:binarySearch)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:keyword))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:beg)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:end)(InfixExpression(QualifiedName:keys.length)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(InfixExpression(SimpleName:beg)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:end))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:beg)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:end)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:res)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ignoreCaseComparator))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:keys)(SimpleName:mid))(SimpleName:keyword)))))(IfStatement(InfixExpression(SimpleName:res)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:beg)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(IfStatement(InfixExpression(SimpleName:res)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ReturnStatement(SimpleName:mid))))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:beg)))))))