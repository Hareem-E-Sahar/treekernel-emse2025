(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:setup)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Tree))(Dimension))(SimpleName:trees))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:indicatorParameter))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:popSizes))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:logSpace))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:mid))(Block(IfStatement(SimpleName:dirty)(Block(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:VariableDemographicModel.Type.EXPONENTIAL))(ExpressionStatement(Assignment(SimpleName:logSpace)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:any)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nt)(NumberLiteral:0)))(InfixExpression(SimpleName:nt)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:ti.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:nt))(Block(IfStatement(MethodInvocation(SimpleName:setTreeTimes)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nt)(SimpleName:trees)))(Block(ExpressionStatement(Assignment(SimpleName:any)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nd)(QualifiedName:indicatorParameter.length)))(AssertStatement(InfixExpression(SimpleName:nd)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(QualifiedName:alltimes.length)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:VariableDemographicModel.Type.STEPWISE))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))(NumberLiteral:0)))))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nd)(StringLiteral:<STR>)(QualifiedName:alltimes.length)(StringLiteral:<STR>)(SimpleName:type)))(IfStatement(SimpleName:any)(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:inds)(ArrayCreation(ArrayType(PrimitiveType:int)(Dimension(QualifiedName:ttimes.length))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:alltimes.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:k))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(WhileStatement(InfixExpression(ArrayAccess(SimpleName:inds)(SimpleName:j))(INFIX_EXPRESSION_OPERATOR:==)(FieldAccess(ArrayAccess(SimpleName:ttimes)(SimpleName:j))(SimpleName:length)))(Block(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:j)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:inds.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:l))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:inds)(SimpleName:l))(INFIX_EXPRESSION_OPERATOR:<)(FieldAccess(ArrayAccess(SimpleName:ttimes)(SimpleName:l))(SimpleName:length)))(Block(IfStatement(InfixExpression(ArrayAccess(ArrayAccess(SimpleName:ttimes)(SimpleName:l))(ArrayAccess(SimpleName:inds)(SimpleName:l)))(INFIX_EXPRESSION_OPERATOR:<)(ArrayAccess(ArrayAccess(SimpleName:ttimes)(SimpleName:j))(ArrayAccess(SimpleName:inds)(SimpleName:j))))(Block(ExpressionStatement(Assignment(SimpleName:j)(ASSIGNMENT_OPERATOR:=)(SimpleName:l)))))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:alltimes)(SimpleName:k))(ASSIGNMENT_OPERATOR:=)(ArrayAccess(ArrayAccess(SimpleName:ttimes)(SimpleName:j))(ArrayAccess(SimpleName:inds)(SimpleName:j)))))(ExpressionStatement(PostfixExpression(ArrayAccess(SimpleName:inds)(SimpleName:j))(POSTFIX_EXPRESSION_OPERATOR:++)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:tot)(NumberLiteral:1)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nd))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:k))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:indicatorParameter)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:tot)))))))(ExpressionStatement(Assignment(SimpleName:times)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(InfixExpression(SimpleName:tot)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(SimpleName:values)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(SimpleName:tot))))))(ExpressionStatement(Assignment(SimpleName:intervals)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(InfixExpression(SimpleName:tot)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:times)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0.0)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:times)(SimpleName:tot))(ASSIGNMENT_OPERATOR:=)(QualifiedName:Double.POSITIVE_INFINITY)))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:xx)(InfixExpression(InfixExpression(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:VariableDemographicModel.Type.LINEAR))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:logSpace)))(INFIX_EXPRESSION_OPERATOR:&&)(BooleanLiteral:false))))(IfStatement(SimpleName:xx)(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:a)(SimpleName:alltimes)))(IfStatement(SimpleName:mid)(Block(ExpressionStatement(Assignment(SimpleName:a)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(QualifiedName:alltimes.length))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:a.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:k))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:a)(SimpleName:k))(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:alltimes)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ArrayAccess(SimpleName:alltimes)(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(NumberLiteral:0)))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))))))))(ExpressionStatement(MethodInvocation(SimpleName:bestLinearFit)(METHOD_INVOCATION_ARGUMENTS(SimpleName:a)(SimpleName:popSizes)(SimpleName:indicatorParameter)(SimpleName:times)(SimpleName:values))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(NumberLiteral:0)))(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:intervals.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:n))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:intervals)(SimpleName:n))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:times)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:times)(SimpleName:n)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(NumberLiteral:0)))(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:values.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:n))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:values)(SimpleName:n))(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:values)(SimpleName:n))(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1e-30)))))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:xx))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:values)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(SimpleName:logSpace)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:exp)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:popSizes)(NumberLiteral:0))))(ArrayAccess(SimpleName:popSizes)(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:n)(NumberLiteral:0)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(NumberLiteral:0)))(InfixExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:nd))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:tot)))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:k))(Block(IfStatement(InfixExpression(ArrayAccess(SimpleName:indicatorParameter)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:times)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(SimpleName:mid)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:alltimes)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(ArrayAccess(SimpleName:alltimes)(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(NumberLiteral:0)))))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))(ArrayAccess(SimpleName:alltimes)(SimpleName:k)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:values)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(SimpleName:logSpace)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:exp)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:popSizes)(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(ArrayAccess(SimpleName:popSizes)(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:intervals)(SimpleName:n))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:times)(InfixExpression(SimpleName:n)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:-)(ArrayAccess(SimpleName:times)(SimpleName:n)))))(ExpressionStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:n)))))))))(ExpressionStatement(Assignment(SimpleName:dirty)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))))))))