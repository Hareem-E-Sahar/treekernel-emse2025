(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Test))(Modifier:public)(PrimitiveType:void)(SimpleName:testConcurrentReadWrite_20)(SimpleType(SimpleName:InterruptedException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FlowWindow))(VariableDeclarationFragment(SimpleName:fw)(ClassInstanceCreation(SimpleType(SimpleName:FlowWindow))(NumberLiteral:20)(NumberLiteral:64))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(SimpleName:doRead)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fw)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:setName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:writer)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(ClassInstanceCreation(SimpleType(SimpleName:Runnable))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(MethodInvocation(SimpleName:doWrite)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fw)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:setName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:start)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:start)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)(NumberLiteral:0)))(WhileStatement(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:write)(InfixExpression(SimpleName:c)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:10)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1000))))(ExpressionStatement(PostfixExpression(SimpleName:c)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(SimpleName:assertFalse)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:fail))))))))