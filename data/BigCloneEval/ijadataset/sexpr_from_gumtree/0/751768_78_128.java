(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(Modifier:synchronized)(PrimitiveType:int)(SimpleName:index)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:IndexPolicy))(SimpleName:policy))(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Iterator))(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Document))))(SimpleName:docsIt))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:secondaryId))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:boolean)(SimpleName:deleteExisting))(Block(IfStatement(InfixExpression(SimpleName:policy)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:IndexWriter))(VariableDeclarationFragment(SimpleName:writer)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:IndexReader))(VariableDeclarationFragment(SimpleName:reader)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:IndexSearcher))(VariableDeclarationFragment(SimpleName:searcher)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Analyzer))(VariableDeclarationFragment(SimpleName:analyzer)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Timer))(VariableDeclarationFragment(SimpleName:timer)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Metric))(SimpleName:newTimer)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:succeeded)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(NumberLiteral:0)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Tuple))(VariableDeclarationFragment(SimpleName:tuple)(MethodInvocation(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:policy)))))(ExpressionStatement(Assignment(SimpleName:writer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tuple))(SimpleName:first))))(ExpressionStatement(Assignment(SimpleName:reader)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tuple))(SimpleName:second))))(ExpressionStatement(Assignment(SimpleName:searcher)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tuple))(SimpleName:third))))(ExpressionStatement(Assignment(SimpleName:analyzer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writer))(SimpleName:getAnalyzer))))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:docsIt))(SimpleName:hasNext))(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Document)))(VariableDeclarationFragment(SimpleName:docs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:docsIt))(SimpleName:next))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Document))(SimpleName:doc))(SimpleName:docs)(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(SimpleName:index)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:count)(POSTFIX_EXPRESSION_OPERATOR:++))(SimpleName:writer)(SimpleName:policy)(SimpleName:doc)(SimpleName:secondaryId)(SimpleName:searcher)(SimpleName:deleteExisting))))(ExpressionStatement(PostfixExpression(SimpleName:succeeded)(POSTFIX_EXPRESSION_OPERATOR:++)))(IfStatement(InfixExpression(InfixExpression(SimpleName:succeeded)(INFIX_EXPRESSION_OPERATOR:%)(NumberLiteral:1000))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:lapse)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:succeeded)(StringLiteral:<STR>)(SimpleName:analyzer))))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:doc))(SimpleName:e))))))))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:timer))(SimpleName:stop)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:succeeded)(StringLiteral:<STR>)(SimpleName:count)(StringLiteral:<STR>)(SimpleName:analyzer)))))(ExpressionStatement(MethodInvocation(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:writer)(SimpleName:reader)(SimpleName:searcher))))(TryStatement(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:policy))(SimpleName:isAddToDictionary))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SimilarityHelper))(SimpleName:getInstance)))(SimpleName:saveTrainingSpellChecker)(METHOD_INVOCATION_ARGUMENTS(SimpleName:indexName)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CacheFlusher))(SimpleName:getInstance)))(SimpleName:flushCaches)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:isInfoEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:succeeded)(StringLiteral:<STR>)(SimpleName:count)(StringLiteral:<STR>)(SimpleName:analyzer)))))))(ReturnStatement(SimpleName:succeeded))))))