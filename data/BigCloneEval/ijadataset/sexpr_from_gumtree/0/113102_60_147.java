(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:bitstream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:orchestra)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:score)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:output)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nOutputFormatIndex)(SimpleName:DEFAULT_FORMAT)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bLineOutput)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)))(VariableDeclarationStatement(SimpleType(SimpleName:Getopt))(VariableDeclarationFragment(SimpleName:g)(ClassInstanceCreation(SimpleType(SimpleName:Getopt))(StringLiteral:<STR>)(SimpleName:args)(StringLiteral:<STR>))))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getopt))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(SwitchStatement(SimpleName:c)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(SimpleName:printVersionAndExit)))(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:bitstream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:orchestra)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:score)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg)))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(QualifiedName:System.out)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:bLineOutput)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg)))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nNewOutputFormatIndex)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:SUPPORTED_FORMATS.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:SUPPORTED_FORMATS)(SimpleName:i)))(SimpleName:getName)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))(Block(ExpressionStatement(Assignment(SimpleName:nNewOutputFormatIndex)(ASSIGNMENT_OPERATOR:=)(SimpleName:i)))))))(IfStatement(InfixExpression(SimpleName:nNewOutputFormatIndex)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:nOutputFormatIndex)(ASSIGNMENT_OPERATOR:=)(SimpleName:nNewOutputFormatIndex))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))(StringLiteral:<STR>)))))))(BreakStatement))))(IfStatement(InfixExpression(InfixExpression(SimpleName:output)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:bLineOutput)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))))(VariableDeclarationStatement(SimpleType(SimpleName:Saint))(VariableDeclarationFragment(SimpleName:saint)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:bitstream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:saint)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Saint))(SimpleName:bitstream)))))(IfStatement(InfixExpression(SimpleName:orchestra)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(SimpleName:score)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:saint)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Saint))(SimpleName:orchestra)(SimpleName:score)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:getChannelCount))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:getSamplingRate))(StringLiteral:<STR>)))))(IfStatement(SimpleName:bLineOutput)(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:format)(ClassInstanceCreation(SimpleType(SimpleName:AudioFormat))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:SUPPORTED_FORMATS)(SimpleName:nOutputFormatIndex)))(SimpleName:getEncoding))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:getSamplingRate))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:SUPPORTED_FORMATS)(SimpleName:nOutputFormatIndex)))(SimpleName:getSampleSize))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:getChannelCount))(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:getChannelCount))(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:SUPPORTED_FORMATS)(SimpleName:nOutputFormatIndex)))(SimpleName:getSampleSize)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:8))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:getSamplingRate))(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:SUPPORTED_FORMATS)(SimpleName:nOutputFormatIndex)))(SimpleName:getBigEndian)))))(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:info)(ClassInstanceCreation(SimpleType(QualifiedName:DataLine.Info))(TypeLiteral(SimpleType(SimpleName:SourceDataLine)))(SimpleName:format))))(VariableDeclarationStatement(SimpleType(SimpleName:SourceDataLine))(VariableDeclarationFragment(SimpleName:line)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:SourceDataLine))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:info))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:open)(METHOD_INVOCATION_ARGUMENTS(SimpleName:format))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:start))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:LineUnavailableException))(SimpleName:e))(Block)))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:SourceDataLineOutputStream))(SimpleName:line))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:setOutput)(METHOD_INVOCATION_ARGUMENTS(SimpleName:output)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:SUPPORTED_FORMATS)(SimpleName:nOutputFormatIndex)))(SimpleName:getNumber)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saint))(SimpleName:run)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:output))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))))