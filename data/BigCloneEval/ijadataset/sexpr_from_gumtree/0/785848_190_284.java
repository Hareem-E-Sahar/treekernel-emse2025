(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:final)(SimpleType(SimpleName:LispObject))(SimpleName:loadSystemFile)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:filename))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:verbose))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:print))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:auto))(SimpleType(SimpleName:ConditionThrowable))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ARRAY_SIZE)(NumberLiteral:2)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:candidates)(ArrayCreation(ArrayType(SimpleType(SimpleName:String))(Dimension(SimpleName:ARRAY_SIZE))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:extension)(MethodInvocation(SimpleName:getExtension)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filename)))))(IfStatement(InfixExpression(SimpleName:extension)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:candidates)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:filename)(INFIX_EXPRESSION_OPERATOR:+)(CharacterLiteral:<STR>)(SimpleName:COMPILE_FILE_TYPE))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:candidates)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:extension))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:candidates)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:filename)))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:candidates)(NumberLiteral:1))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:5)))))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:candidates)(NumberLiteral:0))(ASSIGNMENT_OPERATOR:=)(SimpleName:filename)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:in)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Pathname))(VariableDeclarationFragment(SimpleName:pathname)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:truename)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:ARRAY_SIZE))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:s)(ArrayAccess(SimpleName:candidates)(SimpleName:i))))(IfStatement(InfixExpression(SimpleName:s)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(BreakStatement))(VariableDeclarationStatement(SimpleType(SimpleName:ZipFile))(VariableDeclarationFragment(SimpleName:zipfile)(NullLiteral)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Site))(SimpleName:getLispHome))))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:dir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IkvmSite))(SimpleName:ikvmFileSafe)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:dir)(SimpleName:s))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ext)(MethodInvocation(SimpleName:getExtension)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ext))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:zipfile)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ZipCache))(SimpleName:getZip)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getPath))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:assertTrue)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))))(ExpressionStatement(Assignment(SimpleName:name)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:name))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:index))))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:entry)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:getEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:name)))))(IfStatement(InfixExpression(SimpleName:entry)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:getInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:entry)))))(ExpressionStatement(Assignment(SimpleName:truename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ZipException))(SimpleName:e))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:t))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Debug))(SimpleName:trace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t))))(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:truename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Lisp))))(SimpleName:getResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)))))(IfStatement(InfixExpression(SimpleName:url)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:proto)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:proto)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:proto))))(ExpressionStatement(Assignment(SimpleName:pathname)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:Pathname))(SimpleName:url)))))(ExpressionStatement(Assignment(SimpleName:truename)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getPath)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:in)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))))))(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:LispThread))(VariableDeclarationFragment(SimpleName:thread)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LispThread))(SimpleName:currentThread))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:SpecialBinding))(VariableDeclarationFragment(SimpleName:lastSpecialBinding)(QualifiedName:thread.lastSpecialBinding)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thread))(SimpleName:bindSpecial)(METHOD_INVOCATION_ARGUMENTS(SimpleName:_WARN_ON_REDEFINITION_)(SimpleName:NIL))))(TryStatement(Block(ReturnStatement(MethodInvocation(SimpleName:loadFileFromStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pathname)(SimpleName:truename)(ClassInstanceCreation(SimpleType(SimpleName:Stream))(SimpleName:in)(QualifiedName:SymbolConstants.CHARACTER))(SimpleName:verbose)(SimpleName:print)(SimpleName:auto)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FaslVersionMismatch))(SimpleName:e))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FastStringBuffer))(VariableDeclarationFragment(SimpleName:sb)(ClassInstanceCreation(SimpleType(SimpleName:FastStringBuffer))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:truename))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sb))(SimpleName:toString)))))))(Block(ExpressionStatement(Assignment(QualifiedName:thread.lastSpecialBinding)(ASSIGNMENT_OPERATOR:=)(SimpleName:lastSpecialBinding)))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ReturnStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:LispError))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))))))))(Block(IfStatement(InfixExpression(SimpleName:zipfile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ZipCache))(SimpleName:removeZip)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zipfile))(SimpleName:getName))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ReturnStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:LispError))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))))))))(ReturnStatement(MethodInvocation(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:LispError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))))))))