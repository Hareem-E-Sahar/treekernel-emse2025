(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:findProbabilityID)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:thirdWordID))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid))(VariableDeclarationFragment(SimpleName:start)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:end)(MethodInvocation(SimpleName:getNumberNGrams))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:trigram)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:end)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:start)))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:mid)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:end)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:midWordID)(MethodInvocation(SimpleName:getWordID)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(IfStatement(InfixExpression(SimpleName:midWordID)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:thirdWordID))(Block(ExpressionStatement(Assignment(SimpleName:start)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(IfStatement(InfixExpression(SimpleName:midWordID)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:thirdWordID))(Block(ExpressionStatement(Assignment(SimpleName:end)(ASSIGNMENT_OPERATOR:=)(SimpleName:mid))))(Block(ExpressionStatement(Assignment(SimpleName:trigram)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getProbabilityID)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(BreakStatement))))))(ReturnStatement(SimpleName:trigram))))))