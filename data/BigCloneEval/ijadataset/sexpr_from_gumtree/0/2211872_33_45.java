(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:RecordIterator))(SimpleName:get)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(Block(VariableDeclarationStatement(SimpleType(SimpleName:RecordIterator))(VariableDeclarationFragment(SimpleName:recordIter)(NullLiteral)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:SUPPORTED_PROTOCOLS))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol)))(SimpleName:toLowerCase)))))(Block(ReturnStatement(NullLiteral))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:robotsUrl)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:url)(SimpleName:ROBOTS_TXT))))(ExpressionStatement(Assignment(SimpleName:recordIter)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:RecordIterator))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlInputStreamFactory))(SimpleName:openStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:robotsUrl)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOG))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))(SimpleName:e)))))))(ReturnStatement(SimpleName:recordIter))))))