(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testBulkDelete)(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:EntityManager))(VariableDeclarationFragment(SimpleName:em)(MethodInvocation(SimpleName:getEM))))(VariableDeclarationStatement(SimpleType(SimpleName:EntityTransaction))(VariableDeclarationFragment(SimpleName:tx)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:em))(SimpleName:getTransaction))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tx))(SimpleName:begin)))(VariableDeclarationStatement(SimpleType(SimpleName:Timer))(VariableDeclarationFragment(SimpleName:t)(ClassInstanceCreation(SimpleType(SimpleName:Timer))(StringLiteral:<STR>)(BooleanLiteral:true)(NullLiteral))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:em))(SimpleName:persist)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:em))(SimpleName:flush)))(VariableDeclarationStatement(SimpleType(SimpleName:Query))(VariableDeclarationFragment(SimpleName:q)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:em))(SimpleName:createQuery)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Timer))))(SimpleName:getName))(StringLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:number)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:q))(SimpleName:executeUpdate))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(SimpleName:number))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tx))(SimpleName:rollback))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tx))(SimpleName:isActive))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tx))(SimpleName:rollback)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:em))(SimpleName:close))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:clean)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:Timer))))))))))))