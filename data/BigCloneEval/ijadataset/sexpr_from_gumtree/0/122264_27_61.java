(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:clip)(SingleVariableDeclaration(SimpleType(SimpleName:Line))(SimpleName:line))(SingleVariableDeclaration(SimpleType(SimpleName:Rect))(SimpleName:rect))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x1)(QualifiedName:line.a.x)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y1)(QualifiedName:line.a.y)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x2)(QualifiedName:line.b.x)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y2)(QualifiedName:line.b.y)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:code1)(MethodInvocation(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x1)(SimpleName:y1)(SimpleName:rect)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:code2)(MethodInvocation(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x2)(SimpleName:y2)(SimpleName:rect)))))(IfStatement(InfixExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:|)(SimpleName:code2)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:&)(SimpleName:code2)))(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0)))(ReturnStatement)(IfStatement(InfixExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:code2)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0)))(Block(IfStatement(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ExpressionStatement(MethodInvocation(SimpleName:clip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)(QualifiedName:line.a.x)(QualifiedName:line.a.y)(QualifiedName:line.b.x)(QualifiedName:line.b.y)(SimpleName:rect)(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(SimpleName:clip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)(QualifiedName:line.b.x)(QualifiedName:line.b.y)(QualifiedName:line.a.x)(QualifiedName:line.a.y)(SimpleName:rect)(BooleanLiteral:false))))))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:x)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:y)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:code)(MethodInvocation(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)(SimpleName:y)(SimpleName:rect)))))(WhileStatement(InfixExpression(SimpleName:code)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:code1)(INFIX_EXPRESSION_OPERATOR:&)(SimpleName:code)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:x2)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))(ExpressionStatement(Assignment(SimpleName:y2)(ASSIGNMENT_OPERATOR:=)(SimpleName:y)))(ExpressionStatement(Assignment(SimpleName:code2)(ASSIGNMENT_OPERATOR:=)(SimpleName:code)))(ExpressionStatement(Assignment(QualifiedName:line.b.x)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(SimpleName:x))))(ExpressionStatement(Assignment(QualifiedName:line.b.y)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(SimpleName:y)))))(Block(ExpressionStatement(Assignment(SimpleName:x1)(ASSIGNMENT_OPERATOR:=)(SimpleName:x)))(ExpressionStatement(Assignment(SimpleName:y1)(ASSIGNMENT_OPERATOR:=)(SimpleName:y)))(ExpressionStatement(Assignment(SimpleName:code1)(ASSIGNMENT_OPERATOR:=)(SimpleName:code)))(ExpressionStatement(Assignment(QualifiedName:line.a.x)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(SimpleName:x))))(ExpressionStatement(Assignment(QualifiedName:line.a.y)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(SimpleName:y))))))(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:x1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:x2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:y1)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:y2)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:code)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)(SimpleName:y)(SimpleName:rect)))))))(ExpressionStatement(MethodInvocation(SimpleName:clip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)(SimpleName:x)(SimpleName:y)(SimpleName:x1)(SimpleName:y1)(SimpleName:rect)(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(SimpleName:clip)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)(SimpleName:x)(SimpleName:y)(SimpleName:x2)(SimpleName:y2)(SimpleName:rect)(BooleanLiteral:true)))))))))))