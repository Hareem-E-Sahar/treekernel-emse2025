(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(Modifier:final)(TypeParameter(SimpleName:D)(ParameterizedType(SimpleType(SimpleName:BatchedData))(SimpleType(SimpleName:D))))(ParameterizedType(SimpleType(SimpleName:Promise))(SimpleType(SimpleName:Long)))(SimpleName:forward)(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:AInput))(SimpleType(SimpleName:D)))(SimpleName:in))(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:AOutput))(SimpleType(SimpleName:D)))(SimpleName:out))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:long)(SimpleName:length))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:int)(SimpleName:readDataSize))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:boolean)(SimpleName:autoflush))(Block(IfStatement(InfixExpression(SimpleName:in)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:out)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:readDataSize)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:readDataSize))))))(IfStatement(InfixExpression(SimpleName:length)(INFIX_EXPRESSION_OPERATOR:<)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:length))))))(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:AsyncProcess))(SimpleType(SimpleName:Long)))(AnonymousClassDeclaration(FieldDeclaration(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:remainingLength)(SimpleName:length)))(FieldDeclaration(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:copiedLength)(NumberLiteral:0)))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(IfStatement(InfixExpression(SimpleName:remainingLength)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(SimpleName:success)(METHOD_INVOCATION_ARGUMENTS(SimpleName:copiedLength))))(ReturnStatement)))(ExpressionStatement(MethodInvocation(SimpleName:run)(METHOD_INVOCATION_ARGUMENTS(NullLiteral))))))(MethodDeclaration(Javadoc(TagElement(TextElement:Theread-writecycle.Notethatcycledoesreadandwrite)(TextElement:operationwithdatafrompreviouscycleoperationsatthesame)(TextElement:time.))(TagElement(SimpleName:data)(TextElement:nullordatatowrite)))(PrimitiveType:void)(SimpleName:run)(SingleVariableDeclaration(SimpleType(SimpleName:D))(SimpleName:data))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:toRead)))(IfStatement(InfixExpression(InfixExpression(SimpleName:remainingLength)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:UNLIMITED))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:readDataSize)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:remainingLength)))(Block(ExpressionStatement(Assignment(SimpleName:toRead)(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:int)(SimpleName:remainingLength)))))(Block(ExpressionStatement(Assignment(SimpleName:toRead)(ASSIGNMENT_OPERATOR:=)(SimpleName:readDataSize)))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Promise))(ArrayType(SimpleType(SimpleName:Object))(Dimension)))(VariableDeclarationFragment(SimpleName:readAndWrite)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Wait))(SimpleName:all)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:readData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in)(SimpleName:toRead)))(MethodInvocation(SimpleName:writeData)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(SimpleName:data)))))))(ExpressionStatement(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ProcessWhen))(ArrayType(SimpleType(SimpleName:Object))(Dimension)))(SimpleName:readAndWrite)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:protected)(ParameterizedType(SimpleType(SimpleName:Promise))(SimpleType(SimpleName:Void)))(SimpleName:resolved)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:Object))(Dimension))(SimpleName:value))(SimpleType(SimpleName:Throwable))(Block(VariableDeclarationStatement(SimpleType(SimpleName:D))(VariableDeclarationFragment(SimpleName:data)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:blindCast)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(SimpleName:value)(NumberLiteral:0))))))(IfStatement(InfixExpression(SimpleName:data)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:success)(METHOD_INVOCATION_ARGUMENTS(SimpleName:copiedLength)))))(Block(ExpressionStatement(Assignment(SimpleName:copiedLength)(ASSIGNMENT_OPERATOR:+=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:length))))(IfStatement(InfixExpression(SimpleName:remainingLength)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:UNLIMITED))(Block(ExpressionStatement(Assignment(SimpleName:remainingLength)(ASSIGNMENT_OPERATOR:-=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:length))))))(ExpressionStatement(MethodInvocation(SimpleName:run)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data))))))(ReturnStatement(NullLiteral)))))))))(MethodDeclaration(Javadoc(TagElement(TextElement:Readdataifthereisstillsomethingtoread))(TagElement(SimpleName:in)(TextElement:aninputstream))(TagElement(SimpleName:toRead)(TextElement:amounttoread))(TagElement(TextElement:promiseforinputstreamorpromisefornulliflimitis)(TextElement:reached.)))(Modifier:private)(ParameterizedType(SimpleType(SimpleName:Promise))(SimpleType(SimpleName:D)))(SimpleName:readData)(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:AInput))(SimpleType(SimpleName:D)))(SimpleName:in))(SingleVariableDeclaration(Modifier:final)(PrimitiveType:int)(SimpleName:toRead))(Block(IfStatement(InfixExpression(SimpleName:toRead)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Promise))(SimpleName:nullPromise))))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:toRead))))))))(MethodDeclaration(Javadoc(TagElement(TextElement:Writedataandflushitifautoflushistrue))(TagElement(SimpleName:out)(TextElement:outputstream))(TagElement(SimpleName:data)(TextElement:adatatowrite))(TagElement(TextElement:apromisethatresolveswhendataiswritten)))(Modifier:private)(ParameterizedType(SimpleType(SimpleName:Promise))(SimpleType(SimpleName:Void)))(SimpleName:writeData)(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:AOutput))(SimpleType(SimpleName:D)))(SimpleName:out))(SingleVariableDeclaration(SimpleType(SimpleName:D))(SimpleName:data))(Block(IfStatement(InfixExpression(SimpleName:data)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ReturnStatement(NullLiteral))))(IfStatement(SimpleName:autoflush)(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:When))(SimpleType(SimpleName:Void))(SimpleType(SimpleName:Void)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)))(AnonymousClassDeclaration(MethodDeclaration(Modifier:protected)(ParameterizedType(SimpleType(SimpleName:Promise))(SimpleType(SimpleName:Void)))(SimpleName:resolved)(SingleVariableDeclaration(SimpleType(SimpleName:Void))(SimpleName:value))(SimpleType(SimpleName:Throwable))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:flush))))))))(SimpleName:promise))))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)))))))))))(SimpleName:promise)))))))