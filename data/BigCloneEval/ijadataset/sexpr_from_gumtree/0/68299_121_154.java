(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:readFromCommandline)(Block(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:l_input)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(QualifiedName:System.in)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:l_message)(ClassInstanceCreation(SimpleType(SimpleName:String)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:l_tempString)(ClassInstanceCreation(SimpleType(SimpleName:String)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l_targetPlayer)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(SimpleName:m_commandLineReading)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:l_message)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_input))(SimpleName:readLine)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:severe)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ex))(SimpleName:getMessage)))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_message))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_message))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:m_commandLineReading)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:ListIterator))(VariableDeclarationFragment(SimpleName:it)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_playerList))(SimpleName:listIterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Jais))(VariableDeclarationFragment(SimpleName:l_tempJais)(CastExpression(SimpleType(SimpleName:Jais))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:it))(SimpleName:next)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_tempJais))(SimpleName:quit))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_message))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:l_tokenizer)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:l_message))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:l_targetPlayer)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_tokenizer))(SimpleName:nextToken))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:l_targetPlayer)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:l_targetPlayer)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:m_numberOfPlayers)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:l_tempString)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_tokenizer))(SimpleName:hasMoreTokens))(ExpressionStatement(Assignment(SimpleName:l_tempString)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l_tokenizer))(SimpleName:nextToken))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Jais))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_playerList))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:l_targetPlayer)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(SimpleName:parseKbInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l_tempString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:finest)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:l_tempString)(StringLiteral:<STR>)(SimpleName:l_targetPlayer)(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ex)(StringLiteral:<STR>)))))))))))))))))