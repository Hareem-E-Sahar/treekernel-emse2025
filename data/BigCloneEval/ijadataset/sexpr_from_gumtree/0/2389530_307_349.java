(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:copyResource)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:source))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:destination))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(ParenthesizedExpression(SimpleName:temRep))))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:isDirectory))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:directory)(SimpleName:destination)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directory))(SimpleName:mkdir)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:source))(SimpleName:listFiles))))(IfStatement(InfixExpression(SimpleName:files)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ArrayAccess(SimpleName:files)(SimpleName:i))))(ExpressionStatement(Assignment(SimpleName:destination)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:directory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:getName)))))(ExpressionStatement(MethodInvocation(SimpleName:copyResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:f)(SimpleName:destination)))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:outStream)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:inStream)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(SimpleName:deleteResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:destination))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:createNewFile)))(ExpressionStatement(Assignment(SimpleName:inStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:source))))(ExpressionStatement(Assignment(SimpleName:outStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destination))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:buffer)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(NumberLiteral:512)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1024)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nb)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:nb)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outStream))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:nb)))))))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.FileNotFoundException))(SimpleName:f))(Block))(CatchClause(SingleVariableDeclaration(SimpleType(QualifiedName:java.io.IOException))(SimpleName:e))(Block))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:inStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inStream))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:outStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outStream))(SimpleName:close)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block)))))))))))))