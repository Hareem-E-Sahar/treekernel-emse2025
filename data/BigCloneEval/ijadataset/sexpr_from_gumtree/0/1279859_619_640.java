(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:String))(SimpleName:getMessageDigest)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:inputs))(Block(IfStatement(InfixExpression(QualifiedName:inputs.length)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(ReturnStatement(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:MessageDigest))(VariableDeclarationFragment(SimpleName:sha)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MessageDigest))(SimpleName:getInstance)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:input))(SimpleName:inputs)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sha))(SimpleName:update)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:getBytes))))))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:hash)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sha))(SimpleName:digest))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:CPass)(StringLiteral:<STR>)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:h)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:s)(StringLiteral:<STR>)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:20))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:h)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:hash)(SimpleName:i))))(IfStatement(InfixExpression(SimpleName:h)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ExpressionStatement(Assignment(SimpleName:h)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:256))))(ExpressionStatement(Assignment(SimpleName:s)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toHexString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:h)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(ExpressionStatement(Assignment(SimpleName:CPass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CPass))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(ExpressionStatement(Assignment(SimpleName:CPass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CPass))(SimpleName:concat)(METHOD_INVOCATION_ARGUMENTS(SimpleName:s)))))))(ExpressionStatement(Assignment(SimpleName:CPass)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:CPass))(SimpleName:toUpperCase))))(ReturnStatement(SimpleName:CPass)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchAlgorithmException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalStateException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))))))))