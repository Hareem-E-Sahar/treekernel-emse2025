(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:createTar)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:directoryToPack))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:targetTarFile))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(SimpleName:directoryToPack)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:targetTarFile)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))(StringLiteral:<STR>)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directoryToPack))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directoryToPack))(SimpleName:isDirectory))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:directoryToPack)(StringLiteral:<STR>))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetTarFile))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:targetTarFile)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:directoryToPack)(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:buffer)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:BUFFER_SIZE))))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:targetOutput)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:targetTarFile))))(VariableDeclarationStatement(SimpleType(SimpleName:TarOutputStream))(VariableDeclarationFragment(SimpleName:targetOutputTar)(ClassInstanceCreation(SimpleType(SimpleName:TarOutputStream))(SimpleName:targetOutput))))(TryStatement(Block(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:fileList)(MethodInvocation(SimpleName:collectFiles)(METHOD_INVOCATION_ARGUMENTS(SimpleName:directoryToPack)))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:File)))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileList))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next))))(IfStatement(InfixExpression(InfixExpression(InfixExpression(SimpleName:file)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)))))(ContinueStatement)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetTarFile)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)))))(ContinueStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(SimpleName:targetTarFile)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filePathInTar)(MethodInvocation(SimpleName:getFilePathInTar)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:directoryToPack)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filePathInTar)(StringLiteral:<STR>)(SimpleName:file)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:TarEntry))(VariableDeclarationFragment(SimpleName:tarAdd)(ClassInstanceCreation(SimpleType(SimpleName:TarEntry))(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tarAdd))(SimpleName:setModTime)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:lastModified)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tarAdd))(SimpleName:setName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:filePathInTar))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetOutputTar))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tarAdd))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:in)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file))))(TryStatement(Block(WhileStatement(BooleanLiteral:true)(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nRead)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(QualifiedName:buffer.length)))))(IfStatement(InfixExpression(SimpleName:nRead)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetOutputTar))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer)(NumberLiteral:0)(SimpleName:nRead)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamUtil))(SimpleName:tryCloseStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:in))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:targetOutputTar))(SimpleName:closeEntry))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamUtil))(SimpleName:tryCloseStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetOutputTar))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:StreamUtil))(SimpleName:tryCloseStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetOutput))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:targetTarFile)(StringLiteral:<STR>)))))))))