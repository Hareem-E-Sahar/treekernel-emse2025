(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(SimpleType(SimpleName:ResultReader))(SimpleName:createReader)(SingleVariableDeclaration(SimpleType(SimpleName:Class))(SimpleName:type))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:name))(SimpleType(SimpleName:ConfigurationException))(Block(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullPointerException))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:ResultReader))))(SimpleName:isAssignableFrom)(METHOD_INVOCATION_ARGUMENTS(SimpleName:type))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ConfigurationException))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:ObjectReader))))(SimpleName:getName)))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:ct)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Class))(Dimension))(ArrayInitializer(TypeLiteral(SimpleType(SimpleName:String)))))))))(ReturnStatement(CastExpression(SimpleType(SimpleName:ResultReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ct))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:name))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:SQLManager.log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:name))(SimpleName:ex))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ConfigurationException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:type))(SimpleName:getName))(StringLiteral:<STR>)))))))))))