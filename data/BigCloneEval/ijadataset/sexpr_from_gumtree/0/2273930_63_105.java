(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(SimpleName:doIndex)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:directory)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ph))(SimpleName:getDataLayout)))(SimpleName:getOpenDir))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directory))(SimpleName:exists)))(Block(ReturnStatement(NullLiteral))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:xmlFile))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directory))(SimpleName:listFiles)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XMLFilenameFilter))(SimpleName:getInstance))))(Block(ExpressionStatement(MethodInvocation(SimpleName:indexXMLFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:xmlFile))))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:containerIds)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:String)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:idToPath))(SimpleName:keySet)))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Set))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:svnBasedContainersWithoutXPXs)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:HashSet))(SimpleType(SimpleName:String))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:subDirectory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:directory))(SimpleName:listFiles)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DirectoryFilter))(SimpleName:getInstance))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pathToXPXFile)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:subDirectory))(SimpleName:getAbsolutePath))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:XMLifier.XML_EXTENSION))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:XPXFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:pathToXPXFile))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:XPXFile))(SimpleName:exists)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:subDirectory))(SimpleName:getName)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:18)))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ph))(SimpleName:getDataSource)))(SimpleName:getVcsProvider))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:subDirectory)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:svnBasedContainersWithoutXPXs))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:subDirectory))(SimpleName:getAbsolutePath))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.WARNING)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:subDirectory)(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(SimpleName:indexDirectory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:subDirectory)))))))(Block(ExpressionStatement(MethodInvocation(SimpleName:indexDirectory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:subDirectory))))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:svnBasedContainersWithoutXPXs))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:pathToDelete))(SimpleName:svnBasedContainersWithoutXPXs)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:pathToDelete))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isDirectory))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:hasSvnDir)(BooleanLiteral:false)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:filename))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:list))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:filename))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:hasSvnDir)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:hasSvnDir))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:deleteDir)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))))))))))(ReturnStatement(SimpleName:containerIds))))))