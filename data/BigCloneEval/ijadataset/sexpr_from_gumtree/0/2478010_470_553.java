(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:BCD))(SimpleName:subtract)(SingleVariableDeclaration(SimpleType(SimpleName:BCD))(SimpleName:val))(Block(IfStatement(InfixExpression(QualifiedName:val.m_signum)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement(ThisExpression)))(IfStatement(InfixExpression(SimpleName:m_signum)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:val))(SimpleName:negate))))(IfStatement(InfixExpression(ParenthesizedExpression(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:m_digits)(INFIX_EXPRESSION_OPERATOR:>)(QualifiedName:val.m_digits)))(SimpleName:m_digits)(QualifiedName:val.m_digits)))(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:DIGITS_LONG_MIN)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:x)(MethodInvocation(SimpleName:longValue))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:y)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:val))(SimpleName:longValue))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:BCD))(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:y)))))(IfStatement(InfixExpression(QualifiedName:val.m_signum)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:m_signum))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:xVal)(SimpleName:m_magnitude)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xDigits)(SimpleName:m_digits)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:yVal)(QualifiedName:val.m_magnitude)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:yDigits)(QualifiedName:val.m_digits)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cmp)(MethodInvocation(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:val)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:cmp)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:m_signum)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:cmp)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:m_signum)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))))))(Block(ExpressionStatement(Assignment(SimpleName:xVal)(ASSIGNMENT_OPERATOR:=)(QualifiedName:val.m_magnitude)))(ExpressionStatement(Assignment(SimpleName:xDigits)(ASSIGNMENT_OPERATOR:=)(QualifiedName:val.m_digits)))(ExpressionStatement(Assignment(SimpleName:yVal)(ASSIGNMENT_OPERATOR:=)(SimpleName:m_magnitude)))(ExpressionStatement(Assignment(SimpleName:yDigits)(ASSIGNMENT_OPERATOR:=)(SimpleName:m_digits)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:zDigits)(SimpleName:yDigits)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:zVal)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:zDigits)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:carry)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:index)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:endIndex)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:xDigits)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(WhileStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:endIndex))(Block(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:hiLo)(ArrayAccess(SimpleName:xVal)(SimpleName:index))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xHi)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hiLo)(INFIX_EXPRESSION_OPERATOR:>>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:xLo)(InfixExpression(SimpleName:hiLo)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F))))(ExpressionStatement(Assignment(SimpleName:hiLo)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:yVal)(SimpleName:index))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:yHi)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hiLo)(INFIX_EXPRESSION_OPERATOR:>>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:yLo)(InfixExpression(SimpleName:hiLo)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:zLo)(InfixExpression(SimpleName:yLo)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:xLo)(SimpleName:carry))))(IfStatement(InfixExpression(SimpleName:zLo)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:zLo)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:10))))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:zHi)(InfixExpression(SimpleName:yHi)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:xHi)(SimpleName:carry))))(IfStatement(InfixExpression(SimpleName:zHi)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:zHi)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:10))))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:zVal)(SimpleName:index))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(SimpleName:zLo)(INFIX_EXPRESSION_OPERATOR:|)(ParenthesizedExpression(InfixExpression(SimpleName:zHi)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:4))))))))(ExpressionStatement(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(QualifiedName:xVal.length)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:yVal.length))(Block(WhileStatement(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:yVal.length))(Block(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:hiLo)(ArrayAccess(SimpleName:yVal)(SimpleName:index))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:yHi)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:hiLo)(INFIX_EXPRESSION_OPERATOR:>>>)(NumberLiteral:4)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:yLo)(InfixExpression(SimpleName:hiLo)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0x0F))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:zLo)(InfixExpression(SimpleName:yLo)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:carry))))(IfStatement(InfixExpression(SimpleName:zLo)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:zLo)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:10))))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:zHi)(InfixExpression(SimpleName:yHi)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:carry))))(IfStatement(InfixExpression(SimpleName:zHi)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1)))(ExpressionStatement(Assignment(SimpleName:zHi)(ASSIGNMENT_OPERATOR:+=)(NumberLiteral:10))))(Block(ExpressionStatement(Assignment(SimpleName:carry)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))(ExpressionStatement(Assignment(ArrayAccess(SimpleName:zVal)(SimpleName:index))(ASSIGNMENT_OPERATOR:=)(CastExpression(PrimitiveType:byte)(ParenthesizedExpression(InfixExpression(SimpleName:zLo)(INFIX_EXPRESSION_OPERATOR:|)(ParenthesizedExpression(InfixExpression(SimpleName:zHi)(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:4))))))))(ExpressionStatement(PostfixExpression(SimpleName:index)(POSTFIX_EXPRESSION_OPERATOR:++)))))))(ExpressionStatement(Assignment(SimpleName:zDigits)(ASSIGNMENT_OPERATOR:=)(ParenthesizedExpression(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:2)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(ArrayAccess(SimpleName:zVal)(InfixExpression(SimpleName:index)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xF0)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(PostfixExpression(SimpleName:zDigits)(POSTFIX_EXPRESSION_OPERATOR:--)))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:BCD))(SimpleName:zVal)(SimpleName:zDigits)(SimpleName:cmp)(SimpleName:BYTE_ARRAY_IS_IMMUTABLE))))(IfStatement(InfixExpression(SimpleName:m_signum)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:val))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(ThisExpression))(SimpleName:negate)))))(SimpleName:negate))))(Block(ReturnStatement(MethodInvocation(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:val))(SimpleName:negate)))))))))))))))