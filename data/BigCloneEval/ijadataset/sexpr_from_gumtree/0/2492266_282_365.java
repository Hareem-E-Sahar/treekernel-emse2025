(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(Modifier:final)(PrimitiveType:int)(SimpleName:testIMAP4Access)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:PrintStream))(SimpleName:out))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:BufferedReader))(SimpleName:in))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:url))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:user))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:pass))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:lastIndexOf)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:host)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:pp)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0)))(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:pp))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:port)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:pp)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0)))(QualifiedName:IMAP4Protocol.IPPORT_IMAP4)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:pp)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:NetServerWelcomeLine))(VariableDeclarationFragment(SimpleName:wl)(ClassInstanceCreation(SimpleType(SimpleName:NetServerWelcomeLine)))))(ForStatement(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:ans)(MethodInvocation(SimpleName:getval)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(SimpleName:in)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:ans)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ans))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Character))(SimpleName:toUpperCase)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ans))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>))))(BreakStatement))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IMAP4Session))(VariableDeclarationFragment(SimpleName:sess)(ClassInstanceCreation(SimpleType(SimpleName:IMAP4Session)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sess))(SimpleName:setReadTimeout)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:30)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000)))))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:cStart)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sess))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(SimpleName:host)(SimpleName:port)(SimpleName:wl))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:cEnd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))(VariableDeclarationFragment(SimpleName:cDuration)(InfixExpression(SimpleName:cEnd)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:cStart))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:host)(StringLiteral:<STR>)(SimpleName:port)(StringLiteral:<STR>)(SimpleName:cDuration)(StringLiteral:<STR>)(SimpleName:wl))))))(Block(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(QualifiedName:Map.Entry))(SimpleType(SimpleName:String))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:ident)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:IMAP4ServerIdentityAnalyzer.DEFAULT))(SimpleName:getServerIdentity)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:wl))(SimpleName:getLine))))))(IfStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:ident))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ident))(SimpleName:getKey))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ident))(SimpleName:getValue))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:hasQuota)(BooleanLiteral:false))(VariableDeclarationFragment(SimpleName:hasNamespace)(BooleanLiteral:false)))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:capStart)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IMAP4Capabilities))(VariableDeclarationFragment(SimpleName:rsp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sess))(SimpleName:capability))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:capEnd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))(VariableDeclarationFragment(SimpleName:capDuration)(ParenthesizedExpression(InfixExpression(SimpleName:capEnd)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:capStart)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rsp))(SimpleName:isOKResponse))(Block(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:caps)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rsp))(SimpleName:getCapabilities))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:numCaps)(ConditionalExpression(ParenthesizedExpression(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:caps)))(NumberLiteral:0)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:caps))(SimpleName:size)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:numCaps)(StringLiteral:<STR>)(SimpleName:capDuration)(StringLiteral:<STR>)(SimpleName:rsp)))))(IfStatement(InfixExpression(SimpleName:numCaps)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IMAP4Protocol.IMAP4CapabilityCmd))))(EnhancedForStatement(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:c))(SimpleName:caps)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:c))))))))(ExpressionStatement(Assignment(SimpleName:hasQuota)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rsp))(SimpleName:hasQuota))))(ExpressionStatement(Assignment(SimpleName:hasNamespace)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rsp))(SimpleName:hasNamespace)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:capDuration)(StringLiteral:<STR>)(SimpleName:rsp)))))))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:aStart)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IMAP4TaggedResponse))(VariableDeclarationFragment(SimpleName:rsp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sess))(SimpleName:login)(METHOD_INVOCATION_ARGUMENTS(SimpleName:user)(SimpleName:pass)))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:aEnd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))(VariableDeclarationFragment(SimpleName:aDuration)(InfixExpression(SimpleName:aEnd)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:aStart))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rsp))(SimpleName:isOKResponse)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aDuration)(StringLiteral:<STR>)(SimpleName:rsp)))))(ContinueStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:aDuration)(StringLiteral:<STR>)(SimpleName:rsp))))))(IfStatement(SimpleName:hasQuota)(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:qtStart)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IMAP4QuotarootInfo))(VariableDeclarationFragment(SimpleName:qtInfo)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sess))(SimpleName:getquotaroot))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:qtEnd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))(VariableDeclarationFragment(SimpleName:qtDuration)(ParenthesizedExpression(InfixExpression(SimpleName:qtEnd)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:qtStart)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qtInfo))(SimpleName:isOKResponse))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:qtDuration)(StringLiteral:<STR>)(SimpleName:qtInfo)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IMAP4Protocol.IMAP4GetQuotaRootCmd))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:IMAP4Protocol.IMAP4QuotaStorageRes)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qtInfo))(SimpleName:getCurStorageKB))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qtInfo))(SimpleName:getMaxStorageKB))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:IMAP4Protocol.IMAP4QuotaMessageRes)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qtInfo))(SimpleName:getCurMessages))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:qtInfo))(SimpleName:getMaxMessages)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:qtDuration)(StringLiteral:<STR>)(SimpleName:qtInfo))))))))(IfStatement(SimpleName:hasNamespace)(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:nsStart)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IMAP4NamespacesInfo))(VariableDeclarationFragment(SimpleName:nsInfo)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sess))(SimpleName:namespace))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:nsEnd)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis)))(VariableDeclarationFragment(SimpleName:nsDuration)(ParenthesizedExpression(InfixExpression(SimpleName:nsEnd)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:nsStart)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nsInfo))(SimpleName:isOKResponse))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nsDuration)(StringLiteral:<STR>)(SimpleName:nsInfo)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:IMAP4Protocol.IMAP4NamespaceCmd))))(ExpressionStatement(MethodInvocation(SimpleName:showNamespace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nsInfo))(SimpleName:getPersonal)))))(ExpressionStatement(MethodInvocation(SimpleName:showNamespace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nsInfo))(SimpleName:getShared)))))(ExpressionStatement(MethodInvocation(SimpleName:showNamespace)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:nsInfo))(SimpleName:getOther))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nsDuration)(StringLiteral:<STR>)(SimpleName:nsInfo))))))))(ExpressionStatement(MethodInvocation(SimpleName:testIMAP4Access)(METHOD_INVOCATION_ARGUMENTS(SimpleName:out)(SimpleName:in)(SimpleName:sess)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ce))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ce))(SimpleName:getClass)))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ce))(SimpleName:getMessage))))))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sess))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:ce))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ce))(SimpleName:getClass)))(SimpleName:getName))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ce))(SimpleName:getMessage)))))))))))))(ReturnStatement(NumberLiteral:0))))))