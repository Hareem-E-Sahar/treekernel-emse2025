(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testDistribution)(Block(VariableDeclarationStatement(SimpleType(SimpleName:PureConsistentHashBalancerAlgorithm))(VariableDeclarationFragment(SimpleName:algo)(ClassInstanceCreation(SimpleType(SimpleName:PureConsistentHashBalancerAlgorithm)))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Integer))(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:12199))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algo))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:toString))))(NumberLiteral:2))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:set))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Integer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:algo))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:toString))))))))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bits)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:boolean)(Dimension(NumberLiteral:32))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:q)(NumberLiteral:0)))(InfixExpression(SimpleName:q)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:31))(PostfixExpression(SimpleName:q)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:has1)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:has0)(BooleanLiteral:false)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Integer))(SimpleName:i))(SimpleName:set)(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isOne)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:&)(ParenthesizedExpression(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:<<)(SimpleName:q)))))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))))(IfStatement(SimpleName:isOne)(ExpressionStatement(Assignment(SimpleName:has1)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:has0)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(InfixExpression(SimpleName:has1)(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:has0))(BreakStatement))))(IfStatement(InfixExpression(SimpleName:has1)(INFIX_EXPRESSION_OPERATOR:&&)(SimpleName:has0))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:bits)(SimpleName:q))(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:q)(NumberLiteral:0)))(InfixExpression(SimpleName:q)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:31))(PostfixExpression(SimpleName:q)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(ArrayAccess(SimpleName:bits)(SimpleName:q)))(ExpressionStatement(MethodInvocation(SimpleName:fail)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:q)(StringLiteral:<STR>))))))))))))