(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(PrimitiveType:void)(SimpleName:joinLines)(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:List))(SimpleType(SimpleName:Line)))(SimpleName:list))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:joinLineChar))(SingleVariableDeclaration(SimpleType(SimpleName:StringDigester))(SimpleName:dig))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuilder))(VariableDeclarationFragment(SimpleName:previous)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:skipped)(NumberLiteral:0)))(VariableDeclarationStatement(SimpleType(SimpleName:Line))(VariableDeclarationFragment(SimpleName:myLine)(NullLiteral)))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:ListIterator))(SimpleType(SimpleName:Line)))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:listIterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(ExpressionStatement(Assignment(SimpleName:myLine)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myLine))(SimpleName:getText))))(IfStatement(InfixExpression(SimpleName:dig)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dig))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))))(IfStatement(InfixExpression(SimpleName:previous)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:joinLineChar)))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(SimpleName:trim))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:previous)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringBuilder))(SimpleName:line))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:remove)))(ExpressionStatement(PostfixExpression(SimpleName:skipped)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:remove))))(Block(IfStatement(InfixExpression(SimpleName:dig)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myLine))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))))))))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:joinLineChar)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:endsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:joinLineChar))))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(SimpleName:trim))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:previous))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:remove)))(ExpressionStatement(PostfixExpression(SimpleName:skipped)(POSTFIX_EXPRESSION_OPERATOR:++))))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:previous))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line))))(SimpleName:toString))))(ExpressionStatement(Assignment(SimpleName:previous)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myLine))(SimpleName:setText)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line))))(ExpressionStatement(Assignment(SimpleName:skipped)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:0)))))))))(IfStatement(InfixExpression(SimpleName:previous)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myLine))(SimpleName:getText))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(SimpleName:trim))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:list))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:myLine))))))))))))