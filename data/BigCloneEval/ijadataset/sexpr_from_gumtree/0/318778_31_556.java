(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:setupCommands)(SingleVariableDeclaration(SimpleType(SimpleName:ComponentRegistry))(SimpleName:registry))(SingleVariableDeclaration(SimpleType(SimpleName:CommandHandler))(SimpleName:ch))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:registry))(ASSIGNMENT_OPERATOR:=)(SimpleName:registry)))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:MSP430))(VariableDeclarationFragment(SimpleName:cpu)(CastExpression(SimpleType(SimpleName:MSP430))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:registry))(SimpleName:getComponent)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:MSP430))))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:GenericNode))(VariableDeclarationFragment(SimpleName:node)(CastExpression(SimpleType(SimpleName:GenericNode))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:registry))(SimpleName:getComponent)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:cpu)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicAsyncCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(FieldDeclaration(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:address)(NumberLiteral:0)))(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:baddr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:baddr)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))(ReturnStatement(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:setBreakPoint)(METHOD_INVOCATION_ARGUMENTS(Assignment(SimpleName:address)(ASSIGNMENT_OPERATOR:=)(SimpleName:baddr))(ClassInstanceCreation(SimpleType(SimpleName:CPUMonitor))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:cpuAction)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:type))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:adr))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:data))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(SimpleName:adr)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:stop))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(SimpleName:baddr)))))))(ReturnStatement(NumberLiteral:0))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:stopCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:clearBreakPoint)(METHOD_INVOCATION_ARGUMENTS(SimpleName:address)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicAsyncCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(FieldDeclaration(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mode)(NumberLiteral:0)))(FieldDeclaration(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:address)(NumberLiteral:0)))(FieldDeclaration(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:length)(NumberLiteral:1)))(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:baddr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:baddr)(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:1)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:modeStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Character))(SimpleName:isDigit)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:modeStr))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(Block(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modeStr))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modeStr)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.ASCII_UNMODIFIED))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modeStr)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:10))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modeStr)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.HEX))))))))))))(VariableDeclarationStatement(SimpleType(SimpleName:CPUMonitor))(VariableDeclarationFragment(SimpleName:monitor)(ClassInstanceCreation(SimpleType(SimpleName:CPUMonitor))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:cpuAction)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:type))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:adr))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:data))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:mode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:mode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:10)))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:readRegister)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:adrStr)(MethodInvocation(SimpleName:getSymOrAddr)(METHOD_INVOCATION_ARGUMENTS(SimpleName:context)(SimpleName:adr)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pcStr)(MethodInvocation(SimpleName:getSymOrAddrELF)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getELF))(SimpleName:pc)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:op)(StringLiteral:<STR>)))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:MEMORY_READ))(Block(ExpressionStatement(Assignment(SimpleName:op)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:type)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:MEMORY_WRITE))(Block(ExpressionStatement(Assignment(SimpleName:op)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:op)(StringLiteral:<STR>)(SimpleName:pcStr)(StringLiteral:<STR>)(SimpleName:adrStr)(StringLiteral:<STR>)(SimpleName:data)))))(IfStatement(InfixExpression(SimpleName:mode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:10))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:stop))))))(Block(IfStatement(InfixExpression(SimpleName:length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(SimpleName:address)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:address)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:length)))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(QualifiedName:cpu.memory)(SimpleName:i))(QualifiedName:Utils.BYTE)(SimpleName:mode))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(QualifiedName:Utils.BYTE)(SimpleName:mode))))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:setBreakPoint)(METHOD_INVOCATION_ARGUMENTS(Assignment(SimpleName:address)(ASSIGNMENT_OPERATOR:=)(SimpleName:baddr))(SimpleName:monitor))))(IfStatement(InfixExpression(SimpleName:length)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:1)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:setBreakPoint)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:address)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))(SimpleName:monitor))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(SimpleName:baddr)))))))(ReturnStatement(NumberLiteral:0))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:stopCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:clearBreakPoint)(METHOD_INVOCATION_ARGUMENTS(SimpleName:address))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicAsyncCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(FieldDeclaration(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mode)(NumberLiteral:0)))(FieldDeclaration(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:register)(NumberLiteral:0)))(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(Assignment(SimpleName:register)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsRegister)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:register)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:modeStr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:modeStr)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:1))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:modeStr)))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:setRegisterWriteMonitor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:register)(ClassInstanceCreation(SimpleType(SimpleName:CPUMonitor))(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:cpuAction)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:type))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:adr))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:data))(Block(IfStatement(InfixExpression(SimpleName:mode)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:readRegister)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:adrStr)(MethodInvocation(SimpleName:getRegisterName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:register)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:pcStr)(MethodInvocation(SimpleName:getSymOrAddrELF)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getELF))(SimpleName:pc)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:pcStr)(StringLiteral:<STR>)(SimpleName:adrStr)(StringLiteral:<STR>)(SimpleName:data))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(SimpleName:getRegisterName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:register)))))))(ReturnStatement(NumberLiteral:0))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:stopCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:clearBreakPoint)(METHOD_INVOCATION_ARGUMENTS(SimpleName:register)))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:baddr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:setBreakPoint)(METHOD_INVOCATION_ARGUMENTS(SimpleName:baddr)(NullLiteral))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:regExp)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:MapEntry))(Dimension))(VariableDeclarationFragment(SimpleName:entries)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getMapTable)))(SimpleName:getEntries)(METHOD_INVOCATION_ARGUMENTS(SimpleName:regExp)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:found)(BooleanLiteral:false)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:entries.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:MapEntry))(VariableDeclarationFragment(SimpleName:mapEntry)(ArrayAccess(SimpleName:entries)(SimpleName:i))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:address)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapEntry))(SimpleName:getAddress))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapEntry))(SimpleName:getName))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(SimpleName:address)))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex8)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(QualifiedName:cpu.memory)(SimpleName:address))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex8)(METHOD_INVOCATION_ARGUMENTS(ArrayAccess(QualifiedName:cpu.memory)(InfixExpression(SimpleName:address)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapEntry))(SimpleName:getType))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mapEntry))(SimpleName:getFile))))))(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:found))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:regExp)(CharacterLiteral:<STR>)))))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:adr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:DebugInfo))(VariableDeclarationFragment(SimpleName:di)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getELF)))(SimpleName:getDebugInfo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:adr)))))(IfStatement(InfixExpression(SimpleName:di)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:di)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getELF)))(SimpleName:getDebugInfo)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:adr)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(IfStatement(InfixExpression(SimpleName:di)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:di))(SimpleName:getLine)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:di)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))))(ReturnStatement(NumberLiteral:0)))))))))(IfStatement(InfixExpression(SimpleName:node)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:stop)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:readRegister)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:start)))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:EmulationException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nr)(ConditionalExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:cyc)(QualifiedName:cpu.cycles)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:isRunning))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:node))(SimpleName:step)(METHOD_INVOCATION_ARGUMENTS(SimpleName:nr)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:context.out)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:readRegister)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(QualifiedName:cpu.cycles)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:cyc)))(StringLiteral:<STR>)(QualifiedName:cpu.cycles)(StringLiteral:<STR>)))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:cyc)(QualifiedName:cpu.cycles)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:isRunning))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:nxt)(NumberLiteral:0)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:nxt)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:stepMicros)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsLong)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsLong)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:context.out)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:readRegister)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(QualifiedName:cpu.cycles)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:cyc)))(StringLiteral:<STR>)(QualifiedName:cpu.cycles)(StringLiteral:<STR>)(SimpleName:nxt)))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:stackEnd)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getMapTable))(SimpleName:heapStartAddress))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:stackStart)(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getMapTable))(SimpleName:stackStartAddress))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:current)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:readRegister)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:MSP430Constants.SP)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(SimpleName:current)))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:stackStart)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:current)))(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:stackStart)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:stackEnd)))(CharacterLiteral:<STR>)))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:adr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:adr)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:adr)(InfixExpression(SimpleName:adr)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0x100)))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:context.err)))))))(ReturnStatement(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))(ReturnStatement(NumberLiteral:1)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:register)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsRegister)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:register)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:hex16)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:readRegister)(METHOD_INVOCATION_ARGUMENTS(SimpleName:register)))))))))(ReturnStatement(NumberLiteral:0))))(ReturnStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:reset)))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:time)(ParenthesizedExpression(CastExpression(PrimitiveType:long)(ParenthesizedExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:getTimeMillis)))))))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:wallDiff)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lastWall))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:time)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:time)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lastCall)))(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:wallDiff)(StringLiteral:<STR>)(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:wallDiff)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(StringLiteral:<STR>)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:time)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:lastCall)))(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:wallDiff)))))))))(ExpressionStatement(Assignment(SimpleName:lastCall)(ASSIGNMENT_OPERATOR:=)(SimpleName:time)))(ExpressionStatement(Assignment(SimpleName:lastWall)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(IfStatement(InfixExpression(SimpleName:start)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))))(ReturnStatement(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mode)(QualifiedName:Utils.DEC)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:type)(QualifiedName:Utils.UBYTE)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:signed)(BooleanLiteral:false)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pos)(NumberLiteral:2)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:acount)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))))(IfStatement(InfixExpression(SimpleName:acount)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:4))(ExpressionStatement(Assignment(SimpleName:acount)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:4))))(WhileStatement(InfixExpression(SimpleName:pos)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:acount))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:tS)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:pos)(POSTFIX_EXPRESSION_OPERATOR:++))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block)(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.BYTE))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.WORD))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.UWORD))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.HEX))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.ASCII)))(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.BYTE))))))))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:count))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:data)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(QualifiedName:cpu.memory)(PostfixExpression(SimpleName:start)(POSTFIX_EXPRESSION_OPERATOR:++)))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:size)(METHOD_INVOCATION_ARGUMENTS(SimpleName:type)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(Block(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:data)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(ArrayAccess(QualifiedName:cpu.memory)(PostfixExpression(SimpleName:start)(POSTFIX_EXPRESSION_OPERATOR:++)))(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(ConditionalExpression(InfixExpression(SimpleName:mode)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:Utils.ASCII))(StringLiteral:<STR>)(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:data)(SimpleName:type)(SimpleName:mode)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:adr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:arg2)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:type)(QualifiedName:Utils.BYTE)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mode)(QualifiedName:Utils.DEC)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:typeRead)(BooleanLiteral:false)))(IfStatement(InfixExpression(SimpleName:count)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg2)))(Block(ExpressionStatement(Assignment(SimpleName:mode)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.ASCII)))(ExpressionStatement(Assignment(SimpleName:typeRead)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:arg2)))(Block(ExpressionStatement(Assignment(SimpleName:type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:Utils.WORD)))(ExpressionStatement(Assignment(SimpleName:typeRead)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(ConditionalExpression(SimpleName:typeRead)(NumberLiteral:2)(NumberLiteral:1))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:count))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:mode)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Utils.DEC))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:val)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsInt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:word)(InfixExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:size)(METHOD_INVOCATION_ARGUMENTS(SimpleName:type)))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(INFIX_EXPRESSION_OPERATOR:|)(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0xff)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:adr)(SimpleName:val)(SimpleName:word))))(ExpressionStatement(Assignment(SimpleName:adr)(ASSIGNMENT_OPERATOR:+=)(ConditionalExpression(SimpleName:word)(NumberLiteral:2)(NumberLiteral:1)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:EmulationException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:context.out))))))))(IfStatement(InfixExpression(SimpleName:mode)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:Utils.ASCII))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:data)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(NumberLiteral:0)))(InfixExpression(SimpleName:j)(INFIX_EXPRESSION_OPERATOR:<)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:length)))(PostfixExpression(SimpleName:j)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:adr)(POSTFIX_EXPRESSION_OPERATOR:++))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:data))(SimpleName:charAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)))(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))(BooleanLiteral:false)))))))))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Memory))(VariableDeclarationFragment(SimpleName:xmem)(CastExpression(SimpleType(SimpleName:Memory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:DebugCommands))(SimpleName:registry)))(SimpleName:getComponent)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:xmem)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:start)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:count)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(NumberLiteral:1)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:signed)(BooleanLiteral:false)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:2))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:tS)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:2)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:signed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:signed)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:2))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:tS)))(Block(ExpressionStatement(Assignment(SimpleName:size)(ASSIGNMENT_OPERATOR:=)(NumberLiteral:2)))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:count))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:data)(NumberLiteral:0)))(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmem))(SimpleName:readByte)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:start)(POSTFIX_EXPRESSION_OPERATOR:++))))))(IfStatement(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:2))(Block(ExpressionStatement(Assignment(SimpleName:data)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:data)(INFIX_EXPRESSION_OPERATOR:+)(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmem))(SimpleName:readByte)(METHOD_INVOCATION_ARGUMENTS(PostfixExpression(SimpleName:start)(POSTFIX_EXPRESSION_OPERATOR:++))))(INFIX_EXPRESSION_OPERATOR:<<)(NumberLiteral:8))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:data)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Memory))(VariableDeclarationFragment(SimpleName:xmem)(CastExpression(SimpleType(SimpleName:Memory))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression(SimpleName:DebugCommands))(SimpleName:registry)))(SimpleName:getComponent)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:xmem)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:adr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsAddress)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:val)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:word)(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0xff))))(IfStatement(SimpleName:word)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmem))(SimpleName:writeByte)(METHOD_INVOCATION_ARGUMENTS(SimpleName:adr)(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:>>)(NumberLiteral:8)))))(ExpressionStatement(Assignment(SimpleName:val)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff))))(ExpressionStatement(PostfixExpression(SimpleName:adr)(POSTFIX_EXPRESSION_OPERATOR:++)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:xmem))(SimpleName:writeByte)(METHOD_INVOCATION_ARGUMENTS(SimpleName:adr)(InfixExpression(SimpleName:val)(INFIX_EXPRESSION_OPERATOR:&)(NumberLiteral:0xff)))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(FieldDeclaration(Modifier:private)(SimpleType(SimpleName:GDBStubs))(VariableDeclarationFragment(SimpleName:stubs)(NullLiteral)))(MethodDeclaration(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(IfStatement(InfixExpression(SimpleName:stubs)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:port)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(ExpressionStatement(Assignment(SimpleName:stubs)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:GDBStubs)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stubs))(SimpleName:setupServer)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cpu)(SimpleName:port))))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicAsyncCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(FieldDeclaration(Modifier:private)(ArrayType(SimpleType(SimpleName:Loggable))(Dimension))(VariableDeclarationFragment(SimpleName:loggables)(NullLiteral)))(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Loggable))(Dimension))(VariableDeclarationFragment(SimpleName:loggable)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:getLoggables))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Loggable))(SimpleName:unit))(SimpleName:loggable)(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:id)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:unit))(SimpleName:getID))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:name)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:unit))(SimpleName:getName))))(IfStatement(InfixExpression(SimpleName:id)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:name))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:id))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:id)(StringLiteral:<STR>)(SimpleName:name)(CharacterLiteral:<STR>)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(ReturnStatement(NumberLiteral:0))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:Loggable))(Dimension))(VariableDeclarationFragment(SimpleName:logs)(ArrayCreation(ArrayType(SimpleType(SimpleName:Loggable))(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:n)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentCount))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:logs)(SimpleName:i))(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:getLoggable)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))))))(IfStatement(InfixExpression(ArrayAccess(SimpleName:logs)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:context.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(SimpleName:i)))(CharacterLiteral:<STR>)))))(ReturnStatement(NumberLiteral:1))))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Loggable))(SimpleName:l))(SimpleName:logs)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:setLogStream)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:context.out))))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:loggables))(ASSIGNMENT_OPERATOR:=)(SimpleName:logs)))(ReturnStatement(NumberLiteral:0))))(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:stopCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(IfStatement(InfixExpression(SimpleName:loggables)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:Loggable))(SimpleName:l))(SimpleName:loggables)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:l))(SimpleName:clearLogStream))))))))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgument)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)))))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:size)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:getTraceSize))))(VariableDeclarationStatement(SimpleType(SimpleName:DisAsm))(VariableDeclarationFragment(SimpleName:disAsm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:getDisAsm))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:size))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:pc)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:getBackTrace)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:size)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)(SimpleName:i))))))(VariableDeclarationStatement(SimpleType(SimpleName:DbgInstruction))(VariableDeclarationFragment(SimpleName:inst)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:disAsm))(SimpleName:getDbgInstruction)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pc)(SimpleName:cpu)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inst))(SimpleName:setPos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pc))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inst)))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:setTrace)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:getArgumentAsInt)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))))(ReturnStatement(NumberLiteral:0)))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ch))(SimpleName:registerCommand)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(ClassInstanceCreation(SimpleType(SimpleName:BasicCommand))(StringLiteral:<STR>)(StringLiteral:<STR>)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:int)(SimpleName:executeCommand)(SingleVariableDeclaration(SimpleType(SimpleName:CommandContext))(SimpleName:context))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cpu))(SimpleName:printEventQueues)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:context.out))))(ReturnStatement(NumberLiteral:0)))))))))))))))))