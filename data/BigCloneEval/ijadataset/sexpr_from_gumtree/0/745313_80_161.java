(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:boolean)(SimpleName:start)(SingleVariableDeclaration(SimpleType(SimpleName:RootDoc))(SimpleName:root))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Logger))(VariableDeclarationFragment(SimpleName:log)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Logger))(SimpleName:getLogger)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:destination)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:ruleListenerDef)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:GeneratorOfXmlSchemaForConvertersDoclet))))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:fn)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getenv)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:fn)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:fn)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral)))(StringLiteral:<STR>)(SimpleName:fn))))(ExpressionStatement(Assignment(SimpleName:destination)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fn))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:exists))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:delete)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:os)))(ExpressionStatement(Assignment(SimpleName:os)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:getParentFile))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AutoCloseInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:GeneratorOfXmlSchemaForConvertersDoclet))))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:os))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close)))(ExpressionStatement(Assignment(SimpleName:os)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destination))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:AutoCloseInputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:GeneratorOfXmlSchemaForConvertersDoclet))))(SimpleName:getResourceAsStream)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(SimpleName:os))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(TryStatement(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:getCanonicalPath)))(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e1)))))))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:s)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Utils))(SimpleName:loadFileToString)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:getCanonicalPath))(StringLiteral:<STR>)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:breakPoint)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(SimpleName:XSD_TEXT_TO_REPLACED_WITH_GENERATED_XML_SIGNATURES)))))(IfStatement(InfixExpression(SimpleName:breakPoint)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:Exception))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:XSD_TEXT_TO_REPLACED_WITH_GENERATED_XML_SIGNATURES))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:preambula)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:breakPoint)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:appendix)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:s))(SimpleName:substring)(METHOD_INVOCATION_ARGUMENTS(SimpleName:breakPoint)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:delete)))(VariableDeclarationStatement(SimpleType(SimpleName:PrintWriter))(VariableDeclarationFragment(SimpleName:schemaWriter)(ClassInstanceCreation(SimpleType(SimpleName:PrintWriter))(SimpleName:destination))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schemaWriter))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:preambula))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:ClassDoc))(Dimension))(VariableDeclarationFragment(SimpleName:classes)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:classes))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:classes.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ClassDoc))(VariableDeclarationFragment(SimpleName:cd)(ArrayAccess(SimpleName:classes)(SimpleName:i))))(VariableDeclarationStatement(SimpleType(SimpleName:PrintWriter))(VariableDeclarationFragment(SimpleName:documentationWriter)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getSuperClasses)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cd))))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(TypeLiteral(SimpleType(SimpleName:Rule))))(SimpleName:getName))))(Block(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:ConstructorDoc))(SimpleName:constructorDoc))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cd))(SimpleName:constructors))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructorDoc))(SimpleName:isPublic))(Block(IfStatement(MethodInvocation(SimpleName:isMeantForXMLAccess)(METHOD_INVOCATION_ARGUMENTS(SimpleName:constructorDoc)))(Block(IfStatement(InfixExpression(SimpleName:documentationWriter)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cd))(SimpleName:name))(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:documentationWriter)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PrintWriter))(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getCanonicalPath))))))(ExpressionStatement(MethodInvocation(SimpleName:printRuleDocStart)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cd)(SimpleName:documentationWriter))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:initFound)(BooleanLiteral:false)))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:MethodDoc))(SimpleName:methodDoc))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:cd))(SimpleName:methods))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(StringLiteral:<STR>))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:methodDoc))(SimpleName:name))))(Block(IfStatement(InfixExpression(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:methodDoc))(SimpleName:parameters))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:initFound)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:initFound))(Block))(ExpressionStatement(MethodInvocation(SimpleName:printConstructorSchema)(METHOD_INVOCATION_ARGUMENTS(SimpleName:constructorDoc)(SimpleName:schemaWriter))))(IfStatement(InfixExpression(SimpleName:documentationWriter)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:printConstructorDoc)(METHOD_INVOCATION_ARGUMENTS(SimpleName:constructorDoc)(SimpleName:documentationWriter))))))))))))))(IfStatement(InfixExpression(SimpleName:documentationWriter)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:printRuleDocEnd)(METHOD_INVOCATION_ARGUMENTS(SimpleName:documentationWriter))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schemaWriter))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:appendix))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:schemaWriter))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:destination))(SimpleName:getCanonicalPath)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:RuntimeException))(SimpleName:e))))))(ReturnStatement(BooleanLiteral:true))))))