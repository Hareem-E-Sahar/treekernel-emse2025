(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:poissonQuantile)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:d))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:d3))(Block(IfStatement(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.0D))(ReturnStatement(NumberLiteral:0)))(IfStatement(InfixExpression(SimpleName:d3)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0.0D))(ReturnStatement(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d4)(SimpleName:d3)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d5)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sqrt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d3)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i1)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(NumberLiteral:0.20000000000000001D)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:d5))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(CastExpression(PrimitiveType:int)(ParenthesizedExpression(InfixExpression(SimpleName:d4)(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:d5)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(SimpleName:normalQuantile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:d)))))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:k)(SimpleName:i)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:l)(SimpleName:i)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d6)))(DoStatement(Block(ExpressionStatement(Assignment(SimpleName:k)(ASSIGNMENT_OPERATOR:-=)(SimpleName:i1)))(ExpressionStatement(Assignment(SimpleName:k)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:max)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(SimpleName:k)))))(ExpressionStatement(Assignment(SimpleName:d6)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:poissonCDF)(METHOD_INVOCATION_ARGUMENTS(SimpleName:k)(SimpleName:d3))))))(InfixExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:d6)(INFIX_EXPRESSION_OPERATOR:>)(SimpleName:d))))(IfStatement(InfixExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:d6)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:d)))(ReturnStatement(SimpleName:k)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d8)))(DoStatement(Block(ExpressionStatement(Assignment(SimpleName:l)(ASSIGNMENT_OPERATOR:+=)(SimpleName:i1)))(ExpressionStatement(Assignment(SimpleName:d8)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:poissonCDF)(METHOD_INVOCATION_ARGUMENTS(SimpleName:l)(SimpleName:d3))))))(InfixExpression(SimpleName:d8)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:d)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:l)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:k))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:j)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:k)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:l)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d10)(MethodInvocation(SimpleName:poissonCDF)(METHOD_INVOCATION_ARGUMENTS(SimpleName:j)(SimpleName:d3)))))(IfStatement(InfixExpression(SimpleName:d10)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:d))(Block(ExpressionStatement(Assignment(SimpleName:k)(ASSIGNMENT_OPERATOR:=)(SimpleName:j)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d7)(SimpleName:d10))))(Block(ExpressionStatement(Assignment(SimpleName:l)(ASSIGNMENT_OPERATOR:=)(SimpleName:j)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:d9)(SimpleName:d10)))))))(ReturnStatement(SimpleName:l))))))