(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:write)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:path))(SingleVariableDeclaration(SimpleType(SimpleName:InputStream))(SimpleName:is))(SimpleType(SimpleName:PersistenceException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Writer))(VariableDeclarationFragment(SimpleName:out)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:OutputStreamWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:path))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:IOUtils))(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)(SimpleName:out)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:LOGGER))(SimpleName:error)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:PersistenceException))(SimpleName:e)))))(Block(IfStatement(InfixExpression(SimpleName:out)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(Assignment(SimpleName:out)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))))))))))