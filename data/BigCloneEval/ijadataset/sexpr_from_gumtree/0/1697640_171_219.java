(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:copy)(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:from))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:to))(SingleVariableDeclaration(SimpleType(SimpleName:CopyMode))(SimpleName:mode))(SimpleType(SimpleName:IOException))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:exists)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IllegalArgumentException))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:getCanonicalFile))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:throwing)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(SimpleName:e))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:isFile))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:canWrite)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IllegalArgumentException))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:getCanonicalFile))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:throwing)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(SimpleName:e))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:exists))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:mode.val)(INFIX_EXPRESSION_OPERATOR:&)(QualifiedName:CopyMode.OverwriteFile.val)))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:CopyMode.OverwriteFile.val))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IllegalArgumentException))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:getCanonicalFile))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:throwing)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(SimpleName:e))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:isDirectory))(Block(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(QualifiedName:mode.val)(INFIX_EXPRESSION_OPERATOR:&)(QualifiedName:CopyMode.OverwriteFolder.val)))(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:CopyMode.OverwriteFolder.val))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IllegalArgumentException))(VariableDeclarationFragment(SimpleName:e)(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:getCanonicalFile))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:throwing)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:e))))(ThrowStatement(SimpleName:e)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:delete))))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:from))(SimpleName:isFile))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:in)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:from)))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:inLock)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:lock))))(VariableDeclarationStatement(SimpleType(SimpleName:FileChannel))(VariableDeclarationFragment(SimpleName:out)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:to)))(SimpleName:getChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:FileLock))(VariableDeclarationFragment(SimpleName:outLock)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:lock))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:transferTo)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0)(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:size)))(SimpleName:out)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inLock))(SimpleName:release)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outLock))(SimpleName:release)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:in))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:out))(SimpleName:close))))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:mkdirs)))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:File))(Dimension))(VariableDeclarationFragment(SimpleName:contents)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:listFiles))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SimpleName:contents)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:newTo)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:to))(SimpleName:getCanonicalPath))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:newTo)(SimpleName:mode))))))))))))