(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleName:TestNoGuiServerApp)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:serverPort))(SingleVariableDeclaration(SimpleType(SimpleName:PrintWriter))(SimpleName:writer))(SingleVariableDeclaration(SimpleType(SimpleName:TestMessageType))(SimpleName:msgType))(SingleVariableDeclaration(SimpleType(SimpleName:TestBrokerType))(SimpleName:sockType))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:isBlocking))(Block(SwitchStatement(SimpleName:sockType)(SwitchCase(SimpleName:PERS))(ExpressionStatement(Assignment(SimpleName:_type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:MessageUtils.SocketType.PERSISTANT)))(BreakStatement)(SwitchCase(SimpleName:TRANS))(ExpressionStatement(Assignment(SimpleName:_type)(ASSIGNMENT_OPERATOR:=)(QualifiedName:MessageUtils.SocketType.TRANSIENT)))(BreakStatement)(SwitchCase)(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AssertUtils))(SimpleName:throwIllegalArgument)(METHOD_INVOCATION_ARGUMENTS(ThisExpression)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sockType))))))(ExpressionStatement(Assignment(SimpleName:_messagePrinter)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:MessageIOPrinter))(SimpleName:APP_NAME)(SimpleName:writer))))(SwitchStatement(SimpleName:msgType)(SwitchCase(SimpleName:JAVA))(ExpressionStatement(Assignment(SimpleName:_thread)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:newJavaThread)(METHOD_INVOCATION_ARGUMENTS(SimpleName:serverPort)(SimpleName:_messagePrinter)))))(BreakStatement)(SwitchCase(SimpleName:JSON))(ExpressionStatement(Assignment(SimpleName:_thread)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:newJsonThread)(METHOD_INVOCATION_ARGUMENTS(SimpleName:serverPort)(SimpleName:_messagePrinter)))))(BreakStatement))(ExpressionStatement(Assignment(SimpleName:_threadPrinter)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:NetThreadPrinter))(SimpleName:APP_NAME)(SimpleName:writer))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_thread))(SimpleName:addNetThreadListener)(METHOD_INVOCATION_ARGUMENTS(SimpleName:_threadPrinter))))(IfStatement(SimpleName:isBlocking)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_thread))(SimpleName:run))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_thread))(SimpleName:start)))))))))