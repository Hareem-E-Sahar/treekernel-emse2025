(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:digestRules)(SingleVariableDeclaration(SimpleType(SimpleName:Element))(SimpleName:root))(Block(ExpressionStatement(Assignment(SimpleName:rules)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:HashSet)))))(ForStatement(VariableDeclarationExpression(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:getChildren)))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Element))(VariableDeclarationFragment(SimpleName:child)(CastExpression(SimpleType(SimpleName:Element))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:i))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:Rule))(VariableDeclarationFragment(SimpleName:rule)(MethodInvocation(SimpleName:getRule)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:child))(SimpleName:getName))))))(IfStatement(InfixExpression(SimpleName:rule)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rule))(SimpleName:digest)(METHOD_INVOCATION_ARGUMENTS(SimpleName:child))))(ExpressionStatement(MethodInvocation(SimpleName:addRule)(METHOD_INVOCATION_ARGUMENTS(SimpleName:rule))))))))))))