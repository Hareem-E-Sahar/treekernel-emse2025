(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:int)(SimpleName:search)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:x))(Block(VariableDeclarationStatement(SimpleType(SimpleName:RuleBasedCollator))(VariableDeclarationFragment(SimpleName:coll)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Vector))(SimpleType(SimpleName:String)))(VariableDeclarationFragment(SimpleName:uniqueWords)))(VariableDeclarationStatement(ArrayType(PrimitiveType:int)(Dimension))(VariableDeclarationFragment(SimpleName:appearIdx)))(IfStatement(InfixExpression(SimpleName:translationDirection)(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:TranslationDirection.FIRST_SECOND_LANGUAGE))(Block(ExpressionStatement(Assignment(SimpleName:coll)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:RuleBasedCollator))(SimpleName:firstLangColl))))(ExpressionStatement(Assignment(SimpleName:uniqueWords)(ASSIGNMENT_OPERATOR:=)(SimpleName:uniqueFirstLangWords)))(ExpressionStatement(Assignment(SimpleName:appearIdx)(ASSIGNMENT_OPERATOR:=)(SimpleName:firstLangAppearIdx))))(Block(ExpressionStatement(Assignment(SimpleName:coll)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:RuleBasedCollator))(SimpleName:secondLangColl))))(ExpressionStatement(Assignment(SimpleName:uniqueWords)(ASSIGNMENT_OPERATOR:=)(SimpleName:uniqueSecondLangWords)))(ExpressionStatement(Assignment(SimpleName:appearIdx)(ASSIGNMENT_OPERATOR:=)(SimpleName:secondLangAppearIdx)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:low)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:high)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uniqueWords))(SimpleName:size))(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:mid)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:tries)(NumberLiteral:0)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:beginsWithIdx)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))(WhileStatement(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:high))(Block(ExpressionStatement(PostfixExpression(SimpleName:tries)(POSTFIX_EXPRESSION_OPERATOR:++)))(ExpressionStatement(Assignment(SimpleName:mid)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:low)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:high)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:midTranslationText)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uniqueWords))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mid)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:compResult)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:coll))(SimpleName:compare)(METHOD_INVOCATION_ARGUMENTS(SimpleName:midTranslationText)(SimpleName:x)))))(IfStatement(InfixExpression(SimpleName:compResult)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:low)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))(IfStatement(InfixExpression(SimpleName:compResult)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(SimpleType(SimpleName:CollationElementIterator))(VariableDeclarationFragment(SimpleName:transTextIt)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:coll))(SimpleName:getCollationElementIterator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:midTranslationText)))))(VariableDeclarationStatement(SimpleType(SimpleName:CollationElementIterator))(VariableDeclarationFragment(SimpleName:searchTextIt)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:coll))(SimpleName:getCollationElementIterator)(METHOD_INVOCATION_ARGUMENTS(SimpleName:x)))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:transTextElem)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transTextIt))(SimpleName:next))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:searchTextElem)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:searchTextIt))(SimpleName:next))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:beginsWith)(BooleanLiteral:false)))(WhileStatement(InfixExpression(InfixExpression(SimpleName:transTextElem)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:CollationElementIterator.NULLORDER))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:searchTextElem)(INFIX_EXPRESSION_OPERATOR:!=)(QualifiedName:CollationElementIterator.NULLORDER)))(Block(IfStatement(InfixExpression(SimpleName:transTextElem)(INFIX_EXPRESSION_OPERATOR:!=)(SimpleName:searchTextElem))(Block(ExpressionStatement(Assignment(SimpleName:beginsWith)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(BreakStatement))(Block(ExpressionStatement(Assignment(SimpleName:beginsWith)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(Assignment(SimpleName:transTextElem)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:transTextIt))(SimpleName:next))))(ExpressionStatement(Assignment(SimpleName:searchTextElem)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:searchTextIt))(SimpleName:next))))))(IfStatement(SimpleName:beginsWith)(ExpressionStatement(Assignment(SimpleName:beginsWithIdx)(ASSIGNMENT_OPERATOR:=)(SimpleName:mid))))(ExpressionStatement(Assignment(SimpleName:high)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:tries)(StringLiteral:<STR>)))))(ReturnStatement(ConditionalExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:mid)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:appearIdx.length))))(ArrayAccess(SimpleName:appearIdx)(SimpleName:mid))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))(ReturnStatement(ConditionalExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:beginsWithIdx)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:beginsWithIdx)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:appearIdx.length))))(ArrayAccess(SimpleName:appearIdx)(SimpleName:beginsWithIdx))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))))