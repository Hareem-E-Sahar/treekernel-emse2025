(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:int)(SimpleName:bsearch)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:l))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:h))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:tot))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:costs))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:lo)(SimpleName:l)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:hi)(SimpleName:h)))(WhileStatement(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:hi))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:cur)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:lo)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hi)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ot)(FieldAccess(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Node))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:nodes)))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cur)))))(SimpleName:f))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:tot)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:ot)))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:tot)(INFIX_EXPRESSION_OPERATOR:==)(SimpleName:ot))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:costs)(INFIX_EXPRESSION_OPERATOR:>=)(FieldAccess(ParenthesizedExpression(CastExpression(SimpleType(SimpleName:Node))(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:nodes)))(SimpleName:elementAt)(METHOD_INVOCATION_ARGUMENTS(SimpleName:cur)))))(SimpleName:g))))))(Block(ExpressionStatement(Assignment(SimpleName:hi)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:cur)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))(Block(ExpressionStatement(Assignment(SimpleName:lo)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:cur)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))))))))(ReturnStatement(SimpleName:lo))))))