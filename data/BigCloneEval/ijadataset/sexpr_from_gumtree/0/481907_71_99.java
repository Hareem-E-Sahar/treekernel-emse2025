(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(SimpleType(SimpleName:ResultSet))(SimpleName:executeScan)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:startTerm))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:maxResults))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:fieldName))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:indexBase))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:indexName))(SimpleType(SimpleName:GenericSearchException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ResultSet))(VariableDeclarationFragment(SimpleName:rs)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:st)(SimpleName:startTerm)))(IfStatement(InfixExpression(InfixExpression(SimpleName:st)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:trim)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:st)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:url)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(InfixExpression(SimpleName:indexBase)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:scanParams)(StringLiteral:<STR>)(SimpleName:maxResults)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:URLEncoder))(SimpleName:encode)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:fieldName)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:st))(SimpleName:trim)))(StringLiteral:<STR>))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:GenericSearchException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedEncodingException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:GenericSearchException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:connect))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:GenericSearchException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString)))))))(ExpressionStatement(Assignment(SimpleName:content)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:content)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getContent)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:GenericSearchException))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:toString)))))))(ExpressionStatement(Assignment(SimpleName:rs)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ResultSet))(CastExpression(SimpleType(SimpleName:InputStream))(SimpleName:content)))))(ReturnStatement(SimpleName:rs))))))