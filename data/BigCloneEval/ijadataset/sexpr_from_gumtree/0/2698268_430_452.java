(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(PrimitiveType:void)(SimpleName:set)(SingleVariableDeclaration(SimpleType(SimpleName:BasicEvent))(SimpleName:a))(SingleVariableDeclaration(SimpleType(SimpleName:BasicEvent))(SimpleName:b))(Block(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:timestamp))(ASSIGNMENT_OPERATOR:=)(QualifiedName:b.timestamp)))(ExpressionStatement(Assignment(SimpleName:ax)(ASSIGNMENT_OPERATOR:=)(QualifiedName:a.x)))(ExpressionStatement(Assignment(SimpleName:bx)(ASSIGNMENT_OPERATOR:=)(QualifiedName:b.x)))(ExpressionStatement(Assignment(SimpleName:ay)(ASSIGNMENT_OPERATOR:=)(QualifiedName:a.y)))(ExpressionStatement(Assignment(SimpleName:by)(ASSIGNMENT_OPERATOR:=)(QualifiedName:b.y)))(ExpressionStatement(Assignment(SimpleName:x)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:ax)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:bx)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:y)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:ay)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:by)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ExpressionStatement(Assignment(SimpleName:dt)(ASSIGNMENT_OPERATOR:=)(InfixExpression(QualifiedName:b.timestamp)(INFIX_EXPRESSION_OPERATOR:-)(QualifiedName:a.timestamp))))(ExpressionStatement(Assignment(SimpleName:dx)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:ax)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:bx))))(ExpressionStatement(Assignment(SimpleName:dy)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:ay)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:by))))(ExpressionStatement(Assignment(SimpleName:length)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sqrt)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(SimpleName:dx)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dx))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:dy)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:dy)))))))(ExpressionStatement(Assignment(SimpleName:thetaRad)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:atan2)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dx)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:dy))))))(ExpressionStatement(Assignment(SimpleName:rhoPixels)(ASSIGNMENT_OPERATOR:=)(InfixExpression(InfixExpression(SimpleName:x)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:cos)(METHOD_INVOCATION_ARGUMENTS(SimpleName:thetaRad))))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:y)(INFIX_EXPRESSION_OPERATOR:*)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Math))(SimpleName:sin)(METHOD_INVOCATION_ARGUMENTS(SimpleName:thetaRad)))))))(IfStatement(InfixExpression(SimpleName:rhoPixels)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:rhoPixels)(ASSIGNMENT_OPERATOR:=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(SimpleName:rhoPixels))))(IfStatement(InfixExpression(SimpleName:thetaRad)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:thetaRad)(ASSIGNMENT_OPERATOR:-=)(QualifiedName:Math.PI))))(Block(ExpressionStatement(Assignment(SimpleName:thetaRad)(ASSIGNMENT_OPERATOR:+=)(QualifiedName:Math.PI)))))))))))