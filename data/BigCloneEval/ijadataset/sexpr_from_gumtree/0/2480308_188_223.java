(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:connect)(SimpleType(SimpleName:ExtractorException))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Class))(SimpleName:forName)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:DriverManager))(SimpleName:getConnection)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url)(SimpleName:login)(SimpleName:password))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ExtractorException))(StringLiteral:<STR>)(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SQLException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ExtractorException))(StringLiteral:<STR>)(SimpleName:e))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:MySQLIOs))(VariableDeclarationFragment(SimpleName:io)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:MySQLIOs))(SimpleName:getMySQLIOs)(METHOD_INVOCATION_ARGUMENTS(SimpleName:conn)))))(ExpressionStatement(Assignment(SimpleName:input)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:io))(SimpleName:getInput))))(ExpressionStatement(Assignment(SimpleName:output)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:io))(SimpleName:getOutput)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ExtractorException))(StringLiteral:<STR>)(SimpleName:e))))))(ExpressionStatement(Assignment(FieldAccess(ThisExpression)(SimpleName:relayDir))(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:binlogDir))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:relayDir))(SimpleName:isDirectory)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ExtractorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:relayDir))(SimpleName:getAbsolutePath)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:relayDir))(SimpleName:canWrite)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ExtractorException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:relayDir))(SimpleName:getAbsolutePath)))))))(ExpressionStatement(Assignment(SimpleName:binlogIndex)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:relayDir)(InfixExpression(SimpleName:binlogPrefix)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)))))(IfStatement(SimpleName:autoClean)(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:binlogIndex))(SimpleName:delete))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:binlogIndex))(SimpleName:getAbsolutePath)))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:baseLog)))(IfStatement(InfixExpression(FieldAccess(ThisExpression)(SimpleName:binlog))(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ExpressionStatement(Assignment(SimpleName:baseLog)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(SimpleName:baseLog)(ASSIGNMENT_OPERATOR:=)(SimpleName:binlog))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:child))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:relayDir))(SimpleName:listFiles))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:child))(SimpleName:isFile)))(ContinueStatement)(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:child))(SimpleName:getName)))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(FieldAccess(ThisExpression)(SimpleName:binlogPrefix)))))(ContinueStatement)(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:child))(SimpleName:getName)))(SimpleName:compareTo)(METHOD_INVOCATION_ARGUMENTS(SimpleName:baseLog)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ContinueStatement))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:child))(SimpleName:delete))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:child))(SimpleName:getAbsolutePath)))))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:info)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:binlog)(StringLiteral:<STR>)(SimpleName:offset)))))(ExpressionStatement(MethodInvocation(SimpleName:sendBinlogDumpPacket)(METHOD_INVOCATION_ARGUMENTS(SimpleName:output)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ExtractorException))(StringLiteral:<STR>)(SimpleName:e))))))))))