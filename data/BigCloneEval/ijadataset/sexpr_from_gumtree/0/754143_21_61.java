(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:IAdaptable))(SimpleName:createAdaptableObject)(SingleVariableDeclaration(SimpleType(SimpleName:IAdaptable))(SimpleName:basisObject))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IAdaptable))(VariableDeclarationFragment(SimpleName:adaptableObject)(NullLiteral)))(ExpressionStatement(Assignment(SimpleName:adaptableObject)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:objectMap))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(SimpleName:basisObject)))))(IfStatement(InfixExpression(SimpleName:adaptableObject)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Constructor))(VariableDeclarationFragment(SimpleName:constructor)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:constructor)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:adaptableClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:basisObject))(SimpleName:getClass)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:SecurityException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:NoSuchMethodException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(IfStatement(InfixExpression(SimpleName:constructor)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:adaptableObject)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:IAdaptable))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:basisObject)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalArgumentException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InvocationTargetException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:adaptableObject)(ASSIGNMENT_OPERATOR:=)(CastExpression(SimpleType(SimpleName:IAdaptable))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:adaptableClass))(SimpleName:newInstance))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InstantiationException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalAccessException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))(IfStatement(InfixExpression(SimpleName:adaptableObject)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:objectMap))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:basisObject)(SimpleName:adaptableObject))))))))(ReturnStatement(SimpleName:adaptableObject))))))