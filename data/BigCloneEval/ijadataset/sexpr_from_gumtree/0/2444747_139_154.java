(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:attachLogger)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GLOBAL_LOGGER))(SimpleName:setUseParentHandlers)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GLOBAL_LOGGER))(SimpleName:setLevel)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Level.INFO))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:GLOBAL_LOGGER))(SimpleName:addHandler)(METHOD_INVOCATION_ARGUMENTS(SimpleName:_loggerHandler))))(ExpressionStatement(Assignment(SimpleName:_defaultUncaughtExceptionHandler)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:getDefaultUncaughtExceptionHandler))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:setDefaultUncaughtExceptionHandler)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:UncaughtExceptionHandler))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:uncaughtException)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Thread))(SimpleName:t))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(SimpleName:writeThreadThrowable)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)(SimpleName:e))))(IfStatement(InfixExpression(SimpleName:_defaultUncaughtExceptionHandler)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:_defaultUncaughtExceptionHandler))(SimpleName:uncaughtException)(METHOD_INVOCATION_ARGUMENTS(SimpleName:t)(SimpleName:e)))))))))))))))))