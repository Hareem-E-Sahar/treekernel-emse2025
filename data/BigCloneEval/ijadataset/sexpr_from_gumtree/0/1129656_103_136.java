(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:sendObjectRequest)(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.String))(SimpleName:servletName))(SingleVariableDeclaration(SimpleType(QualifiedName:java.lang.Object))(SimpleName:request))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:reqxml)(NullLiteral)))(VariableDeclarationStatement(SimpleType(QualifiedName:org.jdom.Document))(VariableDeclarationFragment(SimpleName:retdoc)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:myurl)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:org.verus.ngl.client.components.NGLUtilities))(SimpleName:getInstance)))(SimpleName:getServerIp))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:myport)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:org.verus.ngl.client.components.NGLUtilities))(SimpleName:getInstance)))(SimpleName:getServerPort))))(IfStatement(InfixExpression(InfixExpression(SimpleName:myport)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myport))(SimpleName:trim)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:myport)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:myurl)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:myurl))(SimpleName:trim)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(Block(ExpressionStatement(Assignment(SimpleName:myurl)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(QualifiedName:java.net.URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(QualifiedName:java.net.URL))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:myurl)(StringLiteral:<STR>)(SimpleName:myport)(StringLiteral:<STR>)(SimpleName:servletName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:myurl)(StringLiteral:<STR>)(SimpleName:myport)(StringLiteral:<STR>)(SimpleName:servletName)))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.net.URLConnection))(VariableDeclarationFragment(SimpleName:urlconn)(CastExpression(SimpleType(QualifiedName:java.net.URLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlconn))(SimpleName:setDoOutput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.OutputStream))(VariableDeclarationFragment(SimpleName:os)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlconn))(SimpleName:getOutputStream))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.CheckedOutputStream))(VariableDeclarationFragment(SimpleName:cos)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.CheckedOutputStream))(SimpleName:os)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.Adler32))))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.GZIPOutputStream))(VariableDeclarationFragment(SimpleName:gop)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.GZIPOutputStream))(SimpleName:cos))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.ObjectOutputStream))(VariableDeclarationFragment(SimpleName:dos)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.ObjectOutputStream))(SimpleName:gop))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dos))(SimpleName:writeObject)(METHOD_INVOCATION_ARGUMENTS(SimpleName:request))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dos))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dos))(SimpleName:close)))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.InputStream))(VariableDeclarationFragment(SimpleName:ios)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlconn))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.CheckedInputStream))(VariableDeclarationFragment(SimpleName:cis)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.CheckedInputStream))(SimpleName:ios)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.Adler32))))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.GZIPInputStream))(VariableDeclarationFragment(SimpleName:gip)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.GZIPInputStream))(SimpleName:cis))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.io.ObjectInputStream))(VariableDeclarationFragment(SimpleName:br)(ClassInstanceCreation(SimpleType(QualifiedName:java.io.ObjectInputStream))(SimpleName:gip))))(ExpressionStatement(Assignment(SimpleName:reqxml)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:br))(SimpleName:readObject)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exp))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:exp))(SimpleName:printStackTrace)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:System.out))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:exp))))))))(ReturnStatement(SimpleName:reqxml))))))