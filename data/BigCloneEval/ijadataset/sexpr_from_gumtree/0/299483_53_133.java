(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SingleMemberAnnotation(SimpleName:SuppressWarnings)(StringLiteral:<STR>))(Modifier:public)(Modifier:static)(TypeParameter(SimpleName:T))(SimpleType(SimpleName:T))(SimpleName:chain)(SingleVariableDeclaration(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:T)))(SimpleName:clazz))(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:T))(SimpleName:defaultInstance))(SimpleType(SimpleName:ServiceException))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:ClassLoader))(VariableDeclarationFragment(SimpleName:loader)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Util))(SimpleName:getClassLoader)(METHOD_INVOCATION_ARGUMENTS(NullLiteral)))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Enumeration))(SimpleType(SimpleName:URL)))(VariableDeclarationFragment(SimpleName:resources)(MethodInvocation(SimpleName:getServiceResources)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clazz)(SimpleName:loader)))))(VariableDeclarationStatement(SimpleType(SimpleName:T))(VariableDeclarationFragment(SimpleName:current)(SimpleName:defaultInstance)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:hasMoreElements))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resources))(SimpleName:nextElement))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:reader)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)))(ExpressionStatement(Assignment(SimpleName:reader)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream))))))(WhileStatement(InfixExpression(NullLiteral)(INFIX_EXPRESSION_OPERATOR:!=)(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:readLine)))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ContinueStatement)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:T)))(VariableDeclarationFragment(SimpleName:serviceClass)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:serviceClass)(ASSIGNMENT_OPERATOR:=)(CastExpression(ParameterizedType(SimpleType(SimpleName:Class))(SimpleType(SimpleName:T)))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:loader))(SimpleName:loadClass)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line)))))))(CatchClause(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:ClassNotFoundException))(SimpleName:e))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:LogRecord))(VariableDeclarationFragment(SimpleName:logRecord)(ClassInstanceCreation(SimpleType(SimpleName:LogRecord))(QualifiedName:Level.SEVERE)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setParameters)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:line))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setThrown)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundleName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundleName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundle)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundle)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:logRecord))))(ContinueStatement))))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Constructor))(SimpleType(SimpleName:T)))(VariableDeclarationFragment(SimpleName:constructor)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:current)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:constructor)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceClass))(SimpleName:getConstructor)))))(Block(ExpressionStatement(Assignment(SimpleName:constructor)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:serviceClass))(SimpleName:getConstructor)(METHOD_INVOCATION_ARGUMENTS(SimpleName:clazz))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:LogRecord))(VariableDeclarationFragment(SimpleName:logRecord)(ClassInstanceCreation(SimpleType(SimpleName:LogRecord))(QualifiedName:Level.SEVERE)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setParameters)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:line))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setThrown)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundleName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundleName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundle)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundle)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:logRecord))))(ContinueStatement))))(VariableDeclarationStatement(SimpleType(SimpleName:T))(VariableDeclarationFragment(SimpleName:instance)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:current)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:instance)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:newInstance)))))(Block(ExpressionStatement(Assignment(SimpleName:instance)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:constructor))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(SimpleName:current))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:LogRecord))(VariableDeclarationFragment(SimpleName:logRecord)(ClassInstanceCreation(SimpleType(SimpleName:LogRecord))(QualifiedName:Level.SEVERE)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setParameters)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:line))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setThrown)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundleName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundleName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundle)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundle)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:logRecord))))(ContinueStatement))))(ExpressionStatement(Assignment(SimpleName:current)(ASSIGNMENT_OPERATOR:=)(SimpleName:instance))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:LogRecord))(VariableDeclarationFragment(SimpleName:logRecord)(ClassInstanceCreation(SimpleType(SimpleName:LogRecord))(QualifiedName:Level.SEVERE)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setParameters)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(SimpleName:Object))(Dimension))(ArrayInitializer(SimpleName:url))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setThrown)(METHOD_INVOCATION_ARGUMENTS(SimpleName:e))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundleName)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundleName)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logRecord))(SimpleName:setResourceBundle)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:getResourceBundle)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(SimpleName:logRecord))))))(Block(IfStatement(InfixExpression(SimpleName:reader)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:reader))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(EmptyStatement))))(ExpressionStatement(Assignment(SimpleName:reader)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))))))))(ReturnStatement(SimpleName:current))))))