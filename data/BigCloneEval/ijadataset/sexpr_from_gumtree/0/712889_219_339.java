(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Hashtable))(SimpleName:processData)(SingleVariableDeclaration(SimpleType(SimpleName:ServletInputStream))(SimpleName:is))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:boundary))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:saveInDir))(SimpleType(SimpleName:IllegalArgumentException))(SimpleType(SimpleName:IOException))(Block(IfStatement(InfixExpression(SimpleName:is)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))(IfStatement(InfixExpression(InfixExpression(SimpleName:boundary)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:boundary))(SimpleName:trim)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:boundary)(StringLiteral:<STR>)))))(ExpressionStatement(Assignment(SimpleName:boundary)(ASSIGNMENT_OPERATOR:=)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:boundary))))(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:stLine)(NullLiteral))(VariableDeclarationFragment(SimpleName:stFields)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:UploadFileInfo))(VariableDeclarationFragment(SimpleName:fileInfo)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:Hashtable))(VariableDeclarationFragment(SimpleName:dataTable)(ClassInstanceCreation(SimpleType(SimpleName:Hashtable))(NumberLiteral:5))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(NullLiteral))(VariableDeclarationFragment(SimpleName:field)(NullLiteral))(VariableDeclarationFragment(SimpleName:paramName)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:saveFiles)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:saveInDir)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:saveInDir))(SimpleName:trim)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isFile)(BooleanLiteral:false)))(IfStatement(SimpleName:saveFiles)(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:f)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:saveInDir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:f))(SimpleName:mkdirs)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:boundary)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:boundary)(StringLiteral:<STR>)(SimpleName:line)))))(WhileStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:||)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:startsWith)(METHOD_INVOCATION_ARGUMENTS(SimpleName:boundary)))))(ReturnStatement(SimpleName:dataTable)))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(SimpleName:dataTable)))(ExpressionStatement(Assignment(SimpleName:stLine)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:line)(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:countTokens))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:nextToken)))(SimpleName:toLowerCase))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:stFields)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:nextToken))(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stFields))(SimpleName:countTokens))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:fileInfo)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:UploadFileInfo)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stFields))(SimpleName:nextToken)))(ExpressionStatement(Assignment(SimpleName:paramName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stFields))(SimpleName:nextToken))))(ExpressionStatement(Assignment(SimpleName:isFile)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:hasMoreTokens))(Block(ExpressionStatement(Assignment(SimpleName:field)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:nextToken))))(ExpressionStatement(Assignment(SimpleName:stFields)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:field)(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stFields))(SimpleName:countTokens))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:1))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stFields))(SimpleName:nextToken)))(SimpleName:trim)))(SimpleName:equalsIgnoreCase)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(QualifiedName:fileInfo.name)(ASSIGNMENT_OPERATOR:=)(SimpleName:paramName)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:value)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stFields))(SimpleName:nextToken))))(IfStatement(InfixExpression(InfixExpression(SimpleName:value)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:value))(SimpleName:trim)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ExpressionStatement(Assignment(QualifiedName:fileInfo.clientFileName)(ASSIGNMENT_OPERATOR:=)(SimpleName:value)))(ExpressionStatement(Assignment(SimpleName:isFile)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ContinueStatement))))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:field))(SimpleName:toLowerCase)))(SimpleName:indexOf)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ContinueStatement))))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:skipBlankLine)(BooleanLiteral:true)))(IfStatement(SimpleName:isFile)(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(SimpleName:dataTable)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:trim)))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:1))(ExpressionStatement(Assignment(SimpleName:skipBlankLine)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(Block(ExpressionStatement(Assignment(SimpleName:stLine)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:line)(StringLiteral:<STR>))))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:countTokens))(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IllegalArgumentException))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:nextToken)))(ExpressionStatement(Assignment(QualifiedName:fileInfo.fileContentType)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stLine))(SimpleName:nextToken))))))))(IfStatement(SimpleName:skipBlankLine)(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(SimpleName:dataTable)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:isFile))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(ReturnStatement(SimpleName:dataTable)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dataTable))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:paramName)(SimpleName:line))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:is)))))(ContinueStatement)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:os)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:path)(NullLiteral)))(IfStatement(SimpleName:saveFiles)(ExpressionStatement(Assignment(SimpleName:os)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(Assignment(SimpleName:path)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getFileName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:saveInDir)(QualifiedName:fileInfo.clientFileName)))))))(ExpressionStatement(Assignment(SimpleName:os)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:ByteArrayOutputStream))(SimpleName:ONE_MB)))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:readingContent)(BooleanLiteral:true)))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:previousLine)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:ONE_MB)))))))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:temp)(Dimension)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:byte)(VariableDeclarationFragment(SimpleName:currentLine)(Dimension)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(InfixExpression(NumberLiteral:2)(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:ONE_MB)))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:read))(VariableDeclarationFragment(SimpleName:read3)))(IfStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:readLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previousLine)(NumberLiteral:0)(QualifiedName:previousLine.length)))))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(BreakStatement)))(WhileStatement(SimpleName:readingContent)(Block(IfStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:read3)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:is))(SimpleName:readLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:currentLine)(NumberLiteral:0)(QualifiedName:currentLine.length)))))(INFIX_EXPRESSION_OPERATOR:==)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(BreakStatement)))(IfStatement(MethodInvocation(SimpleName:compareBoundary)(METHOD_INVOCATION_ARGUMENTS(SimpleName:boundary)(SimpleName:currentLine)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previousLine)(NumberLiteral:0)(InfixExpression(SimpleName:read)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:2)))))(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:currentLine)(NumberLiteral:0)(SimpleName:read3))))(BreakStatement))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:previousLine)(NumberLiteral:0)(SimpleName:read))))(ExpressionStatement(Assignment(SimpleName:temp)(ASSIGNMENT_OPERATOR:=)(SimpleName:currentLine)))(ExpressionStatement(Assignment(SimpleName:currentLine)(ASSIGNMENT_OPERATOR:=)(SimpleName:previousLine)))(ExpressionStatement(Assignment(SimpleName:previousLine)(ASSIGNMENT_OPERATOR:=)(SimpleName:temp)))(ExpressionStatement(Assignment(SimpleName:read)(ASSIGNMENT_OPERATOR:=)(SimpleName:read3)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:os))(SimpleName:close)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:saveFiles))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ByteArrayOutputStream))(VariableDeclarationFragment(SimpleName:baos)(CastExpression(SimpleType(SimpleName:ByteArrayOutputStream))(SimpleName:os))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileInfo))(SimpleName:setFileContents)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:baos))(SimpleName:toByteArray))))))(ExpressionStatement(Assignment(QualifiedName:fileInfo.file)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:path)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dataTable))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(SimpleName:paramName)(SimpleName:fileInfo)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(SimpleName:e)))))))(ReturnStatement(SimpleName:dataTable))))))