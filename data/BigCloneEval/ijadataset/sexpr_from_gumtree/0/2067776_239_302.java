(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:NetworkChannel))(SimpleName:createNewConnection)(SingleVariableDeclaration(SimpleType(SimpleName:SocketAddress))(SimpleName:socketServerAddress))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:isSSL))(SimpleType(SimpleName:OpenR66ProtocolNetworkException))(SimpleType(SimpleName:OpenR66ProtocolRemoteShutdownException))(SimpleType(SimpleName:OpenR66ProtocolNoConnectionException))(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(SimpleName:isAddressValid)(METHOD_INVOCATION_ARGUMENTS(SimpleName:socketServerAddress))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenR66ProtocolRemoteShutdownException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:NetworkChannel))(VariableDeclarationFragment(SimpleName:networkChannel)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:networkChannel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:getRemoteChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:socketServerAddress))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:OpenR66ProtocolNoDataException))(SimpleName:e1))(Block(ExpressionStatement(Assignment(SimpleName:networkChannel)(ASSIGNMENT_OPERATOR:=)(NullLiteral))))))(IfStatement(InfixExpression(SimpleName:networkChannel)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(SimpleName:networkChannel))))(ExpressionStatement(PostfixExpression(QualifiedName:networkChannel.count)(POSTFIX_EXPRESSION_OPERATOR:++)))(ReturnStatement(SimpleName:networkChannel))))(VariableDeclarationStatement(SimpleType(SimpleName:ChannelFuture))(VariableDeclarationFragment(SimpleName:channelFuture)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:Configuration.RETRYNB))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(SimpleName:isSSL)(Block(IfStatement(InfixExpression(QualifiedName:Configuration.configuration.HOST_SSLID)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:channelFuture)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientSslBootstrap))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(SimpleName:socketServerAddress))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenR66ProtocolNoConnectionException))(StringLiteral:<STR>))))))(Block(ExpressionStatement(Assignment(SimpleName:channelFuture)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:clientBootstrap))(SimpleName:connect)(METHOD_INVOCATION_ARGUMENTS(SimpleName:socketServerAddress)))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:await))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e1))(Block)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:isSuccess))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:Channel))(VariableDeclarationFragment(SimpleName:channel)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:getChannel))))(IfStatement(SimpleName:isSSL)(Block(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:NetworkSslServerHandler))(SimpleName:isSslConnectedChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:close)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenR66ProtocolNoConnectionException))(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:networkChannelGroup))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel))))(ReturnStatement(MethodInvocation(SimpleName:putRemoteChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:channel)))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Configuration.WAITFORNETOP)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:isDone)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenR66ProtocolNoConnectionException))(StringLiteral:<STR>)))))(IfStatement(InstanceofExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:getCause))(SimpleType(SimpleName:ConnectException)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:getCause)))(SimpleName:getMessage))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenR66ProtocolNoConnectionException))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:getCause)))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:getCause)))))))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Configuration.WAITFORNETOP)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenR66ProtocolNetworkException))(StringLiteral:<STR>)(SimpleName:e))))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:OpenR66ProtocolNetworkException))(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:channelFuture))(SimpleName:getCause))))))))