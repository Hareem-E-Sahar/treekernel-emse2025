(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(Modifier:static)(PrimitiveType:void)(SimpleName:main)(SingleVariableDeclaration(ArrayType(SimpleType(SimpleName:String))(Dimension))(SimpleName:args))(SimpleType(SimpleName:Exception))(Block(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bInterpretFilenameAsUrl)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bForceConversion)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bBigEndian)(BooleanLiteral:false)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nSampleSizeInBits)(NumberLiteral:16)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strMixerName)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nExternalBufferSize)(SimpleName:DEFAULT_EXTERNAL_BUFFER_SIZE)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nInternalBufferSize)(QualifiedName:AudioSystem.NOT_SPECIFIED)))(VariableDeclarationStatement(SimpleType(SimpleName:Getopt))(VariableDeclarationFragment(SimpleName:g)(ClassInstanceCreation(SimpleType(SimpleName:Getopt))(StringLiteral:<STR>)(SimpleName:args)(StringLiteral:<STR>))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:c)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:c)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getopt))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(SwitchStatement(SimpleName:c)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioCommon))(SimpleName:listMixersAndExit)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:bInterpretFilenameAsUrl)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:bInterpretFilenameAsUrl)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:strMixerName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:strMixerName))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:nExternalBufferSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:nInternalBufferSize)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strEndianess)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))(ExpressionStatement(Assignment(SimpleName:strEndianess)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strEndianess))(SimpleName:toLowerCase))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strEndianess))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:bBigEndian)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strEndianess))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ExpressionStatement(Assignment(SimpleName:bBigEndian)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false))))(Block(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit))))))(ExpressionStatement(Assignment(SimpleName:bForceConversion)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:nSampleSizeInBits)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptarg))))))(ExpressionStatement(Assignment(SimpleName:bForceConversion)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(Assignment(SimpleName:DEBUG)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(BreakStatement)(SwitchCase(CharacterLiteral:<STR>))(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))(SwitchCase)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:c)))))(BreakStatement))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:strFilenameOrUrl)(NullLiteral)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:g))(SimpleName:getOptind))))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:args.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(IfStatement(InfixExpression(SimpleName:strFilenameOrUrl)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:strFilenameOrUrl)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:args)(SimpleName:i)))))(Block(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))))))(IfStatement(InfixExpression(SimpleName:strFilenameOrUrl)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:printUsageAndExit)))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioInputStream))(VariableDeclarationFragment(SimpleName:audioInputStream)(NullLiteral)))(IfStatement(SimpleName:bInterpretFilenameAsUrl)(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:strFilenameOrUrl))))(ExpressionStatement(Assignment(SimpleName:audioInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:url))))))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:strFilenameOrUrl))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:inputStream)(ClassInstanceCreation(SimpleType(SimpleName:BufferedInputStream))(QualifiedName:System.in))))(ExpressionStatement(Assignment(SimpleName:audioInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:inputStream))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:strFilenameOrUrl))))(ExpressionStatement(Assignment(SimpleName:audioInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:audioInputStream))))))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:audioFormat)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:getFormat))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:audioFormat))))))(VariableDeclarationStatement(SimpleType(QualifiedName:DataLine.Info))(VariableDeclarationFragment(SimpleName:info)(ClassInstanceCreation(SimpleType(QualifiedName:DataLine.Info))(TypeLiteral(SimpleType(SimpleName:SourceDataLine)))(SimpleName:audioFormat)(SimpleName:nInternalBufferSize))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:bIsSupportedDirectly)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:isLineSupported)(METHOD_INVOCATION_ARGUMENTS(SimpleName:info)))))(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:bIsSupportedDirectly))(INFIX_EXPRESSION_OPERATOR:||)(SimpleName:bForceConversion))(Block(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:sourceFormat)(SimpleName:audioFormat)))(VariableDeclarationStatement(SimpleType(SimpleName:AudioFormat))(VariableDeclarationFragment(SimpleName:targetFormat)(ClassInstanceCreation(SimpleType(SimpleName:AudioFormat))(QualifiedName:AudioFormat.Encoding.PCM_SIGNED)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getSampleRate))(SimpleName:nSampleSizeInBits)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getChannels))(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getChannels))(INFIX_EXPRESSION_OPERATOR:*)(ParenthesizedExpression(InfixExpression(SimpleName:nSampleSizeInBits)(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:8))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:sourceFormat))(SimpleName:getSampleRate))(SimpleName:bBigEndian))))(IfStatement(SimpleName:DEBUG)(Block(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sourceFormat)))))(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:targetFormat)))))))(ExpressionStatement(Assignment(SimpleName:audioInputStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:AudioSystem))(SimpleName:getAudioInputStream)(METHOD_INVOCATION_ARGUMENTS(SimpleName:targetFormat)(SimpleName:audioInputStream)))))(ExpressionStatement(Assignment(SimpleName:audioFormat)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:getFormat))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:audioInputStream))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:audioFormat))))))))(VariableDeclarationStatement(SimpleType(SimpleName:SourceDataLine))(VariableDeclarationFragment(SimpleName:line)(MethodInvocation(SimpleName:getSourceDataLine)(METHOD_INVOCATION_ARGUMENTS(SimpleName:strMixerName)(SimpleName:audioFormat)(SimpleName:nInternalBufferSize)))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:audioFormat)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:1))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:line))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getFormat)))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:getBufferSize)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:start)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nBytesRead)(NumberLiteral:0)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:abData)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:nExternalBufferSize))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(WhileStatement(InfixExpression(SimpleName:nBytesRead)(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:nBytesRead)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:audioInputStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:abData)(NumberLiteral:0)(QualifiedName:abData.length))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nBytesRead))))))(IfStatement(InfixExpression(SimpleName:nBytesRead)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:nBytesWritten)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:abData)(NumberLiteral:0)(SimpleName:nBytesRead)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:nBytesWritten))))))))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:drain)))(IfStatement(SimpleName:DEBUG)(ExpressionStatement(MethodInvocation(SimpleName:out)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:line))(SimpleName:close)))))))