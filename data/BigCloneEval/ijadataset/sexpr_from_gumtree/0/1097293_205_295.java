(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:execute)(SimpleType(SimpleName:MojoExecutionException))(SimpleType(SimpleName:MojoFailureException))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:solrServerUrl)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:ontologyMappings)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:recreateOntologyData)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mitabFileUrl)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:hasMitabHeader)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:removeExistingData)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:firstLine)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maxLines)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:logFilePath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(IfStatement(InfixExpression(SimpleName:logFilePath)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:logFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:logFilePath))))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:logWriter)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:BufferedWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileWriter))(SimpleName:logFile))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))))(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:mitabFile)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:mitabFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:mitabFileUrl)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:MalformedURLException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:mitabFileUrl))(SimpleName:e))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:availableProcessors)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime)))(SimpleName:availableProcessors))))(ExpressionStatement(MethodInvocation(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:availableProcessors)))))(TryStatement(Block(IfStatement(SimpleName:removeExistingData)(Block(ExpressionStatement(MethodInvocation(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:SolrServer))(VariableDeclarationFragment(SimpleName:server)(ClassInstanceCreation(SimpleType(SimpleName:CommonsHttpSolrServer))(SimpleName:solrServerUrl))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:deleteByQuery)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:commit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:server))(SimpleName:optimize))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e))))))(TryStatement(Block(IfStatement(SimpleName:recreateOntologyData)(Block(ExpressionStatement(MethodInvocation(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:SolrServer))(VariableDeclarationFragment(SimpleName:ontologyServer)(ClassInstanceCreation(SimpleType(SimpleName:CommonsHttpSolrServer))(SimpleName:ontologySolrServerUrl))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ontologyServer))(SimpleName:deleteByQuery)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ontologyServer))(SimpleName:commit)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ontologyServer))(SimpleName:optimize)))(VariableDeclarationStatement(SimpleType(SimpleName:OntologyIndexer))(VariableDeclarationFragment(SimpleName:indexer)(ClassInstanceCreation(SimpleType(SimpleName:OntologyIndexer))(SimpleName:ontologyServer))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:indexer))(SimpleName:indexObo)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ontologyMappings))(SimpleName:toArray)(METHOD_INVOCATION_ARGUMENTS(ArrayCreation(ArrayType(SimpleType(QualifiedName:uk.ac.ebi.intact.plugins.OntologyMapping))(Dimension(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ontologyMappings))(SimpleName:size)))))))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(StringLiteral:<STR>)(SimpleName:e))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:interactionsCount)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:interactionsCount)(ASSIGNMENT_OPERATOR:=)(ConditionalExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxLines)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(SimpleName:maxLines)(MethodInvocation(SimpleName:countLines)(METHOD_INVOCATION_ARGUMENTS(SimpleName:mitabFile)(SimpleName:hasMitabHeader)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:MojoExecutionException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:mitabFile))(SimpleName:getFile)))(SimpleName:e))))))(ExpressionStatement(MethodInvocation(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:interactionsCount)))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:defaultBatchSize)(InfixExpression(SimpleName:interactionsCount)(INFIX_EXPRESSION_OPERATOR:/)(SimpleName:availableProcessors))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:originalFirstLine)(SimpleName:firstLine)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:Collection))(SimpleType(SimpleName:IndexerWorker)))(VariableDeclarationFragment(SimpleName:workers)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:ArrayList))(SimpleType(SimpleName:IndexerWorker)))(SimpleName:availableProcessors))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:availableProcessors))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:remainingLines)(InfixExpression(InfixExpression(SimpleName:originalFirstLine)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:interactionsCount))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:firstLine))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:isLastProcessor)(ParenthesizedExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:==)(InfixExpression(SimpleName:availableProcessors)(INFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1))))))(VariableDeclarationStatement(Modifier:final)(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:batchSize)(ConditionalExpression(SimpleName:isLastProcessor)(SimpleName:remainingLines)(SimpleName:defaultBatchSize))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:threadName)(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:i))))(ExpressionStatement(MethodInvocation(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:threadName)(StringLiteral:<STR>)(SimpleName:firstLine)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(SimpleName:firstLine)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:batchSize)))(StringLiteral:<STR>)(SimpleName:batchSize)(StringLiteral:<STR>)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:IndexerWorker))(VariableDeclarationFragment(SimpleName:worker)(ClassInstanceCreation(SimpleType(SimpleName:IndexerWorker))(SimpleName:mitabFile)(SimpleName:hasMitabHeader)(SimpleName:solrServerUrl)(SimpleName:ontologySolrServerUrl)(SimpleName:firstLine)(SimpleName:batchSize))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workers))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:worker))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:thread)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(SimpleName:worker)(SimpleName:threadName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thread))(SimpleName:start)))(ExpressionStatement(Assignment(SimpleName:firstLine)(ASSIGNMENT_OPERATOR:=)(InfixExpression(SimpleName:firstLine)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:batchSize))))))(ExpressionStatement(MethodInvocation(SimpleName:writeLog)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(VariableDeclarationStatement(SimpleType(SimpleName:Thread))(VariableDeclarationFragment(SimpleName:thread)(ClassInstanceCreation(SimpleType(SimpleName:Thread))(ClassInstanceCreation(SimpleType(SimpleName:DocCounter))(SimpleName:solrServerUrl)(SimpleName:interactionsCount))(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:thread))(SimpleName:start)))(DoStatement(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:5000)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:printStackTrace))))))(ForStatement(VariableDeclarationExpression(ParameterizedType(SimpleType(SimpleName:Iterator))(SimpleType(SimpleName:IndexerWorker)))(VariableDeclarationFragment(SimpleName:iterator)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workers))(SimpleName:iterator))))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:IndexerWorker))(VariableDeclarationFragment(SimpleName:worker)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:next))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:worker))(SimpleName:isDone))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iterator))(SimpleName:remove))))))))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:workers))(SimpleName:isEmpty))))))))