(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:static)(PrimitiveType:void)(SimpleName:runCommand)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:command))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:outfile))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:errorstring))(SimpleType(QualifiedName:java.lang.Exception))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(SimpleName:command))))(IfStatement(InfixExpression(SimpleName:outfile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:outfile))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))(VariableDeclarationStatement(SimpleType(SimpleName:Runtime))(VariableDeclarationFragment(SimpleName:rt)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Runtime))(SimpleName:getRuntime))))(VariableDeclarationStatement(SimpleType(SimpleName:Process))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:rt))(SimpleName:exec)(METHOD_INVOCATION_ARGUMENTS(SimpleName:command)))))(VariableDeclarationStatement(SimpleType(SimpleName:PrintWriter))(VariableDeclarationFragment(SimpleName:outf)))(IfStatement(InfixExpression(SimpleName:outfile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:outf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PrintWriter))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:outfile))))))(Block(ExpressionStatement(Assignment(SimpleName:outf)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:PrintWriter))(QualifiedName:System.out))))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:procStdout)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:procStderr)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:getErrorStream))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:exit)(NumberLiteral:0))(VariableDeclarationFragment(SimpleName:n1))(VariableDeclarationFragment(SimpleName:n2)))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:processEnded)(BooleanLiteral:false)))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:processEnded))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:exit)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:exitValue))))(ExpressionStatement(Assignment(SimpleName:processEnded)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IllegalThreadStateException))(SimpleName:e))(Block)))(ExpressionStatement(Assignment(SimpleName:n1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStdout))(SimpleName:available))))(IfStatement(InfixExpression(SimpleName:n1)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n1))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStdout))(SimpleName:read))))(IfStatement(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))))))(ExpressionStatement(Assignment(SimpleName:n2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStderr))(SimpleName:available))))(IfStatement(InfixExpression(SimpleName:n2)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:pbytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:n2))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStderr))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pbytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:pbytes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:flush)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:10)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))))(DoStatement(Block(ExpressionStatement(Assignment(SimpleName:n1)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStdout))(SimpleName:available))))(IfStatement(InfixExpression(SimpleName:n1)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:n1))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:b)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStdout))(SimpleName:read))))(IfStatement(InfixExpression(SimpleName:b)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:0))(BreakStatement))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:b))))))))(ExpressionStatement(Assignment(SimpleName:n2)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStderr))(SimpleName:available))))(IfStatement(InfixExpression(SimpleName:n2)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:pbytes)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(SimpleName:n2))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:procStderr))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:pbytes))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:String))(SimpleName:pbytes)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:flush))))))(InfixExpression(InfixExpression(SimpleName:n1)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:||)(InfixExpression(SimpleName:n2)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))))(IfStatement(InfixExpression(SimpleName:outfile)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:close)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:outf))(SimpleName:flush))))(IfStatement(InfixExpression(SimpleName:exit)(INFIX_EXPRESSION_OPERATOR:!=)(NumberLiteral:0))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:exit)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(SimpleName:errorstring)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.err))(SimpleName:println)(METHOD_INVOCATION_ARGUMENTS(SimpleName:errorstring)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:exit)(METHOD_INVOCATION_ARGUMENTS(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))))))))))