(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(IfStatement(InfixExpression(SimpleName:main)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Iterator))(VariableDeclarationFragment(SimpleName:iter)(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:main.filesets))(SimpleName:iterator))))(VariableDeclarationStatement(SimpleType(QualifiedName:java.util.zip.ZipOutputStream))(VariableDeclarationFragment(SimpleName:zout)(ClassInstanceCreation(SimpleType(QualifiedName:java.util.zip.ZipOutputStream))(SimpleName:pout))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:m)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:META_INF_MANIFEST))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:m))))(IfStatement(InfixExpression(QualifiedName:main.manifest)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(QualifiedName:main.manifest))(SimpleName:zout)(BooleanLiteral:true)))))(IfStatement(InfixExpression(SimpleName:mainManifest)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:mainManifest))(SimpleName:zout)(BooleanLiteral:true)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:closeEntry)))(WhileStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:hasNext))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileSet))(VariableDeclarationFragment(SimpleName:fileset)(CastExpression(SimpleType(SimpleName:FileSet))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:iter))(SimpleName:next)))))(VariableDeclarationStatement(SimpleType(SimpleName:FileScanner))(VariableDeclarationFragment(SimpleName:scanner)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fileset))(SimpleName:getDirectoryScanner)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(SimpleName:getProject))))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanner))(SimpleName:getIncludedFiles))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:basedir)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:scanner))(SimpleName:getBasedir))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:file)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ArrayAccess(SimpleName:files)(SimpleName:i)))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))(Block(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:target)(StringLiteral:<STR>)(SimpleName:file))(QualifiedName:Project.MSG_WARN))))(ContinueStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:p)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:file)))(SimpleName:getParent))))(IfStatement(InfixExpression(SimpleName:p)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dirs)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:p))(SimpleName:replace)(METHOD_INVOCATION_ARGUMENTS(CharacterLiteral:<STR>)(CharacterLiteral:<STR>)))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dirs))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:toks)(Dimension)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dirs))(SimpleName:split)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:dir)(StringLiteral:<STR>)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:d)(NumberLiteral:0)))(InfixExpression(SimpleName:d)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:toks.length))(PostfixExpression(SimpleName:d)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(SimpleName:dir)(ASSIGNMENT_OPERATOR:+=)(InfixExpression(ArrayAccess(SimpleName:toks)(SimpleName:d))(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:contains)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:ze)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:dir))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:flush)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:closeEntry)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(SimpleName:dir))))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipEntry))(VariableDeclarationFragment(SimpleName:ze)(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:file))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ze))))(ExpressionStatement(MethodInvocation(SimpleName:log)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file))(QualifiedName:Project.MSG_DEBUG))))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:basedir)(SimpleName:file)))))(ExpressionStatement(MethodInvocation(SimpleName:copy)(METHOD_INVOCATION_ARGUMENTS(SimpleName:fis)(SimpleName:zout)(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:closeEntry)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:zout))(SimpleName:close)))(SynchronizedStatement(ThisExpression)(Block(ExpressionStatement(Assignment(SimpleName:done)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))(ExpressionStatement(MethodInvocation(SimpleName:notify))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:iox))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BuildException))(SimpleName:iox))))))))))))