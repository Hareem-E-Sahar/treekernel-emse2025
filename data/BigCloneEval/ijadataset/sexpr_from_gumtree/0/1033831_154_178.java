(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(SimpleType(SimpleName:ChannelPacket))(SimpleName:readPacket)(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:ChannelPacket))(VariableDeclarationFragment(SimpleName:packet)(NullLiteral)))(VariableDeclarationStatement(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:time)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))))(IfStatement(InfixExpression(SimpleName:readPos)(INFIX_EXPRESSION_OPERATOR:<)(SimpleName:firstPos))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(WhileStatement(InfixExpression(SimpleName:readPos)(INFIX_EXPRESSION_OPERATOR:>=)(SimpleName:writePos))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Peercast.idleSleepTime)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:currentTimeMillis))(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:time)))(INFIX_EXPRESSION_OPERATOR:>)(InfixExpression(NumberLiteral:30)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:1000)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))))(SynchronizedStatement(ThisExpression)(Block(ExpressionStatement(Assignment(SimpleName:packet)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:packets))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:readPos)(INFIX_EXPRESSION_OPERATOR:%)(SimpleName:MAX_PACKETS))))))(ExpressionStatement(PostfixExpression(SimpleName:readPos)(POSTFIX_EXPRESSION_OPERATOR:++)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:sleep)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:Peercast.idleSleepTime)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:e))(Block)))(ReturnStatement(SimpleName:packet))))))