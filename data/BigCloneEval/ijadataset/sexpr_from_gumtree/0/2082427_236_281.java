(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:copy)(SingleVariableDeclaration(Modifier:final)(SimpleType(SimpleName:String))(SimpleName:fileName))(SimpleType(SimpleName:FileIOException))(Block(VariableDeclarationStatement(Modifier:final)(PrimitiveType:long)(VariableDeclarationFragment(SimpleName:savedCurrentPositionInFile)(SimpleName:currentPositionInFile)))(IfStatement(SimpleName:opened)(Block(ExpressionStatement(MethodInvocation(SimpleName:closeImpl)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:fis)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fis)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(SimpleName:file)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:exception))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HELPER_FILE_UTIL))(SimpleName:fileIOException)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:FAILED_OPEN)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file))(SimpleName:file)(SimpleName:exception)))))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:destinationFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:fileName))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:FileOutputStream))(VariableDeclarationFragment(SimpleName:fos)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:fos)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:destinationFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:exception))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HELPER_FILE_UTIL))(SimpleName:fileIOException)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:FAILED_OPEN)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:destinationFile))(SimpleName:destinationFile)(SimpleName:exception)))))))(TryStatement(Block(VariableDeclarationStatement(Modifier:final)(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buf)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(NumberLiteral:1024))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:readLength)(NumberLiteral:0)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:readLength)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)))))(INFIX_EXPRESSION_OPERATOR:!=)(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:-)(NumberLiteral:1)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buf)(NumberLiteral:0)(SimpleName:readLength)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:exception))(Block(ThrowStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:HELPER_FILE_UTIL))(SimpleName:fileIOException)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(SimpleName:destinationFile))(NullLiteral)(SimpleName:exception))))))(Block(TryStatement(Block(IfStatement(InfixExpression(SimpleName:fis)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fis))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exception))(Block)))(TryStatement(Block(IfStatement(InfixExpression(SimpleName:fos)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:fos))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:exception))(Block)))))(IfStatement(SimpleName:opened)(Block(ExpressionStatement(MethodInvocation(SimpleName:openImpl)))(ExpressionStatement(MethodInvocation(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(SimpleName:savedCurrentPositionInFile))))))))))