(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:testProcessPriceSignal)(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:minPriceBaseLoad)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FirstPriceSignalMaintainingAlgorithm))(SimpleName:getMinPriceBaseLoad))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:maxPriceBaseLoad)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FirstPriceSignalMaintainingAlgorithm))(SimpleName:getMaxPriceBaseLoad))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:correctiveStepFactor)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FirstPriceSignalMaintainingAlgorithm))(SimpleName:getCorrectiveStepFactor))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:valueBelowMaxBaseLoad)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:minPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:maxPriceBaseLoad)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:newPriceSignal)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:newMinimumPriceSingal)))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:newSignalValues)))(ExpressionStatement(Assignment(SimpleName:newSignalValues)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FirstPriceSignalMaintainingAlgorithm))(SimpleName:processPriceSignal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:valueBelowMaxBaseLoad)(SimpleName:valueBelowMaxBaseLoad)(NumberLiteral:0.0)))))(ExpressionStatement(Assignment(SimpleName:newPriceSignal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:newMinimumPriceSingal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(SimpleName:valueBelowMaxBaseLoad)(SimpleName:newPriceSignal))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0.0)(SimpleName:newMinimumPriceSingal))))(ExpressionStatement(Assignment(SimpleName:newSignalValues)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FirstPriceSignalMaintainingAlgorithm))(SimpleName:processPriceSignal)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2))(NumberLiteral:0.0)))))(ExpressionStatement(Assignment(SimpleName:newPriceSignal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:newMinimumPriceSingal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:correctiveStepFactor))(SimpleName:newPriceSignal))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:2)))(INFIX_EXPRESSION_OPERATOR:*)(SimpleName:correctiveStepFactor))(SimpleName:newMinimumPriceSingal))))(ExpressionStatement(Assignment(SimpleName:newSignalValues)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FirstPriceSignalMaintainingAlgorithm))(SimpleName:processPriceSignal)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:valueBelowMaxBaseLoad)(NumberLiteral:0.0)))))(ExpressionStatement(Assignment(SimpleName:newPriceSignal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:newMinimumPriceSingal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:newPriceSignal))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:newMinimumPriceSingal))))(ExpressionStatement(Assignment(SimpleName:newSignalValues)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FirstPriceSignalMaintainingAlgorithm))(SimpleName:processPriceSignal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:valueBelowMaxBaseLoad)(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1.0))(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1.0))))))(ExpressionStatement(Assignment(SimpleName:newPriceSignal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:0))))(ExpressionStatement(Assignment(SimpleName:newMinimumPriceSingal)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:newSignalValues)(NumberLiteral:1))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:newPriceSignal))))(ExpressionStatement(MethodInvocation(SimpleName:assertEquals)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(SimpleName:maxPriceBaseLoad)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1))(SimpleName:newMinimumPriceSingal))))))))