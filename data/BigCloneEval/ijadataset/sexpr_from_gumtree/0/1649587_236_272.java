(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:protected)(PrimitiveType:void)(SimpleName:stopBridge)(SimpleType(SimpleName:VMException))(Block(IfStatement(SimpleName:running)(Block(ExpressionStatement(Assignment(SimpleName:running)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:false)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logging))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(SimpleName:LOG_NAME)(StringLiteral:<STR>))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:dhcpMapper)(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getChannel)))(SimpleName:lock)))(VariableDeclarationStatement(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:DHCPEntry)))(VariableDeclarationFragment(SimpleName:entries)(ClassInstanceCreation(ParameterizedType(SimpleType(SimpleName:LinkedList))(SimpleType(SimpleName:DHCPEntry))))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(NullLiteral))(VariableDeclarationFragment(SimpleName:mac)(NullLiteral))(VariableDeclarationFragment(SimpleName:addr)(NullLiteral))(VariableDeclarationFragment(SimpleName:status)(NullLiteral)))(WhileStatement(InfixExpression(ParenthesizedExpression(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:readLine))))(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringTokenizer))(VariableDeclarationFragment(SimpleName:tokenizer)(ClassInstanceCreation(SimpleType(SimpleName:StringTokenizer))(SimpleName:line))))(ExpressionStatement(Assignment(SimpleName:mac)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:nextToken))))(ExpressionStatement(Assignment(SimpleName:addr)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:nextToken))))(ExpressionStatement(Assignment(SimpleName:status)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:tokenizer))(SimpleName:nextToken))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:entries))(SimpleName:add)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:DHCPEntry))(SimpleName:mac)(SimpleName:addr)(SimpleName:status)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:seek)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:setLength)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))(VariableDeclarationStatement(PrimitiveType:boolean)(VariableDeclarationFragment(SimpleName:found)(BooleanLiteral:false)))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:current)(MethodInvocation(METHOD_INVOCATION_RECEIVER(FieldAccess(ThisExpression)(SimpleName:addr)))(SimpleName:getHostAddress))))(EnhancedForStatement(SingleVariableDeclaration(SimpleType(SimpleName:DHCPEntry))(SimpleName:e))(SimpleName:entries)(Block(IfStatement(InfixExpression(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(SimpleName:found))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:current))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:e.addr))))(Block(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:ref)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:parseInt)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:e.status)))))(ExpressionStatement(PostfixExpression(SimpleName:ref)(POSTFIX_EXPRESSION_OPERATOR:--)))(IfStatement(InfixExpression(SimpleName:ref)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(ExpressionStatement(Assignment(QualifiedName:e.status)(ASSIGNMENT_OPERATOR:=)(StringLiteral:<STR>)))(ExpressionStatement(Assignment(QualifiedName:e.status)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Integer))(SimpleName:toString)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ref))))))(ExpressionStatement(Assignment(SimpleName:found)(ASSIGNMENT_OPERATOR:=)(BooleanLiteral:true)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:writeBytes)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(QualifiedName:e.mac)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(QualifiedName:e.addr)(StringLiteral:<STR>)(QualifiedName:e.status)(StringLiteral:<STR>)))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:FileNotFoundException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:VMException))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:VMException))(SimpleName:e))))))))))))