(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:URLConnection))(SimpleName:getPreferredConnection)(SingleVariableDeclaration(SimpleType(SimpleName:URL))(SimpleName:url))(SingleVariableDeclaration(PrimitiveType:boolean)(SimpleName:closeAfter))(SimpleType(SimpleName:IOException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:preferredConnection)(NullLiteral)))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:getProtocol)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(ReturnStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:closeConn)(NullLiteral)))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:conn)(NullLiteral)))(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:closeConn)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(SimpleName:closeConn)))(IfStatement(InstanceofExpression(SimpleName:conn)(SimpleType(SimpleName:HttpURLConnection)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:hconn)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:conn))))(IfStatement(SimpleName:closeAfter)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hconn))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:responseCode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hconn))(SimpleName:getResponseCode))))(SwitchStatement(SimpleName:responseCode)(SwitchCase(QualifiedName:HttpURLConnection.HTTP_OK))(SwitchCase(QualifiedName:HttpURLConnection.HTTP_NOT_AUTHORITATIVE))(BreakStatement)(SwitchCase(QualifiedName:HttpURLConnection.HTTP_NOT_FOUND))(SwitchCase(QualifiedName:HttpURLConnection.HTTP_FORBIDDEN))(SwitchCase(QualifiedName:HttpURLConnection.HTTP_GONE))(ExpressionStatement(Assignment(SimpleName:conn)(ASSIGNMENT_OPERATOR:=)(NullLiteral)))(BreakStatement)(SwitchCase)(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:hconn))(SimpleName:getResponseMessage)))))))))(Block(IfStatement(InfixExpression(SimpleName:closeAfter)(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(SimpleName:closeConn)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))))(Block(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:closeConn))(SimpleName:getInputStream)))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block)))))))(ReturnStatement(SimpleName:conn))))))