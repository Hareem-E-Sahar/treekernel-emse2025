(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:OutputStream))(SimpleName:createOutputStream)(SingleVariableDeclaration(SimpleType(SimpleName:URI))(SimpleName:uri))(SingleVariableDeclaration(ParameterizedType(SimpleType(SimpleName:Map))(WildcardType)(WildcardType))(SimpleName:options))(SimpleType(SimpleName:IOException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:uri))(SimpleName:toString)))))(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:urlConnection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:setDoOutput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(IfStatement(InstanceofExpression(SimpleName:urlConnection)(SimpleType(SimpleName:HttpURLConnection)))(Block(VariableDeclarationStatement(Modifier:final)(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:httpURLConnection)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(SimpleName:urlConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpURLConnection))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ReturnStatement(ClassInstanceCreation(SimpleType(SimpleName:FilterOutputStream))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:getOutputStream))(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:close)(SimpleType(SimpleName:IOException))(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:close)))(VariableDeclarationStatement(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:responseCode)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:httpURLConnection))(SimpleName:getResponseCode))))(SwitchStatement(SimpleName:responseCode)(SwitchCase(QualifiedName:HttpURLConnection.HTTP_OK))(SwitchCase(QualifiedName:HttpURLConnection.HTTP_CREATED))(SwitchCase(QualifiedName:HttpURLConnection.HTTP_NO_CONTENT))(Block(BreakStatement))(SwitchCase)(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:responseCode))))))))))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:result)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:getOutputStream))))(VariableDeclarationStatement(Modifier:final)(ParameterizedType(SimpleType(SimpleName:Map))(SimpleType(SimpleName:Object))(SimpleType(SimpleName:Object)))(VariableDeclarationFragment(SimpleName:response)(MethodInvocation(SimpleName:getResponse)(METHOD_INVOCATION_ARGUMENTS(SimpleName:options)))))(IfStatement(InfixExpression(SimpleName:response)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FilterOutputStream))(SimpleName:result)(AnonymousClassDeclaration(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(PrimitiveType:void)(SimpleName:close)(SimpleType(SimpleName:IOException))(Block(TryStatement(Block(ExpressionStatement(SuperMethodInvocation(SimpleName:close))))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:response))(SimpleName:put)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:URIConverter.RESPONSE_TIME_STAMP_PROPERTY)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:getLastModified)))))))))))))))(ReturnStatement(SimpleName:result)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:RuntimeException))(SimpleName:exception))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(QualifiedName:Resource.IOWrappedException))(SimpleName:exception))))))))))