(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:FileSource))(SimpleName:addOneFile)(SingleVariableDeclaration(SimpleType(SimpleName:Resource))(SimpleName:resource))(SingleVariableDeclaration(SimpleType(SimpleName:File))(SimpleName:file))(SingleVariableDeclaration(MarkerAnnotation(SimpleName:Nullable))(SimpleType(SimpleName:String))(SimpleName:sourceName))(SimpleType(SimpleName:ImportException))(Block(VariableDeclarationStatement(SimpleType(SimpleName:FileSource))(VariableDeclarationFragment(SimpleName:src)(ClassInstanceCreation(SimpleType(SimpleName:FileSource)))))(IfStatement(InfixExpression(SimpleName:sourceName)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ExpressionStatement(Assignment(SimpleName:sourceName)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getName))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:setName)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sourceName))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:setResource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resource))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:sourceName)(StringLiteral:<STR>)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:getAbsolutePath))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:Archive))(VariableDeclarationFragment(SimpleName:arch)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:ArchiveFactory))(SimpleName:openArchive)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)))))(ExpressionStatement(MethodInvocation(SimpleName:copyArchiveFileProperties)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:arch))(SimpleName:getCore))(SimpleName:src)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage)))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ImportException))(SimpleName:e)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:UnsupportedArchiveException))(SimpleName:e))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:log))(SimpleName:warn)(METHOD_INVOCATION_ARGUMENTS(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:e))(SimpleName:getMessage))))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:ddFile)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:dataDir))(SimpleName:sourceFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:resource)(SimpleName:src)))))(TryStatement(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:FileUtils))(SimpleName:copyFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:file)(SimpleName:ddFile)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:IOException))(SimpleName:e1))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ImportException))(SimpleName:e1))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:setFile)(METHOD_INVOCATION_ARGUMENTS(SimpleName:ddFile))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:src))(SimpleName:setLastModified)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:Date))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:resource))(SimpleName:addSource)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src)(BooleanLiteral:true)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:AlreadyExistingException))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:ImportException))(SimpleName:e))))))(ExpressionStatement(MethodInvocation(SimpleName:analyze)(METHOD_INVOCATION_ARGUMENTS(SimpleName:src))))(ReturnStatement(SimpleName:src))))))