(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Reader))(SimpleName:getURL)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:streamName))(SimpleType(SimpleName:TokenizerParseException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:scriptStream)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:m_packagerManager)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:m_scriptPath.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(TryStatement(Block(ExpressionStatement(Assignment(SimpleName:scriptStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:m_packagerManager))(SimpleName:getByteStream)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(ArrayAccess(SimpleName:m_scriptPath)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:streamName)(StringLiteral:<STR>))))))(IfStatement(InfixExpression(SimpleName:scriptStream)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:scriptStream))))(ReturnStatement(SimpleName:reader)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ContinueStatement))))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:m_scriptPath.length))(PostfixExpression(SimpleName:i)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:m_documentBase)(InfixExpression(ArrayAccess(SimpleName:m_scriptPath)(SimpleName:i))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:streamName)(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:URLConnection))(VariableDeclarationFragment(SimpleName:urlConnection)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:setDoOutput)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:setDefaultUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:setUseCaches)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:true))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:connect)))(ExpressionStatement(Assignment(SimpleName:scriptStream)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:urlConnection))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:reader)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(SimpleName:scriptStream))))(ReturnStatement(SimpleName:reader)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ContinueStatement))))))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TokenizerParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:streamName)))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:TokenizerParseException))(SimpleName:e))(Block(ThrowStatement(SimpleName:e))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:TokenizerParseException))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:streamName)(StringLiteral:<STR>)(SimpleName:e)))))))))))