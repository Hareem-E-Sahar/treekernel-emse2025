(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(Modifier:static)(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:Line_Minimize)(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:shigh))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:slow))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:y))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:direction))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:probe_count))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:clone_count))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension)(Dimension))(SimpleName:aa))(SingleVariableDeclaration(ArrayType(PrimitiveType:int)(Dimension))(SimpleName:probeOrder))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:clone_length))(SingleVariableDeclaration(PrimitiveType:double)(SimpleName:const1))(SingleVariableDeclaration(ArrayType(PrimitiveType:double)(Dimension))(SimpleName:R))(Block(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:scalar))(VariableDeclarationFragment(SimpleName:old_func))(VariableDeclarationFragment(SimpleName:new_func)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:grad_left))(VariableDeclarationFragment(SimpleName:grad_right))(VariableDeclarationFragment(SimpleName:grad_middle)))(VariableDeclarationStatement(PrimitiveType:double)(VariableDeclarationFragment(SimpleName:CRITERIA_BISECTION)(NumberLiteral:0.0000000001)))(VariableDeclarationStatement(ArrayType(PrimitiveType:double)(Dimension))(VariableDeclarationFragment(SimpleName:y_temp)(ArrayCreation(ArrayType(PrimitiveType:double)(Dimension(InfixExpression(SimpleName:probe_count)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:probeIndex)(NumberLiteral:0)))(InfixExpression(SimpleName:probeIndex)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:probe_count)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(PostfixExpression(SimpleName:probeIndex)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y_temp)(SimpleName:probeIndex))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:slow)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:direction)(SimpleName:probeIndex))))))))(ExpressionStatement(Assignment(SimpleName:grad_left)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:Gradient_S)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y_temp)(SimpleName:direction)(SimpleName:probe_count)(SimpleName:clone_count)(SimpleName:aa)(SimpleName:probeOrder)(SimpleName:clone_length)(SimpleName:R)))))(ExpressionStatement(Assignment(SimpleName:old_func)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:Func)(METHOD_INVOCATION_ARGUMENTS(SimpleName:const1)(SimpleName:R)(SimpleName:aa)(SimpleName:y_temp)(SimpleName:clone_length)(SimpleName:probe_count)(SimpleName:clone_count)(SimpleName:probeOrder)))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:probeIndex)(NumberLiteral:0)))(InfixExpression(SimpleName:probeIndex)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:probe_count)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(PostfixExpression(SimpleName:probeIndex)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y_temp)(SimpleName:probeIndex))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:shigh)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:direction)(SimpleName:probeIndex))))))))(ExpressionStatement(Assignment(SimpleName:grad_right)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:Gradient_S)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y_temp)(SimpleName:direction)(SimpleName:probe_count)(SimpleName:clone_count)(SimpleName:aa)(SimpleName:probeOrder)(SimpleName:clone_length)(SimpleName:R)))))(WhileStatement(InfixExpression(NumberLiteral:1)(INFIX_EXPRESSION_OPERATOR:<)(NumberLiteral:2))(Block(IfStatement(InfixExpression(InfixExpression(SimpleName:grad_left)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:grad_right)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:probeIndex)(NumberLiteral:0)))(InfixExpression(SimpleName:probeIndex)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:probe_count)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(PostfixExpression(SimpleName:probeIndex)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:shigh)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:direction)(SimpleName:probeIndex))))))))(BreakStatement)))(IfStatement(InfixExpression(InfixExpression(SimpleName:grad_left)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:grad_right)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:probeIndex)(NumberLiteral:0)))(InfixExpression(SimpleName:probeIndex)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:probe_count)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(PostfixExpression(SimpleName:probeIndex)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:slow)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:direction)(SimpleName:probeIndex))))))))(BreakStatement)))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:grad_left)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:grad_right)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))))(INFIX_EXPRESSION_OPERATOR:||)(ParenthesizedExpression(InfixExpression(InfixExpression(SimpleName:grad_left)(INFIX_EXPRESSION_OPERATOR:>=)(NumberLiteral:0))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:grad_right)(INFIX_EXPRESSION_OPERATOR:<=)(NumberLiteral:0)))))(Block(ExpressionStatement(Assignment(SimpleName:scalar)(ASSIGNMENT_OPERATOR:=)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:slow)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:shigh)))(INFIX_EXPRESSION_OPERATOR:/)(NumberLiteral:2))))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:probeIndex)(NumberLiteral:0)))(InfixExpression(SimpleName:probeIndex)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:probe_count)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(PostfixExpression(SimpleName:probeIndex)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y_temp)(SimpleName:probeIndex))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:scalar)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:direction)(SimpleName:probeIndex))))))))(ExpressionStatement(Assignment(SimpleName:grad_middle)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:Gradient_S)(METHOD_INVOCATION_ARGUMENTS(SimpleName:y_temp)(SimpleName:direction)(SimpleName:probe_count)(SimpleName:clone_count)(SimpleName:aa)(SimpleName:probeOrder)(SimpleName:clone_length)(SimpleName:R)))))(ExpressionStatement(Assignment(SimpleName:new_func)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(SimpleName:Func)(METHOD_INVOCATION_ARGUMENTS(SimpleName:const1)(SimpleName:R)(SimpleName:aa)(SimpleName:y_temp)(SimpleName:clone_length)(SimpleName:probe_count)(SimpleName:clone_count)(SimpleName:probeOrder)))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:new_func)(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:old_func)))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:old_func)(INFIX_EXPRESSION_OPERATOR:-)(SimpleName:new_func)))(INFIX_EXPRESSION_OPERATOR:<=)(SimpleName:CRITERIA_BISECTION)))(Block(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:probeIndex)(NumberLiteral:0)))(InfixExpression(SimpleName:probeIndex)(INFIX_EXPRESSION_OPERATOR:<)(InfixExpression(SimpleName:probe_count)(INFIX_EXPRESSION_OPERATOR:+)(NumberLiteral:1)))(PostfixExpression(SimpleName:probeIndex)(POSTFIX_EXPRESSION_OPERATOR:++))(Block(ExpressionStatement(Assignment(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(ASSIGNMENT_OPERATOR:=)(InfixExpression(ArrayAccess(SimpleName:y)(SimpleName:probeIndex))(INFIX_EXPRESSION_OPERATOR:+)(InfixExpression(SimpleName:scalar)(INFIX_EXPRESSION_OPERATOR:*)(ArrayAccess(SimpleName:direction)(SimpleName:probeIndex))))))))(BreakStatement)))(IfStatement(InfixExpression(SimpleName:grad_middle)(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0))(Block(ExpressionStatement(Assignment(SimpleName:old_func)(ASSIGNMENT_OPERATOR:=)(SimpleName:new_func)))(ExpressionStatement(Assignment(SimpleName:shigh)(ASSIGNMENT_OPERATOR:=)(SimpleName:scalar)))(ExpressionStatement(Assignment(SimpleName:grad_right)(ASSIGNMENT_OPERATOR:=)(SimpleName:grad_middle))))(Block(ExpressionStatement(Assignment(SimpleName:old_func)(ASSIGNMENT_OPERATOR:=)(SimpleName:new_func)))(ExpressionStatement(Assignment(SimpleName:slow)(ASSIGNMENT_OPERATOR:=)(SimpleName:scalar)))(ExpressionStatement(Assignment(SimpleName:grad_left)(ASSIGNMENT_OPERATOR:=)(SimpleName:grad_middle)))))(ExpressionStatement(Assignment(SimpleName:new_func)(ASSIGNMENT_OPERATOR:=)(SimpleName:old_func)))))))(ReturnStatement(SimpleName:y))))))