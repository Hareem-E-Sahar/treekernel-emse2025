(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(PrimitiveType:void)(SimpleName:createArchive)(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:iDatabaseDir))(SingleVariableDeclaration(SimpleType(SimpleName:String))(SimpleName:iArchiveName))(SimpleType(SimpleName:DbBackupException))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:archiveFile)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:iArchiveName))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:force)(CastExpression(SimpleType(SimpleName:String))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:parameters))(SimpleName:get)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(IfStatement(InfixExpression(InfixExpression(SimpleName:force)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(INFIX_EXPRESSION_OPERATOR:&&)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archiveFile))(SimpleName:exists)))(Block(VariableDeclarationStatement(PrimitiveType:char)(VariableDeclarationFragment(SimpleName:response)(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(SimpleName:getUserAdvisor)))(SimpleName:askToUser)(METHOD_INVOCATION_ARGUMENTS(QualifiedName:System.out)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(IfStatement(InfixExpression(InfixExpression(SimpleName:response)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(SimpleName:response)(INFIX_EXPRESSION_OPERATOR:!=)(CharacterLiteral:<STR>)))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:println)))(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DbBackupException))(StringLiteral:<STR>)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(QualifiedName:System.out))(SimpleName:print)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))))(VariableDeclarationStatement(SimpleType(SimpleName:ZipOutputStream))(VariableDeclarationFragment(SimpleName:archive)(ClassInstanceCreation(SimpleType(SimpleName:ZipOutputStream))(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:archiveFile)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archive))(SimpleName:setComment)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(QualifiedName:oConstants.PRODUCT_VERSION)(StringLiteral:<STR>)(QualifiedName:oConstants.PRODUCT_COPYRIGHTS)(StringLiteral:<STR>)(StringLiteral:<STR>)))))(VariableDeclarationStatement(ArrayType(SimpleType(SimpleName:String))(Dimension))(VariableDeclarationFragment(SimpleName:files)(MethodInvocation(METHOD_INVOCATION_RECEIVER(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:iDatabaseDir)))(SimpleName:list))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filePath)))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:inFile)))(VariableDeclarationStatement(SimpleType(SimpleName:FileInputStream))(VariableDeclarationFragment(SimpleName:inStream)))(VariableDeclarationStatement(ArrayType(PrimitiveType:byte)(Dimension))(VariableDeclarationFragment(SimpleName:buffer)))(ForStatement(VariableDeclarationExpression(PrimitiveType:int)(VariableDeclarationFragment(SimpleName:i)(NumberLiteral:0)))(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:<)(QualifiedName:files.length))(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:++)(SimpleName:i))(Block(ExpressionStatement(Assignment(SimpleName:filePath)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(SimpleName:files)(SimpleName:i))))(ExpressionStatement(Assignment(SimpleName:inFile)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:File))(InfixExpression(SimpleName:iDatabaseDir)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:filePath)))))(ExpressionStatement(Assignment(SimpleName:inStream)(ASSIGNMENT_OPERATOR:=)(ClassInstanceCreation(SimpleType(SimpleName:FileInputStream))(InfixExpression(SimpleName:iDatabaseDir)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(SimpleName:filePath)))))(ExpressionStatement(Assignment(SimpleName:buffer)(ASSIGNMENT_OPERATOR:=)(ArrayCreation(ArrayType(PrimitiveType:byte)(Dimension(CastExpression(PrimitiveType:int)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inFile))(SimpleName:length))))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:inStream))(SimpleName:read)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer))))(IfStatement(InfixExpression(SimpleName:monitor)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:monitor))(SimpleName:notifyStatus)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filePath))(InfixExpression(InfixExpression(SimpleName:i)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:100))(INFIX_EXPRESSION_OPERATOR:/)(QualifiedName:files.length))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archive))(SimpleName:putNextEntry)(METHOD_INVOCATION_ARGUMENTS(ClassInstanceCreation(SimpleType(SimpleName:ZipEntry))(SimpleName:filePath)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archive))(SimpleName:write)(METHOD_INVOCATION_ARGUMENTS(SimpleName:buffer))))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archive))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:DbBackupException))(StringLiteral:<STR>))))))))))