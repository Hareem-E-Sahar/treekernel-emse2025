(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(SimpleType(SimpleName:Object))(SimpleName:apply)(SingleVariableDeclaration(SimpleType(SimpleName:Context))(SimpleName:context))(SingleVariableDeclaration(SimpleType(SimpleName:Object))(SimpleName:arg))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Object))(VariableDeclarationFragment(SimpleName:result)(NullLiteral)))(IfStatement(InfixExpression(SimpleName:arg)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:NullArgument))(StringLiteral:<STR>)))))(IfStatement(InstanceofExpression(SimpleName:arg)(SimpleType(SimpleName:String)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:filename)(CastExpression(SimpleType(SimpleName:String))(SimpleName:arg))))(VariableDeclarationStatement(SimpleType(SimpleName:File))(VariableDeclarationFragment(SimpleName:file)(ClassInstanceCreation(SimpleType(SimpleName:File))(SimpleName:filename))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:FileNotFound))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:isFile)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BadArgument))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))))(IfStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:canRead)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BadArgument))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:buffer)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:input)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(ClassInstanceCreation(SimpleType(SimpleName:FileReader))(SimpleName:file)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sep)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(NullLiteral)))(ForStatement(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:readLine))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sep))))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:toString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:filename))))))))(IfStatement(InstanceofExpression(SimpleName:arg)(SimpleType(SimpleName:URL)))(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(CastExpression(SimpleType(SimpleName:URL))(SimpleName:arg))))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:StringBuffer))(VariableDeclarationFragment(SimpleName:buffer)(ClassInstanceCreation(SimpleType(SimpleName:StringBuffer)))))(VariableDeclarationStatement(SimpleType(SimpleName:InputStreamReader))(VariableDeclarationFragment(SimpleName:isr)(ClassInstanceCreation(SimpleType(SimpleName:InputStreamReader))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openStream)))))(VariableDeclarationStatement(SimpleType(SimpleName:BufferedReader))(VariableDeclarationFragment(SimpleName:input)(ClassInstanceCreation(SimpleType(SimpleName:BufferedReader))(SimpleName:isr))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:sep)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:System))(SimpleName:getProperty)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:line)(NullLiteral)))(ForStatement(Block(ExpressionStatement(Assignment(SimpleName:line)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:readLine))))(IfStatement(InfixExpression(SimpleName:line)(INFIX_EXPRESSION_OPERATOR:==)(NullLiteral))(Block(BreakStatement)))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:line))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:append)(METHOD_INVOCATION_ARGUMENTS(SimpleName:sep))))))(ExpressionStatement(Assignment(SimpleName:result)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:buffer))(SimpleName:toString))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:input))(SimpleName:close))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:e))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOError))(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:url))))))))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:BadArgument))(StringLiteral:<STR>))))))(ReturnStatement(SimpleName:result))))))