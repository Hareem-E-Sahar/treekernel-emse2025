(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(MarkerAnnotation(SimpleName:Override))(Modifier:public)(SimpleType(SimpleName:WritableByteChannel))(SimpleName:getWritableChannel)(Block(TryStatement(Block(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:exists))(INFIX_EXPRESSION_OPERATOR:&&)(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:file))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:>)(NumberLiteral:0)))(Block(ThrowStatement(ClassInstanceCreation(SimpleType(SimpleName:IOException))(StringLiteral:<STR>)))))(VariableDeclarationStatement(SimpleType(SimpleName:WritableByteChannel))(VariableDeclarationFragment(SimpleName:channel)(NullLiteral)))(IfStatement(SimpleName:allowRandomAccess)(Block(VariableDeclarationStatement(SimpleType(SimpleName:RandomAccessFile))(VariableDeclarationFragment(SimpleName:randomAccessFile)(ClassInstanceCreation(SimpleType(SimpleName:RandomAccessFile))(SimpleName:file)(StringLiteral:<STR>))))(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:randomAccessFile))(SimpleName:getChannel)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:OutputStream))(VariableDeclarationFragment(SimpleName:os)(ClassInstanceCreation(SimpleType(SimpleName:FileOutputStream))(SimpleName:file))))(ExpressionStatement(Assignment(SimpleName:channel)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Channels))(SimpleName:newChannel)(METHOD_INVOCATION_ARGUMENTS(SimpleName:os)))))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:isDebugEnabled))(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:logger))(SimpleName:debug)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>))(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:file)(StringLiteral:<STR>)(StringLiteral:<STR>)(SimpleName:allowRandomAccess)))))))(ReturnStatement(SimpleName:channel)))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Throwable))(SimpleName:e))(Block(ReturnStatement(NullLiteral)))))))))