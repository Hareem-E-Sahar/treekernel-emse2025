(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:public)(PrimitiveType:void)(SimpleName:run)(Block(ExpressionStatement(Assignment(SimpleName:writerThread)(ASSIGNMENT_OPERATOR:=)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:Thread))(SimpleName:currentThread))))(WhileStatement(PrefixExpression(PREFIX_EXPRESSION_OPERATOR:!)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:writerThread))(SimpleName:isInterrupted)))(Block(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:isEmpty))(Block(TryStatement(Block(SynchronizedStatement(SimpleName:queue)(Block(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:wait)(METHOD_INVOCATION_ARGUMENTS(InfixExpression(NumberLiteral:1000)(INFIX_EXPRESSION_OPERATOR:*)(NumberLiteral:30))))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:InterruptedException))(SimpleName:ex))(Block(ReturnStatement)))))(Block(VariableDeclarationStatement(SimpleType(SimpleName:Calculable))(VariableDeclarationFragment(SimpleName:calc)(CastExpression(SimpleType(SimpleName:Calculable))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:queue))(SimpleName:remove)(METHOD_INVOCATION_ARGUMENTS(NumberLiteral:0))))))(ExpressionStatement(MethodInvocation(SimpleName:addToHistory)(METHOD_INVOCATION_ARGUMENTS(SimpleName:calc))))(IfStatement(InfixExpression(SimpleName:archivable)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:archivable))(SimpleName:archive)(METHOD_INVOCATION_ARGUMENTS(SimpleName:calc)))))))))))))