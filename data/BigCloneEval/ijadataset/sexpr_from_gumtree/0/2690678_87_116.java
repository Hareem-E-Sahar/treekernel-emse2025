(CompilationUnit(TypeDeclaration(Modifier:public)(TYPE_DECLARATION_KIND:class)(SimpleName:Test)(MethodDeclaration(Modifier:private)(SimpleType(SimpleName:NodeInfo))(SimpleName:loadNodeMeta)(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:id))(SingleVariableDeclaration(PrimitiveType:int)(SimpleName:properties))(Block(VariableDeclarationStatement(SimpleType(SimpleName:String))(VariableDeclarationFragment(SimpleName:query)(InfixExpression(SimpleName:mServer)(INFIX_EXPRESSION_OPERATOR:+)(StringLiteral:<STR>)(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:id)))(ParenthesizedExpression(InfixExpression(StringLiteral:<STR>)(INFIX_EXPRESSION_OPERATOR:+)(SimpleName:properties))))))(VariableDeclarationStatement(SimpleType(SimpleName:NodeInfo))(VariableDeclarationFragment(SimpleName:info)(NullLiteral)))(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:URL))(VariableDeclarationFragment(SimpleName:url)(ClassInstanceCreation(SimpleType(SimpleName:URL))(SimpleName:query))))(VariableDeclarationStatement(SimpleType(SimpleName:HttpURLConnection))(VariableDeclarationFragment(SimpleName:conn)(CastExpression(SimpleType(SimpleName:HttpURLConnection))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:url))(SimpleName:openConnection)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setAllowUserInteraction)(METHOD_INVOCATION_ARGUMENTS(BooleanLiteral:false))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:setRequestMethod)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>))))(ExpressionStatement(MethodInvocation(SimpleName:setCredentials)(METHOD_INVOCATION_ARGUMENTS(SimpleName:conn))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:connect)))(IfStatement(InfixExpression(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getResponseCode))(INFIX_EXPRESSION_OPERATOR:==)(QualifiedName:HttpURLConnection.HTTP_OK))(Block(VariableDeclarationStatement(SimpleType(SimpleName:InputStream))(VariableDeclarationFragment(SimpleName:stream)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getInputStream))))(VariableDeclarationStatement(SimpleType(SimpleName:MimeType))(VariableDeclarationFragment(SimpleName:contentType)(ClassInstanceCreation(SimpleType(SimpleName:MimeType))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:conn))(SimpleName:getContentType)))))(IfStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:contentType))(SimpleName:getBaseType)))(SimpleName:equals)(METHOD_INVOCATION_ARGUMENTS(StringLiteral:<STR>)))(Block(TryStatement(Block(VariableDeclarationStatement(SimpleType(SimpleName:JAXBContext))(VariableDeclarationFragment(SimpleName:context)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:JAXBContext))(SimpleName:newInstance)(METHOD_INVOCATION_ARGUMENTS(TypeLiteral(SimpleType(SimpleName:NetProcessorInfo)))))))(VariableDeclarationStatement(SimpleType(SimpleName:Unmarshaller))(VariableDeclarationFragment(SimpleName:unm)(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:context))(SimpleName:createUnmarshaller))))(VariableDeclarationStatement(SimpleType(SimpleName:NetProcessorInfo))(VariableDeclarationFragment(SimpleName:root)(CastExpression(SimpleType(SimpleName:NetProcessorInfo))(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:unm))(SimpleName:unmarshal)(METHOD_INVOCATION_ARGUMENTS(SimpleName:stream))))))(IfStatement(InfixExpression(ParenthesizedExpression(InfixExpression(SimpleName:root)(INFIX_EXPRESSION_OPERATOR:!=)(NullLiteral)))(INFIX_EXPRESSION_OPERATOR:&&)(ParenthesizedExpression(InfixExpression(FieldAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:getNodes))(SimpleName:length))(INFIX_EXPRESSION_OPERATOR:==)(NumberLiteral:1))))(Block(ExpressionStatement(Assignment(SimpleName:info)(ASSIGNMENT_OPERATOR:=)(ArrayAccess(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:root))(SimpleName:getNodes))(NumberLiteral:0)))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))))(ExpressionStatement(MethodInvocation(METHOD_INVOCATION_RECEIVER(SimpleName:stream))(SimpleName:close))))))(CatchClause(SingleVariableDeclaration(SimpleType(SimpleName:Exception))(SimpleName:ex))(Block)))(ReturnStatement(SimpleName:info))))))