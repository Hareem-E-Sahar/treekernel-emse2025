package jitt64.swing;

import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JWindow;
import javax.swing.JPanel;
import java.awt.Robot;
import java.awt.Image;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Rectangle;
import java.awt.Graphics;
import java.awt.Point;

/**
 * A splash windows with fake transparent blackground and progress bar
 * 
 * @author ice
 */
public class JSplashWindow extends JWindow {

    /** The image of background */
    private Image background;

    /** Last used perc. */
    private int lastPerc = 0;

    /** Creates new form BeanForm */
    public JSplashWindow() {
        initComponents();
    }

    /**
   * Caputure the background image of screen
   */
    private void captureBackground() {
        try {
            Robot robot = new Robot();
            Toolkit tk = Toolkit.getDefaultToolkit();
            Dimension dim = tk.getScreenSize();
            background = robot.createScreenCapture(new Rectangle(0, 0, (int) dim.getWidth(), (int) dim.getHeight()));
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    /**
   * Show the splash screen (with initial 0% of progress)
   */
    public void showSplash() {
        jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash0.png")));
        captureBackground();
        jPanelSplash.repaint();
        setVisible(true);
    }

    /**
   * Hide the splash screen
   */
    public void hideSplash() {
        setVisible(false);
    }

    /**
   * Update the progress in slash screen
   *
   * @param perc % (0-100) of progress
   */
    public void updateProgress(int perc) {
        if (perc == lastPerc) return;
        lastPerc = perc;
        switch(perc / 10) {
            case 0:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash0.png")));
                break;
            case 1:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash10.png")));
                break;
            case 2:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash20.png")));
                break;
            case 3:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash30.png")));
                break;
            case 4:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash40.png")));
                break;
            case 5:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash50.png")));
                break;
            case 6:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash60.png")));
                break;
            case 7:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash70.png")));
                break;
            case 8:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash80.png")));
                break;
            case 9:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash90.png")));
                break;
            case 10:
                jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash100.png")));
                break;
        }
        jLabelSplash.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JSplashWindow().showSplash();
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanelSplash = new JPanel() {

            /**
            * Paint the image at background
            *
            * @param g the graphics to use
            */
            public void paintComponent(Graphics g) {
                Point pos = this.getLocationOnScreen();
                Point offset = new Point(-pos.x, -pos.y);
                g.drawImage(background, offset.x, offset.y, null);
            }
        };
        jLabelSplash = new javax.swing.JLabel();
        setAlwaysOnTop(true);
        jPanelSplash.setLayout(new java.awt.BorderLayout());
        jLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jitt64/swing/images/splash0.png")));
        jLabelSplash.setPreferredSize(new java.awt.Dimension(544, 144));
        jPanelSplash.add(jLabelSplash, java.awt.BorderLayout.CENTER);
        getContentPane().add(jPanelSplash, java.awt.BorderLayout.CENTER);
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 543) / 2, (screenSize.height - 144) / 2, 543, 144);
    }

    private javax.swing.JLabel jLabelSplash;

    private javax.swing.JPanel jPanelSplash;
}
