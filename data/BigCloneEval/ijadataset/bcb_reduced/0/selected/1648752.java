package com.codename1.designer;

import com.codename1.ui.util.EditableResources;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;

/**
 * Allows seeking for multi-images in a directory hierarchy seamlessly
 *
 * @author Shai Almog
 */
public class FindMultiImages extends javax.swing.JDialog {

    private EditableResources res;

    public FindMultiImages(java.awt.Component c, EditableResources res) {
        this((java.awt.Frame) SwingUtilities.windowForComponent(c), true, res);
    }

    /** Creates new form FindMultiImages */
    public FindMultiImages(java.awt.Frame parent, boolean modal, EditableResources res) {
        super(parent, modal);
        this.res = res;
        initComponents();
        pack();
        setLocationByPlatform(true);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        veryLow = new javax.swing.JLabel();
        selectVeryLowDensity = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        low = new javax.swing.JLabel();
        selectLowDensity = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        medium = new javax.swing.JLabel();
        selectMediumDensity = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        high = new javax.swing.JLabel();
        selectHighDensity = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        veryHigh = new javax.swing.JLabel();
        selectVeyHighDensity = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        hd = new javax.swing.JLabel();
        selectHDDensity = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ok = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        FormListener formListener = new FormListener();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Find Multi-Images");
        jLabel1.setText("Very Low Density Dir");
        jLabel1.setName("jLabel1");
        veryLow.setText("[Undefined]");
        veryLow.setName("veryLow");
        selectVeryLowDensity.setText("...");
        selectVeryLowDensity.setName("selectVeryLowDensity");
        selectVeryLowDensity.addActionListener(formListener);
        jLabel3.setText("Low Density Dir");
        jLabel3.setName("jLabel3");
        low.setText("[Undefined]");
        low.setName("low");
        selectLowDensity.setText("...");
        selectLowDensity.setName("selectLowDensity");
        selectLowDensity.addActionListener(formListener);
        jLabel5.setText("Medium Density Dir");
        jLabel5.setName("jLabel5");
        medium.setText("[Undefined]");
        medium.setName("medium");
        selectMediumDensity.setText("...");
        selectMediumDensity.setName("selectMediumDensity");
        selectMediumDensity.addActionListener(formListener);
        jLabel7.setText("High Density Dir");
        jLabel7.setName("jLabel7");
        high.setText("[Undefined]");
        high.setName("high");
        selectHighDensity.setText("...");
        selectHighDensity.setName("selectHighDensity");
        selectHighDensity.addActionListener(formListener);
        jLabel9.setText("Very High Density Dir");
        jLabel9.setName("jLabel9");
        veryHigh.setText("[Undefined]");
        veryHigh.setName("veryHigh");
        selectVeyHighDensity.setText("...");
        selectVeyHighDensity.setName("selectVeyHighDensity");
        selectVeyHighDensity.addActionListener(formListener);
        jLabel11.setText("HD Density Dir");
        jLabel11.setName("jLabel11");
        hd.setText("[Undefined]");
        hd.setName("hd");
        selectHDDensity.setText("...");
        selectHDDensity.setName("selectHDDensity");
        selectHDDensity.addActionListener(formListener);
        jPanel1.setName("jPanel1");
        jPanel2.setName("jPanel2");
        jPanel2.setLayout(new java.awt.GridLayout(1, 2, 5, 0));
        ok.setText("OK");
        ok.setName("ok");
        ok.addActionListener(formListener);
        jPanel2.add(ok);
        cancel.setText("Cancel");
        cancel.setName("cancel");
        cancel.addActionListener(formListener);
        jPanel2.add(cancel);
        jPanel1.add(jPanel2);
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup().addContainerGap().add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING).add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE).add(layout.createSequentialGroup().add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(jLabel1).add(jLabel3).add(jLabel5).add(jLabel7).add(jLabel9).add(jLabel11)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(layout.createSequentialGroup().add(veryLow, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(selectVeryLowDensity)).add(layout.createSequentialGroup().add(low, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(selectLowDensity)).add(layout.createSequentialGroup().add(medium, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(selectMediumDensity)).add(layout.createSequentialGroup().add(high, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(selectHighDensity)).add(layout.createSequentialGroup().add(veryHigh, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(selectVeyHighDensity)).add(layout.createSequentialGroup().add(hd, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(selectHDDensity))))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(layout.createSequentialGroup().addContainerGap().add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel1).add(veryLow).add(selectVeryLowDensity)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel3).add(low).add(selectLowDensity)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel5).add(medium).add(selectMediumDensity)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel7).add(high).add(selectHighDensity)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel9).add(veryHigh).add(selectVeyHighDensity)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel11).add(hd).add(selectHDDensity)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        pack();
    }

    private class FormListener implements java.awt.event.ActionListener {

        FormListener() {
        }

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == selectVeryLowDensity) {
                FindMultiImages.this.selectVeryLowDensityActionPerformed(evt);
            } else if (evt.getSource() == selectLowDensity) {
                FindMultiImages.this.selectLowDensityActionPerformed(evt);
            } else if (evt.getSource() == selectMediumDensity) {
                FindMultiImages.this.selectMediumDensityActionPerformed(evt);
            } else if (evt.getSource() == selectHighDensity) {
                FindMultiImages.this.selectHighDensityActionPerformed(evt);
            } else if (evt.getSource() == selectVeyHighDensity) {
                FindMultiImages.this.selectVeyHighDensityActionPerformed(evt);
            } else if (evt.getSource() == selectHDDensity) {
                FindMultiImages.this.selectHDDensityActionPerformed(evt);
            } else if (evt.getSource() == cancel) {
                FindMultiImages.this.cancelActionPerformed(evt);
            } else if (evt.getSource() == ok) {
                FindMultiImages.this.okActionPerformed(evt);
            }
        }
    }

    private void selectVeryLowDensityActionPerformed(java.awt.event.ActionEvent evt) {
        updateDir(veryLow);
    }

    private void selectLowDensityActionPerformed(java.awt.event.ActionEvent evt) {
        updateDir(low);
    }

    private void selectMediumDensityActionPerformed(java.awt.event.ActionEvent evt) {
        updateDir(medium);
    }

    private void selectHighDensityActionPerformed(java.awt.event.ActionEvent evt) {
        updateDir(high);
    }

    private void selectVeyHighDensityActionPerformed(java.awt.event.ActionEvent evt) {
        updateDir(veryHigh);
    }

    private void selectHDDensityActionPerformed(java.awt.event.ActionEvent evt) {
        updateDir(hd);
    }

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
    }

    private void okActionPerformed(java.awt.event.ActionEvent evt) {
        updateLabelImages(veryLow, com.codename1.ui.Display.DENSITY_VERY_LOW);
        updateLabelImages(low, com.codename1.ui.Display.DENSITY_LOW);
        updateLabelImages(medium, com.codename1.ui.Display.DENSITY_MEDIUM);
        updateLabelImages(high, com.codename1.ui.Display.DENSITY_HIGH);
        updateLabelImages(veryHigh, com.codename1.ui.Display.DENSITY_VERY_HIGH);
        updateLabelImages(hd, com.codename1.ui.Display.DENSITY_HD);
        dispose();
    }

    private void updateLabelImages(JLabel l, int dpi) {
        File dir = new File(l.getText());
        if (dir.exists() && dir.isDirectory()) {
            File[] fileList = dir.listFiles();
            for (File f : fileList) {
                try {
                    if (ImageIO.read(f) != null) {
                        com.codename1.ui.Image img = res.getImage(f.getName());
                        if (img == null) {
                            EditableResources.MultiImage newImage = new EditableResources.MultiImage();
                            newImage.setDpi(new int[] { dpi });
                            newImage.setInternalImages(new com.codename1.ui.EncodedImage[] { com.codename1.ui.EncodedImage.create(new FileInputStream(f)) });
                            res.setMultiImage(f.getName(), newImage);
                        } else {
                            Object o = res.getResourceObject(f.getName());
                            if (o instanceof EditableResources.MultiImage) {
                                EditableResources.MultiImage existing = (EditableResources.MultiImage) o;
                                EditableResources.MultiImage newImage = new EditableResources.MultiImage();
                                int[] dpis = new int[existing.getDpi().length + 1];
                                System.arraycopy(existing.getDpi(), 0, dpis, 0, existing.getDpi().length);
                                dpis[existing.getDpi().length] = dpi;
                                com.codename1.ui.EncodedImage[] images = new com.codename1.ui.EncodedImage[existing.getDpi().length + 1];
                                System.arraycopy(existing.getInternalImages(), 0, images, 0, existing.getDpi().length);
                                images[existing.getDpi().length] = com.codename1.ui.EncodedImage.create(new FileInputStream(f));
                                newImage.setDpi(dpis);
                                newImage.setInternalImages(images);
                                res.setMultiImage(f.getName(), newImage);
                            }
                        }
                    }
                } catch (IOException ex) {
                }
            }
        }
    }

    private void updateDir(JLabel l) {
        File[] result = ResourceEditorView.showOpenFileChooserWithTitle("Select The Directory", true, "Directory");
        if (result != null && result.length == 1) {
            l.setText(result[0].getAbsolutePath());
        }
    }

    private javax.swing.JButton cancel;

    private javax.swing.JLabel hd;

    private javax.swing.JLabel high;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel11;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JLabel jLabel9;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JLabel low;

    private javax.swing.JLabel medium;

    private javax.swing.JButton ok;

    private javax.swing.JButton selectHDDensity;

    private javax.swing.JButton selectHighDensity;

    private javax.swing.JButton selectLowDensity;

    private javax.swing.JButton selectMediumDensity;

    private javax.swing.JButton selectVeryLowDensity;

    private javax.swing.JButton selectVeyHighDensity;

    private javax.swing.JLabel veryHigh;

    private javax.swing.JLabel veryLow;
}
