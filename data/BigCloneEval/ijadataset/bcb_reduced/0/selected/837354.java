package dms.gui;

import java.awt.CardLayout;
import java.awt.Desktop;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeUtility;
import javax.swing.JFileChooser;

/**
 *
 * @author jesus
 */
public class AttachmentPanel extends javax.swing.JPanel {

    private MimeBodyPart mm;

    private String fileName;

    private String content;

    Desktop desktop;

    /** Creates new form AtatchmentPanel */
    public AttachmentPanel() {
        initComponents();
    }

    public AttachmentPanel(MimeBodyPart mm) {
        initComponents();
        if (Desktop.isDesktopSupported()) {
            desktop = Desktop.getDesktop();
        } else {
            jbuOpen.setEnabled(false);
        }
        this.mm = mm;
        try {
            if (mm.getContentType().contains("image")) {
                try {
                    jpContainer.add(new ImagePanel(mm.getContent()), "image");
                    CardLayout cl = (CardLayout) jpContainer.getLayout();
                    cl.last(jpContainer);
                } catch (IOException ex) {
                    Logger.getLogger(AttachmentPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (mm.getContentType().contains("text")) {
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                System.out.println(mm.getEncoding());
                mm.writeTo(bos);
                jtaInfo.append(MimeUtility.decodeText(bos.toString()));
                jtaInfo.setCaretPosition(0);
            } else {
                jtaInfo.append(mm.getContentType() + "\n");
                jtaInfo.append(mm.getFileName() + "\n");
            }
            fileName = mm.getFileName();
            content = mm.getContentType();
        } catch (Exception ex) {
            Logger.getLogger(AttachmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jbuSave = new javax.swing.JButton();
        jpContainer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaInfo = new javax.swing.JTextArea();
        jbuOpen = new javax.swing.JButton();
        jbuSave.setText("Save...");
        jbuSave.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuSaveActionPerformed(evt);
            }
        });
        jpContainer.setLayout(new java.awt.CardLayout());
        jtaInfo.setColumns(20);
        jtaInfo.setEditable(false);
        jtaInfo.setLineWrap(true);
        jtaInfo.setRows(5);
        jtaInfo.setWrapStyleWord(true);
        jtaInfo.setEnabled(false);
        jScrollPane1.setViewportView(jtaInfo);
        jpContainer.add(jScrollPane1, "binary");
        jbuOpen.setText("Open");
        jbuOpen.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuOpenActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jpContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(jbuOpen).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jbuSave))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addComponent(jpContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbuSave).addComponent(jbuOpen)).addContainerGap()));
    }

    private void jbuSaveActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser jfc = new JFileChooser();
        if (fileName != null) {
            jfc.setSelectedFile(new File(fileName));
        }
        int ok = jfc.showSaveDialog(this);
        if (ok == JFileChooser.APPROVE_OPTION) {
            try {
                mm.saveFile(jfc.getSelectedFile());
            } catch (IOException ex) {
                Logger.getLogger(AttachmentPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MessagingException ex) {
                Logger.getLogger(AttachmentPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void jbuOpenActionPerformed(java.awt.event.ActionEvent evt) {
        boolean file = false;
        try {
            mm.saveFile(new File(System.getProperty("java.io.tmpdir") + "/" + fileName));
            file = true;
        } catch (Exception ex) {
            jtaInfo.append("\nERROR: Could not create temp-File");
        }
        try {
            desktop.open(new File(System.getProperty("java.io.tmpdir") + "/" + fileName));
        } catch (IOException ex) {
            jtaInfo.append("\nERROR: No Porgram associated with " + content.split(";")[0] + "-files.\nWe will fix this some other Time...");
        }
    }

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JButton jbuOpen;

    private javax.swing.JButton jbuSave;

    private javax.swing.JPanel jpContainer;

    private javax.swing.JTextArea jtaInfo;
}
