package br.com.radaction.gui;

import br.com.radaction.DAO.CargoDAO;
import br.com.radaction.DAO.DepartamentoDAO;
import br.com.radaction.DAO.FuncionarioDAO;
import br.com.radaction.entidades.Cargo;
import br.com.radaction.entidades.Departamento;
import br.com.radaction.entidades.Funcionario;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * Classe responsável pelo desenho da tela de cadastro do Funcionário.
 * <br/>
 * São tratados eventos de lostFocus (perda do foco) no campo txtCodigo, os 
 * eventos de acionamento de botões e o duplo click na tabela.
 * @author  mertins
 */
public class FormFuncionario extends javax.swing.JInternalFrame {

    private JFrame mdi;

    /**
     * Creates new form FormFuncionario 
     * @param mdi MDI principal.
     */
    public FormFuncionario(JFrame mdi) {
        this.mdi = mdi;
        initComponents();
        this.atualizaLista();
    }

    private void atualizaComboCargo() {
        try {
            CargoDAO deptDAO = new CargoDAO(MDIStarter.getConexao());
            List<Cargo> lista = deptDAO.listaTodos();
            Vector v = new Vector(lista);
            v.add(0, "");
            ComboBoxModel cbm = new DefaultComboBoxModel(v);
            this.cmbCargo.setModel(cbm);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao ler os Cargos:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormDepartamento.class.getName()).log(Level.WARNING, "Erro ao ler os Cargos", ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFuncionarios = new javax.swing.JTable();
        btAtualizar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cmbDepartamento = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbEncarregado = new javax.swing.JComboBox();
        txtNome = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDataContratacao = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        cmbCargo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        btAlteraSenha = new javax.swing.JToggleButton();
        btSalvar = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro Funcionário");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {

            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }

            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }

            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }

            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }

            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }

            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }

            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        tbFuncionarios.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {}, new String[] { "Código", "Nome", "Data Contratação", "Cargo", "Encarregado", "Departamento" }) {

            boolean[] canEdit = new boolean[] { false, false, false, false, false, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tbFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbFuncionarios);
        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cmbDepartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jLabel1.setText("Dpto.");
        jLabel2.setText("Nome");
        jLabel3.setText("Cargo");
        jLabel4.setText("Dt. Cont.");
        jLabel5.setText("Enc.");
        cmbEncarregado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jLabel7.setText("Código");
        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);
        txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoFocusLost(evt);
            }
        });
        cmbCargo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jLabel6.setText("Login");
        jLabel8.setText("Senha");
        btAlteraSenha.setText("Alterar senha");
        btAlteraSenha.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlteraSenhaActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel3).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(cmbCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(cmbEncarregado, javax.swing.GroupLayout.Alignment.TRAILING, 0, 259, Short.MAX_VALUE).addGroup(jPanel1Layout.createSequentialGroup().addComponent(cmbDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addGap(1, 1, 1).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel7).addGap(8, 8, 8))).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(txtNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(jLabel8)).addGap(28, 28, 28).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE).addComponent(txtLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE).addComponent(btAlteraSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(txtDataContratacao, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))).addContainerGap()));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(20, 20, 20).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4).addComponent(txtDataContratacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(10, 10, 10).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(33, 33, 33).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cmbEncarregado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel6).addComponent(jLabel5).addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(cmbDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btAlteraSenha))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(cmbCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel8).addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });
        btExcluir.setText("Excluir");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(layout.createSequentialGroup().addComponent(btSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(311, 311, 311).addComponent(btAtualizar)).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane1)).addContainerGap(24, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btSalvar).addComponent(btLimpar).addComponent(btExcluir).addComponent(btAtualizar)).addGap(17, 17, 17).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        getAccessibleContext().setAccessibleName("Cadastro de Funcionário");
        pack();
    }

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
        this.atualizaComboDepartamento();
        this.atualizaComboEncarregado();
        this.atualizaComboCargo();
    }

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            Funcionario func = new Funcionario();
            func.setNome(this.txtNome.getText().toUpperCase());
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            func.setDataContratacao(sdf.parse(this.txtDataContratacao.getText()));
            Object obj = this.cmbCargo.getModel().getSelectedItem();
            if (obj instanceof Cargo) {
                func.setCargo((Cargo) obj);
            } else {
                JOptionPane.showMessageDialog(this.mdi, "Cargo deve ser informado");
                this.cmbCargo.requestFocus();
                return;
            }
            obj = this.cmbDepartamento.getModel().getSelectedItem();
            if (obj instanceof Departamento) {
                func.setDepartamento((Departamento) obj);
            } else {
                JOptionPane.showMessageDialog(this.mdi, "Departamento deve ser informado");
                this.cmbDepartamento.requestFocus();
                return;
            }
            obj = this.cmbEncarregado.getModel().getSelectedItem();
            if (obj instanceof Funcionario) {
                func.setGerente((Funcionario) obj);
            }
            func.setLogin(this.txtLogin.getText());
            String senha = new String(this.txtSenha.getPassword());
            func.setSenha(senha);
            FuncionarioDAO funcDao = new FuncionarioDAO(MDIStarter.getConexao());
            int cod = this.intCampoTelas(this.txtCodigo.getText());
            if (cod > 0) {
                func.setCod(cod);
                funcDao.update(func);
            } else {
                funcDao.create(func);
                this.txtCodigo.setText(Integer.toString(func.getCod()));
            }
            JOptionPane.showMessageDialog(this.mdi, "Registro Salvo");
            this.limpaTela();
            this.atualizaComboDepartamento();
            this.atualizaComboEncarregado();
            this.atualizaComboCargo();
            this.atualizaLista();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this.mdi, "Número mal formatado [Código]");
            this.txtCodigo.requestFocus();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this.mdi, "Data inválida");
            this.txtDataContratacao.requestFocus();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao gravar Funcionario:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {
        this.atualizaLista();
        this.atualizaComboCargo();
        this.atualizaComboDepartamento();
        this.atualizaComboEncarregado();
    }

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {
        this.limpaTela();
        this.txtCodigo.requestFocus();
    }

    private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {
        int cod = this.intCampoTelas(this.txtCodigo.getText());
        if (cod > 0) {
            Funcionario func = new Funcionario(cod);
            this.preencheTela(func);
        }
    }

    private void tbFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {
        if (evt.getClickCount() > 1) {
            JTable obj = (JTable) evt.getComponent();
            int linha = obj.getSelectedRow();
            Integer cod = (Integer) obj.getModel().getValueAt(linha, 0);
            Funcionario func = new Funcionario(cod);
            this.preencheTela(func);
        }
    }

    private void btAlteraSenhaActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.btAlteraSenha.isSelected()) {
            this.txtSenha.setEnabled(true);
        } else {
            try {
                FuncionarioDAO fDAO = new FuncionarioDAO(MDIStarter.getConexao());
                Funcionario func = new Funcionario(this.txtLogin.getText());
                fDAO.atualizaSenha(func, this.txtSenha.getPassword().toString());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Usuário não existe: Erro:" + ex);
                Logger.getLogger(FormFuncionario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * Método auxiliar para atualizar a JTable com os dados do funcionario
     */
    private void atualizaLista() {
        try {
            FuncionarioDAO funcDAO = new FuncionarioDAO(MDIStarter.getConexao());
            List<Funcionario> lista = funcDAO.listaTodos();
            DefaultTableModel dtm = (DefaultTableModel) this.tbFuncionarios.getModel();
            dtm.setRowCount(0);
            for (Funcionario func : lista) {
                dtm.addRow(new Object[] { func.getCod(), func.getNome(), func.getDataContratacao(), func.getCargo(), func.getGerente(), func.getDepartamento() });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao ler os Funcionarios:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormDepartamento.class.getName()).log(Level.WARNING, "Erro ao ler os Funcionarios", ex);
        }
    }

    /**
     * Método auxiliar para limpar os campos da tela.
     */
    private void limpaTela() {
        this.txtCodigo.setText(null);
        this.txtNome.setText(null);
        this.txtDataContratacao.setText(null);
        this.cmbDepartamento.getModel().setSelectedItem("");
        this.cmbEncarregado.getModel().setSelectedItem("");
        this.cmbCargo.getModel().setSelectedItem("");
    }

    /**
     * Método auxiliar para converter valores String sem causar exceções.
     * @param valor String contendo o valor a ser transformado para número
     * @return O valor convertido em inteiro ou zero em caso de algum problema
     */
    private int intCampoTelas(String valor) {
        int ret = 0;
        try {
            ret = Integer.parseInt(valor);
        } catch (NumberFormatException ex) {
        }
        return ret;
    }

    /**
     * Preenche os campos da tela com informações do funcionário. 
     * @param func Funcionario que irá fornecer o código para pesquisa no SGBD e em seguida ir para a tela.
     */
    private void preencheTela(Funcionario func) {
        try {
            FuncionarioDAO funcDAO = new FuncionarioDAO(MDIStarter.getConexao());
            func = funcDAO.retrieve(func);
            if (func != null && func.getCod() > 0) {
                this.txtCodigo.setText(Integer.toString(func.getCod()));
                this.txtNome.setText(func.getNome());
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                this.txtDataContratacao.setText(sdf.format(func.getDataContratacao()));
                this.cmbCargo.setSelectedItem(func.getCargo());
                this.cmbDepartamento.setSelectedItem(func.getDepartamento());
                this.cmbEncarregado.setSelectedItem(func.getGerente());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Não foi possível carregar Funcionário: %s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormDepartamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void atualizaComboDepartamento() {
        try {
            DepartamentoDAO deptDAO = new DepartamentoDAO(MDIStarter.getConexao());
            List<Departamento> lista = deptDAO.listaTodos();
            Vector v = new Vector(lista);
            v.add(0, "");
            ComboBoxModel cbm = new DefaultComboBoxModel(v);
            this.cmbDepartamento.setModel(cbm);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao ler os Departamentos:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormDepartamento.class.getName()).log(Level.WARNING, "Erro ao ler os Departamentos", ex);
        }
    }

    private void atualizaComboEncarregado() {
        try {
            FuncionarioDAO funcDAO = new FuncionarioDAO(MDIStarter.getConexao());
            List<Funcionario> lista = funcDAO.listaTodos();
            Vector v = new Vector(lista);
            v.add(0, "");
            ComboBoxModel cbm = new DefaultComboBoxModel(v);
            this.cmbEncarregado.setModel(cbm);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao carregar os gerentes:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormDepartamento.class.getName()).log(Level.WARNING, "Erro ao ler os gerentes", ex);
        }
    }

    @Override
    public void setVisible(boolean aFlag) {
        if (!isVisible()) {
            if (aFlag) {
                this.atualizaComboDepartamento();
                this.atualizaComboEncarregado();
            }
        }
        super.setVisible(aFlag);
    }

    private javax.swing.JToggleButton btAlteraSenha;

    private javax.swing.JButton btAtualizar;

    private javax.swing.JButton btExcluir;

    private javax.swing.JButton btLimpar;

    private javax.swing.JButton btSalvar;

    private javax.swing.JComboBox cmbCargo;

    private javax.swing.JComboBox cmbDepartamento;

    private javax.swing.JComboBox cmbEncarregado;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JLabel jLabel8;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable tbFuncionarios;

    private javax.swing.JTextField txtCodigo;

    private javax.swing.JTextField txtDataContratacao;

    private javax.swing.JTextField txtLogin;

    private javax.swing.JTextField txtNome;

    private javax.swing.JPasswordField txtSenha;
}
