import javax.swing.*;
import java.io.*;

public class mainFrame extends javax.swing.JFrame {

    Binoscope m_Bino;

    String m_NomFichierActif;

    String m_DefaultFolder;

    BinoTopView m_BinoTopView;

    BinoSideView m_BinoSideView;

    BinoDimensionsView m_BinoDimensionsView;

    BinoIlluminationView m_BinoIlluminationView;

    public void setTitre() {
        String Titre = "The Newtonian binocular designer";
        if (m_NomFichierActif != "") setTitle(Titre + " : " + m_NomFichierActif); else setTitle(Titre);
    }

    /** Creates new form mainFrame */
    public mainFrame() {
        initComponents();
        m_Bino = new Binoscope();
        m_NomFichierActif = "";
        m_DefaultFolder = ".";
        initValues();
        m_BinoTopView = new BinoTopView();
        panelTopView.add(m_BinoTopView);
        m_BinoTopView.setBinoscope(m_Bino);
        m_BinoTopView.zoomIn(1.0 / 1.5);
        m_BinoSideView = new BinoSideView();
        panelSideView.add(m_BinoSideView);
        m_BinoSideView.setBinoscope(m_Bino);
        m_BinoSideView.zoomIn(1.0 / 3.0);
        dimensionsTextPanel.setEditable(false);
        m_BinoIlluminationView = new BinoIlluminationView();
        panelIlluminationGraph.add(m_BinoIlluminationView);
        m_BinoIlluminationView.setBinoscope(m_Bino);
        setSize(800, 640);
        setTitre();
    }

    private void initValues() {
        spinnerPrimaryDiameter.setValue(new Integer((int) m_Bino.getPrimaryDiameter()));
        spinnerPrimaryDistance.setValue(new Integer((int) m_Bino.getPrimaryDistance()));
        spinnerIPDmin.setValue(new Integer((int) m_Bino.getIPDmin()));
        spinnerIPDmoy.setValue(new Integer((int) m_Bino.getIPDmoy()));
        spinnerIPDmax.setValue(new Integer((int) m_Bino.getIPDmax()));
        spinnerAlpha0.setValue(new Integer((int) m_Bino.getAlpha0()));
        spinnerFoldAngle.setValue(new Integer((int) m_Bino.getFoldAngle()));
        spinnerSecondaryDiameter.setValue(new Integer((int) m_Bino.getSecondaryDiameter()));
        spinnerTertiaryDiameter.setValue(new Integer((int) m_Bino.getTertiaryDiameter()));
        spinnerTertiaryFocusDistance.setValue(new Integer((int) m_Bino.getTertiaryFocusDistance()));
        spinnerFocalLength.setValue(new Integer((int) m_Bino.getFocalLength()));
        spinnerMaxOffAxisDistance.setValue(new Integer((int) m_Bino.getFieldIlluminationUpperCage()));
        dimensionsTextPanel.setText(m_Bino.getDimensionsText());
    }

    public void repaint() {
        dimensionsTextPanel.setText(m_Bino.getDimensionsText());
        super.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelTopView = new javax.swing.JPanel();
        panelSideView = new javax.swing.JPanel();
        panelOptics = new javax.swing.JPanel();
        jPanelOpticsParameters = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        spinnerSecondaryDiameter = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        spinnerTertiaryDiameter = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        spinnerTertiaryFocusDistance = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        spinnerFocalLength = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        spinnerMaxOffAxisDistance = new javax.swing.JSpinner();
        panelIlluminationGraph = new javax.swing.JPanel();
        panelDimensions = new javax.swing.JPanel();
        dimensionsTextPanel = new javax.swing.JTextPane();
        panelFile = new javax.swing.JPanel();
        buttonSave = new javax.swing.JButton();
        buttonSaveAs = new javax.swing.JButton();
        buttonLoad = new javax.swing.JButton();
        panelAbout = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanelParameters = new javax.swing.JPanel();
        labelPrimaryDiameter = new javax.swing.JLabel();
        spinnerPrimaryDiameter = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        spinnerPrimaryDistance = new javax.swing.JSpinner();
        jPanelIPD = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        spinnerIPDmin = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spinnerIPDmoy = new javax.swing.JSpinner();
        IPDmax = new javax.swing.JLabel();
        spinnerIPDmax = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spinnerAlpha0 = new javax.swing.JSpinner();
        jLabelFoldAngle = new javax.swing.JLabel();
        spinnerFoldAngle = new javax.swing.JSpinner();
        setTitle("The Newtonian binocular designer");
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(640, 400));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(640, 400));
        panelTopView.setLayout(new java.awt.GridLayout(1, 0));
        panelTopView.setPreferredSize(new java.awt.Dimension(480, 320));
        panelTopView.addMouseWheelListener(new java.awt.event.MouseWheelListener() {

            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                panelTopViewMouseWheelMoved(evt);
            }
        });
        jTabbedPane1.addTab("Top view", panelTopView);
        panelSideView.setLayout(new java.awt.GridLayout(1, 0));
        panelSideView.setMinimumSize(new java.awt.Dimension(100, 100));
        panelSideView.setPreferredSize(new java.awt.Dimension(100, 100));
        panelSideView.addMouseWheelListener(new java.awt.event.MouseWheelListener() {

            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                panelSideViewMouseWheelMoved(evt);
            }
        });
        jTabbedPane1.addTab("Side view", panelSideView);
        panelOptics.setLayout(new java.awt.BorderLayout());
        panelOptics.setMinimumSize(new java.awt.Dimension(100, 100));
        panelOptics.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanelOpticsParameters.setLayout(new java.awt.GridLayout(3, 0));
        jPanelOpticsParameters.setMaximumSize(new java.awt.Dimension(32767, 48));
        jLabel5.setText("Secondary mirror minor axis");
        spinnerSecondaryDiameter.setMinimumSize(new java.awt.Dimension(50, 24));
        spinnerSecondaryDiameter.setPreferredSize(new java.awt.Dimension(50, 24));
        spinnerSecondaryDiameter.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerSecondaryDiameterStateChanged(evt);
            }
        });
        jPanelOpticsParameters.add(jLabel5);
        jPanelOpticsParameters.add(spinnerSecondaryDiameter);
        jLabel6.setText("Tertiary mirror minor axis");
        spinnerTertiaryDiameter.setMinimumSize(new java.awt.Dimension(50, 24));
        spinnerTertiaryDiameter.setPreferredSize(new java.awt.Dimension(50, 24));
        spinnerTertiaryDiameter.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerTertiaryDiameterStateChanged(evt);
            }
        });
        jPanelOpticsParameters.add(jLabel6);
        jPanelOpticsParameters.add(spinnerTertiaryDiameter);
        jLabel7.setText("Tertiary to focus distance");
        spinnerTertiaryFocusDistance.setMinimumSize(new java.awt.Dimension(50, 24));
        spinnerTertiaryFocusDistance.setPreferredSize(new java.awt.Dimension(50, 24));
        spinnerTertiaryFocusDistance.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerTertiaryFocusDistanceStateChanged(evt);
            }
        });
        jPanelOpticsParameters.add(jLabel7);
        jPanelOpticsParameters.add(spinnerTertiaryFocusDistance);
        jLabel8.setText("Focal length");
        spinnerFocalLength.setMinimumSize(new java.awt.Dimension(60, 24));
        spinnerFocalLength.setPreferredSize(new java.awt.Dimension(60, 24));
        spinnerFocalLength.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerFocalLengthStateChanged(evt);
            }
        });
        jPanelOpticsParameters.add(jLabel8);
        jPanelOpticsParameters.add(spinnerFocalLength);
        jLabel15.setText("Maximum off axis distance ");
        spinnerMaxOffAxisDistance.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerMaxOffAxisDistanceStateChanged(evt);
            }
        });
        jPanelOpticsParameters.add(jLabel15);
        jPanelOpticsParameters.add(spinnerMaxOffAxisDistance);
        jLabelFoldAngle.setText("FoldAngle");
        spinnerFoldAngle.setMinimumSize(new java.awt.Dimension(50, 24));
        spinnerFoldAngle.setPreferredSize(new java.awt.Dimension(50, 24));
        spinnerFoldAngle.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerFoldAngleStateChanged(evt);
            }
        });
        jPanelOpticsParameters.add(jLabelFoldAngle);
        jPanelOpticsParameters.add(spinnerFoldAngle);
        panelIlluminationGraph.setLayout(new java.awt.BorderLayout());
        panelIlluminationGraph.setMinimumSize(new java.awt.Dimension(748, 400));
        panelIlluminationGraph.setPreferredSize(new java.awt.Dimension(748, 400));
        panelOptics.add(panelIlluminationGraph, java.awt.BorderLayout.SOUTH);
        jTabbedPane1.addTab("Optics", panelOptics);
        panelDimensions.setLayout(new java.awt.GridLayout(1, 0));
        panelDimensions.setMinimumSize(new java.awt.Dimension(100, 100));
        panelDimensions.setPreferredSize(new java.awt.Dimension(100, 100));
        panelDimensions.add(dimensionsTextPanel);
        jTabbedPane1.addTab("Dimensions", panelDimensions);
        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        panelFile.add(buttonSave);
        buttonSaveAs.setText("Save as...");
        buttonSaveAs.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveAsActionPerformed(evt);
            }
        });
        panelFile.add(buttonSaveAs);
        buttonLoad.setText("Load");
        buttonLoad.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadActionPerformed(evt);
            }
        });
        panelFile.add(buttonLoad);
        jTabbedPane1.addTab("File", panelFile);
        panelAbout.setLayout(new java.awt.GridLayout(10, 0));
        panelAbout.setMinimumSize(new java.awt.Dimension(800, 600));
        panelAbout.setPreferredSize(new java.awt.Dimension(800, 600));
        jLabel9.setText("Binewt designer");
        panelAbout.add(jLabel9);
        jLabel10.setText("version 1.2");
        panelAbout.add(jLabel10);
        jLabel13.setText("A free software tool to help you design your newtonian binocular telescope");
        panelAbout.add(jLabel13);
        jLabel11.setText("Eric Royer, 2004-2011");
        panelAbout.add(jLabel11);
        jLabel12.setText("http://www.astrosurf.com/eroyer/");
        panelAbout.add(jLabel12);
        jLabel14.setText("Please send comments or bug reports to eroyer@astrosurf.com");
        panelAbout.add(jLabel14);
        jTabbedPane1.addTab("About...", panelAbout);
        labelPrimaryDiameter.setText("Primary diameter");
        jPanelParameters.add(labelPrimaryDiameter);
        spinnerPrimaryDiameter.setMinimumSize(new java.awt.Dimension(50, 24));
        spinnerPrimaryDiameter.setPreferredSize(new java.awt.Dimension(50, 24));
        spinnerPrimaryDiameter.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerPrimaryDiameterStateChanged(evt);
            }
        });
        jPanelParameters.add(spinnerPrimaryDiameter);
        jLabel1.setText("Primary distance");
        jPanelParameters.add(jLabel1);
        spinnerPrimaryDistance.setMinimumSize(new java.awt.Dimension(50, 24));
        spinnerPrimaryDistance.setPreferredSize(new java.awt.Dimension(50, 24));
        spinnerPrimaryDistance.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerPrimaryDistanceStateChanged(evt);
            }
        });
        jPanelParameters.add(spinnerPrimaryDistance);
        jPanelIPD.setLayout(new java.awt.GridLayout(3, 2));
        jLabel2.setText("IPDmin");
        jPanelIPD.add(jLabel2);
        spinnerIPDmin.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerIPDminStateChanged(evt);
            }
        });
        jPanelIPD.add(spinnerIPDmin);
        jLabel3.setText("IPDmed");
        jPanelIPD.add(jLabel3);
        spinnerIPDmoy.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerIPDmoyStateChanged(evt);
            }
        });
        jPanelIPD.add(spinnerIPDmoy);
        IPDmax.setText("IPDmax");
        jPanelIPD.add(IPDmax);
        spinnerIPDmax.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerIPDmaxStateChanged(evt);
            }
        });
        jPanelIPD.add(spinnerIPDmax);
        jPanelParameters.add(jPanelIPD);
        jLabel4.setText("Alpha0");
        jPanelParameters.add(jLabel4);
        spinnerAlpha0.setMinimumSize(new java.awt.Dimension(50, 24));
        spinnerAlpha0.setPreferredSize(new java.awt.Dimension(50, 24));
        spinnerAlpha0.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerAlpha0StateChanged(evt);
            }
        });
        jPanelParameters.add(spinnerAlpha0);
        jPanelParameters.add(jPanelOpticsParameters);
        jPanelParameters.setPreferredSize(new java.awt.Dimension(640, 160));
        getContentPane().setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanelParameters, java.awt.BorderLayout.NORTH);
        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);
        pack();
    }

    private void spinnerMaxOffAxisDistanceStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerMaxOffAxisDistance.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setFieldIlluminationUpperCage(d);
        repaint();
    }

    private void buttonSaveAsActionPerformed(java.awt.event.ActionEvent evt) {
        final JFileChooser fc = new JFileChooser(m_NomFichierActif);
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            m_Bino.save(file.toString());
            m_NomFichierActif = file.toString();
            m_DefaultFolder = m_NomFichierActif;
        }
        setTitre();
    }

    private void panelSideViewMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
        if (evt.getWheelRotation() > 0) m_BinoSideView.AltitudePlus(5.0); else m_BinoSideView.AltitudePlus(-5.0);
        repaint();
    }

    private void panelTopViewMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
        if (evt.getWheelRotation() > 0) m_BinoTopView.zoomIn(1.1); else m_BinoTopView.zoomIn(1.0 / 1.1);
        repaint();
    }

    private void spinnerFocalLengthStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerFocalLength.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setFocalLength(d);
        repaint();
    }

    private void spinnerTertiaryFocusDistanceStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerTertiaryFocusDistance.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setTertiaryFocusDistance(d);
        repaint();
    }

    private void spinnerTertiaryDiameterStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerTertiaryDiameter.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setTertiaryDiameter(d);
        repaint();
    }

    private void spinnerSecondaryDiameterStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerSecondaryDiameter.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setSecondaryDiameter(d);
        repaint();
    }

    private void buttonLoadActionPerformed(java.awt.event.ActionEvent evt) {
        final JFileChooser fc = new JFileChooser(m_DefaultFolder);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            m_Bino.load(file.toString());
            m_NomFichierActif = file.toString();
            m_DefaultFolder = m_NomFichierActif;
            initValues();
        }
        setTitre();
        repaint();
    }

    private void spinnerAlpha0StateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerAlpha0.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setAlpha0(d);
        repaint();
    }

    private void spinnerFoldAngleStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerFoldAngle.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setFoldAngle(d);
        repaint();
    }

    private void spinnerIPDmaxStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerIPDmax.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setIPDmax(d);
        repaint();
    }

    private void spinnerIPDmoyStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerIPDmoy.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setIPDmoy(d);
        repaint();
    }

    private void spinnerIPDminStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerIPDmin.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setIPDmin(d);
        repaint();
    }

    private void spinnerPrimaryDistanceStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerPrimaryDistance.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setPrimaryDistance(d);
        repaint();
    }

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {
        if (m_NomFichierActif == "") {
            final JFileChooser fc = new JFileChooser();
            int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                m_NomFichierActif = file.toString();
                m_DefaultFolder = m_NomFichierActif;
            }
        }
        if (m_NomFichierActif != "") m_Bino.save(m_NomFichierActif);
        setTitre();
    }

    private void spinnerPrimaryDiameterStateChanged(javax.swing.event.ChangeEvent evt) {
        String str = spinnerPrimaryDiameter.getValue().toString();
        double d = Double.valueOf(str).doubleValue();
        m_Bino.setPrimaryDiameter(d);
        repaint();
    }

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {
        System.exit(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new mainFrame().setVisible(true);
    }

    private javax.swing.JLabel IPDmax;

    private javax.swing.JButton buttonLoad;

    private javax.swing.JButton buttonSave;

    private javax.swing.JButton buttonSaveAs;

    private javax.swing.JTextPane dimensionsTextPanel;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel10;

    private javax.swing.JLabel jLabel11;

    private javax.swing.JLabel jLabel12;

    private javax.swing.JLabel jLabel13;

    private javax.swing.JLabel jLabel14;

    private javax.swing.JLabel jLabel15;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabelFoldAngle;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JLabel jLabel8;

    private javax.swing.JLabel jLabel9;

    private javax.swing.JPanel jPanelOpticsParameters;

    private javax.swing.JPanel jPanelParameters;

    private javax.swing.JPanel jPanelIPD;

    private javax.swing.JTabbedPane jTabbedPane1;

    private javax.swing.JLabel labelPrimaryDiameter;

    private javax.swing.JPanel panelAbout;

    private javax.swing.JPanel panelDimensions;

    private javax.swing.JPanel panelFile;

    private javax.swing.JPanel panelIlluminationGraph;

    private javax.swing.JPanel panelOptics;

    private javax.swing.JPanel panelSideView;

    private javax.swing.JPanel panelTopView;

    private javax.swing.JSpinner spinnerAlpha0;

    private javax.swing.JSpinner spinnerFoldAngle;

    private javax.swing.JSpinner spinnerFocalLength;

    private javax.swing.JSpinner spinnerIPDmax;

    private javax.swing.JSpinner spinnerIPDmin;

    private javax.swing.JSpinner spinnerIPDmoy;

    private javax.swing.JSpinner spinnerMaxOffAxisDistance;

    private javax.swing.JSpinner spinnerPrimaryDiameter;

    private javax.swing.JSpinner spinnerPrimaryDistance;

    private javax.swing.JSpinner spinnerSecondaryDiameter;

    private javax.swing.JSpinner spinnerTertiaryDiameter;

    private javax.swing.JSpinner spinnerTertiaryFocusDistance;
}
